/*
================== Hey Hey ! Please Don't Remove Credits ===============
Credits :
- @MaWReZ_01
- @AliEnpi
- @WilDHosseiN
---- This is a full open source project , don't remove credits !

=====================> Version 2.0.0 By MaWReZ <========================
+ [New Land RP] Texts Fixed
+ Fixed Vehicle Upgrading To VIP In /V
+ Chat Colors | Admin Chat [AC] - Leader Chat [LC] - Helper Chat [HC]
+ Added 2 Ambulance In LS Hospital
+ VIP Shorter Commands
+ Removed Premium Cars From /BuyCar
+ Fixed SellCar To DS Bug
+ Translating 99%
+ Fixed Some Admin Commands
+ Fixed Some Plugin Bugs
+ Changed Some Faction Vehicles
+ Added /Gm Command
+ Fixed Some SQL Bugs
+ Removed LSPD Mapping
- Removed Curier Job
+ Added /Relog Command
+ Added /dav & /davm Commands
+ ReWriten /order Command
+ Improved /Stunt Command
+ ReWriten Admin Commands Permissions
+ Added Government Faction
+ New Simple Spawn Place
+ Moved DealerShip With New Mapping
+ Added /GoToInt & /GoToHInt Commands
+ And ...

*/

// =============================================================== Includes
#include <a_samp>
#include <a_mysql>
#include <streamer>
#include <playerzone>
#include <foreach>
#include <sscanf2>
#include <zcmd>
#include <mSelection>
#include <a_zones>
#include <beaZone>
#include <timerfix>
#include <dini>
#include <SRO>
#include <a_actor>
#include <fly>
#include <crashdetect>
#include <timestamptodate>

#pragma dynamic 84872

static gTeam[MAX_PLAYERS];

forward DeAMXI(playerid);
public DeAMXI(playerid)
{
 	AntiDeAMX();
	return 1;
}

static const antisqlinjection[][] = {
    "'",
    "#",
    "`",
    "%"
};
static LastVehicle = 487;


// =============================================================== Defines
#define pVarGift
#define pVarGiftx
#define GetPName
#define SetVehicleParamsCarWindows
#define GetVehicleParamsCarWindows
#define pCashx				1
#define pRP  				2
#define pBank  				3
#define pCarLicTx 			4
#define pFlyLicTx 			5
#define pBoatLicTx 			6
#define pGunLicTx 			8
#define pRobx 				9
#define pFpunishx           10
#define pLawyerx            11
#define pConnectTimex       12
#define pPayDayx      		15
#define pPayCheckx      	16
#define pPhousekeyx      	17
#define pJailedx      		18
#define pJailTimex     		19
#define pWantedLevelx       21
#define pPhonex             22
#define pMatsx              23
#define pFishesx            24
#define pFishSkillx         25
#define pRobSkillx          26
#define pLevelx             27
#define pPremiumAccountx    28
#define pPbiskeyx           29
#define pPnumberx           30
#define pRegx               31
#define pRegistredDatex     32
#define pPcarkeyx           33
#define	pmotokeyx           34
#define	phelikeyx           35
#define	pprcarkeyx          36
#define pRentedx            37
#define pCrimesx            38
#define pCrime1x            40
#define pCrime2x            41
#define pCrime3x            42
#define pVictimx            43
#define pAccusedx           44
#define pEmailx             45
#define pWarnsx             52
#define pLanguagex          53
#define pPremiumPointsx     54
#define pprcarkey2x         55
#define pPPluscarkeyx       56
#define pPPluscarkey2x      57
#define pPlusSlot1x         58
#define pPlusSlot2x         59
#define pFWorksx            61
#define pVirtualPDx         62
#define pGlassesx           63
#define pHatsx           	64
#define pTruckSkillx        65
#define pTruckTimesx        66
#define pTruckRemx          67
#define pFarmSkillx         68
#define pFarmTimesx         69
#define pFarmRemx           70
#define pFishTimesx         71
#define pFishRemx           72
#define pSpawnChangex      	73
#define pRobTimesx          74
#define pRobRemx            75
#define pCreditsx           76
#define pFactionTimex       77
#define pNMutedx            78
#define pHelpedPlayersx     79
#define pHiddenColorx       80
#define pGiftTimex          81
#define pFightStylex        82
#define pHUD1x              83
#define pHUD2x              84
#define pHUD3x              85
#define pGasCanx			86
#define pCarLicSuspendx		87
#define pGunLicSuspendx		88
#define pPizzaSkillx		89
#define pPizzaTimesx		90
#define pPizzaRemx			91
#define pArmsSkillx			92
#define pArmsTimesx			93
#define pArmsRemx			94
#define pBusSkillx			95
#define pBusTimesx			96
#define pBusRemx			97
#define IP_LIMIT 3          98
#define Time_Limit 3500     99
#define pCommandsx          100
#define pBetax              101
#define pSupportx           102
#define pManagerLiderix     103
#define pManagerLideriSupportx     104
#define pManagerDepartamentex     105
#define pManagerTaxix     106
#define pManagerInstructorix     107
#define pManagerMedicix     108
#define pManagerHitmanx     109
#define pVIPx               110
#define pPinCodex           111
#define pAccesx             112
#define pHTokenx            113
#define pCurierRemx        	232
#define pCurierSkillx       233
#define pCurierTimesx       234
#define pSkillCoalx         235
#define pRemainCoalx        236
#define pTransportateCoalx  237
#define pTotalPPx           238
#define pYoutuberx          238
#define pFACWarnsx  		239
#define pArrestssx 			240
#define pRunnersx   		241
#define pTicketsx   		242
#define pDConfiscatex   	243
#define pLConfiscatex   	244
#define pMoneyDx    		245
#define pWDeathsx   		246
#define pWKillsx    		247
#define pMUsedx 			248
#define pMDepositx  		249
#define pDDepositx  		250
#define pOrdersx    		251
#define pContractsx 		252
#define pLGivenx    		253
#define pPHealsx    		254
#define pLivesx 			255
#define pNewsx  			256
#define pPaydayurix     	257

// =============================================================== Vehicles
#define cLocationxx 			1
#define cLocationyx 			2
#define cLocationzx 			3
#define cAnglex 				4
#define cModelx                 5
#define cColorOnex              6
#define cColorTwox              7
#define cOwnerx                 8
#define cValuex                 9
#define cLicensex               10
#define cDescriptionx           11
#define cLockx                  12
#define cTimedx                 13
#define cInscarpricex           14
#define cInsurancecarx          15
#define cKMx                    16
#define cOwnedx                 17
#define cSellx                  18
#define cModsx                  19
#define cPaintJx                20
#define cDaysx                  21
#define cHPx					22
#define cDamage1x				23
#define cDamage2x				24
#define cDamage3x				25
#define cDamage4x				26
#define cGasx					27
#define cVIPx                   28
#define cVipTextx               29
#define cNeonx                  30

// =============================================================== /dv Command
#define                             VEHICLE_PARAMS_OFF                         0
#define                             VEHICLE_PARAMS_ON                          1

// =============================================================== House
#define hExitxx             1
#define hExityx             2
#define hExitzx             3
#define hInteriorx          4

#define NUMDIS 40.0
#define MAX_GANGZONES 68

// =============================================================== Special Bussineses
#define sbTillx         1
#define MAX_PVEHS (6)
#define EX_SPLITLENGTH 113
#define EX_SPLITLENGTHH 128
#define SECONDS_BETWEEN_SAME_MSGS (5)
#define RATE_INC (500)
#define RATE_MAX (2500)
#define THRESOLD_ACTION 1
#define MAX_GROUPS (15)
#define MAX_CLANS (50)
#define MAX_PERSONAL_CARS (101)
#define MAX_LIGHTS 100
#define MAX_SPIKES 10
#define RBSprinkleid 20

// =============================================================== Server Options
#define SERVER_VERSION "RP V2.0.0"

// =============================================================== Text Defines
#define AdminOnly "{cef0ac}You Are'nt Admin/Helper Or You Are'nt On Duty"
#define LoginOnly "You Must Be Loged In To Use This Command"
#define VipError "{cef0ac}You Have'nt Access To This Command | You Are'nt VIP"
#define NeedPin "{FFFFFF}Your Account Is {FF0000}Locked {FFFFFF}| Use {00FF00}/Pin {FFFFFF}To Unlock"

// =============================================================== Defines #2
#define SetPlayerHoldingObject(%1,%2,%3,%4,%5,%6,%7,%8,%9) SetPlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1,%2,%3,%4,%5,%6,%7,%8,%9)
#define StopPlayerHoldingObject(%1) RemovePlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
#define IsPlayerHoldingObject(%1) IsPlayerAttachedObjectSlotUsed(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
#define SpeedCheck(%0,%1,%2,%3,%4) floatround(floatsqroot(%4?(%0*%0+%1*%1+%2*%2):(%0*%0+%1*%1) ) *%3*1.8)
#define                 hidePlayerDialog(%0)                    ShowPlayerDialog(%0, -1, 0, " ", " ", "", "")
#define 				strcpy(%0,%1,%2) 						strcat((%0[0] = '\0', %0), %1, %2)
#define GetVehicleSeats(%0) (GetVehicleModelSeats(GetVehicleModel(%0)))
#define function%0(%1) forward%0(%1); public%0(%1)
#define ATTACK_TYPE_PLAYERID 1
#define ATTACK_TYPE_IP 2
#define RELEASED(%0) \
	(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))

	
// =============================================================== Dialogs
#define DIALOG_LOGIN1 				1
#define DIALOG_LOGIN2 				2
#define DIALOG_LOGIN3 				3
#define DIALOG_PLATE 				4
#define DIALOG_LOCATIONS 			5
#define Dialog_24 					7
#define Dialog_radio 				8
#define DIALOG_PREMIUM 				9
#define Dialog_Gym 					10
#define DIALOG_PHONESTAT 			11
#define DIALOG_MUS                  12
#define DIALOG_HQS 					17
#define DIALOG_MEMBERS 				32
#define DIALOG_CARDAMAGE 			43
#define DIALOG_WANTEDON 			54
#define DIALOG_TRANSFER 			59
#define DIALOG_MATSINSO 			65
#define DIALOG_JOBS 				71
#define DIALOG_CARBUY 				72
#define DIALOG_CARBUY2 				74
#define DIALOG_CARBUY3 				75
#define DIALOG_CARBUY4 				76
#define DIALOG_PENDEVENT 			86
#define DIALOG_LAWYERS 				96
#define DIALOG_MECHANICS 			98
#define DIALOG_INSTRUCTORS 			99
#define DIALOG_NEWPASS 				132
#define DIALOG_TRANSPORT 			187
#define DIALOG_REGISTER 			454
#define DIALOG_REGISTER2 			456
#define DIALOG_REGISTER3 			474
#define DIALOG_REGISTER4 			477
#define DIALOG_REGISTER5 			479
#define DIALOG_REGISTER6 			480
#define DIALOG_CARSELL 				483
#define DIALOG_YT 					484
#define DIALOG_MATERIALS 			485
#define DIALOG_DTRANSFER 			486
#define DIALOG_WALKSTYLE 			653
#define DIALOG_SHOP                 489
#define DIALOG_SHOP2                490
#define DIALOG_CHANGENAME           491
#define DIALOG_CLAN                 492
#define DIALOG_CLAN_TAG             493
#define DIALOG_CLANMEMBERS          494
#define DIALOG_FACTIONS            	495
#define DIALOG_FACTIONS2           	496
#define DIALOG_CARBUY8              497
#define DIALOG_HELP	                498
#define DIALOG_HELP2                499
#define DIALOG_LOCATIONSLS          500
#define DIALOG_LOCATIONSLV          501
#define DIALOG_LOCATIONSMODS        502
#define DIALOG_TRUCKER1             504
#define DIALOG_TRUCKER2             505
#define DIALOG_TRUCKER3             506
#define DIALOG_TRUCKER4             507
#define DIALOG_CANCELJOB            508
#define DIALOG_TRUCKSELECT          509
#define DIALOG_TRUCKSELECTX         510
#define DIALOG_TRUCKSELECT2         511
#define DIALOG_TRUCKSELECT3         512
#define DIALOG_TRUCKSELECT4         513
#define DIALOG_SELLFISH             514
#define DIALOG_CARBUY5              515
#define DIALOG_NOSTOCK              516
#define DIALOG_LOCATIONS247LS       517
#define DIALOG_LOCATIONSBARLS       518
#define DIALOG_LOCATIONSBANKLS      519
#define DIALOG_LOCATIONSGYMLS       520
#define DIALOG_LOCATIONSBURGERLS    521
#define DIALOG_LOCATIONSPIZZALS     522
#define DIALOG_LOCATIONSGSLS        523
#define DIALOG_LOCATIONSCNNLS       524
#define DIALOG_LOCATIONSGASLS       525
#define DIALOG_LOCATIONSPNSLS       526
#define DIALOG_LOCATIONS247LV       527
#define DIALOG_LOCATIONSBANKLV      528
#define DIALOG_LOCATIONSBURGERLV    529
#define DIALOG_LOCATIONSGSLV        530
#define DIALOG_LOCATIONSCNNLV       531
#define DIALOG_LOCATIONSGASLV       532
#define DIALOG_LOCATIONSPNSLV       533
#define Dialog_gunshop              545
#define DIALOG_IPHONE               546
#define DIALOG_VEHSPAWN				547
#define DIALOG_VEHSPAWN1			548
#define DIALOG_VEHSPAWN2			549
#define DIALOG_VEHSPAWN3			550
#define DIALOG_VEHSPAWN4			551
#define DIALOG_JOBULETES            552
#define DIALOG_REPORT1              553
#define DIALOG_REPORT2              554
#define DIALOG_REPORTDM1            555
#define DIALOG_REPORTDM2            556
#define DIALOG_REPORTDM3            557
#define DIALOG_REPORTCH1            558
#define DIALOG_REPORTCH2            559
#define DIALOG_REPORTCH3            560
#define DIALOG_REPORT_AP1           561
#define DIALOG_COLORID              562
#define DIALOG_REPORT_DEGEABA       563
#define DIALOG_VEHSPAWN5			564
#define DIALOG_VEHSPAWN6			565
#define DIALOG_VEHINFO              566
#define DIALOG_INSURANCEBUY         567
#define DIALOG_INSURANCEBUY2        568
#define DIALOG_NOPP                 569
#define DIALOG_GIFTBOX              570
#define DIALOG_HUD                  571
#define DIALOG_HUD1                 572
#define DIALOG_HUD2                 573
#define DIALOG_HUD3                 574
#define DIALOG_PAINTBALL            575
#define DIALOG_PAINTBALLMAP         576
#define DIALOG_PAINTBALLWEAPON      577
#define DIALOG_LASTS                578
#define DIALOG_UNINVITE             579
#define DIALOG_EMAILS               580
#define DIALOG_EMAILS2              581
#define DIALOG_CLANMEMBERS2			582
#define DIALOG_CLANSETTINGS			583
#define DIALOG_CLANMEMBERS3			584
#define DIALOG_CLAN_RANK			585
#define DIALOG_CLAN_WARNS			586
#define DIALOG_CLAN_CHANGERANK		587
#define DIALOG_CLAN_COLOR			588
#define DIALOG_CLAN_CHANGERANK2		589
#define DIALOG_FRIENDS				590
#define DIALOG_ADDFRIENDS			591
#define DIALOG_FRIENDS2				592
#define DIALOG_QUITGROUP			593
#define DIALOG_QUITCLAN				594
#define DIALOG_CHOOSECLANNAME		595
#define DIALOG_CHOOSECLANTAG		596
#define DIALOG_SEXSHOP				597
#define DIALOG_BAR					598
#define DIALOG_LOCATIONSCLOTHINGLS	599
#define DIALOG_LOCATIONSRENTLS		600
#define DIALOG_LOCATIONSSEXLS		601
#define DIALOG_LOCATIONSMODLS		602
#define DIALOG_LOCATIONSCLOTHINGLV	603
#define DIALOG_LOCATIONSCLUCKINLV	604
#define DIALOG_LOCATIONSCASINOLV	605
#define DIALOG_LOCATIONSSEXLV		606
#define DIALOG_LOCATIONSMODLV		607
#define DIALOG_FWARN				608
#define DIALOG_FUNWARN				609
#define DIALOG_FPUNINVITE			610
#define DIALOG_NOUNINVITE			611
#define DIALOG_MEMBERS2				612
#define DIALOG_MEMBERS3				613
#define DIALOG_TW                   614
#define	pBTempx                     615
#define pBYearx                     616
#define pBMonthx                    617
#define pBDayx                      618
#define pBByx             	        619
#define pBReasonx                   620
#define DIALOG_COMMANDS 			621
#define DIALOG_SKIP                 622
#define DIALOG_PAROLAADMIN          623
#define DIALOG_VIPCOLORS            624
#define DIALOG_VIP                  625
#define DIALOG_VIPWHEELS            625
#define DIALOG_PINS                 626
#define DIALOG_LOGINPIN             627
#define DIALOG_CHANGEPIN            628
#define DIALOG_ASHOP2               629
#define DIALOG_VOTE                 2009
#define DIALOG_CANDS                2010
#define DIALOG_VOTE1                2011
#define DIALOG_NUMECAND             2012
#define DIALOG_NUMECAND2            2013
#define DIALOG_NUMECAND3            2014
#define DIALOG_CANDFACTION          2015
#define DIALOG_VOTEZ                2016
#define DIALOG_VOTEINFO             2017
#define DIALOG_NEON                 2018
#define DIALOG_HSHOP                2025
#define DIALOG_UNSTUCK1             2024
#define DIALOG_UNSTUCK2             2025
#define DIALOG_UNSTUCK3             2026
#define DIALOG_UNSTUCK4             2027
#define DIALOG_UNSTUCK5             2028
#define DIALOG_UNSTUCK6             2029
#define DIALOG_CURIER 				2030
#define DIALOG_ADMINHELP	        2031
#define DIALOG_ADMINHELP2	        2032

// WALKIE TALKIE
#define MAX_CHANNEL 1000

// =============================================================== WalkStyle
#define WALK_DEFAULT    0
#define WALK_NORMAL     1
#define WALK_PED        2
#define WALK_GANGSTA    3
#define WALK_GANGSTA2   4
#define WALK_OLD        5
#define WALK_FAT_OLD    6
#define WALK_FAT        7
#define WALK_LADY      	8
#define WALK_LADY2      9
#define WALK_WHORE      10
#define WALK_WHORE2     11
#define WALK_DRUNK     	12
#define WALK_BLIND     	13

#define maxobj 50
#define Spam_MaxMsgs     4
#define MAX_STRING 2400
#define c_y 0xFFFF00AA
#define c_r 0xAA3333AA
#define CHECKPOINT_NONE 0
#define CHECKPOINT_HOME 12
#define CHECKPOINT_LOCATE 53
#define KEY_AIM (128)
#define KEY_HANDBRAKE (128)
#define SCM SendClientMessage
#define SPECIAL_ACTION_PISSING 68


// =============================================================== Kick & Ban
forward Kick_Ban ( playerid, bool: kickban ); public Kick_Ban ( playerid, bool: kickban ) return ( !kickban ) ? Kick ( playerid ) : Ban ( playerid );
#define KickEx(%1) 			SetTimerEx ( "Kick_Ban", 500, false, "ii", %1, false )
#define Ban(%1) 			SetTimerEx ( "Kick_Ban", 500, false, "ii", %1, true )
static const TLD[][] = { ".com", ".net", "www.", ".org", ".info", ".ru", ".ro", ".pl", ".tk", ".cc", "lfg", "tzone", "t-zone", "topzone", "87.", "rpg.", "next-generation", "ucp.", "aryana", "gaming", "AG:SA", "Bugged" "InSide", "t4p", "t4", "rpg.t4p.ro", "time4play", "bzone", "b-zone", "egaming", "e-gaming", "pronion", "prounion", "93.119.26.11", "soft-gaming", "softgaming", "9play", "pro-gaming", "redzmax", "b-gaming", "4-games", "proilegal", "gfzone", "vibeplay", "arth"};

// =============================================================== NickName Protection
static const AntiNickNameProtection[][] =
{
	"rpg",
	"rpg2",
	".ro",
	".com",
	".ga",
	".tk",
	".cf",
	"samp.",
	"expertgame",
	"rpg.expertgame.ro",
	"pula",
	"sugi",
	"muie",
	"sugetipula",
	"rpg.",
	"sugeti",
	"RPG.",
	"rPg.",
	"RpG.",
	"Rpg.",
	"RPG.EXPERTGAME.RO",
	"bugged",
	":7777",
	"87_",
	"TopZone",
	"Tzone",
	"T-zone",
	"NextGeneration",
	"LFG",
	"Arsacia"
	
};


// ==================================================== Colors
#define COLOR_AdminWarn     0xC60000FF
#define COLOR_WARNING 		0xD41313FF
#define COLOR_SERVER        0xFFFFFFFF
#define TEAM_CYAN_COLOR 	0xFF8282AA
#define COLOR_PIN           0x00FFFFFF
#define COLOR_MONEY 		0x25B336FF
#define COLOR_ADMCHAT 		0xFFC266AA
#define COLOR_CHATBUBBLE    0xFFFFFFCC
#define COLOR_ERROR    		0xFF0000FF
#define COLOR_CHAT1 		0xF9B7FFAA
#define COLOR_CHAT2 		0xE6A9ECAA
#define COLOR_CHAT3 		0xC38EC7AA
#define COLOR_CHAT4 		0xD2B9D3AA
#define COLOR_CHAT5 		0xC6AEC7AA
#define COLOR_AFK 			0x565656FF
#define COLOR_GRAD1 		0xB4B5B7FF
#define COLOR_GRAD2 		0xBFC0C2FF
#define COLOR_GRAD3 		0xCBCCCEFF
#define COLOR_GRAD4 		0xD8D8D8FF
#define COLOR_GRAD5 		0xE3E3E3FF
#define COLOR_DARKNICERED 	0x9D000096
#define COLOR_RED1  		0x80404000
#define COLOR_GRAD6 		0xF0F0F0FF
#define COLOR_GREY 			0xCECECEFF
#define COLOR_GREEN 		0x33AA33AA
#define COLOR_ADV 			0x00FF00AA
#define COLOR_SYSTEM 		0xEFEFF7AA
#define COLOR_RED 			0xAA3333AA
#define COLOR_LIGHTRED 		0xFF6347AA
#define COLOR_NEWS 			0xFFA500AA
#define COLOR_LIGHTBLUE 	0x33CCFFAA
#define COLOR_LOGIN 		0x00D269FF
#define COLOR_LIGHTGREEN 	0x8BBA2EAA
#define COLOR_ORANGE 		0xF97804FF
#define COLOR_ADMIN 		0xCC6633FF
#define COLOR_YELLOW 		0xFFFF00AA
#define COLOR_YELLOW2 		0xF5DEB3AA
#define COLOR_ADMCOMMANDS	0xFFC000FF
#define COLOR_WHITE 		0xFFFFFFFF
#define COLOR_WHITE1 		0xFFFFFF00
#define COLOR_FADE1 		0xE6E6E6E6
#define COLOR_FADE2 		0xC8C8C8C8
#define COLOR_FADE3 		0xAAAAAAAA
#define COLOR_FADE4 		0x8C8C8C8C
#define COLOR_FADE5 		0x6E6E6E6E
#define COLOR_PURPLE 		0xC2A2DAAA
#define COLOR_DBLUE 		0x2641FEAA
#define TEAM_GREEN_COLOR 	0xFFFFFFAA
#define TEAM_BLUE_COLOR 	0x8D8DFF00
#define TEAM_GROVE_COLOR 	0x00D900C8
#define TEAM_AZTECAS_COLOR 	0x01FCFFC8
#define COLOR_TUTORIAL 		0x4A9500FF
#define COLOR_GROVE 		0x00E800FF
#define COLOR_DEPART 		0xFF3535AA
#define COLOR_RADIO			0x8D8DFFAA
#define CRISTIAN 			0x0DC013AA
#define COLOR_MAYOR         0xB3F856FF
#define COLOR_TEAL          0x67AAB1FF
#define COLOR_GENANNOUNCE   0xA9C4E4FF
#define COLOR_GENANNOUNCE2  0xFF8080FF
#define COLOR_ROB  			0x0C8176FF
#define COLOR_BLUE      	0x211CDEC8
#define COLOR_DARKPINK      0xFF80C0C8
#define COLOR_NEWBIE        0x9DFE8080
#define COLOR_LIGHTGREEN2   0x00FF00CC
#define COLOR_RED2          0xFF0000FF
#define COLOR_REPORT		0xA60404FF
#define COLOR_MEMBER		0x00B8E6FF
#define COLOR_LEADER		0x009ACDFF

// ==================================================== Teams
#define TEAM_CYAN 	1
#define TEAM_BLUE 	2
#define TEAM_GREEN 	3
#define TEAM_ORANGE 4
#define TEAM_COR 	5
#define TEAM_BAR 	6
#define TEAM_TAT 	7
#define TEAM_CUN 	8
#define TEAM_STR 	9
#define TEAM_HIT 	10
#define TEAM_ADMIN 	11

// ==================================================== Forwards
forward ini_GetKey( line[] );
forward ini_GetValue( line[] );
forward vUpdate(vehicleid, type);
forward InsertCar(playerid,type,stockid);
forward	InsertPCar(playerid,model,value,namecar[],type);
forward IsAnOwnableCar(vehicleid);
forward HUpdate(hid, type);
forward Update(playerid, type);
forward aimback(playerid);
forward OnPropTextdrawUpdate(update, h);
forward MySQLCheckAccount(sqlplayersname[]);
forward MySQLCheckClan(sqlclanname[]);
forward MySQLCheckCar(carname[]);
forward MySQLCheckSpeed(vidd);
forward Vendingg(playerid);
forward Vendingg2(playerid);
forward Reportul(playerid);
forward VaildFishPlace(playerid);
forward taxibaraclose();
forward lspdbarclose();
forward lvpdbarclose();
forward nggateclose();
forward lspdgateclose();
forward lvpdgateclose();
forward lvpdgateclose2();
forward jailclosegate();
forward Truckerr1(playerid);
forward Truckerr2(playerid);
forward Truckerr3(playerid);
forward Truckerr4(playerid);
forward AfterSpray(playerid);
forward DrugEffectGone(playerid);
forward IdleKick();
forward IsAGarbageTruck(carid);
forward IsABus(carid);
forward IsAPizza(carid);
forward RACtime(playerid);
forward SendMSG(playerid);
forward PlaceAD(playerid);
forward RentTimer(playerid);
forward LoadDynamicFactions();
forward LoadClanInfo();
forward Float:GetDistance(playerid, Float:x, Float:y);
forward UnFreezeStation(playerid);
forward Fisher(playerid);
forward Fisher2(playerid);
forward SetFarmer(playerid);
forward BusDriverCheck(playerid);
forward SetSomate(playerid);
forward SetSomate1(playerid);
forward SomateExpire(playerid);
forward RespawnTruck(playerid);
forward TowAgain(playerid);
forward FirerocketTime(playerid);
forward splittime(playerid);
forward splittime2(playerid);
forward splittime3(playerid);
forward lighttimer(playerid);
forward WeatherChange();
forward lighttimer2(playerid);
forward RocketBoxTimer(playerid);
forward SplitRBSprinkle(lightobject, playerid);
forward DestroyRBLight(playerid);
forward RobFunc(playerid);
forward Adminlog(string[]);
forward Factionlog(factionid,psql,lsql,action[]);
forward LogIP(string[],psql);
forward DrugFarmerExit(playerid);
forward BackupClear(playerid, calledbytimer);
forward setminute(playerid);
forward UnsetAfterTutorial(playerid);
forward LoadBizz();
forward LoadTurfs();
forward LoadProperty();
forward LoadStock();
forward LoadCar();
forward LoadSystems();
forward IsAtGasStation(playerid);
forward IsAtBank(playerid);
forward IsAtOrderPlace(playerid);
forward SetPlayerSpawn(playerid);
forward SetupPlayerForClassSelection(playerid);
forward SetPlayerTeamFromClass(playerid,classid);
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
forward CrimInRange(Float:radi, playerid,copid);
forward SendEnemyMessage(color, string[]);
forward SendTeamBeepMessage(team, color, string[]);
forward ABroadCast(color,const string[],level);
forward SendIP(color,const string[]);
forward HLChat(color,const string[]);
forward LeaderChat(color,const string[]);
forward IsPlayerInTurf(playerid, turfid);
forward GetPlayerTurf(playerid);
forward IsPlayerInArea(playerid, Float:minx, Float:miny, Float:maxx, Float:maxy);
forward PrintBizInfo(playerid,targetid);
forward SetPlayerUnjail();
forward DeleteDeathMessage(playerid);
forward PrepareRoundPaintBall1();
forward PrepareRoundPaintBall2();
forward PrepareRoundPaintBall3();
forward PrepareRoundPaintBall4();
forward PaintBallRun1();
forward PaintBallRun2();
forward PaintBallRun3();
forward PaintBallRun4();
forward SavePlayerData();
forward SetPlayerPNS();
forward FiveSecondsTimer();
forward OtherTimer();
forward IsAChiliad(carid);
forward IsATruck(carid);
forward IsAFarmer(carid);
forward IsAnAmbulance(carid);
forward IsAnTaxi(carid);
forward IsABike(carid);
forward IsACopCar(carid);
forward IsAFbiCar(carid);
forward IsALVPDCar(carid);
forward IsANgCar(carid);
forward IsAGovCar(carid);
forward Copcar2(carid);
forward IsAPlane(carid);
forward IsABoat(carid);
forward IsACop(playerid);
forward IsAMember(playerid);
forward Spectator();
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward AttachTrailerrr(playerid);
forward SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num);
forward SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi);
forward SetPlayerCriminal(playerid,declare,reason[]);
forward ShowStats(playerid,targetid);
forward SetPlayerToTeamColor(playerid);
forward GameModeExitFunc();
forward OnLoadAllCars();
forward LoadAllDynamicObjects();
forward LoadAllObjects();
forward LoadTextdraws();
forward GameModeInitExitFunc();
forward split(const strsrc[], strdest[][], delimiter);
forward OnPlayerLogin(playerid,password[]);
forward OnPlayerRegister(playerid, password[]);
forward BroadCast(color,const string[]);
forward OOCOff(color,const string[]);
forward OOCNews(color,string[]);
forward OOCNews2(color,const string[]);
forward SendJobMessage(job, color, string[]);
forward SendFamilyMessage(family, color, string[]);
forward SendNewFamilyMessage(family, color, string[]);
forward SendTeamMessage(member, color, string[]);
forward SendRadioMessage(member, color, string[]);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetectorS(Float:radi, playerid, targetid);
forward GetWeekDay();
forward ClearCrime(playerid);
forward CarCheck();
forward CarTow(carid);
forward TowCar(car,car2,playerid);
forward CheckGas();
forward Checkvehinfo();
forward Fillup(playerid);
forward StoppedVehicle();
forward SyncTime();
forward SyncUp();
forward Production();
forward PayDay();
forward HouseLevel(playerid);
forward tdhide2(playerid);
forward tdhide(playerid);
forward CHouseLevel(houseid);
forward FixHour(hour);
forward Logink(playerid);
forward CountDownCheck3(playerid);
forward CountDownCheck2(playerid);
forward CountDownCheck1(playerid);
forward CountDownCheckGo(playerid);
forward CheckAFK();
forward CountDownFinalize();
forward payala2(playerid);
forward LocateCar(car,playerid);
forward PlayerMapIconPaint(playerid);
forward gateadminclose();
forward TimerExplozion(objectid, Float:x, Float:y, Float:z);
forward IsAtATM(playerid);
forward CustomPickups();

#define MAX_SAFEZONES 200
enum szInfo
{
	szID,
	Float: szX,
	Float: szY,
	Float: szZ,
	szRange
}

// ==================================================== New's
new SafeZone[MAX_SAFEZONES][szInfo];
new CharityMoney = 0;
new arefreeze[MAX_PLAYERS];
new MGLOBAL[3200];
new timefornextquestion[MAX_PLAYERS];
new aprimitintrebarea[MAX_PLAYERS];
new lastquestion[MAX_PLAYERS];
new Stunt[195];
new ArenaPl[11];
new StuntOn = 0;
new ArenaPlOn = 0;
new Radarlimit[MAX_PLAYERS];
new JCurier[MAX_PLAYERS][4];
new Radaron[MAX_PLAYERS];
new gatehqa;
new IsBot[MAX_PLAYERS];
new Text:SafeTD[1];
new Text:Logosv1;
new Text:Logosv2;
new Text:textile;
new VamaGates[15];
new esteanunt = 0;
new Text:AnuntServer[1];
new PalariaProstului[MAX_PLAYERS];
new housestring[200][256];
new barstring[100][256];
new sarmale[MAX_PLAYERS];
new SpecFactiune[MAX_PLAYERS];
new PoateVorbiVIP[MAX_PLAYERS];
new UseCmdTimer[MAX_PLAYERS];
new PinLogged[MAX_PLAYERS];
new	EsteListat[MAX_PLAYERS];
new votefor1 = 0;
new votefor2 = 0;
new votefor3 = 0;
new voteoption[25];
new voteoption2[25];
new voteoption3[25];
new candsnumber = 0;
new candfaction = 0;
new InCoal[MAX_PLAYERS];
new CoalCar[MAX_PLAYERS];
new InVote = 0;
new AVotatDeja[MAX_PLAYERS];
new acovers = 0;
new Text:LoginBox;
new Text:LoginInfo;
new sumaconturi = 0;
new recordjucatori[256];
new celmainoucont[256];
new bool: isRelogging[MAX_PLAYERS], relogPlayerIP[MAX_PLAYERS][17];
new g_Object[34];
new g_Pickup[1];
new o_CarShop[39];
new IsWorkingCariera[MAX_PLAYERS];
new MasinaCariera[MAX_PLAYERS];

#define DIALOG_RASPUNSAUTON 1

new SQL = -1;
new	GiftBoxActiv = 0,
	PremiumMaxim = 0,
	painttime=0,
	DeathP[MAX_PLAYERS],
	LastText[MAX_PLAYERS][128],
	LastTextTime[MAX_PLAYERS],
	examcar[MAX_PLAYERS],
	LastBiz[MAX_PLAYERS],
	countdown,
	Tigaanel[MAX_PLAYERS],
	LastPlayer[MAX_PLAYERS],
	Selectat[1000][MAX_PLAYERS],
	XCheckpoints[MAX_PLAYERS],
	LastCheckpoint[MAX_PLAYERS],
	Selected[MAX_PLAYERS][101],
	Selected2[MAX_PLAYERS],
	FastString[128],
	AdvMSG[MAX_PLAYERS][256],
	AdvPlayer[MAX_PLAYERS],
	AdvTimer[MAX_PLAYERS],
	Answered = 1,
	restruck[MAX_PLAYERS],
	viddd[MAX_PLAYERS],
	Trucker[MAX_PLAYERS],
	Trucker2[MAX_PLAYERS],
	Trucker3[MAX_PLAYERS],
	Trucker4[MAX_PLAYERS],
	TruckID[MAX_PLAYERS],
	OnDutymedic[MAX_PLAYERS],
	RepairTime[MAX_PLAYERS],
	pnsmoney[MAX_PLAYERS],
	AreFaina[MAX_PLAYERS],
	CarJacker[MAX_PLAYERS],
	BuyCar[MAX_PLAYERS],
	IsPlayerAFK[MAX_PLAYERS],
	QEvent[MAX_PLAYERS][50],
	object,
	object2,
	object3,
	object4,
	object5,
	VehicleRent[MAX_VEHICLES],
	RentTime[MAX_PLAYERS],
	TotalTimeRent[MAX_PLAYERS],
	RentVeh[MAX_PLAYERS],
	RentTimerr[MAX_PLAYERS],
	waitwar[15],
	SelFac[MAX_PLAYERS],
	EnterInModShop[MAX_PLAYERS],
	PlayerEnterTime[MAX_PLAYERS],
	Undercover[MAX_PLAYERS],
	shotTime[MAX_PLAYERS],
	shot[MAX_PLAYERS],
	Float:xhq[15],
	Float:yhq[15],
	Float:zhq[15],
	WantedName[MAX_PLAYERS][256],
	WantedReason[MAX_PLAYERS],
	WantedTimer[MAX_PLAYERS],
	skinlist = mS_INVALID_LISTID,
	skinlist1 = mS_INVALID_LISTID,
	skinlist2 = mS_INVALID_LISTID,
	skinlist3 = mS_INVALID_LISTID,
	skinlist4 = mS_INVALID_LISTID,
	skinlist5 = mS_INVALID_LISTID,
	skinlist6 = mS_INVALID_LISTID,
	skinlist8 = mS_INVALID_LISTID,
	skinlist9 = mS_INVALID_LISTID,
	skinlist10 = mS_INVALID_LISTID,
	skinlist11 = mS_INVALID_LISTID,
	skinlist12 = mS_INVALID_LISTID,
	skinlist13 = mS_INVALID_LISTID,
	skinlist14 = mS_INVALID_LISTID,
    skinlist15 = mS_INVALID_LISTID,
	skinlist16 = mS_INVALID_LISTID,
	skinlist17 = mS_INVALID_LISTID,
	skinlist18 = mS_INVALID_LISTID,
	EmailId[MAX_PLAYERS][11],
	taxim[MAX_PLAYERS],
	Float:evex,
	Float:evey,
	Float:evez,
	eventenabled,
	pickup_event,
	virtuallevent,
	interiorevent,
	towo1,
	towo2,
	towo1b,
	towo2b,
	towo1c,
	towo2c,
	towo1d,
	towo2d,
	towo1e,
	towo2e,
	fight2[MAX_PLAYERS],
	reporttext[MAX_PLAYERS][256],
	cheattext[MAX_PLAYERS][128],
	reportcheater[MAX_PLAYERS] = -1,
	reportreason[MAX_PLAYERS] = 0,
	playerreported[MAX_PLAYERS] = -1,
	QuestP[50],
	pickuph,
	sip,
	hitmanep,
	rusp,
	sicp,
	porp,
	trdp,
	taxip,
	govp,
	gslsenter1,
	gslsenter2,
	gslsenter3,
	gslsenter4,
	eventobjects=0,
	objectevent[11],
	eventprizeobj[11],
	toglc[MAX_PLAYERS],
	togadminchat[MAX_PLAYERS],
	raceoff[MAX_PLAYERS],
	Carspawn[MAX_VEHICLES],
	VehOwned[MAX_VEHICLES],
    VehOwner[MAX_VEHICLES],
	Destroycar = 0,
	masini = 0,
	stockss = 0,
	clanss = 0,
	factionss = 0,
	personalcar[MAX_PVEHS][MAX_PLAYERS],
	Diceid[MAX_PLAYERS],
	Dicem[MAX_PLAYERS],
	wantedlost[MAX_PLAYERS],
	CheckBus[MAX_PLAYERS],
	BusCheckk[MAX_PLAYERS],
	JobStep[MAX_PLAYERS],
	timerbus[MAX_PLAYERS],
	busc[MAX_PLAYERS],
	Float:Health[MAX_PLAYERS],
	Float:Armour[MAX_PLAYERS],
	SpamCheck[MAX_PLAYERS],
	antirem[MAX_PLAYERS],
	login[MAX_PLAYERS],
	Clanidoff[MAX_PLAYERS],
	Float: Aimx[MAX_PLAYERS],
	Float: Aimy[MAX_PLAYERS],
	Float: Aimz[MAX_PLAYERS],
	kickafk = 0,
	Speedlimit[MAX_PLAYERS],
	togip[MAX_PLAYERS],
	tazer[MAX_PLAYERS],
	PlayerHandsup[MAX_PLAYERS],
	curatj[MAX_PLAYERS],
	XDeaths[MAX_PLAYERS],
	LastDeath[MAX_PLAYERS],
	playerdeath[MAX_PLAYERS],
	drug[MAX_PLAYERS],
	bizid[MAX_PLAYERS],
	bizprice[MAX_PLAYERS],
	bizoffer[MAX_PLAYERS],
	bool:WeaponData[MAX_PLAYERS][13],
	TimerAtuPlayer[MAX_PLAYERS],
	Cash[MAX_PLAYERS],
	SwitchKey[MAX_PLAYERS],
	bussines = 0,
	housess = 0,
	turfsss = 0,
	togfind[MAX_PLAYERS],
	Float:FRX[MAX_PLAYERS],
	Float:FRY[MAX_PLAYERS],
	Float:FRZ[MAX_PLAYERS],
	firerockettime[MAX_PLAYERS],
	Firerocket[MAX_PLAYERS],
	explosionrocket[MAX_PLAYERS],
	rocketsmoke[MAX_PLAYERS],
	Light[MAX_LIGHTS][MAX_PLAYERS],
	Float:RBX[MAX_PLAYERS],
	Float:RBY[MAX_PLAYERS],
	Float:RBZ[MAX_PLAYERS],
	RocketBoxTime[MAX_PLAYERS],
	RocketBox[MAX_PLAYERS],
	RocketBoxSmoke[MAX_PLAYERS],
	RocketBoxSprinkle[RBSprinkleid][MAX_PLAYERS],
	RBLight[MAX_LIGHTS][MAX_PLAYERS],
	TowAcc[MAX_PLAYERS],
	JackAcc[MAX_PLAYERS],
	Sunglasses[MAX_PLAYERS],
	Hatss[MAX_PLAYERS],
	vendi[MAX_PLAYERS],
	vendi2[MAX_PLAYERS],
	Vending[MAX_PLAYERS],
	FactionOffer[MAX_PLAYERS],
	hudactivated[MAX_PLAYERS],
	ReportTime[MAX_PLAYERS],
	timerreport[MAX_PLAYERS],
	Fishing[MAX_PLAYERS],
	FishTimer[MAX_PLAYERS],
	FishTimerr[MAX_PLAYERS],
	TipPeste[MAX_PLAYERS],
	farmerc[MAX_PLAYERS],
	farmertime[MAX_PLAYERS],
	timerfarmm[MAX_PLAYERS],
	timersoo[MAX_PLAYERS],
	soexpire[MAX_PLAYERS],
	BusinessRob[MAX_PLAYERS],
	RobTime[MAX_PLAYERS],
	QuestWait[MAX_PLAYERS],
	RobTimer[MAX_PLAYERS],
	somatee[MAX_PLAYERS],
	SomatePermission[MAX_PLAYERS],
	somated[MAX_PLAYERS],
	somatename[MAX_PLAYERS][30],
	TimerFree[MAX_PLAYERS],
	pizzaj[MAX_PLAYERS],
	pizzatime[MAX_PLAYERS],
	pizzaprize[MAX_PLAYERS],
	failpizza[MAX_PLAYERS],
	PizzaCP[MAX_PLAYERS],
	timerrent[MAX_PLAYERS],
	walktime[MAX_PLAYERS],
	deathdeletetime[MAX_PLAYERS],
	WalkStyle[MAX_PLAYERS],
	targetfind[MAX_PLAYERS],
	InHouse[MAX_PLAYERS],
	InBussines[MAX_PLAYERS],
	InHQ[MAX_PLAYERS],
	cased[MAX_PLAYERS],
	caser[MAX_PLAYERS],
	adminacceptedhelp[MAX_PLAYERS] = -1,
	licenseaccepted[MAX_PLAYERS] = -1,
	licensesend[MAX_PLAYERS] = -1,
	bool: WTToggle[MAX_PLAYERS] = false,
	Float:WTChannel[MAX_PLAYERS] = 0.0,
	arrestcop[MAX_PLAYERS] = -1,
	eventorganizer[MAX_PLAYERS],
	requestingevent[MAX_PLAYERS],
	requestingtitle[MAX_PLAYERS][50],
	requestinglocation[MAX_PLAYERS][50],
	requestingdescription[MAX_PLAYERS][100],
	requestingprize[MAX_PLAYERS],
	requestingtime[MAX_PLAYERS][50],
	payala[MAX_PLAYERS],
	activeevent,
	eventtitle[50],
	eventlocation[50],
	eventdescription[100],
	eventprize,
	eventtime[50],
	gatelspd,
	gatelvpd,
	gatelvpd2,
	gateng,
	lspdbar,
	lvpdbar,
	taxibar,
	UsingDrugs[MAX_PLAYERS],
	Float:PlayerPos[MAX_PLAYERS][6],
	Float:PlayerPosii[MAX_PLAYERS][6],
	idletime = 3000000,
	idletimer,
	vehEngine[MAX_VEHICLES],
	HelperDuty[MAX_PLAYERS],
	AdminDuty[MAX_PLAYERS],
	GodMode[MAX_PLAYERS],
	vehRadio[MAX_VEHICLES],
	IsCollectingRubbish[MAX_PLAYERS],
	GarbageEndTime[MAX_PLAYERS],
	GarbageTime[MAX_PLAYERS],
	BinTime[MAX_PLAYERS],
	gPlayerUsingLoopingAnim[MAX_PLAYERS],
	gPlayerAnimLibsPreloaded[MAX_PLAYERS],
	AcceptOffer[MAX_PLAYERS],
	AcceptPrice[MAX_PLAYERS],
	FreeOffer[MAX_PLAYERS],
	FreePlayer[MAX_PLAYERS],
	FreePrice[MAX_PLAYERS],
	MatsOffer[MAX_PLAYERS],
	MatsPrice[MAX_PLAYERS],
	MatsAmmo[MAX_PLAYERS],
	SellgunOffer[MAX_PLAYERS],
	SellgunPrice[MAX_PLAYERS],
	SellgunMats[MAX_PLAYERS],
	SellgunAmmo[MAX_PLAYERS],
	SellgunID[MAX_PLAYERS],
	HouseID[MAX_PLAYERS],
	HouseOffer[MAX_PLAYERS],
	HousePrice[MAX_PLAYERS],
	ofercar[MAX_PLAYERS],
	hiddenoffer[MAX_PLAYERS],
	hiddenprice[MAX_PLAYERS],
	carprice[MAX_PLAYERS],
	primesccar[MAX_PLAYERS],
	cartype[MAX_PLAYERS],
	CarID[MAX_PLAYERS],
	tradeofferer[MAX_PLAYERS],
	tradediff[MAX_PLAYERS],
	tradecars[MAX_PLAYERS],
	tradecars2[MAX_PLAYERS],
	tradetype[MAX_PLAYERS],
	tradetype2[MAX_PLAYERS],
	flymode[MAX_PLAYERS],
	Text3D:areap,
	areape = 0,
	Text3D:WantedScris[MAX_PLAYERS],
	Text3D:DeadScris[MAX_PLAYERS],
	Text3D:dynamicevent3DText,
	Float:posxxx[MAX_PLAYERS],
	Float:posyyy[MAX_PLAYERS],
	Float:poszzz[MAX_PLAYERS],
	PlayerName[MAX_PLAYER_NAME],
	AfterTutorial[MAX_PLAYERS],
	RegistrationStep[MAX_PLAYERS],
	TakingLesson[MAX_PLAYERS],
	UsedFind[MAX_PLAYERS],
	NoFuel[MAX_PLAYERS],
	MatsHolding[MAX_PLAYERS],
	GotoMats[MAX_PLAYERS],
	PlayerStoned[MAX_PLAYERS],
	ConsumingMoney[MAX_PLAYERS],
	TutTime[MAX_PLAYERS],
	PlayerDrunk[MAX_PLAYERS],
	PlayerDrunkTime[MAX_PLAYERS],
	LiveOffer[MAX_PLAYERS],
	TalkingLive[MAX_PLAYERS],
	PlacedNews[MAX_PLAYERS],
	SelectChar[MAX_PLAYERS],
	SelectCharID[MAX_PLAYERS],
	SelectCharPlace[MAX_PLAYERS],
	ChosenSkin[MAX_PLAYERS],
	CurrentMoney[MAX_PLAYERS],
	CP[MAX_PLAYERS],
	MoneyMessage[MAX_PLAYERS],
	giveexp = 50,
	recivedexp = 3,
	recivedmoney = 30000,
	eventon = 0,
	Tax,
	TaxValue,
	PaintBallWinnerKills[5],
	PaintWinner[5],
	Medics = 0,
	MedicCall[MAX_PLAYERS],
	MedicCallTime[MAX_PLAYERS],
	Mechanics = 0,
	MechanicCall[MAX_PLAYERS],
	MechanicCallTime[MAX_PLAYERS],
	TaxiDrivers = 0,
	TaxiCall[MAX_PLAYERS],
	TaxiCallTime[MAX_PLAYERS],
	TaxiAccepted[MAX_PLAYERS],
	TransportDuty[MAX_PLAYERS],
	TransportValue[MAX_PLAYERS],
	TransportMoney[MAX_PLAYERS],
	TransportTime[MAX_PLAYERS],
	TransportCost[MAX_PLAYERS],
	TransportDriver[MAX_PLAYERS],
	JobDuty[MAX_PLAYERS],
	MedicTime[MAX_PLAYERS],
	NeedMedicTime[MAX_PLAYERS],
	TicketOffer[MAX_PLAYERS], // TICKET
	TicketMoney[MAX_PLAYERS],
	GotHit[MAX_PLAYERS], // HITMAN
	GoChase[MAX_PLAYERS],
	GetChased[MAX_PLAYERS],
	OrderReady[MAX_PLAYERS],
	PlayerTied[MAX_PLAYERS], // CUFF - TIE - TAZER
	PlayerCuffed[MAX_PLAYERS],
	PlayerCuffed2[MAX_PLAYERS],
	PlayerCuffedTime[MAX_PLAYERS],
	PlayerTazeTime[MAX_PLAYERS],
	RepairOffer[MAX_PLAYERS], // REPAIR
	RepairPrice[MAX_PLAYERS],
	RefillOffer[MAX_PLAYERS],
	RefillPrice[MAX_PLAYERS],
	RepairCar[MAX_PLAYERS],
	TransferOffer[MAX_PLAYERS], // TRANSFER MONEY
	TransferMoney[MAX_PLAYERS],
	DrugOffer[MAX_PLAYERS], // DRUGS
	DrugPrice[MAX_PLAYERS],
	DrugGram[MAX_PLAYERS],
	JailPrice[MAX_PLAYERS], // BAIL PRICE
	WantedPoints[MAX_PLAYERS], // COPS
	OnDuty[MAX_PLAYERS],
	gPlayerCheckpointStatus[MAX_PLAYERS], //
	gPlayerLogged[MAX_PLAYERS],
	gPlayerLogTries[MAX_PLAYERS],
	gPlayerSpawned[MAX_PLAYERS],
	gLastCar[600],
	gOoc[MAX_PLAYERS],
 	gNews[MAX_PLAYERS],
	gFam[MAX_PLAYERS],
	BigEar[MAX_PLAYERS],
	Spectate[MAX_PLAYERS],
	SpectateState[MAX_PLAYERS],
	CellTime[MAX_PLAYERS],
	HireCar[MAX_PLAYERS],
	SafeTime[MAX_PLAYERS],
	HidePM[MAX_PLAYERS],
	PhoneOnline[MAX_PLAYERS],
	PhoneOnlineCalls[MAX_PLAYERS],
	TurfsDisp[MAX_PLAYERS],
	FirstSpawn[MAX_PLAYERS],
	Mobile[MAX_PLAYERS],
	CallCost[MAX_PLAYERS],
	gPlayerAccount[MAX_PLAYERS],
	gLastDriver[600],
	actor1,
	actor2,
	paintp[5], //Players  --- Paintball
	paintm[5], //Map
	paintg[3], //Arma
	paintt[5], //Timp ramas
	paintrs[5], //Timp restart
	paintvoteg[3][3],//Vote gun
	paintvotem[5][5], //Vote map
	mapvoted[5], //Map voted or not
	gunvoted[3], //GUN voted or not
	gCarLock[600];

new serverrestart2 = -1;

// ==================================================== Texts
new PlayerText:TimeLeftWar1[MAX_PLAYERS],
	PlayerText:AttackerScore[MAX_PLAYERS],
	PlayerText:DefenderScore[MAX_PLAYERS],
	PlayerText:WarBox[MAX_PLAYERS],
	PlayerText:PaintBallText[MAX_PLAYERS],
	Text:Time,
	Text:Date,
	PlayerText:Bus1[MAX_PLAYERS],
	PlayerText:credite0[MAX_PLAYERS],
 	PlayerText:credite1[MAX_PLAYERS],
 	PlayerText:credite2[MAX_PLAYERS],
 	PlayerText:credite3[MAX_PLAYERS],
 	PlayerText:credite4[MAX_PLAYERS],
 	PlayerText:credite5[MAX_PLAYERS],
 	PlayerText:credite6[MAX_PLAYERS],
 	PlayerText:credite7[MAX_PLAYERS],
	PlayerText:Bus2[MAX_PLAYERS],
	PlayerText:TextDrawSpec[MAX_PLAYERS][6],
	PlayerText:Fuell[MAX_PLAYERS],
    PlayerText:SkinPreview[MAX_PLAYERS],
	PlayerText:Speedd[MAX_PLAYERS],
	PlayerText:Odom[MAX_PLAYERS],
	PlayerText:carlocked[MAX_PLAYERS],
	PlayerText:farmbox[MAX_PLAYERS],
	PlayerText:farmjob[MAX_PLAYERS],
	PlayerText:farmspeed[MAX_PLAYERS],
	PlayerText:farmwanted[MAX_PLAYERS],
	PlayerText:farmtime[MAX_PLAYERS],
	PlayerText:gunoierr[MAX_PLAYERS],
	PlayerText:Jailtime[MAX_PLAYERS],
	//PlayerText:Tutorial[MAX_PLAYERS],
	//PlayerText:Step[MAX_PLAYERS][9],
	PlayerText:BusJob[MAX_PLAYERS],
	PlayerText:BusCheck[MAX_PLAYERS],
	PlayerText:DMVexam[MAX_PLAYERS],
	PlayerText:DMVcheck[MAX_PLAYERS],
	PlayerText:WantedText[MAX_PLAYERS],
	PlayerText:UndercoverText[MAX_PLAYERS],
	PlayerText:Reportss[MAX_PLAYERS],
	PlayerText:HUD[4][MAX_PLAYERS],
	PlayerText:RentCar[MAX_PLAYERS];

// ==================================================== Vehicles
new Copcar[33],
	Fbicar[17],
	LVpdcar[41],
	Ngcar[12],
	Vagosc[12],
	Govc[5],
	Ballasc[15],
	Grovec[13],
	Aztecasc[15],
	taxic[12],
	news[18],
	towcar[6],
	ambcars[11],
	garbage[11],
	bus[17],
	pizza[15],
	truck[19],
	rentls[10],
	rentlv[20],
	masinils[109],
	masinilv[40],
	thea[17],
	si[14],
	farm[14],
	helpercars[6],
	admincars[6];

// ==================================================== Global Variable
new Float:rx,
	Float:ry,
	Float:rz,
	objstore[128],
	cbjstore[128],
	giftboxobject[4],
	Text3D:giftbox3DText[4],
	ghour = 0,
	gminute = 0,
	gsecond = 0,
	dollah = 100000,
	realtime = 1,
	wotime = 15,
	levelcost = 28000,
	realchat = 1,
	timeshift = -1,
	shifthour,
	othtimer,
	checkafktimer,
	synctimer,
	unjailtimer,
	preparepaint1,
	preparepaint2,
	preparepaint3,
	preparepaint4,
	paintrun1,
	paintrun2,
	paintrun3,
	paintrun4,
	pnstimer,
	wantedicatimer,
	spectatetimer,
	productiontimer,
	savedatatimer,
	checkgastimer,
	checkvehinfotimer,
	stoppedvehtimer,
	cartimer,
	levelexp = 3,
	pickups,
	Float:TeleportDest[MAX_PLAYERS][3],
	Float:TelePos[MAX_PLAYERS][6];

	
// ==================================================== Veh Spawn Cariera
new Float:gRandomCariera[5][3] = {
{644.2669,858.9907,-42.6130},
{600.2870,864.6613,-42.9609},
{605.8127,932.8721,-40.6499},
{545.1246,907.7997,-42.8779},
{538.1450,843.6761,-41.9927}
};
	
// ==================================================== SunGlasses
new Float:SkinOffSet[312][7] = {
{0.098771, 0.030772, -0.000335, 85.342658, 84.122947, 4.236968 }, // - 0
{0.100766, 0.028630, -0.003521, 87.936676, 82.110870, 4.236968 }, // - 1
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 }, // - 2
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 3
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 4
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 5
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 6
{0.090066, 0.043458, -0.006523, 87.936676, 82.110870, 4.236968 }, // - 7
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 8
{0.070977, 0.028663, 0.000147, 81.164970, 92.128402, 4.236968 },  // - 9
{0.072317, 0.032179, -0.002934, 86.843269, 84.196006, 4.236968 }, // - 10
{0.072317, 0.035465, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 11
{0.072317, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 12
{0.076569, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 13
{0.091310, 0.049169, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 14
{0.073734, 0.006292, -0.002755, 86.843269, 84.196006, 4.236968 }, // - 15
{0.092845, 0.040331, 0.000183, 86.843269, 82.864280, 4.236968 },  // - 16
{0.088241, 0.030184, -0.000157, 86.843269, 82.864280, 4.236968 }, // - 17
{0.061677, 0.029596, -0.007398, 86.843269, 82.864280, 4.236968 }, // - 18
{0.079911, 0.029596, -0.002934, 86.843269, 82.864280, 4.236968 }, // - 19
{0.095079, 0.029596, -0.001718, 85.261871, 86.296562, 4.236968 }, // - 20
{0.093728, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968 }, // - 21
{0.079585, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968 }, // - 22
{0.090786, 0.041737, -0.005263, 85.261871, 81.636192, 4.236968 }, // - 23
{0.085247, 0.026941, -0.000317, 85.261871, 81.636192, 4.236968 }, // - 24
{0.081646, 0.031448, -0.001113, 89.393653, 81.665985, 4.236968 }, // - 25
{0.083700, 0.033814, -0.001960, 86.436462, 81.665985, 4.236968 }, // - 26
{0.092498, 0.037321, -0.001960, 86.436462, 85.568023, 4.236968 }, // - 27
{0.097068, 0.041360, -0.007881, 86.771400, 85.568023, 4.236968 }, // - 28
{0.083456, 0.050595, 0.001011, 86.771400, 77.201461, 4.236968 },  // - 29
{0.076983, 0.047168, -0.006161, 86.771400, 74.329719, 4.236968 }, // - 30
{0.083798, 0.042184, -0.001869, 86.771400, 83.181861, 4.236968 }, // - 31
{0.053021, -0.000587, -0.001869, 86.771400, 66.859710, 4.236968 },// - 32
{0.034386, 0.013324, -0.001869, 86.771400, 80.314460, 4.236968 }, // - 33
{0.104669, 0.037365, -0.001403, 86.771400, 87.178382, 4.236968 }, // - 34
{0.102659, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 35
{0.107638, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 36
{0.107638, 0.035879, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 37
{0.107638, 0.041106, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 38
{0.080326, 0.035634, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 39
{0.080326, 0.027371, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 40
{0.084617, 0.039613, -0.001620, 86.771400, 93.020492, 4.236968 }, // - 41
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 42
{0.040075, 0.025445, -0.000974, 86.771400, 92.964149, 4.236968 }, // - 43
{0.077369, 0.028469, -0.000974, 86.771400, 78.435791, 4.236968 }, // - 44
{0.064145, 0.028684, -0.000974, 86.771400, 84.762802, 4.236968 }, // - 45
{0.091993, 0.056559, -0.000974, 86.771400, 84.762802, 4.236968 }, // - 46
{0.084582, 0.051277, -0.005034, 86.771400, 84.762802, 4.236968 }, // - 47
{0.092182, 0.042095, -0.003533, 86.771400, 84.762802, 4.236968 }, // - 48
{0.086866, 0.032203, -0.001021, 86.771400, 84.762802, 4.236968 }, // - 49
{0.099350, 0.009422, -0.005899, 86.771400, 84.762802, 4.236968 }, // - 50
{0.099350, 0.030598, -0.005899, 86.771400, 84.762802, 4.236968 }, // - 51
{0.099350, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 52
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 53
{0.079123, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 54
{0.063159, 0.029641, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 55
{0.070293, 0.029641, -0.000570, 86.771400, 84.762802, 4.236968 }, // - 56
{0.111305, 0.045368, -0.000570, 86.771400, 84.458084, 4.236968 }, // - 57
{0.084901, 0.020965, -0.000570, 86.771400, 79.542411, 4.236968 }, // - 58
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 59
{0.090164, 0.044163, -0.004754, 86.771400, 79.542411, 4.236968 }, // - 60
{0.087151, 0.041447, -0.000885, 90.928329, 89.598678, 0.000000 }, // - 61
{0.094350, 0.041447, 0.005717, 90.928329, 89.598678, 0.000000 },  // - 62
{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000 }, // - 63
{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000 }, // - 64
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 65
{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000 },  // - 66
{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000 },  // - 67
{0.087317, 0.039646, -0.004032, 90.928329, 89.598678, 0.000000 }, // - 68
{0.074873, 0.039646, -0.003072, 90.928329, 89.598678, 0.000000 }, // - 69
{0.090391, 0.042364, 0.005494, 90.928329, 89.598678, 0.000000 },  // - 70
{0.090391, 0.022298, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 71
{0.090391, 0.039580, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 72
{0.090391, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 73
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 74
{0.083113, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 75
{0.072957, 0.028956, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 76
{0.069398, 0.039981, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 77
{0.105738, 0.010001, 0.004508, 90.928329, 79.030494, 0.000000 },  // - 78
{0.078264, 0.019668, 0.004508, 90.928329, 79.030494, 0.000000 },  // - 79
{0.087377, 0.022096, -0.001993, 90.928329, 79.030494, 0.000000 }, // - 80
{0.087377, 0.022096, -0.001635, 90.928329, 79.030494, 0.000000 }, // - 81
{0.100623, 0.043063, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 82
{0.092528, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 83
{0.102086, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 84
{0.081954, 0.041672, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 85
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 86
{0.077010, 0.046925, -0.003438, 90.928329, 91.590301, 0.000000 }, // - 87
{0.069952, 0.042635, -0.003438, 90.928329, 86.722587, 0.000000 }, // - 88
{0.093827, 0.019258, -0.003438, 90.928329, 86.722587, 0.000000 }, // - 89
{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 90
{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 91
{0.066464, 0.038135, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 92
{0.066464, 0.038135, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 93
{0.048124, 0.010598, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 94
{0.084997, 0.006773, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 95
{0.100076, 0.026633, -0.001690, 90.928329, 80.020179, 0.000000 }, // - 96
{0.061686, 0.027537, -0.001690, 90.928329, 80.020179, 0.000000 }, // - 97
{0.098318, 0.053993, -0.001690, 90.928329, 89.237678, 0.000000 }, // - 98
{0.098318, 0.033702, -0.001690, 90.928329, 89.237678, 0.000000 }, // - 99
{0.086149, 0.042526, -0.001690, 90.928329, 77.587478, 0.000000 }, // - 100
{0.081864, 0.030555, -0.001690, 90.928329, 78.145759, 0.000000 }, // - 101
{0.081864, 0.047914, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 102
{0.089607, 0.036717, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 103
{0.079655, 0.042021, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 104
{0.091779, 0.037620, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 105
{0.084179, 0.035251, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 106
{0.089387, 0.040297, -0.006006, 90.928329, 78.145759, 0.000000 }, // - 107
{0.081930, 0.030756, 0.001523, 90.928329, 78.145759, 0.000000 },  // - 108
{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000 }, // - 109
{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000 }, // - 110
{0.106601, 0.028021, -0.003537, 90.928329, 90.217376, 0.000000 }, // - 111
{0.096335, 0.015873, -0.003537, 90.928329, 90.217376, 0.000000 }, // - 112
{0.105827, 0.046620, -0.001395, 90.928329, 90.217376, 0.000000 }, // - 113
{0.097520, 0.044296, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 114
{0.097408, 0.043470, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 115
{0.092588, 0.049832, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 116
{0.081444, 0.037602, -0.003125, 90.928329, 90.217376, 0.000000 }, // - 117
{0.078678, 0.037602, -0.001816, 90.928329, 90.217376, 0.000000 }, // - 118
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 119
{0.089214, 0.029291, -0.000784, 90.928329, 84.624763, 0.000000 }, // - 120
{0.086825, 0.033424, -0.000784, 90.928329, 77.233818, 0.000000 }, // - 121
{0.082869, 0.030783, -0.000950, 90.928329, 77.233818, 0.000000 }, // - 122
{0.096117, 0.048957, -0.006245, 90.928329, 87.579650, 0.000000 }, // - 123
{0.103663, 0.040022, 0.000449, 90.928329, 87.579650, 0.000000 },  // - 124
{0.099326, 0.031202, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 125
{0.099326, 0.031132, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 126
{0.099326, 0.039279, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 127
{0.099326, 0.047422, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 128
{0.088817, 0.021210, 0.000730, 90.928329, 87.579650, 0.000000 },  // - 129
{0.025784, 0.028323, 0.000730, 90.928329, 59.394767, 0.000000 },  // - 130
{0.068455, 0.031841, -0.004470, 90.928329, 79.979003, 0.000000 }, // - 131
{0.012930, 0.008392, -0.004470, 90.928329, 72.129173, 0.000000 }, // - 132
{0.102457, 0.032260, -0.003338, 90.928329, 84.534217, 0.000000 }, // - 133
{0.085976, 0.014956, -0.003338, 90.928329, 80.308830, 0.000000 }, // - 134
{0.071574, 0.028186, -0.001588, 90.928329, 80.308830, 0.000000 }, // - 135
{0.085219, 0.016666, -0.000738, 90.928329, 80.308830, 0.000000 }, // - 136
{0.065114, 0.009318, -0.000738, 90.928329, 80.308830, 0.000000 }, // - 137
{0.066890, 0.040024, -0.000738, 90.928329, 87.341934, 0.000000 }, // - 138
{0.072037, 0.036141, -0.000702, 90.928329, 87.341934, 0.000000 }, // - 139
{0.069108, 0.042194, -0.000436, 90.928329, 87.341934, 0.000000 }, // - 140
{0.058717, 0.043547, -0.000436, 90.928329, 87.209770, 0.000000 }, // - 141
{0.104196, 0.039601, -0.005481, 90.928329, 87.209770, 0.000000 }, // - 142
{0.090929, 0.045881, -0.012780, 90.928329, 87.209770, 0.000000 }, // - 143
{0.098291, 0.042464, -0.006952, 90.928329, 83.081665, 0.000000 }, // - 144
{0.080087, 0.030122, 0.000606, 90.928329, 83.081665, 0.000000 },  // - 145
{0.093500, 0.030690, -0.001545, 90.928329, 83.081665, 0.000000 }, // - 146
{0.079566, 0.020138, 0.004838, 90.928329, 73.715591, 0.000000 },  // - 147
{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000 }, // - 148
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 149
{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000 }, // - 150
{0.083426, 0.032359, -0.005717, 90.928329, 88.295433, 0.000000 }, // - 151
{0.072349, 0.019623, -0.000747, 90.928329, 82.624351, 0.000000 }, // - 152
{0.075065, 0.015351, 0.006545, 90.928329, 71.041442, 0.000000 },  // - 153
{0.062227, 0.029731, -0.004938, 90.928329, 84.602760, 0.000000 }, // - 154
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 155
{0.079936, 0.049000, -0.000304, 90.928329, 82.926010, 0.000000 }, // - 156
{0.067550, 0.035686, -0.000017, 90.928329, 82.926010, 0.000000 }, // - 157
{0.090676, 0.039383, -0.001726, 90.928329, 88.667900, 0.000000 }, // - 158
{0.090676, 0.039383, -0.003532, 90.928329, 88.667900, 0.000000 }, // - 159
{0.098662, 0.017441, -0.001589, 90.928329, 88.667900, 0.000000 }, // - 160
{0.105388, 0.038409, 0.003155, 90.928329, 88.667900, 0.000000 },  // - 161
{0.097415, 0.036904, -0.000525, 90.928329, 88.667900, 0.000000 }, // - 162
{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000 }, // - 163
{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000 }, // - 164
{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000 },  // - 165
{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000 },  // - 166
{0.095996, 0.038787, 0.000484, 90.928329, 84.315711, 0.000000 },  // - 167
{0.089094, 0.034001, -0.006451, 90.928329, 84.315711, 0.000000 }, // - 168
{0.075700, 0.028082, -0.006451, 90.928329, 84.315711, 0.000000 }, // - 169
{0.093751, 0.041968, -0.005545, 90.928329, 84.315711, 0.000000 }, // - 170
{0.090124, 0.031055, -0.000505, 90.928329, 84.315711, 0.000000 }, // - 171
{0.066033, 0.032915, -0.002713, 90.928329, 84.315711, 0.000000 }, // - 172
{0.088287, 0.045350, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 173
{0.087750, 0.042129, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 174
{0.092384, 0.039294, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 175
{0.097661, 0.039065, -0.006344, 90.928329, 80.736480, 0.000000 }, // - 176
{0.097114, 0.039641, -0.006692, 90.928329, 80.736480, 0.000000 }, // - 177
{0.069354, 0.039641, -0.000474, 90.928329, 80.736480, 0.000000 }, // - 178
{0.091414, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000 }, // - 179
{0.094914, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000 }, // - 180
{0.117232, 0.033217, -0.001099, 90.928329, 82.396362, 0.000000 }, // - 181
{0.082569, 0.032748, -0.003248, 90.928329, 87.394371, 0.000000 }, // - 182
{0.095527, 0.027237, -0.001960, 90.928329, 86.443649, 0.000000 }, // - 183
{0.095527, 0.040994, -0.006878, 90.928329, 86.443649, 0.000000 }, // - 184
{0.085663, 0.030601, -0.002345, 90.928329, 81.496513, 0.000000 }, // - 185
{0.085663, 0.030601, -0.001015, 90.928329, 81.496513, 0.000000 }, // - 186
{0.076527, 0.027211, 0.008500, 90.928329, 74.401092, 0.000000 },  // - 187
{0.096669, 0.032578, 0.001662, 90.928329, 83.502502, 0.000000 },  // - 188
{0.098753, 0.032129, -0.001659, 90.928329, 90.153724, 0.000000 }, // - 189
{0.092821, 0.035572, -0.001659, 90.928329, 90.153724, 0.000000 }, // - 190
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 191
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 192
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 193
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 194
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 195
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 196
{0.100630, 0.020568, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 197
{0.077905, 0.028523, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 198
{0.099095, 0.022463, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 199
{0.103182, 0.031106, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 200
{0.078426, 0.038546, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 201
{0.101092, 0.035797, -0.002997, 89.675476, 82.081153, 0.000000 }, // - 202
{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000 }, // - 203
{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000 }, // - 204
{0.092969, 0.027782, -0.002959, 89.675476, 84.463294, 0.000000 }, // - 205
{0.105109, 0.036128, -0.000471, 89.675476, 84.463294, 0.000000 }, // - 206
{0.066892, 0.024410, -0.002792, 89.675476, 84.463294, 0.000000 }, // - 207
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 208
{0.084046, 0.013608, -0.002792, 89.675476, 81.667831, 0.000000 }, // - 209
{0.084046, 0.013608, -0.001034, 89.675476, 81.667831, 0.000000 }, // - 210
{0.067610, 0.033777, -0.001034, 89.675476, 85.214485, 0.000000 }, // - 211
{0.094159, 0.020717, 0.000715, 89.675476, 85.214485, 0.000000 },  // - 212
{0.098744, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 213
{0.068755, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 214
{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 215
{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 216
{0.095765, 0.030034, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 217
{0.085486, 0.039427, -0.003311, 89.675476, 85.214485, 0.000000 }, // - 218
{0.068874, 0.027850, -0.001021, 89.675476, 85.214485, 0.000000 }, // - 219
{0.052931, 0.050390, -0.002062, 89.675476, 88.113647, 0.000000 }, // - 220
{0.094479, 0.034432, 0.000875, 89.675476, 83.572830, 0.000000 },  // - 221
{0.094479, 0.034432, -0.000596, 89.675476, 83.572830, 0.000000 }, // - 222
{0.094479, 0.062073, -0.003098, 89.675476, 83.572830, 0.000000 }, // - 223
{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 224
{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 225
{0.072095, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 226
{0.110619, 0.043037, -0.001466, 89.675476, 86.927627, 0.000000 }, // - 227
{0.099446, 0.050772, -0.001466, 89.675476, 85.103805, 0.000000 }, // - 228
{0.078635, 0.023680, -0.000275, 89.675476, 73.445220, 0.000000 }, // - 229
{0.043357, 0.028726, -0.000275, 89.675476, 73.445220, 0.000000 }, // - 230
{0.092488, 0.049972, -0.000275, 89.675476, 88.981941, 0.000000 }, // - 231
{0.092488, 0.016739, -0.000275, 89.675476, 88.981941, 0.000000 }, // - 232
{0.071677, 0.037055, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 233
{0.082745, 0.004209, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 234
{0.057909, 0.021331, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 235
{0.079016, 0.021331, -0.000419, 89.675476, 77.678733, 0.000000 }, // - 236
{0.074572, 0.021331, -0.000419, 89.675476, 84.527442, 0.000000 }, // - 237
{0.074572, 0.038346, -0.001500, 89.675476, 84.527442, 0.000000 }, // - 238
{0.111645, 0.011549, 0.006237, 89.675476, 84.527442, 0.000000 },  // - 239
{0.090766, 0.044221, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 240
{0.069491, 0.049021, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 241
{0.059706, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 242
{0.065242, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 243
{0.065242, 0.051077, -0.001103, 89.675476, 89.461883, 0.000000 }, // - 244
{0.082393, 0.038233, 0.000410, 89.675476, 89.461883, 0.000000 },  // - 245
{0.079338, 0.044859, -0.002535, 89.675476, 89.461883, 0.000000 }, // - 246
{0.101566, 0.037019, 0.000750, 89.675476, 83.514060, 0.000000 },  // - 247
{0.091887, 0.047776, -0.000040, 89.675476, 83.514060, 0.000000 }, // - 248
{0.089745, 0.044044, 0.004071, 89.675476, 83.514060, 0.000000 },  // - 249
{0.094214, 0.044044, -0.007274, 89.675476, 83.514060, 0.000000 }, // - 250
{0.072282, 0.044044, -0.001468, 89.675476, 90.444763, 0.000000 }, // - 251
{0.095764, 0.034224, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 252
{0.087454, 0.026208, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 253
{0.099198, 0.037362, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 254
{0.070845, 0.019943, 0.003505, 89.675476, 73.529716, 0.000000 },  // - 255
{0.065373, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000 }, // - 256
{0.070077, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000 }, // - 257
{0.089536, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000 },  // - 258
{0.084822, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000 },  // - 259
{0.093009, 0.031491, -0.001568, 89.675476, 83.002151, 0.000000 }, // - 260
{0.093009, 0.015023, -0.001477, 89.675476, 83.002151, 0.000000 }, // - 261
{0.076580, 0.039782, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 262
{0.076580, 0.028967, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 263
{0.075424, 0.043059, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 264
{0.089655, 0.021726, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 265
{0.096792, 0.014114, -0.003062, 89.675476, 85.166038, 0.000000 }, // - 266
{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 267
{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 268
{0.102252, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 269
{0.102252, 0.024989, 0.000529, 89.675476, 85.166038, 0.000000 },  // - 270
{0.096134, 0.025462, 0.000529, 89.675476, 79.225112, 0.000000 },  // - 271
{0.099226, 0.032663, 0.000529, 89.675476, 79.225112, 0.000000 },  // - 272
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 273
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 274
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 275
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 276
{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 277
{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 278
{0.087652, 0.059379, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 279
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 280
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 281
{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 282
{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 283
{0.090877, 0.053674, 0.009879, 89.675476, 88.636062, 0.000000 },  // - 284
{0.104320, 0.041487, 0.008021, 89.675476, 88.636062, 0.000000 },  // - 285
{0.087062, 0.021779, -0.003307, 89.675476, 88.636062, 0.000000 }, // - 286
{0.073173, 0.048856, 0.005337, 89.675476, 92.561180, 0.000000 },  // - 287
{0.090294, 0.027592, -0.003497, 89.675476, 92.561180, 0.000000 }, // - 288
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 289
{0.086562, 0.042698, -0.000612, 89.675476, 92.561180, 0.000000 }, // - 290
{0.096768, 0.039233, -0.000612, 89.675476, 83.550270, 0.000000 }, // - 291
{0.079939, 0.020731, -0.005162, 89.675476, 83.550270, 0.000000 }, // - 292
{0.097107, 0.027826, -0.005162, 89.675476, 88.505996, 0.000000 }, // - 293
{0.097107, 0.037636, 0.000618, 89.675476, 88.505996, 0.000000 },  // - 294
{0.079985, 0.035006, -0.000826, 89.675476, 87.533462, 0.000000 }, // - 295
{0.088445, 0.024209, -0.002076, 89.675476, 73.285072, 0.000000 }, // - 296
{0.094039, 0.035411, 0.000490, 89.675476, 84.277572, 0.000000 },  // - 297
{0.099553, 0.024683, -0.002919, 89.675476, 84.277572, 0.000000 }, // - 298
{0.099553, 0.044356, -0.000285, 89.675476, 84.277572, 0.000000 },  // - 299
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 300
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 301
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 302
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 303
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 304
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 305
{0.071677, 0.037055, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 306
{0.071677, 0.037055, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 307
{0.071677, 0.037055, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 308
{0.071677, 0.037055, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 309
{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 310
{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000 } // - 311

};

// ==================================================== Hats
new Float:SkinCaps[311][6] = {
{0.135928, 0.002891, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 0
{0.136207, 0.006102, -0.013858, 0.612963, 0.000000, 0.000000}, //Skin - 1
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 2
{0.167425, -0.006185, -0.004779, 0.612963, 0.000000, 0.000000}, //Skin - 3
{0.188546, -0.006185, -0.011507, 0.612963, 0.000000, 0.000000}, //Skin - 4
{0.188546, -0.006185, -0.011507, 0.612963, 0.000000, 0.000000}, //Skin - 5
{0.155785, 0.005998, -0.014326, 0.000000, 0.000000, 347.188201},//Skin - 6
{0.157787, 0.012994, -0.014590, 0.612963, 0.000000, 0.000000},  //Skin - 7
{0.131067, -0.013737, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 8
{0.118922, -0.015322, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 9
{0.125779, -0.001459, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 10
{0.129249, -0.014101, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 11
{0.139572, -0.003642, -0.002145, 0.612963, 0.000000, 10.335063}, //Skin - 12
{0.161076, -0.015624, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 13
{0.112204, -0.023196, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 14
{0.104552, -0.015122, -0.005275, 0.612963, 2.307199, 357.920410}, //Skin - 15
{0.150166, -0.008718, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 16
{0.149627, 0.002943, -0.005275, 0.612963, 2.307199, 357.920410}, //Skin - 17
{0.105319, 0.003517, -0.005275, 0.612963, 2.307199, 357.920410}, //Skin - 18
{0.153609, -0.003207, -0.007717, 0.000000, 0.000000, 357.608825},//Skin - 19
{0.143831, 0.001813, -0.010588, 0.000000, 0.000000, 357.608825}, //Skin - 20
{0.154598, -0.003549, -0.013304, 0.000000, 0.000000, 0.000000},  //Skin - 21
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 22
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   //Skin - 23
{0.127352, 0.009877, -0.006845, 0.726156, 359.666778, 348.825012},//Skin - 24
{0.124666, -0.029373, -0.006845, 0.726156, 359.666778, 329.940704},//Skin - 25
{0.152029, -0.018331, -0.003139, 0.000000, 358.344604, 348.467559}, //Skin - 26
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 27
{0.128768, 0.041474, -0.007667, 0.726156, 359.666778, 355.429199}, //Skin - 28
{0.166457, -0.006228, -0.012669, 0.726156, 359.666778, 354.612152},//Skin - 29
{0.155160, -0.022985, -0.011249, 0.000000, 358.344604, 348.467559}, //Skin - 30
{0.096077, -0.023233, -0.009101, 0.726156, 359.666778, 343.094055},//Skin - 31
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 32
{0.094003, -0.022985, -0.011249, 0.000000, 358.344604, 348.467559}, //Skin - 33
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 34
{0.155565, 0.014400, -0.009101, 0.726156, 359.666778, 6.131487},   //Skin - 35
{0.156485, 0.013641, -0.009101, 0.726156, 359.666778, 6.131487},   //Skin - 36
{0.144815, 0.013641, -0.009374, 0.726156, 359.666778, 350.562103}, //Skin - 37
{0.113347, -0.006682, -0.009374, 0.726156, 359.666778, 350.562103},//Skin - 38
{0.147231, -0.014448, -0.004786, 0.726156, 359.666778, 357.303253},//Skin - 39
{0.133873, -0.019703, -0.000058, 0.000000, 358.344604, 348.467559},//Skin - 40
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 41
{0.082446, 0.004202, -0.004786, 0.726156, 359.666778, 357.303253}, //Skin - 42
{0.104901, 0.004013, -0.004786, 0.726156, 359.666778, 342.983184}, //Skin - 43
{0.116172, -0.001954, -0.004786, 0.726156, 359.666778, 357.100677},//Skin - 44
{0.153321, 0.025744, -0.008666, 0.726156, 359.666778, 10.704365},  //Skin - 45
{0.160556, 0.007781, -0.010438, 0.726156, 359.666778, 0.991972},   //Skin - 46
{0.179010, -0.035613, -0.010438, 0.726156, 359.666778, 347.956573},//Skin - 47
{0.123363, 0.008694, -0.010438, 0.726156, 359.666778, 347.956573}, //Skin - 48
{0.167061, -0.037899, -0.010438, 0.726156, 359.666778, 347.775817},//Skin - 49
{0.164100, -0.040816, -0.011624, 357.030151, 358.344604, 342.811187},//Skin - 50
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 51
{0.129040, 0.016069, -0.010438, 0.726156, 359.666778, 347.775817}, //Skin - 52
{0.129040, 0.016069, -0.006084, 0.726156, 359.666778, 347.775817}, //Skin - 53
{0.137743, -0.016369, -0.011731, 0.726156, 359.666778, 355.812011},//Skin - 54
{0.137743, -0.016369, -0.011731, 0.726156, 359.666778, 355.812011},//Skin - 55
{0.174539, -0.000662, -0.007289, 0.726156, 359.666778, 352.847045},//Skin - 56
{0.109382, -0.002955, -0.007289, 0.726156, 359.666778, 352.847045},//Skin - 57
{0.152276, -0.029331, -0.008357, 0.726156, 359.666778, 332.070648},//Skin - 58
{0.129599, -0.019172, -0.012204, 0.726156, 359.666778, 332.070648},//Skin - 59
{0.138485, -0.012405, -0.011567, 357.030151, 358.344604, 342.811187},//Skin - 60
{0.130350, 0.000897, -0.000747, 0.726156, 359.666778, 332.070648}, //Skin - 61
{0.150659, -0.035485, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 62
{0.119340, -0.006483, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 63
{0.110634, 0.009623, -0.011624, 357.030151, 358.344604, 342.811187},//Skin - 64
{0.133055, -0.000092, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 65
{0.129061, -0.006499, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 66
{0.127292, 0.010318, -0.006299, 0.726156, 359.666778, 341.617431}, //Skin - 67
{0.138791, -0.025311, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 68
{0.148132, 0.003970, -0.002304, 0.726156, 359.666778, 340.120025}, //Skin - 69
{0.129753, 0.006469, -0.006376, 0.726156, 359.666778, 354.029815}, //Skin - 70
{0.125663, 0.015428, -0.006376, 0.726156, 359.666778, 354.029815}, //Skin - 71
{0.125663, 0.015428, -0.009030, 0.726156, 359.666778, 354.029815}, //Skin - 72
{0.117674, 0.014567, -0.011567, 357.030151, 358.344604, 342.811187}, //Skin - 73
{0.135729, -0.018656, -0.013554, 0.000000, 0.000000, 337.893737},  //Skin - 74
{0.141888, -0.042810, -0.006206, 0.000000, 0.000000, 337.893737},  //Skin - 75
{0.134968, -0.020112, -0.003604, 357.030151, 358.344604, 342.811187},//Skin - 76
{0.124348, -0.017813, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 77
{0.124348, 0.000583, -0.006206, 0.000000, 0.000000, 346.786865},   //Skin - 78
{0.102654, -0.010906, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 79
{0.102654, -0.010906, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 81
{0.167928, 0.031601, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 82
{0.159998, 0.023540, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 83
{0.169630, 0.019315, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 84
{0.163052, -0.039735, -0.006206, 0.000000, 0.000000, 341.169891},  //Skin - 85
{0.122285, -0.020112, -0.003604, 357.030151, 358.344604, 342.811187},//Skin - 86
{0.144811, -0.007521, -0.014207, 0.000000, 0.000000, 341.169891},  //Skin - 87
{0.129932, -0.007521, -0.007289, 0.000000, 0.000000, 341.169891},  //Skin - 88
{0.151147, -0.038608, -0.009597, 0.000000, 0.000000, 343.694549},  //Skin - 89
{0.147416, -0.031632, -0.009597, 0.000000, 0.000000, 343.694549},  //Skin - 90
{0.157728, -0.009677, -0.009597, 0.000000, 0.000000, 0.934848},    //Skin - 91
{0.136577, -0.015592, -0.009597, 0.000000, 0.000000, 341.013824},  //Skin - 92
{0.143821, 0.000631, -0.008385, 0.000000, 0.000000, 358.808868},   //Skin - 93
{0.100521, 0.003151, -0.007624, 0.000000, 0.000000, 358.808868},   //Skin - 94
{0.122833, -0.006031, -0.007624, 0.000000, 0.000000, 358.808868},  //Skin - 95
{0.145296, 0.003959, -0.007624, 0.000000, 0.000000, 358.808868},   //Skin - 96
{0.141658, 0.016474, -0.007624, 0.000000, 0.000000, 9.683902},     //Skin - 97
{0.145276, -0.002846, -0.007624, 0.000000, 0.000000, 340.239593},  //Skin - 98
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 99
{0.161745, -0.010244, -0.007624, 0.000000, 0.000000, 351.499267}, //Skin - 100
{0.151006, -0.030994, -0.005366, 0.000000, 0.000000, 340.428894}, //Skin - 101
{0.147111, 0.003794, -0.012433, 0.000000, 0.000000, 358.069244},  //Skin - 102
{0.154213, -0.052348, -0.003511, 356.299316, 0.000000, 336.751647},//Skin - 103
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 104
{0.153814, -0.039614, -0.006756, 356.299316, 0.000000, 336.930084},//Skin - 105
{0.153638, -0.039614, -0.013630, 356.299316, 0.000000, 336.930084},//Skin - 106
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 107
{0.140473, -0.026201, -0.000469, 0.390689, 355.405181, 335.554260},//Skin - 108
{0.140904, -0.007227, -0.008114, 0.390689, 355.405181, 335.554260},//Skin - 109
{0.140904, -0.007227, -0.008114, 0.390689, 355.405181, 335.554260},//Skin - 110
{0.134860, 0.001485, -0.010145, 0.390689, 358.632415, 347.730010},//Skin - 111
{0.124823, 0.001485, -0.009402, 0.390689, 358.632415, 347.730010},//Skin - 112
{0.157999, -0.012039, -0.006082, 0.390689, 358.632415, 347.730010},//Skin - 113
{0.144906, -0.005139, -0.009654, 0.390689, 358.632415, 336.830108},//Skin - 114
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 116
{0.152829, -0.009735, -0.009654, 0.390689, 358.632415, 336.830108},//Skin - 117
{0.113804, 0.009252, -0.009654, 0.390689, 358.632415, 345.244384},//Skin - 118
{0.113804, 0.009252, -0.009654, 0.390689, 358.632415, 345.244384},//Skin - 119
{0.144202, -0.021273, -0.005915, 357.030151, 358.344604, 342.811187},//Skin - 120
{0.154275, -0.037484, -0.009654, 0.390689, 358.632415, 337.676666},//Skin - 121
{0.155674, -0.015613, -0.004339, 0.390689, 358.632415, 350.571228},//Skin - 122
{0.136433, -0.019181, -0.004339, 0.390689, 358.632415, 340.261840},//Skin - 123
{0.163258, -0.032386, -0.013128, 0.390689, 358.632415, 340.261840},//Skin - 124
{0.153242, -0.029651, -0.002434, 0.390689, 358.632415, 333.367614},//Skin - 125
{0.127978, -0.001961, -0.008867, 0.390689, 358.632415, 347.279052},//Skin - 126
{0.160856, -0.025356, -0.004428, 0.390689, 358.632415, 347.279052},//Skin - 127
{0.150266, -0.009032, -0.006781, 0.390689, 358.632415, 347.223754},//Skin - 128
{0.158060, 0.022907, -0.006781, 0.390689, 358.632415, 349.378875},//Skin - 129
{0.111739, 0.012673, -0.006781, 0.390689, 358.632415, 349.378875},//Skin - 130
{0.091638, -0.011600, -0.008686, 0.390689, 358.632415, 336.674468},//Skin - 131
{0.125788, 0.000635, -0.005915, 0.390689, 358.632415, 343.007751},//Skin - 132
{0.031324, -0.014154, -0.005915, 0.390689, 358.632415, 343.007751},//Skin - 133
{0.142321, 0.015417, -0.005915, 0.243191, 358.632415, 350.329559},//Skin - 133
{0.128780, -0.030750, 0.006687, 173.184967, 358.632415, 27.422966},//Skin - 134
{0.115882, -0.004931, -0.003807, 358.837646, 358.632415, 346.206237},//Skin - 135
{0.127531, -0.008916, -0.003807, 358.837646, 358.632415, 346.206237},//Skin - 136
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 137
{0.148992, -0.017748, -0.006509, 358.837646, 358.632415, 350.742156},//Skin - 138
{0.148992, -0.017748, -0.006509, 358.837646, 358.632415, 350.742156},//Skin - 139
{0.147315, 0.001708, -0.006509, 358.837646, 358.632415, 354.390045},//Skin - 140
{0.144315, -0.013571, -0.006509, 358.837646, 358.632415, 354.390045},//Skin - 141
{0.144315, -0.002729, -0.010357, 358.837646, 358.632415, 354.390045},//Skin - 142
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 143
{0.177516, -0.070868, -0.009114, 358.837646, 358.632415, 331.679321},//Skin - 144
{0.139578, -0.008750, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 145
{0.139578, -0.014406, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 146
{0.115592, -0.010754, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 147
{0.150735, -0.000459, -0.004405, 358.837646, 358.632415, 9.362450},//Skin - 148
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 149
{0.149485, -0.008709, -0.006168, 358.837646, 358.632415, 2.276566},//Skin - 150
{0.168162, -0.009708, -0.012160, 359.504821, 4.442328, 355.348114},//Skin - 151
{0.156369, -0.024521, -0.012160, 359.504821, 0.415596, 355.348114},//Skin - 152
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 153
{0.119297, -0.016080, -0.010776, 359.504821, 0.415596, 341.522827},//Skin - 154
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 155
{0.172295, -0.065549, -0.007187, 359.504821, 0.415596, 336.175567},//Skin - 156
{0.126340, -0.030764, -0.007187, 359.504821, 0.415596, 336.175567},//Skin - 157
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 158
{0.154280, 0.002166, -0.010436, 359.504821, 0.415596, 357.792144},//Skin - 159
{0.121469, -0.007383, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 160
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 161
{0.139495, -0.007383, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 162
{0.113212, -0.005302, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 163
{0.120208, 0.003533, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 164
{0.135111, 0.005091, -0.006407, 359.504821, 0.415596, 352.954559},//Skin - 165
{0.122118, 0.005091, -0.006407, 359.504821, 0.415596, 352.954559},//Skin - 166
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 167
{0.125229, 0.005091, -0.013084, 359.504821, 0.415596, 352.954559},//Skin - 168
{0.153451, -0.018119, -0.013276, 359.504821, 0.415596, 358.219451},//Skin - 169
{0.141395, -0.009131, -0.013276, 359.504821, 0.415596, 347.866027},//Skin - 170
{0.157631, -0.028753, -0.006450, 359.504821, 0.415596, 339.935516},//Skin - 171
{0.152687, -0.027057, -0.007731, 359.504821, 0.415596, 344.054809},//Skin - 172
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 173
{0.165146, 0.015393, -0.007731, 359.504821, 0.415596, 344.001678},//Skin - 174
{0.162788, -0.019696, -0.007731, 359.504821, 0.415596, 344.001678},//Skin - 175
{0.157728, -0.027188, -0.012891, 359.504821, 0.415596, 345.804748},//Skin - 176
{0.187507, 0.010472, -0.012891, 359.504821, 0.415596, 12.315887},//Skin - 177
{0.153901, -0.027720, -0.007884, 359.504821, 0.415596, 344.553527},//Skin - 178
{0.137445, -0.009757, -0.012987, 359.504821, 0.415596, 344.553527},//Skin - 179
{0.173041, -0.006323, -0.012987, 359.504821, 0.415596, 3.267552},//Skin - 180
{0.143467, 0.016897, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 181
{0.114480, 0.006202, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 182
{0.114480, 0.008813, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 183
{0.128122, -0.012152, -0.013144, 359.504821, 0.415596, 336.326538},//Skin - 184
{0.156171, 0.007268, -0.013144, 359.504821, 0.415596, 10.805211},//Skin - 185
{0.156409, -0.034861, -0.007927, 359.504821, 0.415596, 336.978668},//Skin - 186
{0.118034, -0.024105, -0.002947, 359.504821, 0.415596, 336.978668},//Skin - 187
{0.128686, -0.029632, -0.002947, 358.201873, 0.415596, 329.325042},//Skin - 188
{0.172639, -0.026749, -0.012705, 358.201873, 0.415596, 349.092590},//Skin - 189
{0.180897, -0.026749, -0.007224, 358.201873, 0.415596, 349.092590},//Skin - 190
{0.180897, -0.026749, -0.007224, 358.201873, 0.415596, 349.092590},//Skin - 191
{0.178725, -0.010278, -0.007224, 358.201873, 0.415596, 354.053405},//Skin - 192
{0.172020, -0.010278, -0.010734, 358.201873, 0.415596, 354.053405},//Skin - 193
{0.172020, -0.010278, -0.010734, 358.201873, 0.415596, 354.053405},//Skin - 194
{0.176089, -0.032526, -0.005110, 358.201873, 0.415596, 341.814422},//Skin - 195
{0.118042, 0.007002, -0.005110, 358.201873, 0.415596, 341.814422},//Skin - 196
{0.143840, -0.042712, -0.007556, 358.201873, 0.415596, 341.814422},//Skin - 197
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 198
{0.148060, -0.032384, -0.009754, 358.201873, 0.415596, 333.484924},//Skin - 199
{0.148060, -0.032384, -0.009754, 358.201873, 0.415596, 333.484924},//Skin - 200
{0.140799, 0.025145, -0.009754, 358.201873, 0.415596, 5.040688},//Skin - 201
{0.140799, 0.015851, -0.009754, 358.201873, 0.415596, 349.796478},//Skin - 202
{0.140799, -0.004372, -0.013685, 358.201873, 0.415596, 349.796478},//Skin - 203
{0.154274, 0.006245, -0.013685, 358.201873, 0.415596, 2.035465},//Skin - 204
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 205
{0.154274, 0.016669, -0.013685, 358.201873, 0.415596, 2.035465},//Skin - 206
{0.106604, 0.004805, -0.011840, 358.201873, 0.415596, 2.035465},//Skin - 207
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 208
{0.148378, -0.003807, -0.011840, 358.201873, 0.415596, 2.035465},//Skin - 209
{0.113854, 0.001969, -0.011840, 358.201873, 0.415596, 343.826263},//Skin - 210
{0.149539, -0.028623, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 211
{0.104024, -0.014549, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 212
{0.145820, -0.029160, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 213
{0.148646, -0.008515, -0.009621, 358.201873, 0.415596, 1.360260},//Skin - 214
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 215
{0.148646, -0.005935, -0.004058, 358.201873, 0.415596, 1.360260},//Skin - 216
{0.148646, -0.015611, -0.004058, 358.201873, 0.415596, 340.374938},//Skin - 217
{0.133952, -0.030138, -0.009880, 358.201873, 0.415596, 340.374938},//Skin - 218
{0.140503, -0.033425, -0.005693, 358.201873, 0.415596, 340.374938},//Skin - 219
{0.114608, 0.009020, -0.009135, 358.201873, 0.415596, 352.932006},//Skin - 220
{0.186516, -0.044762, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 221
{0.186516, -0.044762, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 222
{0.179908, -0.010779, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 223
{0.156689, -0.015437, -0.009135, 358.201873, 0.415596, 352.741638},//Skin - 224
{0.156689, -0.015437, -0.009135, 358.201873, 0.415596, 352.741638},//Skin - 225
{0.134990, -0.034685, -0.009135, 358.201873, 0.415596, 340.812927},//Skin - 226
{0.151760, 0.002680, -0.009135, 358.201873, 0.415596, 340.812927},//Skin - 227
{0.167410, -0.028664, -0.009135, 358.201873, 0.415596, 340.250427},//Skin - 228
{0.127699, -0.015571, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 229
{0.100555, -0.007753, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 230
{0.126940, 0.016886, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 231
{0.132949, -0.017515, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 232
{0.146124, -0.008425, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 233
{0.125714, -0.021018, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 234
{0.084982, -0.009809, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 235
{0.114669, -0.005190, -0.008594, 358.201873, 0.415596, 351.301177},//Skin - 236
{0.123264, -0.014946, -0.008594, 358.201873, 0.415596, 351.301177},//Skin - 237
{0.146656, -0.023925, -0.006749, 358.201873, 0.415596, 334.356781},//Skin - 238
{0.133769, -0.007373, -0.006749, 358.201873, 0.415596, 343.105895},//Skin - 239
{0.165378, -0.020173, -0.005869, 358.201873, 0.415596, 348.352233},//Skin - 240
{0.143331, -0.133577, -0.011472, 358.201873, 0.415596, 312.328857},//Skin - 241
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 242
{0.098602, 0.002084, -0.011472, 358.201873, 0.415596, 348.195495},//Skin - 243
{0.124240, -0.011682, -0.006423, 358.201873, 0.415596, 341.555999},//Skin - 244
{0.158155, -0.044311, -0.005439, 358.201873, 0.415596, 336.024902},//Skin - 245
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 246
{0.164307, -0.040974, -0.006797, 358.201873, 0.415596, 337.067047},//Skin - 247
{0.191578, -0.040435, -0.010605, 358.201873, 0.415596, 340.908203},//Skin - 248
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 249
{0.135208, -0.015243, -0.011916, 358.201873, 0.415596, 340.908203},//Skin - 250
{0.134272, -0.027377, -0.006035, 358.201873, 0.415596, 333.416168},//Skin - 251
{0.158813, -0.038977, -0.006035, 358.201873, 0.415596, 336.013519},//Skin - 252
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 253
{0.165106, -0.048880, -0.009719, 358.201873, 0.415596, 331.050933},//Skin - 254
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 255
{0.142586, 0.020829, -0.008549, 358.201873, 0.415596, 2.765411},//Skin - 256
{0.134018, -0.024462, -0.008549, 358.201873, 0.415596, 339.642486},//Skin - 257
{0.147750, -0.042854, -0.008114, 0.951334, 0.415596, 330.441131},//Skin - 258
{0.147750, -0.042854, -0.008114, 0.951334, 0.415596, 330.441131},//Skin - 259
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 260
{0.134710, 0.006798, -0.008114, 358.188964, 0.415596, 352.703582},//Skin - 261
{0.111691, 0.006798, -0.008114, 358.188964, 0.415596, 352.703582},//Skin - 262
{0.146077, -0.005195, -0.008114, 358.188964, 0.415596, 3.866970},//Skin - 263
{0.135858, -0.157842, -0.008114, 358.188964, 0.415596, 314.852203},//Skin - 264
{0.127964, 0.000132, -0.008114, 358.188964, 0.415596, 352.699432},//Skin - 265
{0.127964, -0.002646, -0.008114, 358.188964, 0.415596, 352.699432},//Skin - 266
{0.132329, -0.014261, -0.007384, 1.504234, 0.415596, 352.699432},//Skin - 267
{0.145951, -0.043442, -0.010053, 1.504234, 0.415596, 320.469390},//Skin - 268
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 269
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 270
{0.141851, -0.034538, -0.010580, 1.504234, 0.415596, 340.349456},//Skin - 271
{0.136473, -0.057088, -0.008204, 1.504234, 0.415596, 318.134399},//Skin - 272
{0.140332, -0.013011, -0.004432, 354.106964, 357.498840, 352.802062}, //Skin - 273
{0.124270, 0.003252, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 274
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 275
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 276
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 277
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 278
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 279
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 280
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 281
{0.140515, 0.009018, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 282
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 283
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 284
{0.189940, -0.004297, 0.001481, 354.106964, 357.498840, 352.802062},//Skin - 285
{0.140515, 0.001933, -0.008204, 1.504234, 0.415596, 346.744995}, //Skin - 286
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 287
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 288
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 289
{0.128789, -0.014062, -0.007850, 1.504234, 0.415596, 340.341094},//Skin - 290
{0.158929, -0.027358, -0.010655, 1.504234, 0.415596, 337.298858},//Skin - 291
{0.113309, -0.012434, -0.010655, 1.504234, 0.415596, 337.298858},//Skin - 292
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 293
{0.158438, -0.023891, -0.007217, 1.504234, 0.415596, 337.298858},//Skin - 294
{0.145000, -0.032054, -0.007217, 1.504234, 0.415596, 336.385589},//Skin - 295
{0.139293, -0.069554, -0.010619, 1.504234, 0.415596, 320.746429},//Skin - 296
{0.148252, -0.066463, -0.010619, 1.504234, 0.415596, 320.729705},//Skin - 297
{0.126423, -0.066463, -0.010619, 1.504234, 0.415596, 320.729705},//Skin - 298
{0.144949, -0.040691, -0.008599, 1.504234, 0.415596, 320.729705},//Skin - 299
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 300
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 301
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 302
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 303
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 304
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 305
{0.146124, -0.008425, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 306
{0.146124, -0.008425, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 307
{0.146124, -0.008425, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 308
{0.146124, -0.008425, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 309
{0.140515, 0.009018, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 310
{0.140515, 0.009018, -0.008204, 1.504234, 0.415596, 346.744995} //Skin - 311

};

// ==================================================== Pizza Boy Job
new Float:gRandomPizza[30][3] = {
{1886.8344,-1116.9644,25.2734},
{2435.8706,-1303.3206,24.7403},
{2330.0266,-1681.6777,14.4268},
{2807.9863,-1179.1047,25.3741},
{2192.8167,-1003.7396,62.6182},
{2015.1249,-1703.4521,13.6904},
{256.2383,-1365.6805,53.1094},
{1496.9115,-690.0555,94.7500},
{1181.7395,-1074.4592,31.6719},
{206.7339,-1771.1189,4.2873},
{298.8037,-1155.8375,80.9099},
{1033.7893,-809.8940,101.8516},
{2483.3259,-1997.9877,13.8343},
{1873.7358,-2020.6090,13.5469},
{650.3296,-1619.5085,15.0000},
{2257.5620,733.0655,11.4609},
{1935.6852,739.5255,10.8203},
{2787.9856,2223.3850,14.6615},
{2625.0615,2016.8232,10.8203},
{1599.3604,2147.3357,11.4609},
{1025.9944,1975.8160,11.3449},
{1703.6294,2694.0879,10.8203},
{1972.5380,927.4847,10.8203},
{1938.6154,2184.8523,10.8203},
{1682.1293,1913.6169,10.8203},
{988.3104,1879.0475,11.3594},
{1458.3400,2523.8979,10.8203},
{2484.4036,1528.7244,10.9017},
{2225.0576,2520.0786,10.8203},
{1531.1907,2357.5469,10.8203}
};


//----------------------------------------------------------------------------------
// AntiCheat System Codes
//----------------------------------------------------------------------------------
/*	new Float:CheatName[52][] =
		{
   {"AirBreak (onfoot)"},
   {"AirBreak (in vehicle)"},
   {"Teleport hack (onfoot)"},
   {"Teleport hack (in vehicle)"},
   {"Teleport hack (into/between vehicles)"},
   {"Teleport hack (vehicle to player)"},
   {"Teleport hack (pickups)"},
   {"FlyHack (onfoot)"},
   {"FlyHack (in vehicle)"},
   {"SpeedHack (onfoot)"},
   {"SpeedHack (in vehicle)"},
   {"Health hack (in vehicle)"},
   {"Health hack (onfoot)"},
   {"Armour hack"},
   {"Money hack"},
   {"Weapon hack"},
   {"Ammo hack (add)"},
   {"Ammo hack (infinite)"},
   {"Special actions hack"},
   {"GodMode from bullets (onfoot"},
   {"GodMode from bullets (in vehicle)"},
   {"Invisible hack"},
   {"lagcomp-spoof"},
   {"Tuning hack"},
   {"Parkour mod"},
   {"Quick turn"},
   {"Rapid fire"},
   {"FakeSpawn"},
   {"FakeKill"},
   {"Pro Aim"},
   {"CJ run"},
   {"CarShot"},
   {"CarJack"},
   {"UnFreeze"},
   {"AFK Ghost"},
   {"Full Aiming"},
   {"Fake NPC"},
   {"Reconnect"},
   {"High ping"},
   {"Protection from the sandbox"},
   {"Protection against an invalid version"},
   {"Rcon hack"},
   {"Tuning crasher"},
   {"Invalid seat crasher"},
   {"Dialog crasher"},
   {"Attached object crasher"},
   {"Weapon Crasher"},
   {"Flood protection connects to one slot"},
   {"flood callback functions"},
   {"flood change seat"},
   {"Ddos"},
   {"NOP's"}
       };
*/
    new Float:IntArray[146][4] =
       {
            {2003.12,1015.19,33.01,351.58},{770.8,-0.7,1000.73,22.86},{974.02,-9.59,1001.15,22.6},{961.93,-51.91,1001.12,95.54},{830.6,5.94,1004.18,125.81},
            {1037.83,0.4,1001.28,353.93},{1212.15,-28.54,1000.95,170.57},{1290.41,1.95,1001.02,179.94},{1412.15,-2.28,1000.92,114.66},{1527.05,-12.02,1002.1,350.0},
            {1523.51,-47.82,1002.27,262.7},{612.22,-123.9,997.99,266.57},{512.93,-11.69,1001.57,198.77},{418.47,-80.46,1001.8,343.24},{386.53,173.64,1008.38,63.74},
            {288.47,170.06,1007.18,22.05},{206.46,-137.71,1003.09,10.93},{-100.27,-22.94,1000.72,17.29},{-201.22,-43.25,1002.27,45.86},{-202.94,-6.7,1002.27,204.27},
            {-25.72,-187.82,1003.55,5.08},{454.99,-107.25,999.44,309.02},{372.56,-131.36,1001.49,354.23},{378.03,-190.52,1000.63,141.02},{315.24,-140.89,999.6,7.42},
            {225.03,-9.18,1002.22,85.53},{611.35,-77.56,998.0,320.93},{246.07,108.97,1003.22,0.29},{6.09,-28.9,1003.55,5.04},{773.73,-74.7,1000.65,5.23},{621.45,-23.73,1000.92,15.68},
            {445.6,-6.98,1000.73,172.21},{285.84,-39.02,1001.52,0.75},{204.12,-46.8,1001.8,357.58},{245.23,304.76,999.15,273.44},{290.62,309.06,999.15,89.92},{322.5,303.69,999.15,8.17},
            {-2041.23,178.4,28.85,156.22},{-1402.66,106.39,1032.27,105.14},{-1403.01,-250.45,1043.53,355.86},{1204.67,-13.54,1000.92,350.02},{2016.12,1017.15,996.88,88.01},
            {-741.85,493.0,1371.98,71.78},{2447.87,-1704.45,1013.51,314.53},{2527.02,-1679.21,1015.5,260.97},{-1129.89,1057.54,1346.41,274.53},{2496.05,-1695.17,1014.74,179.22},
            {366.02,-73.35,1001.51,292.01},{2233.94,1711.8,1011.63,184.39},{269.64,305.95,999.15,215.66},{414.3,-18.8,1001.8,41.43},{1.19,-3.24,999.43,87.57},{-30.99,-89.68,1003.55,359.84},
            {161.4,-94.24,1001.8,0.79},{-2638.82,1407.34,906.46,94.68},{1267.84,-776.96,1091.91,231.34},{2536.53,-1294.84,1044.13,254.95},{2350.16,-1181.07,1027.98,99.19},
            {-2158.67,642.09,1052.38,86.54},{419.89,2537.12,10.0,67.65},{256.9,-41.65,1002.02,85.88},{204.17,-165.77,1000.52,181.76},{1133.35,-7.85,1000.68,165.85},{-1420.43,1616.92,1052.53,159.13},
            {493.14,-24.26,1000.68,356.99},{1727.29,-1642.95,20.23,172.42},{-202.84,-24.03,1002.27,252.82},{2233.69,-1112.81,1050.88,8.65},{1211.25,1049.02,359.94,170.93},
            {2319.13,-1023.96,1050.21,167.4},{2261.1,-1137.88,1050.63,266.88},{-944.24,1886.15,5.01,179.85},{-26.19,-140.92,1003.55,2.91},{2217.28,-1150.53,1025.8,273.73},
            {1.55,23.32,1199.59,359.91},{681.62,-451.89,-25.62,166.17},{234.61,1187.82,1080.26,349.48},{225.57,1240.06,1082.14,96.29},{224.29,1289.19,1082.14,359.87},
            {239.28,1114.2,1080.99,270.27},{207.52,-109.74,1005.13,358.62},{295.14,1473.37,1080.26,352.95},{-1417.89,932.45,1041.53,0.7},{446.32,509.97,1001.42,330.57},
            {2306.38,-15.24,26.75,274.49},{2331.9,6.78,26.5,100.24},{663.06,-573.63,16.34,264.98},{-227.57,1401.55,27.77,269.3},{-688.15,942.08,13.63,177.66},{-1916.13,714.86,46.56,152.28},
            {818.77,-1102.87,25.79,91.14},{255.21,-59.68,1.57,1.46},{446.63,1397.74,1084.3,343.96},{227.39,1114.66,1081.0,267.46},{227.76,1114.38,1080.99,266.26},{261.12,1287.22,1080.26,178.91},
            {291.76,-80.13,1001.52,290.22},{449.02,-88.99,999.55,89.66},{-27.84,-26.67,1003.56,184.31},{2135.2,-2276.28,20.67,318.59},{306.2,307.82,1003.3,203.14},{24.38,1341.18,1084.38,8.33},
            {963.06,2159.76,1011.03,175.31},{2548.48,2823.74,10.82,270.6},{215.15,1874.06,13.14,177.55},{221.68,1142.5,1082.61,184.96},{2323.71,-1147.65,1050.71,206.54},{345.0,307.18,999.16,193.64},
            {411.97,-51.92,1001.9,173.34},{-1421.56,-663.83,1059.56,170.93},{773.89,-47.77,1000.59,10.72},{246.67,65.8,1003.64,7.96},{-1864.94,55.73,1055.53,85.85},
            {-262.18,1456.62,1084.37,82.46},{22.86,1404.92,1084.43,349.62},{140.37,1367.88,1083.86,349.24},{1494.86,1306.48,1093.3,196.07},{-1813.21,-58.01,1058.96,335.32},
            {-1401.07,1265.37,1039.87,178.65},{234.28,1065.23,1084.21,4.39},{-68.51,1353.85,1080.21,3.57},{-2240.1,136.97,1035.41,269.1},{297.14,-109.87,1001.52,20.23},
            {316.5,-167.63,999.59,10.3},{-285.25,1471.2,1084.38,85.65},{-26.83,-55.58,1003.55,3.95},{442.13,-52.48,999.72,177.94},{2182.2,1628.58,1043.87,224.86},{748.46,1438.24,1102.95,0.61},
            {2807.36,-1171.7,1025.57,193.71},{366.0,-9.43,1001.85,160.53},{2216.13,-1076.31,1050.48,86.43},{2268.52,1647.77,1084.23,99.73},{2236.7,-1078.95,1049.02,2.57},
            {-2031.12,-115.83,1035.17,190.19},{2365.11,-1133.08,1050.88,177.39},{1168.51,1360.11,10.93,196.59},{315.45,976.6,1960.85,359.64},{1893.07,1017.9,31.88,86.1},
            {501.96,-70.56,998.76,171.57},{-42.53,1408.23,1084.43,172.07},{2283.31,1139.31,1050.9,19.7},{84.92,1324.3,1083.86,159.56},{260.74,1238.23,1084.26,84.31},
            {-1658.17,1215.0,7.25,103.91},{-1961.63,295.24,35.47,264.49}
       },
       IntArray2[146][1] =
       {
            {11},{5},{3},{3},{3},{3},{3},{18},{1},{3},{2},{3},{3},{3},{3},{3},{3},{3},{3},{17},{17},{5},{5},{17},{7},{5},
            {2},{10},{10},{7},{1},{1},{1},{1},{1},{3},{5},{1},{1},{7},{2},{10},{1},{2},{1},{10},{3},{10},{1},{2},{2},{2},
            {18},{18},{3},{5},{2},{5},{1},{10},{14},{14},{12},{14},{17},{18},{16},{5},{6},{9},{10},{17},{16},{15},{1},{1},
            {3},{2},{1},{5},{15},{15},{15},{12},{0},{0},{0},{18},{0},{0},{0},{0},{2},{5},{5},{4},{4},{4},{4},{0},{4},{10},
            {1},{0},{0},{4},{12},{6},{12},{4},{6},{6},{14},{4},{5},{5},{3},{14},{16},{6},{6},{6},{6},{6},{15},{6},{6},{2},
            {6},{8},{9},{1},{1},{2},{3},{8},{0},{9},{10},{11},{8},{11},{9},{9},{0},{0}
       },
       IntName[146][] =
       {
            "Four Dragons Managerial Suite",
            "Ganton Gym",
            "Brothel",
            "Brothel2",
            "Inside Track Betting",
            "Blastin  Fools Records",
            "The Big Spread Ranch",
            "Warehouse1 ",
            "Warehouse2 ",
            "B Dup s Apartment",
            "B Dup s Crack Palace",
            "Wheel Arch Angels",
            "OG Loc s House",
            "Barber Shop",
            "Planning Department",
            "Las Venturas Police Department",
            "Pro-Laps",
            "Sex Shop",
            "Las Venturas Tattoo parlor",
            "Lost San Fierro Tattoo",
            "24/07/09 (version 1)",
            "Diner1 ",
            "Pizza Stack",
            "Rusty Brown s Donuts",
            "Ammu-nation",
            "Victim",
            "Loco Low Co",
            "San Fierro Police Department",
            "24/07/09 (version 2)",
            "Below The Belt Gym",
            "Transfenders",
            "World of Coq",
            "Ammu-nation (version 2)",
            "SubUrban",
            "Denise s Bedroom",
            "Helena s Barn",
            "Barbara s Love nest",
            "San Fierro Garage",
            "Oval Stadium",
            "8-Track Stadium",
            "The Pig Pen (strip",
            "Four Dragons",
            "Liberty City",
            "Ryder s house",
            "Sweet s House",
            "RC Battlefield",
            "The Johnson House",
            "Burger shot",
            "Caligula s Casino",
            "Katie s Lovenest",
            "Barber Shop2 (Reece s)",
            "Angel Pine Trailer",
            "24/07/09 (version 3)",
            "Zip",
            "The Pleasure Domes",
            "Madd Dogg s Mansion",
            "Big Smoke s Crack Palace",
            "Burning Desire Building",
            "Wu-Zi Mu s",
            "Abandoned AC tower",
            "Wardrobe/Changing room",
            "Didier Sachs",
            "Casino (Redsands West)",
            "Kickstart Stadium",
            "Club",
            "Atrium",
            "Los Santos Tattoo Parlor",
            "Safe House group1 ",
            "Safe House group2 ",
            "Safe House group3 ",
            "Safe House group4 ",
            "Sherman Dam",
            "24/07/09 (version 4)",
            "Jefferson Motel",
            "Jet Interior",
            "The Welcome Pump",
            "Burglary House X1",
            "Burglary House X2",
            "Burglary House X3",
            "Burglary House X4",
            "Binco",
            "4 Burglary houses",
            "Blood Bowl Stadium",
            "Budget Inn Motel Room",
            "Palamino Bank",
            "Palamino Diner",
            "Dillimore Gas Station",
            "Lil  Probe Inn",
            "Torreno s Ranch",
            "Zombotech - lobby area",
            "Crypt in LS cemetery",
            "Blueberry Liquor Store",
            "Pair of Burglary Houses",
            "Crack Den",
            "Burglary House X11",
            "Burglary House X12",
            "Ammu-nation (version 3)",
            "Jay s Diner",
            "24/07/09 (version 5)",
            "Warehouse3 ",
            "Michelle s Love Nest*",
            "Burglary House X14",
            "Sindacco Abatoir",
            "K.A.C.C. Military Fuels Depot",
            "Area69 ",
            "Burglary House X13",
            "Unused Safe House",
            "Millie s Bedroom",
            "Barber Shop",
            "Dirtbike Stadium",
            "Cobra Gym",
            "Los Santos Police Department",
            "Los Santos Airport",
            "Burglary House X15",
            "Burglary House X16",
            "Burglary House X17",
            "Bike School",
            "Francis International Airport",
            "Vice Stadium",
            "Burglary House X18",
            "Burglary House X19",
            "Zero s RC Shop",
            "Ammu-nation (version 4)",
            "Ammu-nation (version 5)",
            "Burglary House X20",
            "24/07/09 (version 6)",
            "Secret Valley Diner",
            "Rosenberg s Office in Caligulas",
            "Fanny Batter s Whore House",//
            "Colonel Furhberger s",
            "Cluckin  Bell",
            "The Camel s Toe Safehouse",
            "Caligula s Roof",
            "Old Venturas Strip Casino",
            "Driving School",
            "Verdant Bluffs Safehouse",
            "Bike School",
            "Andromada",
            "Four Dragons  Janitor s Office",
            "Bar",
            "Burglary House X21",
            "Willowfield Safehouse",
            "Burglary House X22",
            "Burglary House X23",
            "Otto s Autos",
            "Wang Cars"
       };

//EVENT SAC
enum mbinfo
{
        Float:XPOS,
        Float:YPOS,
        Float:ZPOS,
        PositionSac[33]
}

// ==================================================== Trucker Job
new Float:CHKTruck[18][3] = {
{-99.2558,-1168.3788,2.5964}, //GAS LS ---- CHECKS LS
{1315.7880,-867.2107,39.5781}, //24/7 Store LS
{2116.6514,-1771.4202,13.3937}, //Pizza Boy LS
{2816.3660,-1698.8490,9.9504}, //8 Track LS
{2651.2346,-2390.4055,13.6328}, //Chop Shop LS
{2115.3047,-1723.7944,13.5502}, //Crack House LS
{2165.3979,2746.7004,10.8203}, //GAS LV ---- CHECKS LV
{2046.1804,2244.4304,10.8203}, //Clothing Soter LV
{2447.6467,1999.7650,10.8203}, //Burger Shot LV
{2503.0703,1531.9418,10.6749}, //Pool LV
{2032.2845,1516.1019,10.8203}, //Pirate Ship LV
{1483.8053,1046.6919,10.8203}, //Chuckup LV
{-1728.6168,-119.5973,3.5547}, //Ship SF ---- CHECKS SF
{-1694.2990,399.9545,7.1797}, //GAS SF
{-1672.8090,1322.6425,7.1853}, //Pier 69 SF
{-2110.9172,816.9711,69.5625}, //Supa Save SF
{-2533.0513,1227.8401,37.4219}, //Restaurant SF
{-2142.6599,-442.6247,35.3359} //Homies SF
};

// ==================================================== Trucker Job #2
new Float:CHKTruck2[18][3] = {
{-119.2522,-1218.2719,2.9902}, //LANGA GAS LS ---- CHECKS LS
{1361.1011,-906.6476,35.3157}, //LANGA 24/7 Store LS
{2078.8257,-1706.9739,13.3906}, //LANGA Pizza Boy LS
{2683.8926,-1683.9061,9.4250}, //LANGA 8 Track LS
{2609.1416,-2393.7742,13.6271}, //LANGA Chop Shop LS
{2158.9236,-1725.8071,13.5389}, //LANGA Crack House LS
{2101.4238,2803.3069,10.8203}, //LANGA GAS LV ---- CHECKS LV
{2116.0403,2189.2769,10.8203}, //LANGA Clothing Soter LV
{2426.0283,2005.2286,10.8203}, //LANGA Burger Shot LV
{2589.9490,1704.1989,10.8203}, //LANGA Pool LV
{2029.4589,1418.5114,10.8203}, //LANGA Pirate Ship LV
{1441.4424,1005.0969,10.8203}, //LANGA Chuckup LV
{-1731.8619,-71.2586,3.5489}, //LANGA Ship SF ---- CHECKS SF
{-1714.7142,352.0824,7.1875}, //LANGA GAS SF
{-1647.4458,1291.6462,7.0391}, //LANGA Pier 69 SF
{-2132.7087,769.0834,69.5625}, //LANGA Supa Save SF
{-2468.7771,1231.8475,35.2001}, //LANGA Restaurant SF
{-2184.9126,-409.3924,35.3359} //LANGA Homies SF
};

// ==================================================== Spawn Jail
new Float:gRandomJailSpawns[3][3] = {
{263.7989,85.8850,1001.0391},
{264.0302,81.2118,1001.0391},
{263.8704,77.0021,1001.0391}
};

// ==================================================== Spawn AJail
new Float:gRandomAJailSpawns[4][3] = {
{215.5260,110.5124,1000.0156},
{219.3602,109.9994,1000.0156},
{223.3645,109.9972,1000.0156},
{227.1875,110.2887,1000.0156}
};

// ==================================================== Rob CheckPoints
new Float:gRandomRob[11][3] = {
{2308.8533,-1715.0500,14.6496},
{1921.6538,-1115.0759,27.0883},
{351.7325,-1197.2733,76.5156},
{1182.0050,-1068.1383,29.1936},
{2435.2007,-1289.3853,25.3479},
{2248.9714,961.5317,10.8130},
{2787.9294,2222.7788,14.6615},
{1597.7314,2093.5139,11.3125},
{1029.9531,2028.0458,11.4683},
{1609.4539,2789.3052,10.8203},
{2594.5935,748.7582,11.0234}
};

// ==================================================== Rob Checkpoints #2
new Float:gRandomRob2[10][3] = {
{1695.5579,-2125.8223,13.8101},
{2522.6125,-2018.8566,14.0744},
{2751.7439,-1962.8811,13.5469},
{2553.0874,-958.2475,82.6460},
{166.8161,-1758.7646,6.7969},
{2042.4943,732.5795,11.4609},
{2581.5403,1060.6929,11.7309},
{1435.2942,2548.9001,10.8203},
{1029.7107,1847.9226,11.4683},
{1706.7246,950.2996,10.8203}
};

// ==================================================== PaintBall RC Map Spawn
new Float:gRandomSpawnRC[7][3] = {
{-969.7932,1094.1221,1345.0070},
{-976.3990,1022.5371,1345.0310},
{-973.6447,1041.8181,1352.6875},
{-1014.5994,1027.9786,1342.6187},
{-1133.7423,1021.9453,1345.7335},
{-1115.6410,1095.8212,1341.8438},
{-1133.1267,1079.1073,1353.4480}
};

// ==================================================== PaintBall Tennis Map Spawn
new Float:gRandomSpawnTennis[7][3] = {
{-2754.8149,-245.1009,7.1875},
{-2779.4072,-248.5145,7.1875},
{-2779.9651,-265.2720,7.1875},
{-2744.6108,-270.1563,7.1875},
{-2718.3101,-252.3627,7.1875},
{-2726.9282,-240.9186,7.1875},
{-2716.3669,-269.9250,7.1875}
};

// ==================================================== PaintBall Farm Map Spawn
new Float:gRandomSpawnFarm[7][3] = {
{15.3401,2.1944,3.1172},
{-59.7064,-32.2439,3.1172},
{-102.5952,-29.0223,3.1172},
{-111.9006,27.3635,3.1172},
{-152.7778,49.3966,3.1172},
{-205.3790,8.9561,3.1172},
{-75.0158,9.1256,3.1172}
};

// ==================================================== PaintBall LSPD Map Spawn
new Float:gRandomSpawnLSPD[7][3] = {
{1499.7970,-1671.6659,14.0469},
{1459.4235,-1699.1788,14.5469},
{1491.1667,-1724.2849,13.5469},
{1519.1375,-1741.3630,13.5469},
{1501.7247,-1609.9181,14.0469},
{1457.3564,-1623.7700,14.7891},
{1483.3802,-1631.9480,14.1484}
};

// ==================================================== PaintBall Beach Map Spawn
new Float:gRandomSpawnBeach[6][3] = {
{586.0002,-1813.6575,6.0625},
{600.9373,-1876.1948,4.2792},
{595.5770,-1815.2834,6.0625},
{560.8715,-1877.9070,3.9158},
{498.6968,-1855.5299,3.7908},
{429.4129,-1844.7195,3.7809}
};

// ==================================================== Tow Car Checkpoints
new Float:TowCarCk[14][3] = {
{1209.6587,-1102.2660,25.1793},
{1013.2002,-1022.8221,32.1016},
{928.3862,-1081.9692,24.2891},
{856.1053,-1364.4233,13.5469},
{968.3508,-1710.0663,13.5546},
{1017.6634,-917.3149,42.1797},
{1268.3655,-1613.0262,13.5469},
{1433.0844,-1843.8458,13.5469},
{2051.3674,-2046.2601,13.5469},
{2137.6187,-2173.9358,13.5544},
{2215.5930,-2202.2126,13.5469},
{2468.5393,-2078.4360,13.5469},
{2699.9041,-1951.2253,13.5540},
{2662.4050,-1593.9717,13.3006}
};

// ==================================================== Vehicle Fuel & Sources
#define GasMax 100
#define RunOutTime 20000
#define RefuelWait 5000

#define CAR_AMOUNT 700
new Gas[CAR_AMOUNT];

new Refueling[MAX_PLAYERS];

// ==================================================== Vehicle Names
new aVehicleNames[212][] =
{
	{"Landstalker"},
	{"Bravura"},
	{"Buffalo"},
	{"Linerunner"},
	{"Perrenial"},
	{"Sentinel"},
	{"Dumper"},
	{"Firetruck"},
	{"Trashmaster"},
	{"Stretch"},
	{"Manana"},
	{"Infernus"},
	{"Voodoo"},
	{"Pony"},
	{"Mule"},
	{"Cheetah"},
	{"Ambulance"},
	{"Leviathan"},
	{"Moonbeam"},
	{"Esperanto"},
	{"Taxi"},
	{"Washington"},
	{"Bobcat"},
	{"Mr Whoopee"},
	{"BF Injection"},
	{"Hunter"},
	{"Premier"},
	{"Enforcer"},
	{"Securicar"},
	{"Banshee"},
	{"Predator"},
	{"Bus"},
	{"Rhino"},
	{"Barracks"},
	{"Hotknife"},
	{"Trailer 1"},
	{"Previon"},
	{"Coach"},
	{"Cabbie"},
	{"Stallion"},
	{"Rumpo"},
	{"RC Bandit"},
	{"Romero"},
	{"Packer"},
	{"Monster"},
	{"Admiral"},
	{"Squalo"},
	{"Seasparrow"},
	{"Pizzaboy"},
	{"Tram"},
	{"Trailer 2"},
	{"Turismo"},
	{"Speeder"},
	{"Reefer"},
	{"Tropic"},
	{"Flatbed"},
	{"Yankee"},
	{"Caddy"},
	{"Solair"},
	{"Berkley's RC Van"},
	{"Skimmer"},
	{"PCJ-600"},
	{"Faggio"},
	{"Freeway"},
	{"RC Baron"},
	{"RC Raider"},
	{"Glendale"},
	{"Oceanic"},
	{"Sanchez"},
	{"Sparrow"},
	{"Patriot"},
	{"Quad"},
	{"Coastguard"},
	{"Dinghy"},
	{"Hermes"},
	{"Sabre"},
	{"Rustler"},
	{"ZR-350"},
	{"Walton"},
	{"Regina"},
	{"Comet"},
	{"BMX"},
	{"Burrito"},
	{"Camper"},
	{"Marquis"},
	{"Baggage"},
	{"Dozer"},
	{"Maverick"},
	{"News Chopper"},
	{"Rancher"},
	{"FBI-Rancher"},
	{"Virgo"},
	{"Greenwood"},
	{"Jetmax"},
	{"Hotring"},
	{"Sandking"},
	{"Blista Compact"},
	{"Police Maverick"},
	{"Boxville"},
	{"Benson"},
	{"Mesa"},
	{"RC Goblin"},
	{"Hotring Racer A"},
	{"Hotring Racer B"},
	{"Bloodring Banger"},
	{"Rancher"},
	{"Super GT"},
	{"Elegant"},
	{"Journey"},
	{"Bike"},
	{"Mountain Bike"},
	{"Beagle"},
	{"Cropdust"},
	{"Stunt"},
	{"Tanker"},
	{"Roadtrain"},
	{"Nebula"},
	{"Majestic"},
	{"Buccaneer"},
	{"Shamal"},
	{"Hydra"},
	{"FCR-900"},
	{"NRG-500"},
	{"HPV-1000"},
	{"Cement Truck"},
	{"Tow Truck"},
	{"Fortune"},
	{"Cadrona"},
	{"FBI-Truck"},
	{"Willard"},
	{"Forklift"},
	{"Tractor"},
	{"Combine"},
	{"Feltzer"},
	{"Remington"},
	{"Slamvan"},
	{"Blade"},
	{"Freight"},
	{"Streak"},
	{"Vortex"},
	{"Vincent"},
	{"Bullet"},
	{"Clover"},
	{"Sadler"},
	{"Firetruck LA"},
	{"Hustler"},
	{"Intruder"},
	{"Primo"},
	{"Cargobob"},
	{"Tampa"},
	{"Sunrise"},
	{"Merit"},
	{"Utility"},
	{"Nevada"},
	{"Yosemite"},
	{"Windsor"},
	{"Monster A"},
	{"Monster B"},
	{"Uranus"},
	{"Jester"},
	{"Sultan"},
	{"Stratum"},
	{"Elegy"},
	{"Raindance"},
	{"RC Tiger"},
	{"Flash"},
	{"Tahoma"},
	{"Savanna"},
	{"Bandito"},
	{"Freight Flat"},
	{"Streak Carriage"},
	{"Kart"},
	{"Mower"},
	{"Duneride"},
	{"Sweeper"},
	{"Broadway"},
	{"Tornado"},
	{"AT-400"},
	{"DFT-30"},
	{"Huntley"},
	{"Stafford"},
	{"BF-400"},
	{"Newsvan"},
	{"Tug"},
	{"Trailer 3"},
	{"Emperor"},
	{"Wayfarer"},
	{"Euros"},
	{"Hotdog"},
	{"Club"},
	{"Freight Carriage"},
	{"Trailer 3"},
	{"Andromada"},
	{"Dodo"},
	{"RC Cam"},
	{"Launch"},
	{"Police Car"},
	{"Police Car"},
	{"Police Car"},
	{"Ranger"},
	{"Picador"},
	{"S.W.A.T. Van"},
	{"Alpha"},
	{"Phoenix"},
	{"Glendale"},
	{"Sadler"},
	{"Luggage Trailer A"},
	{"Luggage Trailer B"},
	{"Stair Trailer"},
	{"Boxville"},
	{"Farm Plow"},
	{"Utility Trailer"}
};

// ==================================================== Distance Between Players
public Float:GetDistanceBetweenPlayers(p1,p2)
{
	new	Float:x1,
		Float:y1,
		Float:z1,
		Float:x2,
		Float:y2,
		Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
stock NoConnectStupid(playerid, name[])
{
	new getname[25];
	GetPlayerName(playerid, getname, sizeof(getname));
	if(strfind(getname, name, true) == 0)
	{
	    SCM(playerid, -1, "You Can't Connect To This Server Because You Are Too Stupid !");
	    KickEx(playerid);
	}
	return 1;
}

stock ini_GetKey(line[])
{
	new keyRes[256];
	keyRes[0] = 0;
    if ( strfind( line , "=" , true ) == -1 ) return keyRes;
    strmid( keyRes , line , 0 , strfind( line , "=" , true ) , sizeof( keyRes) );
    return keyRes;
}

stock ini_GetValue(line[])
{
	new valRes[256];
	valRes[0]=0;
	if ( strfind( line , "=" , true ) == -1 ) return valRes;
	strmid( valRes , line , strfind( line , "=" , true )+1 , strlen( line ) , sizeof( valRes ) );
	return valRes;
}

strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

stock InvalidWeapons(playerid)
{
	new weap = GetPlayerWeapon(playerid);
	if(weap == 0)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}

stock IsKeyJustDown(key, newkeys, oldkeys)
{
	if((newkeys & key) && !(oldkeys & key))
	return 1;

	return 0;
}

// ==================================================== Get Distance #2
stock GetDistance2( Float:x1, Float:y1, Float:z1, Float:x2, Float:y2, Float:z2 )
{
   return floatround( floatsqroot( ( ( x1 - x2 ) * ( x1 - x2 ) ) + ( ( y1 - y2 ) * ( y1 - y2 ) ) + ( ( z1 - z2 ) * ( z1 - z2 ) ) ) );
}

// ==================================================== Distance Between Points
stock Float:GetDistanceBetweenPoints(Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2)
{
    return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

stock GetClosestVehicle2(playerid, Float:dis)
{
	new Float:X,
		Float:Y,
		Float:Z;
	if(GetPlayerPos(playerid, X, Y, Z))
	{
		new vehicleid = INVALID_VEHICLE_ID;
		for(new v, Float:temp, Float:VX, Float:VY, Float:VZ; v != MAX_VEHICLES; v++)
		{
			if(GetVehiclePos(v, VX, VY, VZ))
			{
				VX -= X, VY -= Y, VZ -= Z;
				temp = VX * VX + VY * VY + VZ * VZ;
				if(temp < dis) dis = temp, vehicleid = v;
			}
		}
		dis = floatpower(dis, 0.5);
		return vehicleid;
	}
	return INVALID_VEHICLE_ID;
}

// ==================================================== Vehicle Range Of Point
stock IsVehicleInRangeOfPoint(vehicleid, Float: radius, Float:x, Float:y, Float:z) {

	new Float:Floats[6];

	GetVehiclePos(vehicleid, Floats[0], Floats[1], Floats[2]);
	Floats[3] = (Floats[0] -x);
	Floats[4] = (Floats[1] -y);
	Floats[5] = (Floats[2] -z);
	if (((Floats[3] < radius) && (Floats[3] > -radius)) && ((Floats[4] < radius) && (Floats[4] > -radius)) && ((Floats[5] < radius) && (Floats[5] > -radius)))
		return 1;
	return 0;
}

// ==================================================== XY In Front Of Player
stock Float:GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
    new Float:a;
    GetPlayerPos(playerid, x, y, a);
    if (IsPlayerInAnyVehicle(playerid))
        GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
    else
        GetPlayerFacingAngle(playerid, a);
    x += (distance * floatsin(-a, degrees));
    y += (distance * floatcos(-a, degrees));
    return a;
}

enum beforeSpectateInfo //iFordawin
{
 	Float: pOldPos[3],
 	pWorld,
 	pInt,
 	pState,
 	pInVehicle,
 	bool: pSpectating
};
new BeforeSpectate[MAX_PLAYERS][beforeSpectateInfo];

new RandomMSG[][] = {
	"{6666FF}[NL-RP] {FFFFFF}New Land Community's Forum --> /Forum",
	"{6666FF}[NL-RP] {FFFFFF}New Land Community's UCP --> /Ucp",
	"{6666FF}[NL-RP] {FFFFFF}If You Have Any Questions , Use /N",
	"{6666FF}[NL-RP] {FFFFFF}Use /Locations Or /Gps To Find Important Places",
	"{6666FF}[NL-RP] {FFFFFF}If You Have Problems With You Account , Use /Report",
	"{6666FF}[NL-RP] {FFFFFF}Use /Jobs To See Jobs List"
};

enum spikeE
{
    sObjID,
	Float:sPos[4],
	sDeployer[MAX_PLAYER_NAME],
}
new SpikeInfo[MAX_SPIKES][spikeE];

enum zInfo
{
    zID,
    zOwned,
    Float:zMinX,
    Float:zMinY,
    Float:zMaxX,
    Float:zMaxY
};
new TurfInfo[50][zInfo],
	Turfs[50];
new Float:LastPosition[MAX_PLAYERS][3];
new TeleportWarnings[MAX_PLAYERS];
new TeleportAllowed[MAX_PLAYERS];
enum wInfo
{
    wFaction,
	wAttacker,
	wTime,
};
new WarInfo[sizeof(TurfInfo)][wInfo],
	WarScoreF[16][sizeof(TurfInfo)],
	ucideri[MAX_PLAYERS][sizeof(TurfInfo)],
	decese[MAX_PLAYERS][sizeof(TurfInfo)],
	worstscoreat[sizeof(TurfInfo)],
	worstmemberat[sizeof(TurfInfo)],
	worstscoredf[sizeof(TurfInfo)],
	worstmemberdf[sizeof(TurfInfo)],
	WarBestScore[sizeof(TurfInfo)],
	bestmemberat[sizeof(TurfInfo)],
	bestscoredf[sizeof(TurfInfo)],
	bestmemberdf[sizeof(TurfInfo)],
	DeelayWar[16],
	InWar[16];

// SPECTATOR
enum pSpec
{
	Float:Coords[3],
	Float:sPx,
	Float:sPy,
	Float:sPz,
	sPint,
	sLocal,
	sCam,
};

new Unspec[MAX_PLAYERS][pSpec];

// CLAN
enum clanE
{
    cClanName[64],
	cClanMOTD[128],
	cClanRankName1[32],
	cClanRankName2[32],
	cClanRankName3[32],
	cClanRankName4[32],
	cClanRankName5[32],
	cClanRankName6[32],
	cClanRankName7[32],
	cClanTag[32],
	cClanTagType,
	cClanID,
	cClanExpire,
	cClanActive,
	cClanSlots,
	cClanColor[10],
};
new ClanInfo[MAX_CLANS][clanE];

// PLAYER ACCOUNT
enum pInfo
{
	pKey[128],
	pColor,
	pNormalName[30],
	NoTp,
	pLevel,
	pAdmin,
	pHelper,
	pPremiumAccount,
	pVIP,
	pYoutuber,
	pTotalPP,
	pHToken,
	pAcces,
	pBeta,
	pSupport,
	pManagerLideri,
	pManagerLideriSupport,
	pManagerDepartamente,
	pManagerTaxi,
	pManagerInstructori,
	pManagerMedici,
	pManagerHitman,
	pPremiumPoints,
	pConnectTime,
	pReg,
	pSex,
	pAge,
	pOrigin,
	pMuted,
	pMuteTime,
	pGasCan,
	pExp,
	pCash,
	pAccount,
	pCrimes,
	pKills,
	pDeaths,
	pArrested,
	pWantedDeaths,
	pPhoneBook,
	pPhone,
 	pWantedLevel,
 	pSelected[MAX_PLAYER_NAME],
	pFishes,
	pJob,
	pPayCheck,
	pHeadValue,
	pJailed,
	pJailTime,
	pMats,
	pDrugs,
	pLeader,
	pMember,
	pRank,
	pGlasses,
	pHats,
	pFACWarns,
	pArrestss,
	pRunners,
	pTickets,
	pDConfiscate,
	pLConfiscate,
	pMoneyD,
	pWDeaths,
	pWKills,
	pMUsed,
	pMDeposit,
	pDDeposit,
	pOrders,
	pContracts,
	pLGiven,
	pPHeals,
	pLives,
	pNews,
	pFpunish,
	pLawyer,
	pFishSkill,
	pFlyMode,
	pSpawnChange,
	pFishPrice,
	Float:pHealth,
	Float:pSHealth,
	pInt,
	pLocal,
	pTeam,
	pRequestingBackup,
	pModel,
	pPnumber,
	pPhousekey,
	pPbiskey,
	Float:pPos_x,
	Float:pPos_y,
	Float:pPos_z,
	pCarLicSuspend,
	pGunLicSuspend,
	pCarLicT,
	pCarLic,
	pFlyLicT,
	pFlyLic,
	pBoatLicT,
	pBoatLic,
	pGunLicT,
	pGunLic,
	pPayDay,
 	pRobSkill,
 	pRobTimes,
 	pRobRem,
 	pTruckSkill,
 	pTruckTimes,
 	pTruckRem,
 	pFarmSkill,
 	pFarmTimes,
 	pFarmRem,
	pPizzaSkill,
	pPizzaTimes,
	pPizzaRem,
	pArmsSkill,
	pArmsTimes,
	pArmsRem,
	pSkillCoal,
	pRemainCoal,
	pTransportateCoal,
	pCurierRem,
	pCurierSkill,
	pCurierTimes,
	pBusSkill,
	pBusTimes,
	pBusRem,
 	pFishTimes,
 	pFishRem,
	pRob,
	pTut,
	pWarns,
	pLanguage,
	pFuel,
    pSleeping,
	pGarbageTime,
    pRented,
    pSpeaker,
    pWTalkie,
   	pEmail[200],
    pRegistredDate[200],
	pClanTag,
	pClan,
	pHitT,
 	pCRank,
	pCWarns,
	pSQLID,
	pPcarkey,
	pmotokey,
	phelikey,
	pprcarkey,
	pprcarkey2,
	pPPluscarkey,
	pPPluscarkey2,
	pPlusSlot1,
	pPlusSlot2,
    pVictim[64],
    pAccused[64],
	pCrime1[184],
	pCrime2[184],
	pCrime3[184],
	pNMessage[128],
	pNMessage2[128],
	pNewbieEnabled,
	pFirstAnswer,
	pNMuted,
	pNewbieTimeout,
	pHelpedPlayers,
	pCommands,
	pNRE,
	pBTemp,
	pBYear,
	pBMonth,
	pBDay,
	pBBy[25],
	pBReason[184],
	pStatus,
	pALeader,
	pFWorks,
	pVirtualPD,
	pFactionTime,
	pCredits,
	pHost[25],
	pOneHost,
	pHiddenColor,
	pGiftTime,
	pGiftBox,
	pFightStyle,
	pHUD1,
	pHUD2,
	pHUD3,
	pFPS,
	pDrunkLevelLast,
	pPaintBallG,
	pPaintBallKills,
	pPaintBallVoted,
	pPaintBallVoted2,
	pPhoneBlock,
	pNextNotification,
	pPinCode,
	pPaydayuri
};
new PlayerInfo[MAX_PLAYERS][pInfo];

enum bpInfo
{
	bpName[30],
	bpNumar1,
	bpNumar2,
	bpNumar3,
	bpNumar4,
	bpNumar5,
	bpNumar6,
	bpNumar7,
	bpNumar8,
	bpNumar9,
	bpNumar10,
	bpNume1[30],
	bpNume2[30],
	bpNume3[30],
	bpNume4[30],
	bpNume5[30],
	bpNume6[30],
	bpNume7[30],
	bpNume8[30],
	bpNume9[30],
	bpNume10[30]
}
new BlockPhone[MAX_PLAYERS][bpInfo];

// HOUSE
enum hInfo
{
	hID,
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	hOwner[25],
	hDiscription[64],
	hValue,
	hHel,
	hArm,
	hInterior,
	hLock,
	hOwned,
	hRent,
	hRentabil,
	hTakings,
	hLevel,
	hVirtual
};
new HouseInfo[300][hInfo],
	Text3D:HouseLabel[sizeof(HouseInfo)],
	HousePickup[200];

// BUSSINES
enum bInfo
{
	bID,
    bOwned,
	bOwner[25],
	bMessage[50],
	Float:bEntranceX,
	Float:bEntranceY,
	Float:bEntranceZ,
	Float:bExitX,
	Float:bExitY,
	Float:bExitZ,
	bLevelNeeded,
	bBuyPrice,
	bEntranceCost,
	bTill,
	bLocked,
	bInterior,
	bVirtual,
	bSbiz,
	bType
};
new BizzInfo[55][bInfo],
	Text3D:BizzLabel[sizeof(BizzInfo)];

// VEHICLES
#define OwnedVeh(%0) 		caridxx[%0]

enum cInfo
{
	cID,
	cModel,
	Float:cLocationx,
	Float:cLocationy,
	Float:cLocationz,
	Float:cAngle,
	cColorOne,
	cColorTwo,
	cOwner[MAX_PLAYER_NAME],
	cDescription[128],
	cValue,
	cLicense[64],
	cOwned,
	cLock,
	cTimed,
	cInscarprice,
	cInsurancecar,
	Float:cKM,
	cSell,
	Float:cHP,
	cDamage1,
	cDamage2,
	cDamage3,
	cDamage4,
	cObject,
	cText[1024],
	cGas,
	mod1,
	mod2,
	mod3,
	mod4,
	mod5,
	mod6,
	mod7,
	mod8,
	mod9,
	mod10,
	mod11,
	mod12,
	mod13,
	mod14,
	mod15,
	mod16,
	mod17,
	cDays,
	cPaintJ,
	cVIP,
	cVipText[25],
	cNeon
};

new CarInfo[2000][cInfo],caridxx[MAX_VEHICLES];

new spoiler[20][0] = {
	{1000},
	{1001},
	{1002},
	{1003},
	{1014},
	{1015},
	{1016},
	{1023},
	{1058},
	{1060},
	{1049},
	{1050},
	{1138},
	{1139},
	{1146},
	{1147},
	{1158},
	{1162},
	{1163},
	{1164}
};

new nitro[3][0] = {
	{1008},
	{1009},
	{1010}
};

new fbumper[23][0] = {
	{1117},
	{1152},
	{1153},
	{1155},
	{1157},
	{1160},
	{1165},
	{1167},
	{1169},
	{1170},
	{1171},
	{1172},
	{1173},
	{1174},
	{1175},
	{1179},
	{1181},
	{1182},
	{1185},
	{1188},
	{1189},
	{1192},
	{1193}
};

new rbumper[22][0] = {
	{1140},
	{1141},
	{1148},
	{1149},
	{1150},
	{1151},
	{1154},
	{1156},
	{1159},
	{1161},
	{1166},
	{1168},
	{1176},
	{1177},
	{1178},
	{1180},
	{1183},
	{1184},
	{1186},
	{1187},
	{1190},
	{1191}
};

new exhaust[28][0] = {
	{1018},
	{1019},
	{1020},
	{1021},
	{1022},
	{1028},
	{1029},
	{1037},
	{1043},
	{1044},
	{1045},
	{1046},
	{1059},
	{1064},
	{1065},
	{1066},
	{1089},
	{1092},
	{1104},
	{1105},
	{1113},
	{1114},
	{1126},
	{1127},
	{1129},
	{1132},
	{1135},
	{1136}
};

new bventr[2][0] = {
	{1142},
	{1144}
};

new bventl[2][0] = {
	{1143},
	{1145}
};

new bscoop[4][0] = {
	{1004},
	{1005},
	{1011},
	{1012}
};

new rscoop[17][0] = {
	{1006},
	{1032},
	{1033},
	{1035},
	{1038},
	{1053},
	{1054},
	{1055},
	{1061},
	{1067},
	{1068},
	{1088},
	{1091},
	{1103},
	{1128},
	{1130},
	{1131}
};

new lskirt[21][0] = {
	{1007},
	{1026},
	{1031},
	{1036},
	{1039},
	{1042},
	{1047},
	{1048},
	{1056},
	{1057},
	{1069},
	{1070},
	{1090},
	{1093},
	{1106},
	{1108},
	{1118},
	{1119},
	{1133},
	{1122},
	{1134}
};

new rskirt[21][0] = {
	{1017},
	{1027},
	{1030},
	{1040},
	{1041},
	{1051},
	{1052},
	{1062},
	{1063},
	{1071},
	{1072},
	{1094},
	{1095},
	{1099},
	{1101},
	{1102},
	{1107},
	{1120},
	{1121},
	{1124},
	{1137}
};

new hydraulics[1][0] = {
	{1087}
};

new vbase[1][0] = {
	{1086}
};

new rbbars[4][0] = {
	{1109},
	{1110},
	{1123},
	{1125}
};

new fbbars[2][0] = {
	{1115},
	{1116}
};

new wheels[17][0] = {
	{1025},
	{1073},
	{1074},
	{1075},
	{1076},
	{1077},
	{1078},
	{1079},
	{1080},
	{1081},
	{1082},
	{1083},
	{1084},
	{1085},
	{1096},
	{1097},
	{1098}
};

new vlights[2][0] = {
	{1013},
	{1024}
};

// DEALERSHIP STOCK
enum vInfo
{
	vID,
	vStock,
	vPrice,
	vModel,
	vSpeed,
	vName[255]
};
new vText[MAX_VEHICLES][MAX_PLAYERS];
new vNeon[MAX_VEHICLES][MAX_PLAYERS];
new vNeon2[MAX_VEHICLES][MAX_PLAYERS];
new Stock[102][vInfo];

// FACTIONS
enum Factions
{
	fID,
	fName[128],
	Float:fcX,
	Float:fcY,
	Float:fcZ,
	fMats,
	fDrugs,
	fBank,
	fPaydayMoney,
	fAnn[128],
	fWin,
	fLost,
	fMembers,
	fMaxMembers,
	fMinLevel,
	fApplication,
	fRankName1[64],
	fRankName2[64],
	fRankName3[64],
	fRankName4[64],
	fRankName5[64],
	fRankName6[64],
	fRankName7[64]
};
new DynamicFactions[15][Factions];

// GUN NAME
new GunNames[48][] =
{
	"Nothink",
	"Brass Knuckles",
	"Golf Club",
	"Nitestick",
	"Knife",
	"Baseball Bat",
	"Showel",
	"Pool Cue",
	"Katana",
	"Chainsaw",
	"Purple Dildo",
	"Small White Dildo",
	"Long White Dildo",
	"Vibrator",
	"Flowers",
	"Cane",
	"Grenade",
	"Tear Gas",
	"Molotov",
	"Vehicle Missile",
	"Hydra Flare",
	"Jetpack",
	"Glock",
	"Silenced Colt",
	"Desert Eagle",
	"Shotgun",
	"Sawn Off",
	"Combat Shotgun",
	"Micro UZI",
	"MP5",
	"AK47",
	"M4",
	"Tec9",
	"Rifle",
	"Sniper Rifle",
	"Rocket Launcher",
	"HS Rocket Launcher",
	"Flamethrower",
	"Minigun",
	"Satchel Charge",
	"Detonator",
	"Spraycan",
	"Fire Extinguisher",
	"Camera",
	"Nightvision",
	"Infrared Vision",
	"Parachute",
	"Fake Pistol"
};

new Peds[115][1] = {
{1},{2},{6},{7},{9},{10},{14},{15},{16},{18},{19},{20},{21},{22},{23},{24},{25},{26},{27},{28},
{29},{30},{31},{32},{33},{34},{35},{36},{37},{38},{39},{41},{43},{44},{45},{47},{48},{49},{51},
{52},{53},{54},{63},{64},{66},{67},{68},{69},{73},{75},{77},{78},{79},{80},{81},{82},{83},{84},
{87},{88},{89},{94},{95},{96},{97},{99},{100},{101},{128},{129},{130},{131},{132},{133},{134},
{135},{136},{137},{138},{139},{140},{142},{143},{144},{145},{146},{154},{162},{170},{180},{177},
{176},{181},{182},{183},{184},{193},{201},{202},{203},{204},{221},{230},{234},{237},{241},{242},
{247},{248},{249},{250},{252},{254},{299},{293}
};

enum LIST_ANTIFLOOD
{
	lastCheck,
	floodRate
}
new AntiFlood_Data[MAX_PLAYERS][LIST_ANTIFLOOD];

// MAIN
main()
{
   print("====================== Server created by MaWReZ =========================");
}

public HUpdate(hid, type)
{
	new var[256];
	switch(type)
	{
	    case hExitxx:
	    {
			format(var, sizeof(var), "UPDATE `houses` SET `Exitx`='%f' WHERE `ID`='%d'",HouseInfo[hid][hExitx], hid);
			mysql_query(SQL ,var);
	    }
	    case hExityx:
	    {
			format(var, sizeof(var), "UPDATE `houses` SET `Exity`='%f' WHERE `ID`='%d'",HouseInfo[hid][hExity], hid);
			mysql_query(SQL ,var);
	    }
	    case hExitzx:
	    {
			format(var, sizeof(var), "UPDATE `houses` SET `Exitz`='%f' WHERE `ID`='%d'",HouseInfo[hid][hExitz], hid);
			mysql_query(SQL ,var);
	    }
	    case hInteriorx:
	    {
			format(var, sizeof(var), "UPDATE `houses` SET `Interior`='%d' WHERE `ID`='%d'",HouseInfo[hid][hInterior], hid);
			mysql_query(SQL ,var);
	    }
	}
	return 1;
}
// PLAYER SAVE
public Update(playerid, type)
{
	if(IsPlayerConnected(playerid))
	{
		new var[356];
		{
			switch(type)
			{
				case pCashx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Money`='%d' WHERE `name`='%s'",GetPlayerCash(playerid), PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pRP:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Respect`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pExp], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pBank:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Bank`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pAccount], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pCarLicTx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `CarLicT`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCarLicT], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pCarLicSuspendx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `CarLicSuspend`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCarLicSuspend], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pGunLicSuspendx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `GunLicSuspend`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pGunLicSuspend], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pFlyLicTx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `FlyLicT`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pFlyLicT], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pBoatLicTx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `BoatLicT`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pBoatLicT], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pGunLicTx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `GunLicT`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pGunLicT], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pRobx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Rob`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pRob], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pFpunishx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `FPunish`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pFpunish], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pLawyerx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Acceptpoints`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pLawyer], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pConnectTimex:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `ConnectedTime`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pConnectTime], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPayDayx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `PayDay`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPayDay], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPayCheckx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Paycheck`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPayCheck], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPhousekeyx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `House`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPhousekey], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pJailedx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Jailed`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pJailed], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pJailTimex:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `JailTime`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pJailTime], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pWantedLevelx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `WantedLevel`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pWantedLevel], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPhonex:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Phone`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPhone], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pMatsx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Materials`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pMats], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pFishesx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Fishes`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pFishes], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pFishSkillx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `FishSkill`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pFishSkill], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pSpawnChangex:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `SpawnChange`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pSpawnChange], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pRobSkillx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `RobSkill`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pRobSkill], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pTruckSkillx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `TruckSkill`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pTruckSkill], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pTruckTimesx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `TruckTimes`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pTruckTimes], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pTruckRemx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `TruckRem`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pTruckRem], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPizzaSkillx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `PizzaSkill`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPizzaSkill], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPizzaTimesx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `PizzaTimes`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPizzaTimes], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPizzaRemx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `PizzaRem`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPizzaRem], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pArmsSkillx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `ArmsSkill`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pArmsSkill], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pArmsTimesx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `ArmsTimes`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pArmsTimes], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pArmsRemx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `ArmsRem`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pArmsRem], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pCurierRemx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `CurierRem`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCurierRem], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pCurierSkillx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `CurierSkill`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCurierSkill], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pCurierTimesx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `CurierTimes`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCurierTimes], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pSkillCoalx:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `SkillCoal`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pSkillCoal], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pRemainCoalx:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `RemainCoal`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pRemainCoal], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pTransportateCoalx:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `TransportateCoal`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pTransportateCoal], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pBusSkillx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `BusSkill`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pBusSkill], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pBusTimesx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `BusTimes`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pBusTimes], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pBusRemx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `BusRem`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pBusRem], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pFarmSkillx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `FarmSkill`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pFarmSkill], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pFarmTimesx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `FarmTimes`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pFarmTimes], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pFarmRemx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `FarmRem`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pFarmRem], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pFishTimesx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `FishTimes`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pFishTimes], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pFishRemx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `FishRem`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pFishRem], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pRobRemx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `RobRem`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pRobRem], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pRobTimesx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `RobTimes`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pRobTimes], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pLevelx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Level`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPremiumAccountx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Premium`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPremiumAccount], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				/*case pHTokenx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `HelperToken`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pHToken], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}*/
				case pVIPx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `VIP`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pVIP], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pYoutuberx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Youtuber`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pYoutuber], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pAccesx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Acces`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pAcces], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pBetax:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Beta`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pBeta], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pSupportx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Support`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pSupport], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pManagerLiderix:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `ManagerLideri`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pManagerLideri], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pManagerLideriSupportx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `ManagerLideriSupport`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pManagerLideriSupport], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pManagerDepartamentex:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `ManagerDepartamente`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pManagerDepartamente], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pManagerTaxix:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `ManagerTaxi`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pManagerTaxi], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pManagerInstructorix:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `ManagerInstructori`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pManagerInstructori], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pManagerMedicix:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `ManagerMedici`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pManagerMedici], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pManagerHitmanx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `ManagerHitman`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pManagerHitman], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pGasCanx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `GasCan`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pGasCan], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPremiumPointsx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `PremiumPoints`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPremiumPoints], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPlusSlot1x:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `PlusSlot1`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPlusSlot1], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPlusSlot2x:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `PlusSlot2`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPlusSlot2], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPbiskeyx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Bizz`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPbiskey], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPnumberx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `PhoneNr`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPnumber], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pRegx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Registered`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pReg], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pRegistredDatex:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `RegisterDate`='%s' WHERE `name`='%s'",PlayerInfo[playerid][pRegistredDate], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPcarkeyx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Carkey`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPcarkey], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pmotokeyx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `motokey`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pmotokey], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pprcarkey2x:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `prcarkey2`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pprcarkey2], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPPluscarkeyx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `pluscarkey`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPPluscarkey], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPPluscarkey2x:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `pluscarkey2`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPPluscarkey2], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case phelikeyx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `helikey`='%d' WHERE `name`='%s'",PlayerInfo[playerid][phelikey], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pprcarkeyx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `prcarkey`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pprcarkey], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pRentedx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Rented`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pRented], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pCrimesx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Crimes`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCrimes], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pCrime1x:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Crime1`='%s' WHERE `name`='%s'",PlayerInfo[playerid][pCrime1], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pCrime2x:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Crime2`='%s' WHERE `name`='%s'",PlayerInfo[playerid][pCrime2], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pCrime3x:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Crime3`='%s' WHERE `name`='%s'",PlayerInfo[playerid][pCrime3], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pVictimx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Victim`='%s' WHERE `name`='%s'",PlayerInfo[playerid][pVictim], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pAccusedx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Accused`='%s' WHERE `name`='%s'",PlayerInfo[playerid][pAccused], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pFWorksx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `FWorks`='%s' WHERE `name`='%s'",PlayerInfo[playerid][pFWorks], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pEmailx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Email`='%s' WHERE `name`='%s'",PlayerInfo[playerid][pEmail], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pBTempx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `BTemp`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pBTemp], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pBYearx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `BYear`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pBYear], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pBMonthx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `BMonth`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pBMonth], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pBDayx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `BDay`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pBDay], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pBByx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `BBy`='%s' WHERE `name`='%s'",PlayerInfo[playerid][pBBy], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pBReasonx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `BReason`='%s' WHERE `name`='%s'",PlayerInfo[playerid][pBReason], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pWarnsx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Warnings`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pWarns], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pLanguagex:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Language`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pLanguage], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pVirtualPDx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `VirtualPD`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pVirtualPD], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pGlassesx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Glasses`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pGlasses], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pHatsx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Hats`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pHats], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pFactionTimex:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `FactionTime`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pFactionTime], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pMoneyDx:
				{
    				mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `MoneyD`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pMoneyD], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pRunnersx:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Runners`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pRunners], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPHealsx:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `PHeals`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPHeals], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pLGivenx:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `LGiven`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pLGiven], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pWKillsx:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `WKills`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pWKills], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pWDeathsx:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `WDeaths`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pWDeaths], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pMUsedx:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `MUsed`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pMUsed], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pDDepositx:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `DDeposit`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pDDeposit], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pMDepositx:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `MDeposit`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pMDeposit], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pNewsx:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `News`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pNews], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPaydayurix:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Paydayuri`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPaydayuri], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pLivesx:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Lives`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pLives], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pOrdersx:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Orders`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pOrders], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pContractsx:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Contracts`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pContracts], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pDConfiscatex:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `DConfiscate`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pDConfiscate], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pLConfiscatex:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `LConfiscate`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pLConfiscate], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pTicketsx:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Tickets`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pTickets], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pArrestssx:
				{
				    mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Arrests`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pArrestss], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pCreditsx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `CreditsF`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCredits], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pNMutedx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `NMuted`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pNMuted], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pHelpedPlayersx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `HelpedPlayers`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pHelpedPlayers], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pCommands:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `Commands`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCommands], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pHiddenColorx:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `HiddenColor`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pHiddenColor], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pGiftTimex:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `GiftTime`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pGiftTime], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pFightStylex:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `FightStyle`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pFightStyle], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pHUD1x:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `HUD1`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pHUD1], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pHUD2x:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `HUD2`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pHUD2], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pHUD3x:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `HUD3`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pHUD3], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
				case pPinCodex:
				{
					mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `PinCode`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPinCode], PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,var,"","");
				}
			}
		}
	}
	return 1;
}

// VEHICLE COMPONENT SAVE
forward SaveComponent(vehicleid,componentid);
public SaveComponent(vehicleid,componentid)
{
	for(new s=0; s<20; s++)
	{
		if(componentid == spoiler[s][0])
		{
			CarInfo[OwnedVeh(vehicleid)][mod1] = componentid;
		}
	}
	for(new s=0; s<3; s++)
	{
		if(componentid == nitro[s][0])
		{
			CarInfo[OwnedVeh(vehicleid)][mod2] = componentid;
		}
	}
	for(new s=0; s<23; s++)
	{
		if(componentid == fbumper[s][0])
		{
			CarInfo[OwnedVeh(vehicleid)][mod3] = componentid;
		}
	}
	for(new s=0; s<22; s++)
	{
		if(componentid == rbumper[s][0])
		{
			CarInfo[OwnedVeh(vehicleid)][mod4] = componentid;
		}
	}
	for(new s=0; s<28; s++)
	{
		if(componentid == exhaust[s][0])
		{
			CarInfo[OwnedVeh(vehicleid)][mod5] = componentid;
		}
	}
	for(new s=0; s<2; s++)
	{
		if(componentid == bventr[s][0])
		{
			CarInfo[OwnedVeh(vehicleid)][mod6] = componentid;
		}
	}
	for(new s=0; s<2; s++)
	{
		if(componentid == bventl[s][0]) {
			CarInfo[OwnedVeh(vehicleid)][mod7] = componentid;
		}
	}
	for(new s=0; s<4; s++)
	{
		if(componentid == bscoop[s][0])
		{
			CarInfo[OwnedVeh(vehicleid)][mod8] = componentid;
		}
	}
	for(new s=0; s<17; s++)
	{
		if(componentid == rscoop[s][0])
		{
			CarInfo[OwnedVeh(vehicleid)][mod9] = componentid;
		}
	}
	for(new s=0; s<21; s++)
	{
		if(componentid == lskirt[s][0])
		{
			CarInfo[OwnedVeh(vehicleid)][mod10] = componentid;
		}
	}
	for(new s=0; s<21; s++)
	{
		if(componentid == rskirt[s][0])
		{
			CarInfo[OwnedVeh(vehicleid)][mod11] = componentid;
		}
	}
	for(new s=0; s<1; s++)
	{
		if(componentid == hydraulics[s][0])
		{
			CarInfo[OwnedVeh(vehicleid)][mod12] = componentid;
		}
	}
	for(new s=0; s<1; s++)
	{
		if(componentid == vbase[s][0])
		{
			CarInfo[OwnedVeh(vehicleid)][mod13] = componentid;
		}
	}
	for(new s=0; s<4; s++)
	{
		if(componentid == rbbars[s][0])
		{
			CarInfo[OwnedVeh(vehicleid)][mod14] = componentid;
		}
	}
	for(new s=0; s<2; s++)
	{
		if(componentid == fbbars[s][0])
		{
			CarInfo[OwnedVeh(vehicleid)][mod15] = componentid;
		}
	}
	for(new s=0; s<17; s++)
	{
		if(componentid == wheels[s][0])
		{
			CarInfo[OwnedVeh(vehicleid)][mod16] = componentid;
		}
	}
	for(new s=0; s<2; s++)
	{
		if(componentid == vlights[s][0])
		{
			CarInfo[OwnedVeh(vehicleid)][mod17] = componentid;
		}
	}
	vUpdate(OwnedVeh(vehicleid), cModsx);
	return 1;
}
stock VipTextVehicle(vehicleid, playerid)
{
    if(CarInfo[OwnedVeh(vehicleid)][cVIP] == 0)return 0;
    {
		if(!isnull(CarInfo[OwnedVeh(vehicleid)][cVipText]))
		{
		    if(CarInfo[OwnedVeh(vehicleid)][cModel] == 411)// infernus
		    {
				vText[OwnedVeh(vehicleid)][playerid] = CreateDynamicObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
				SetDynamicObjectMaterialText(vText[OwnedVeh(vehicleid)][playerid],  0, CarInfo[OwnedVeh(vehicleid)][cVipText], 50, "Arial", 15, 1, 0xFFFFFFFF, 0, 1);
				AttachDynamicObjectToVehicle(vText[OwnedVeh(vehicleid)][playerid], vehicleid, 0.0,-1.9, 0.3, 270.0, 0.0, 0.0);
			}
			else if(CarInfo[OwnedVeh(vehicleid)][cModel] == 560)//sultan
			{
			    vText[OwnedVeh(vehicleid)][playerid] = CreateDynamicObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
				SetDynamicObjectMaterialText(vText[OwnedVeh(vehicleid)][playerid],  0, CarInfo[OwnedVeh(vehicleid)][cVipText], 50, "Arial", 15, 1, 0xFFFFFFFF, 0, 1);
				AttachDynamicObjectToVehicle(vText[OwnedVeh(vehicleid)][playerid], vehicleid, 0.0,-0.7, 0.8, 270.0, 0.0, 0.0);
			}
			else if(CarInfo[OwnedVeh(vehicleid)][cModel] == 541)//bullet
			{
                vText[OwnedVeh(vehicleid)][playerid] = CreateDynamicObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
				SetDynamicObjectMaterialText(vText[OwnedVeh(vehicleid)][playerid], 0, CarInfo[OwnedVeh(vehicleid)][cVipText], 50, "Arial", 15, 1, 0xFFFFFFFF, 0, 1);
				AttachDynamicObjectToVehicle(vText[OwnedVeh(vehicleid)][playerid], vehicleid, 0.0,-0.4, 0.6, 274.5, 0.0, 0.0);
			}
		}
	}
	return 1;
}
stock DestryVipTextVehicle(vehicleid, playerid)
{
    DestroyDynamicObject(vText[vehicleid][playerid]);
    return 1;
}
stock ModVehicle(vehicleid)
{
	if(CarInfo[OwnedVeh(vehicleid)][mod1] != 0)
	{
		AddVehicleComponent(vehicleid,CarInfo[OwnedVeh(vehicleid)][mod1]);
	}
	if(CarInfo[OwnedVeh(vehicleid)][mod2] != 0)
	{
		AddVehicleComponent(vehicleid,CarInfo[OwnedVeh(vehicleid)][mod2]);
	}
	if(CarInfo[OwnedVeh(vehicleid)][mod3] != 0)
	{
		AddVehicleComponent(vehicleid,CarInfo[OwnedVeh(vehicleid)][mod3]);
	}
	if(CarInfo[OwnedVeh(vehicleid)][mod4] != 0)
	{
		AddVehicleComponent(vehicleid,CarInfo[OwnedVeh(vehicleid)][mod4]);
	}
	if(CarInfo[OwnedVeh(vehicleid)][mod5] != 0)
	{
		AddVehicleComponent(vehicleid,CarInfo[OwnedVeh(vehicleid)][mod5]);
	}
	if(CarInfo[OwnedVeh(vehicleid)][mod6] != 0)
	{
		AddVehicleComponent(vehicleid,CarInfo[OwnedVeh(vehicleid)][mod6]);
	}
	if(CarInfo[OwnedVeh(vehicleid)][mod7] != 0)
	{
		AddVehicleComponent(vehicleid,CarInfo[OwnedVeh(vehicleid)][mod7]);
	}
	if(CarInfo[OwnedVeh(vehicleid)][mod8] != 0)
	{
		AddVehicleComponent(vehicleid,CarInfo[OwnedVeh(vehicleid)][mod8]);
	}
	if(CarInfo[OwnedVeh(vehicleid)][mod9] != 0)
	{
		AddVehicleComponent(vehicleid,CarInfo[OwnedVeh(vehicleid)][mod9]);
	}
	if(CarInfo[OwnedVeh(vehicleid)][mod10] != 0)
	{
		AddVehicleComponent(vehicleid,CarInfo[OwnedVeh(vehicleid)][mod10]);
	}
	if(CarInfo[OwnedVeh(vehicleid)][mod11] != 0)
	{
		AddVehicleComponent(vehicleid,CarInfo[OwnedVeh(vehicleid)][mod11]);
	}
	if(CarInfo[OwnedVeh(vehicleid)][mod12] != 0)
	{
		AddVehicleComponent(vehicleid,CarInfo[OwnedVeh(vehicleid)][mod12]);
	}
	if(CarInfo[OwnedVeh(vehicleid)][mod13] != 0)
	{
		AddVehicleComponent(vehicleid,CarInfo[OwnedVeh(vehicleid)][mod13]);
	}
	if(CarInfo[OwnedVeh(vehicleid)][mod14] != 0)
	{
		AddVehicleComponent(vehicleid,CarInfo[OwnedVeh(vehicleid)][mod14]);
	}
	if(CarInfo[OwnedVeh(vehicleid)][mod15] != 0)
	{
		AddVehicleComponent(vehicleid,CarInfo[OwnedVeh(vehicleid)][mod15]);
	}
	if(CarInfo[OwnedVeh(vehicleid)][mod16] != 0)
	{
		AddVehicleComponent(vehicleid,CarInfo[OwnedVeh(vehicleid)][mod16]);
	}
	if(CarInfo[OwnedVeh(vehicleid)][mod17] != 0)
	{
		AddVehicleComponent(vehicleid,CarInfo[OwnedVeh(vehicleid)][mod17]);
	}
	ChangeVehiclePaintjob(vehicleid, CarInfo[OwnedVeh(vehicleid)][cPaintJ]);
}

public MySQLCheckCar(carname[])
{
	new query[128],
		escstr[MAX_PLAYER_NAME];
	mysql_real_escape_string(carname, escstr);
	format(query, sizeof(query), "SELECT `ID` FROM stock WHERE `Car` = '%s'", escstr);
	mysql_query(SQL,query);
	mysql_store_result();
	if (mysql_num_rows()==0)
	{
	    mysql_free_result();
		return 0;
	}
	else
	{
		new strid[32],
			intid;
		mysql_fetch_row(strid);
		intid = strval(strid);
	    mysql_free_result();
		return intid;
	}
}

public MySQLCheckSpeed(vidd)
{
	new query[128];
	format(query, sizeof(query), "SELECT `speed` FROM stock WHERE `vid` = '%d'", vidd);
	mysql_query(SQL,query);
	mysql_store_result();
	if (mysql_num_rows()==0)
	{
	    mysql_free_result();
		return 0;
	}
	else
	{
		new strid[32],
			intid;
		mysql_fetch_row(strid);
		intid = strval(strid);
	    mysql_free_result();
		return intid;
	}
}

public MySQLCheckAccount(sqlplayersname[])
{
	new query[128],
		escstr[MAX_PLAYER_NAME];
	mysql_real_escape_string(sqlplayersname, escstr);
	format(query, sizeof(query), "SELECT `ID` FROM users WHERE `name` = '%s'", escstr);
	mysql_query(SQL,query);
	mysql_store_result();
	if (mysql_num_rows()==0)
	{
	    mysql_free_result();
		return 0;
	}
	else
	{
		new strid[32],
			intid;
		mysql_fetch_row(strid);
		intid = strval(strid);
	    mysql_free_result();
		return intid;
	}
}

public CheckAFK()
{
	foreach(Player,k)
	{
    	GetPlayerPos(k, PlayerPosii[k][0], PlayerPosii[k][1], PlayerPosii[k][2]);
		if(PlayerPosii[k][0] == PlayerPosii[k][3] && PlayerPosii[k][1] == PlayerPosii[k][4] && PlayerPosii[k][2] == PlayerPosii[k][5])
		{
        	IsPlayerAFK[k]++;
		}
		else
		{
	    	IsPlayerAFK[k] = 0;
		}
		PlayerPosii[k][3] = PlayerPosii[k][0];
		PlayerPosii[k][4] = PlayerPosii[k][1];
		PlayerPosii[k][5] = PlayerPosii[k][2];
	}
	return 1;
}

public TimerExplozion(objectid, Float:x, Float:y, Float:z)
{
    CreateExplosion(x,y,z,2,30.0);
    DestroyObject(objectid);
}

public CountDownCheck3(playerid)
{
	GameTextForPlayer(playerid, "~g~4", 1000, 3);
	PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
    SetTimerEx("CountDownCheck2", 1000, 0, "i", playerid);
    return 1;
}

public CountDownCheck2(playerid)
{
	GameTextForPlayer(playerid, "~g~3", 1000, 3);
	PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
    SetTimerEx("CountDownCheck1", 1000, 0, "i", playerid);
    return 1;
}

public CountDownCheck1(playerid)
{
	GameTextForPlayer(playerid, "~g~2", 1000, 3);
	PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
 	SetTimerEx("CountDownCheckGo", 1000, 0, "i", playerid);
 	return 1;
}

public CountDownCheckGo(playerid)
{
	GameTextForPlayer(playerid, "~r~GO ~y~GO ~b~GO", 3000, 3);
	PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
	return 1;
}

public CountDownFinalize()
{
	countdown = 0;
	return 1;
}

public Vendingg(playerid)
{
	KillTimer(vendi[playerid]);
	Vending[playerid] = 0;
	return 1;
}

public Vendingg2(playerid)
{
	new Float:health;
	KillTimer(vendi2[playerid]);
	GetPlayerHealthEx(playerid,health);
	ClearAnimations(playerid);
	ApplyAnimation(playerid, "VENDING", "VEND_Drink_P", 4.0, 0, 0, 0, 0, 0);
	if(health >= 75)
	{
	    SetPlayerHealthEx(playerid, 100);
	}
	else
	{
	    SetPlayerHealthEx(playerid, health+25);
	}
	return 1;
}

public AttachTrailerrr(playerid)
{
	new Float:pX,
		Float:pY,
		Float:pZ;
	GetPlayerPos(playerid,pX,pY,pZ);
	new Float:vX,
		Float:vY,
		Float:vZ;
	GetVehiclePos(viddd[playerid],vX,vY,vZ);
	if ((floatabs(pX-vX)<100.0)&&(floatabs(pY-vY)<100.0)&&(floatabs(pZ-vZ)<100.0)&&(viddd[playerid]!=GetPlayerVehicleID(playerid)))
	{
		AttachTrailerToVehicle(viddd[playerid],GetPlayerVehicleID(playerid));
	}
	return 1;
}

public Reportul(playerid)
{
	ReportTime[playerid] = 0;
	format(reporttext[playerid], 30, "NULL");
	format(cheattext[playerid], 30, "NULL");
	reportcheater[playerid] = -1;
	reportreason[playerid] = 0;
	if(playerreported[playerid] != -1)
	{
		reportreason[playerreported[playerid]] = 0;
	}
	playerreported[playerid] = -1;
	KillTimer(timerreport[playerid]);
}

public SplitRBSprinkle(lightobject, playerid)
{
	new Float:X,
		Float:Y,
		Float:Z;
	GetObjectPos(RocketBoxSprinkle[RocketBoxTime[playerid]][playerid], X, Y, Z);
	CreateExplosion(X, Y, Z, 2, 0);
	DestroyObject(RocketBoxSprinkle[RocketBoxTime[playerid]][playerid]);
	RBLight[1][playerid] = CreateObject(lightobject, X, Y, Z, 0, 0, 0);
	MoveObject(RBLight[1][playerid], (X-(0+(random(8)))), (Y-(0+(random(8)))), (Z-25), (2+(random(4))));
	RBLight[2][playerid] = CreateObject(lightobject, X, Y, Z, 0, 0, 0);
	MoveObject(RBLight[2][playerid], (X+(0+(random(8)))), (Y+(0+(random(8)))), (Z-25), (2+(random(4))));
	RBLight[3][playerid] = CreateObject(lightobject, X, Y, Z, 0, 0, 0);
	MoveObject(RBLight[3][playerid], (X-(0+(random(8)))), (Y+(0+(random(8)))), (Z-25), (2+(random(4))));
	RBLight[4][playerid] = CreateObject(lightobject, X, Y, Z, 0, 0, 0);
	MoveObject(RBLight[4][playerid], (X+(0+(random(8)))), (Y-(0+(random(8)))), (Z-25), (2+(random(4))));
	SetTimerEx("DestroyRBLight", 2600, 0, "i", playerid);
	return 1;
}

public DestroyRBLight(playerid)
{
	DestroyObject(RBLight[1][playerid]);
	DestroyObject(RBLight[2][playerid]);
	DestroyObject(RBLight[3][playerid]);
	DestroyObject(RBLight[4][playerid]);
	RocketBoxTime[playerid] = RocketBoxTime[playerid]+1;
	RocketBoxTimer(playerid);
	return 1;
}

public RocketBoxTimer(playerid)
{
	if(RocketBoxTime[playerid] == 11)
	{
	    RocketBoxTime[playerid] = 0;
	    DestroyObject(RocketBox[playerid]);
	    DestroyObject(RocketBoxSmoke[playerid]);
	    return 1;
	}
	if(RocketBoxTime[playerid] >= 1)
	{
	    new LightObject;
	    switch(random(2))
		{
			case 0:
			{
				LightObject = 354;
			}
			case 1:
			{
				LightObject = 1213;
			}
		}
	    RocketBoxSprinkle[RocketBoxTime[playerid]][playerid] = CreateObject(LightObject, RBX[playerid], RBY[playerid], RBZ[playerid], 0, 0, 0);
		MoveObject(RocketBoxSprinkle[RocketBoxTime[playerid]][playerid], RBX[playerid], RBY[playerid], (RBZ[playerid]+35), 20);
		SetTimerEx("SplitRBSprinkle", 1500, 0, "ii",LightObject, playerid);
		return 1;
	}
	return 1;
}



public FirerocketTime(playerid)
{
	if(firerockettime[playerid] == 1)
	{
		GetObjectPos(Firerocket[playerid], FRX[playerid], FRY[playerid], FRZ[playerid]);
		explosionrocket[playerid] = CreateExplosion(FRX[playerid], FRY[playerid], FRZ[playerid], 6, 0);
		SetTimerEx("splittime", 500, 0, "i", playerid);
		return 1;
	}
	if(firerockettime[playerid] == 2)
	{
		GetObjectPos(Firerocket[playerid], FRX[playerid], FRY[playerid], FRZ[playerid]);
		explosionrocket[playerid] = CreateExplosion(FRX[playerid], FRY[playerid], FRZ[playerid], 6, 0);
		SetTimerEx("splittime2", 100, 0, "i", playerid);
		return 1;
	}
	return 1;
}

public splittime(playerid)
{
	if(firerockettime[playerid] == 1)
	{
		CreateExplosion(FRX[playerid]-(0+(random(3))),FRY[playerid]-(0+(random(3))),FRZ[playerid]-(0+(random(3))), 4, 0);
		CreateExplosion(FRX[playerid]-(0+(random(3))),FRY[playerid]+(0+(random(3))),FRZ[playerid]-(0+(random(3))), 4, 0);
		CreateExplosion(FRX[playerid]-(0+(random(3))),FRY[playerid],FRZ[playerid]-(0+(random(3))), 4, 0);
		CreateExplosion(FRX[playerid]+(0+(random(3))),FRY[playerid]-(0+(random(3))),FRZ[playerid]-(0+(random(3))), 4, 0);
		CreateExplosion(FRX[playerid]+(0+(random(3))),FRY[playerid]+(0+(random(3))),FRZ[playerid]-(0+(random(3))), 4, 0);
		CreateExplosion(FRX[playerid]+(0+(random(3))),FRY[playerid],FRZ[playerid]-(0+(random(3))), 4, 0);
		CreateExplosion(FRX[playerid],FRY[playerid]-(0+(random(3))),FRZ[playerid]-(0+(random(3))), 4, 0);
		CreateExplosion(FRX[playerid],FRY[playerid]+(0+(random(3))),FRZ[playerid]-(0+(random(3))), 4, 0);
		Light[1][playerid] = CreateObject(354,FRX[playerid]-(0+(random(6))),FRY[playerid]-(0+(random(6))),FRZ[playerid]+(0+(random(6))), 0, 0,0);
		Light[2][playerid] = CreateObject(354,FRX[playerid]-(0+(random(6))),FRY[playerid],FRZ[playerid]+(0+(random(6))), 0, 0,0);
		Light[3][playerid] = CreateObject(354,FRX[playerid]-(0+(random(6))),FRY[playerid],FRZ[playerid]-(0+(random(6))), 0, 0,0);
		Light[4][playerid] = CreateObject(354,FRX[playerid]-(0+(random(6))),FRY[playerid]-(0+(random(6))),FRZ[playerid]+(0+(random(6))), 0, 0,0);
		Light[5][playerid] = CreateObject(354,FRX[playerid]-(0+(random(6))),FRY[playerid]+(0+(random(6))),FRZ[playerid]+(0+(random(6))), 0, 0,0);
		Light[6][playerid] = CreateObject(354,FRX[playerid]-(0+(random(6))),FRY[playerid],FRZ[playerid]-(0+(random(6))), 0, 0,0);
		Light[7][playerid] = CreateObject(354,FRX[playerid]-(0+(random(6))),FRY[playerid]-(0+(random(6))),FRZ[playerid]-(0+(random(6))), 0, 0,0);
		Light[8][playerid] = CreateObject(354,FRX[playerid],FRY[playerid]-(0+(random(6))),FRZ[playerid]+(0+(random(6))), 0, 0,0);
		new Float:X,
			Float:Y,
			Float:Z;
		GetObjectPos(Light[1][playerid], X, Y, Z);
		MoveObject(Light[1][playerid], X-(0+(random(6))), Y-(0+(random(6))), Z-20, 6);
		GetObjectPos(Light[2][playerid], X, Y, Z);
		MoveObject(Light[2][playerid], X-(0+(random(6))), Y+(0+(random(6))), Z-20, 5);
		GetObjectPos(Light[3][playerid], X, Y, Z);
		MoveObject(Light[3][playerid], X-(0+(random(6))), Y, Z-20, 4);
		GetObjectPos(Light[4][playerid], X, Y, Z);
		MoveObject(Light[4][playerid], X+(0+(random(6))), Y-(0+(random(6))), Z-20, 5);
		GetObjectPos(Light[5][playerid], X, Y, Z);
		MoveObject(Light[5][playerid], X+(0+(random(6))), Y+(0+(random(6))), Z-20, 5);
		GetObjectPos(Light[6][playerid], X, Y, Z);
		MoveObject(Light[6][playerid], X+(0+(random(6))), Y, Z-20, 4);
		GetObjectPos(Light[7][playerid], X, Y, Z);
		MoveObject(Light[7][playerid], X, Y-(0+(random(6))), Z-20, 6);
		GetObjectPos(Light[8][playerid], X, Y, Z);
		MoveObject(Light[8][playerid], X, Y+(0+(random(6))), Z-20, 5);
		SetTimerEx("lighttimer", 3900, 0, "i", playerid);
		DestroyObject(Firerocket[playerid]);
		DestroyObject(rocketsmoke[playerid]);
		return 1;
	}
	return 1;
}

public splittime2(playerid)
{
	if(firerockettime[playerid] == 2)
	{
		CreateExplosion(FRX[playerid]-(0+(random(10))),FRY[playerid]-(0+(random(10))),FRZ[playerid]-5, 6, 0);
		CreateExplosion(FRX[playerid]-(0+(random(10))),FRY[playerid]+(0+(random(10))),FRZ[playerid]-5, 6, 0);
		CreateExplosion(FRX[playerid]-(0+(random(10))),FRY[playerid],FRZ[playerid]-5, 6, 0);
		CreateExplosion(FRX[playerid]+(0+(random(10))),FRY[playerid]-(0+(random(10))),FRZ[playerid]-5, 6, 0);
		CreateExplosion(FRX[playerid]+(0+(random(10))),FRY[playerid]+(0+(random(10))),FRZ[playerid]-5, 6, 0);
		CreateExplosion(FRX[playerid]+(0+(random(10))),FRY[playerid],FRZ[playerid]-5, 6, 0);
		CreateExplosion(FRX[playerid],FRY[playerid]-(0+(random(10))),FRZ[playerid]-5, 6, 0);
		CreateExplosion(FRX[playerid],FRY[playerid]+(0+(random(10))),FRZ[playerid]-5, 6, 0);
		Light[1][playerid] = CreateObject(354,FRX[playerid]-(0+(random(10))),FRY[playerid]-(0+(random(10))),FRZ[playerid]-5, 0, 0,0);
		Light[2][playerid] = CreateObject(354,FRX[playerid]-(0+(random(10))),FRY[playerid]+(0+(random(10))),FRZ[playerid]-5, 0, 0,0);
		Light[3][playerid] = CreateObject(354,FRX[playerid]-(0+(random(10))),FRY[playerid],FRZ[playerid]-5, 0, 0,0);
		Light[4][playerid] = CreateObject(354,FRX[playerid]+(0+(random(10))),FRY[playerid]-(0+(random(10))),FRZ[playerid]-5, 0, 0,0);
		Light[5][playerid] = CreateObject(354,FRX[playerid]+(0+(random(10))),FRY[playerid]+(0+(random(10))),FRZ[playerid]-5, 0, 0,0);
		Light[6][playerid] = CreateObject(354,FRX[playerid]+(0+(random(10))),FRY[playerid],FRZ[playerid]-5, 0, 0,0);
		Light[7][playerid] = CreateObject(354,FRX[playerid],FRY[playerid]-(0+(random(10))),FRZ[playerid]-5, 0, 0,0);
		Light[8][playerid] = CreateObject(354,FRX[playerid],FRY[playerid]+(0+(random(10))),FRZ[playerid]-5, 0, 0,0);
		new Float:X,
			Float:Y,
			Float:Z;
		GetObjectPos(Light[1][playerid], X, Y, Z);
		MoveObject(Light[1][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[2][playerid], X, Y, Z);
		MoveObject(Light[2][playerid], X-6, Y+6, Z-20, 4);
		GetObjectPos(Light[3][playerid], X, Y, Z);
		MoveObject(Light[3][playerid], X-6, Y, Z-20, 4);
		GetObjectPos(Light[4][playerid], X, Y, Z);
		MoveObject(Light[4][playerid], X+6, Y-6, Z-20, 4);
		GetObjectPos(Light[5][playerid], X, Y, Z);
		MoveObject(Light[5][playerid], X+6, Y+6, Z-20, 4);
		GetObjectPos(Light[6][playerid], X, Y, Z);
		MoveObject(Light[6][playerid], X+6, Y, Z-20, 4);
		GetObjectPos(Light[7][playerid], X, Y, Z);
		MoveObject(Light[7][playerid], X, Y-6, Z-20, 4);
		GetObjectPos(Light[8][playerid], X, Y, Z);
		MoveObject(Light[8][playerid], X, Y+6, Z-20, 4);
		SetTimerEx("splittime3", 3000, 0, "i", playerid);
		DestroyObject(Firerocket[playerid]);
		DestroyObject(rocketsmoke[playerid]);
		return 1;
	}
	return 1;
}

public splittime3(playerid)
{
	if(firerockettime[playerid] == 2)
	{
		new Float:X,
			Float:Y,
			Float:Z;
		GetObjectPos(Light[1][playerid], X, Y, Z);
		CreateExplosion(X, Y, Z, 6, 0);
		GetObjectPos(Light[2][playerid], X, Y, Z);
		CreateExplosion(X, Y, Z, 6, 0);
		GetObjectPos(Light[3][playerid], X, Y, Z);
		CreateExplosion(X, Y, Z, 6, 0);
		GetObjectPos(Light[4][playerid], X, Y, Z);
		CreateExplosion(X, Y, Z, 6, 0);
		GetObjectPos(Light[5][playerid], X, Y, Z);
		CreateExplosion(X, Y, Z, 6, 0);
		GetObjectPos(Light[6][playerid], X, Y, Z);
		CreateExplosion(X, Y, Z, 6, 0);
		GetObjectPos(Light[7][playerid], X, Y, Z);
		CreateExplosion(X, Y, Z, 6, 0);
		GetObjectPos(Light[8][playerid], X, Y, Z);
		CreateExplosion(X, Y, Z, 6, 0);
		GetObjectPos(Light[9][playerid], X, Y, Z);
		Light[11][playerid] = CreateObject(1213,X-7,Y+7,Z+8, 0, 0,0);
		Light[12][playerid] = CreateObject(1213,X-7,Y,Z+5, 0, 0,0);
		Light[13][playerid] = CreateObject(1213,X,Y+7,Z-5, 0, 0,0);
		Light[14][playerid] = CreateObject(1213,X,Y-7,Z-5, 0, 0,0);
		GetObjectPos(Light[2][playerid], X, Y, Z);
		Light[15][playerid] = CreateObject(1213,X,Y-7,Z+5, 0, 0,0);
		Light[16][playerid] = CreateObject(1213,X-7,Y,Z-5, 0, 0,0);
		Light[17][playerid] = CreateObject(1213,X,Y+7,Z-8, 0, 0,0);
		Light[18][playerid] = CreateObject(1213,X,Y+7,Z-5, 0, 0,0);
		GetObjectPos(Light[3][playerid], X, Y, Z);
		Light[19][playerid] = CreateObject(1213,X+7,Y,Z-1, 0, 0,0);
		Light[20][playerid] = CreateObject(1213,X-7,Y,Z-8, 0, 0,0);
		Light[21][playerid] = CreateObject(1213,X+7,Y+7,Z-5, 0, 0,0);
		Light[22][playerid] = CreateObject(1213,X,Y,Z+5, 0, 0,0);
		GetObjectPos(Light[4][playerid], X, Y, Z);
		Light[23][playerid] = CreateObject(1213,X+7,Y-7,Z-5, 0, 0,0);
		Light[24][playerid] = CreateObject(1213,X-7,Y,Z-7, 0, 0,0);
		Light[25][playerid] = CreateObject(1213,X+7,Y+7,Z+5, 0, 0,0);
		Light[26][playerid] = CreateObject(1213,X,Y-7,Z, 0, 0,0);
		GetObjectPos(Light[5][playerid], X, Y, Z);
		Light[27][playerid] = CreateObject(1213,X,Y-7,Z-5, 0, 0,0);
		Light[28][playerid] = CreateObject(1213,X-7,Y,Z+8, 0, 0,0);
		Light[29][playerid] = CreateObject(1213,X+7,Y,Z-8, 0, 0,0);
		Light[30][playerid] = CreateObject(1213,X,Y+7,Z+5, 0, 0,0);
		GetObjectPos(Light[6][playerid], X, Y, Z);
		Light[31][playerid] = CreateObject(1213,X-7,Y-7,Z-7, 0, 0,0);
		Light[32][playerid] = CreateObject(1213,X,Y,Z-5, 0, 0,0);
		Light[33][playerid] = CreateObject(1213,X+7,Y+7,Z+5, 0, 0,0);
		Light[34][playerid] = CreateObject(1213,X+4,Y-7,Z-5, 0, 0,0);
		GetObjectPos(Light[7][playerid], X, Y, Z);
		Light[35][playerid] = CreateObject(1213,X-7,Y-7,Z-8, 0, 0,0);
		Light[36][playerid] = CreateObject(1213,X-7,Y,Z+5, 0, 0,0);
		Light[37][playerid] = CreateObject(1213,X,Y,Z-5, 0, 0,0);
		Light[38][playerid] = CreateObject(1213,X,Y-7,Z+8, 0, 0,0);
		GetObjectPos(Light[8][playerid], X, Y, Z);
		Light[39][playerid] = CreateObject(1213,X-4,Y-7,Z-8, 0, 0,0);
		Light[40][playerid] = CreateObject(1213,X+7,Y,Z+8, 0, 0,0);
		Light[41][playerid] = CreateObject(1213,X+4,Y,Z+5, 0, 0,0);
		Light[42][playerid] = CreateObject(1213,X,Y-7,Z-5, 0, 0,0);
		GetObjectPos(Light[1][playerid], X, Y, Z);
		MoveObject(Light[1][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[2][playerid], X, Y, Z);
		MoveObject(Light[2][playerid], X-6, Y+6, Z-20, 4);
		GetObjectPos(Light[3][playerid], X, Y, Z);
		MoveObject(Light[3][playerid], X-6, Y, Z-20, 4);
		GetObjectPos(Light[4][playerid], X, Y, Z);
		MoveObject(Light[4][playerid], X+6, Y-6, Z-20, 4);
		GetObjectPos(Light[5][playerid], X, Y, Z);
		MoveObject(Light[5][playerid], X+6, Y+6, Z-20, 4);
		GetObjectPos(Light[6][playerid], X, Y, Z);
		MoveObject(Light[6][playerid], X+6, Y, Z-20, 4);
		GetObjectPos(Light[7][playerid], X, Y, Z);
		MoveObject(Light[1][playerid], X, Y-6, Z-20, 4);
		GetObjectPos(Light[8][playerid], X, Y, Z);
		MoveObject(Light[8][playerid], X, Y+6, Z-20, 4);
		GetObjectPos(Light[11][playerid], X, Y, Z);
		MoveObject(Light[11][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[12][playerid], X, Y, Z);
		MoveObject(Light[12][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[13][playerid], X, Y, Z);
		MoveObject(Light[13][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[14][playerid], X, Y, Z);
		MoveObject(Light[14][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[15][playerid], X, Y, Z);
		MoveObject(Light[15][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[16][playerid], X, Y, Z);
		MoveObject(Light[16][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[17][playerid], X, Y, Z);
		MoveObject(Light[17][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[18][playerid], X, Y, Z);
		MoveObject(Light[18][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[19][playerid], X, Y, Z);
		MoveObject(Light[19][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[20][playerid], X, Y, Z);
		MoveObject(Light[20][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[21][playerid], X, Y, Z);
		MoveObject(Light[21][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[22][playerid], X, Y, Z);
		MoveObject(Light[22][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[23][playerid], X, Y, Z);
		MoveObject(Light[23][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[24][playerid], X, Y, Z);
		MoveObject(Light[24][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[25][playerid], X, Y, Z);
		MoveObject(Light[25][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[26][playerid], X, Y, Z);
		MoveObject(Light[26][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[27][playerid], X, Y, Z);
		MoveObject(Light[27][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[28][playerid], X, Y, Z);
		MoveObject(Light[28][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[29][playerid], X, Y, Z);
		MoveObject(Light[29][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[30][playerid], X, Y, Z);
		MoveObject(Light[30][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[31][playerid], X, Y, Z);
		MoveObject(Light[31][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[32][playerid], X, Y, Z);
		MoveObject(Light[32][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[33][playerid], X, Y, Z);
		MoveObject(Light[33][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[34][playerid], X, Y, Z);
		MoveObject(Light[34][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[35][playerid], X, Y, Z);
		MoveObject(Light[35][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[36][playerid], X, Y, Z);
		MoveObject(Light[36][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[37][playerid], X, Y, Z);
		MoveObject(Light[37][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[38][playerid], X, Y, Z);
		MoveObject(Light[38][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[39][playerid], X, Y, Z);
		MoveObject(Light[39][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[40][playerid], X, Y, Z);
		MoveObject(Light[40][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[41][playerid], X, Y, Z);
		MoveObject(Light[41][playerid], X-6, Y-6, Z-20, 4);
		GetObjectPos(Light[42][playerid], X, Y, Z);
		MoveObject(Light[42][playerid], X-6, Y-6, Z-20, 4);
		SetTimerEx("lighttimer2", 4000, 0, "i", playerid);
		DestroyObject(Firerocket[playerid]);
		DestroyObject(rocketsmoke[playerid]);
		return 1;
	}
	return 1;
}

public lighttimer(playerid)
{
	DestroyObject(Light[1][playerid]);
	DestroyObject(Light[2][playerid]);
	DestroyObject(Light[3][playerid]);
	DestroyObject(Light[4][playerid]);
	DestroyObject(Light[5][playerid]);
    DestroyObject(Light[6][playerid]);
    DestroyObject(Light[7][playerid]);
    DestroyObject(Light[8][playerid]);
    firerockettime[playerid] = 0;
	return 1;
}

public lighttimer2(playerid)
{
	DestroyObject(Light[1][playerid]);
	DestroyObject(Light[2][playerid]);
	DestroyObject(Light[3][playerid]);
	DestroyObject(Light[4][playerid]);
	DestroyObject(Light[5][playerid]);
    DestroyObject(Light[6][playerid]);
    DestroyObject(Light[7][playerid]);
    DestroyObject(Light[8][playerid]);
    DestroyObject(Light[11][playerid]);
	DestroyObject(Light[12][playerid]);
	DestroyObject(Light[13][playerid]);
	DestroyObject(Light[14][playerid]);
	DestroyObject(Light[15][playerid]);
    DestroyObject(Light[16][playerid]);
    DestroyObject(Light[17][playerid]);
    DestroyObject(Light[18][playerid]);
    DestroyObject(Light[19][playerid]);
	DestroyObject(Light[20][playerid]);
	DestroyObject(Light[21][playerid]);
	DestroyObject(Light[22][playerid]);
	DestroyObject(Light[23][playerid]);
    DestroyObject(Light[24][playerid]);
    DestroyObject(Light[25][playerid]);
    DestroyObject(Light[26][playerid]);
    DestroyObject(Light[27][playerid]);
	DestroyObject(Light[28][playerid]);
	DestroyObject(Light[29][playerid]);
	DestroyObject(Light[30][playerid]);
	DestroyObject(Light[31][playerid]);
    DestroyObject(Light[32][playerid]);
    DestroyObject(Light[33][playerid]);
    DestroyObject(Light[34][playerid]);
    DestroyObject(Light[35][playerid]);
	DestroyObject(Light[36][playerid]);
	DestroyObject(Light[37][playerid]);
	DestroyObject(Light[38][playerid]);
	DestroyObject(Light[39][playerid]);
    DestroyObject(Light[40][playerid]);
    DestroyObject(Light[41][playerid]);
    DestroyObject(Light[42][playerid]);
    firerockettime[playerid] = 0;
	return 1;
}



public aimback(playerid)
{
    SetPlayerPosEx(playerid,Aimx[playerid],Aimy[playerid],Aimz[playerid]);
	return 1;
}

public IdleKick()
{
	if(kickafk == 1)
	{
	 	foreach(Player,i)
		{
	        if(PlayerInfo[i][pSleeping] == 0)
			{
			    if(PlayerInfo[i][pAdmin] < 1)
			    {
					GetPlayerPos(i, PlayerPos[i][0], PlayerPos[i][1], PlayerPos[i][2]);
					if(PlayerPos[i][0] == PlayerPos[i][3] && PlayerPos[i][1] == PlayerPos[i][4] && PlayerPos[i][2] == PlayerPos[i][5])
					{
						new plname[64],
							string[128];
						GetPlayerName(i, plname, sizeof(plname));
						format(string, sizeof(string), "[AdmBot]: %s Was Kicked By AdmBot For Being AFK For More Than 30 Minutes .", plname);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						KickEx(i);
					}
					PlayerPos[i][3] = PlayerPos[i][0];
					PlayerPos[i][4] = PlayerPos[i][1];
					PlayerPos[i][5] = PlayerPos[i][2];
				}
			}
		}
	}
	return 1;
}

forward WalkAnim(playerid);
public  WalkAnim(playerid)
{
	new keys, updown, leftright;
	GetPlayerKeys(playerid,keys,updown,leftright);
	if (GetPlayerWalkingStyle(playerid) == WALK_NORMAL)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_PED)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_civi",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_civi",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
 	else if (GetPlayerWalkingStyle(playerid) == WALK_GANGSTA)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_gang1",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_GANGSTA2)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_gang2",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_OLD)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_old",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_old",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_FAT_OLD)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_fatold",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_fatold",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_FAT)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_fat",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_fat",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_LADY)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_LADY2)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_WHORE)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_WHORE2)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_DRUNK)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_drunk",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_drunk",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_BLIND)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","Walk_Wuzi",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","Walk_Wuzi",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	return 1;
}

stock SetPlayerWalkingStyle(playerid, style)
{
	WalkStyle[playerid] = style;
}

stock GetPlayerWalkingStyle(playerid)
{
	return WalkStyle[playerid];
}

stock GetNoOfPlayersInVeh(vehicleid)
{
    new x;
    for ( new i; i != MAX_PLAYERS; ++i )
    {
        if ( GetPlayerVehicleID ( i ) != vehicleid ) continue;
        x += 1;
    }
    return x;
}

stock YoutubeStreamForPlayer(playerid, vlink[])
{
    new videoid[128],
		mp3link[128];
    strmid(videoid,vlink,strfind(vlink,"v=")+2,strfind(vlink,"v=")+15);
    format(mp3link,128,"http://admigos.net/youtube.php?videoid=%s",videoid);
    PlayAudioStreamForPlayersInCar(GetPlayerVehicleID(playerid),mp3link);
	return 1;
}

function LoadSafeZones()
{
	new
		Cache: db = mysql_query (SQL, "SELECT * FROM `safezones` ORDER BY `safezones`.`ID` ASC"),
		x,
		sfz,
		result[256];

 	for (new i, j = cache_get_row_count (); i != j; ++i)
	{
	    sfz ++;
       	cache_get_field_content(i, "ID", result); 			x = strval(result);
       	cache_get_field_content(i, "X", result); 			SafeZone[x][szX] = floatstr(result);
       	cache_get_field_content(i, "Y", result); 			SafeZone[x][szY] = floatstr(result);
		cache_get_field_content(i, "Z", result); 			SafeZone[x][szZ] = floatstr(result);
      	cache_get_field_content(i, "Range", result); 		SafeZone[x][szRange] = strval(result);
	}
	printf("[MySQL - SafeZone]: %d loaded...", sfz);
	cache_delete(db);
	return 1;
}

function GetPlayers(option[]) {
	new nrr = 0, id = 1002;
	if(IsNumeric(option)) {
		new i = strval(option);
		if(IsPlayerConnected(i))
		id = i;
		else id = INVALID_PLAYER_ID;
	} else {
		foreach(Player, i) {
			if(strfind(GetName(i), option, true) != -1)
			{
				nrr ++;
			}
		}
		if(nrr > 10) id = 1000;
		if(nrr == 0) id = INVALID_PLAYER_ID;
		if(nrr > 1 && nrr <= 10) id = 1001;

		foreach(Player, i) {
			if(strfind(GetName(i), option, true) != -1 && id == 1002)
			{
				id = i;
			}
		}
	}
	return id;
}
stock InvalidPlayer(playerid) return SendClientMessage(playerid, COLOR_ERROR, "Invalid Player ID/Name.");
stock ToManyResults(playerid) return SendClientMessage(playerid, COLOR_ERROR, "Too many results for this search.");
stock ShowResults(playerid, option[])
{
	new string[128];
	SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Too many results for this search. Try one of these:");
	foreach(Player, i)
	{
		if(strfind(GetName(i), option, true) != -1)
		{
			format(string, sizeof(string), "{FFFFCC}(%d) %s", i, GetName(i));
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
	}
	return 1;
}

public DrugEffectGone(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(UsingDrugs[playerid] == 1)
	    {
            UsingDrugs[playerid] = 0;
			ClearAnimations(playerid);
			SetPlayerDrunkLevel (playerid, 0);
            PlayerStoned[playerid] = 0;
            KillTimer(drug[playerid]);
		}
	}
	return 1;
}

stock GivePlayerCash(playerid, money) return Cash[playerid] += money;
stock GetPlayerCash(playerid) return Cash[playerid];
stock ResetPlayerCash(playerid) return Cash[playerid] = 0;

FindIP(StrToChk[])
{
	new IpLevel = 0;
	for(new a = 0; a < strlen(StrToChk); a++)
	{
		switch(IpLevel)
		{
			case 0:
			{
	    		if(IsNum(StrToChk[a])) IpLevel++;
			}
			case 1, 2:
			{
                if(IsNum(StrToChk[a])) IpLevel++;
                else if(StrToChk[a] == '.') IpLevel = 4;
                else IpLevel = 0;
			}
			case 3:
			{
			    if(StrToChk[a] == '.') IpLevel++;
			    else IpLevel = 0;
			}
			case 4:
			{
			    if(IsNum(StrToChk[a])) IpLevel++;
			    else IpLevel = 0;
			}
			case 5, 6:
			{
                if(IsNum(StrToChk[a])) IpLevel++;
                else if(StrToChk[a] == '.') IpLevel = 8;
                else IpLevel = 0;
			}
			case 7:
			{
			    if(StrToChk[a] == '.') IpLevel++;
			    else IpLevel = 0;
			}
			case 8:
			{
			    if(IsNum(StrToChk[a])) IpLevel++;
			    else IpLevel = 0;
			}
			case 9, 10:{
                if(IsNum(StrToChk[a])) IpLevel++;
                else if(StrToChk[a] == '.') IpLevel = 12;
                else IpLevel = 0;
			}
			case 11:
			{
			    if(StrToChk[a] == '.') IpLevel++;
			    else IpLevel = 0;
			}
			case 12:
			{
			    if(IsNum(StrToChk[a])) return 1;
                else IpLevel = 0;
   			}
  		}
	}
	return 0;
}

stock NameOfFactions(id)
{
	new ftexst[35];
	switch(id)
	{
		case 0: ftexst = "Civilian";
		case 1: ftexst = "Los Santos Police Department";
		case 2: ftexst = "F.B.I";
		case 3: ftexst = "National Guard";
		case 4: ftexst = "Los Aztecas";
		case 5: ftexst = "Grove Street";
		case 6: ftexst = "Los Vagos";
		case 7: ftexst = "Government";
		case 8: ftexst = "Las Venturas Police Departament";
		case 9: ftexst = "News Reporter";
		case 10: ftexst = "Ballas";
		case 11: ftexst = "Hitman Agency";
		case 12: ftexst = "School Instructors";
		case 13: ftexst = "Taxi Los Santos";
		case 14: ftexst = "Paramedic Las Venturas";
	}
	return ftexst;
}

stock CalculateTime(secunde)
{
	new time = secunde;
	new ora = time/3600;
	time = time%3600;
	new minute = time/60;
	time = time%60;
	new secunde2 = time;
	new string[10];
	format(string,sizeof(string),"%02d:%02d:%02d",ora,minute,secunde2);
	return string;
}

stock CalculateTime2(secunde)
{
	new time = secunde;
	time = time%3600;
	new minute = time/60;
	time = time%60;
	new secunde2 = time;
	new string[10];
	format(string,sizeof(string),"%02d:%02d",minute,secunde2);
	return string;
}

stock RespawnPVeh(vid,playerid)
{
	new vehicleid = GetPlayerVehicleID(playerid);
    new masinalui,carid;
    if(vid == personalcar[0][playerid])
    {
	    DestroyDynamicObject(vText[OwnedVeh(vehicleid)][playerid]);
        vehEngine[personalcar[0][playerid]] = 0;
        DestroyVehicle(personalcar[0][playerid]);
        DestroyNeon(playerid, personalcar[0][playerid]);
        OwnedVeh(personalcar[0][playerid]) = 0;
        carid = PlayerInfo[playerid][pPcarkey];
        Gas[personalcar[0][playerid]] = CarInfo[carid][cGas];
        masinalui = 1;
    }
    else if(vid == personalcar[1][playerid])
    {
	    DestroyDynamicObject(vText[OwnedVeh(vehicleid)][playerid]);
        vehEngine[personalcar[1][playerid]] = 0;
        DestroyVehicle(personalcar[1][playerid]);
        DestroyNeon(playerid, personalcar[1][playerid]);
        OwnedVeh(personalcar[1][playerid]) = 0;
        carid = PlayerInfo[playerid][pmotokey];
        Gas[personalcar[1][playerid]] = CarInfo[carid][cGas];
        masinalui = 2;
    }
    else if(vid == personalcar[2][playerid])
    {
        DestroyDynamicObject(vText[OwnedVeh(vehicleid)][playerid]);
        vehEngine[personalcar[2][playerid]] = 0;
        DestroyVehicle(personalcar[2][playerid]);
        DestroyNeon(playerid, personalcar[2][playerid]);
        OwnedVeh(personalcar[2][playerid]) = 0;
        carid = PlayerInfo[playerid][pprcarkey];
        Gas[personalcar[2][playerid]] = CarInfo[carid][cGas];
        masinalui = 3;
    }
    else if(vid == personalcar[3][playerid])
    {
        DestroyDynamicObject(vText[OwnedVeh(vehicleid)][playerid]);
        vehEngine[personalcar[3][playerid]] = 0;
        DestroyVehicle(personalcar[3][playerid]);
        DestroyNeon(playerid, personalcar[3][playerid]);
        OwnedVeh(personalcar[3][playerid]) = 0;
        carid = PlayerInfo[playerid][pprcarkey2];
        Gas[personalcar[3][playerid]] = CarInfo[carid][cGas];
        masinalui = 4;
    }
    else if(vid == personalcar[4][playerid])
    {
        DestroyDynamicObject(vText[OwnedVeh(vehicleid)][playerid]);
        vehEngine[personalcar[4][playerid]] = 0;
        DestroyVehicle(personalcar[4][playerid]);
        DestroyNeon(playerid, personalcar[4][playerid]);
        OwnedVeh(personalcar[4][playerid]) = 0;
        carid = PlayerInfo[playerid][pPPluscarkey];
        Gas[personalcar[4][playerid]] = CarInfo[carid][cGas];
        masinalui = 5;
    }
    else if(vid == personalcar[5][playerid])
    {
        DestroyDynamicObject(vText[OwnedVeh(vehicleid)][playerid]);
        vehEngine[personalcar[5][playerid]] = 0;
        DestroyVehicle(personalcar[5][playerid]);
        DestroyNeon(playerid, personalcar[5][playerid]);
        OwnedVeh(personalcar[5][playerid]) = 0;
        carid = PlayerInfo[playerid][pPPluscarkey2];
        Gas[personalcar[5][playerid]] = CarInfo[carid][cGas];
        masinalui = 6;
    }
    new car = CreateVehicle(CarInfo[carid][cModel],CarInfo[carid][cLocationx],CarInfo[carid][cLocationy],CarInfo[carid][cLocationz],CarInfo[carid][cAngle],CarInfo[carid][cColorOne],CarInfo[carid][cColorTwo],500000);
    SetVehicleNumberPlate(car, CarInfo[carid][cLicense]);
    SetVehicleHealth(car, CarInfo[carid][cHP]);
    UpdateVehicleDamageStatus(car, CarInfo[carid][cDamage1], CarInfo[carid][cDamage2], CarInfo[carid][cDamage3], CarInfo[carid][cDamage4]);
    new engine,lights,alarm,doors,bonnet,boot,objective;
	if(CarInfo[carid][cLock] == 1)
    {
        GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
        SetVehicleParamsEx(car,engine,lights,alarm,1,bonnet,boot,objective);
    }
    if(CarInfo[carid][cLock] == 0)
    {
        GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
        SetVehicleParamsEx(car,engine,lights,alarm,0,bonnet,boot,objective);
    }
    OwnedVeh(car) = carid;
    if(masinalui == 1)
        personalcar[0][playerid] = car;
    if(masinalui == 2)
        personalcar[1][playerid] = car;
    if(masinalui == 3)
        personalcar[2][playerid] = car;
    if(masinalui == 4)
        personalcar[3][playerid] = car;
    if(masinalui == 5)
        personalcar[4][playerid] = car;
    if(masinalui == 6)
        personalcar[5][playerid] = car;
    SwitchKey[playerid] = 1;
    ModVehicle(car);
    return 1;
}

stock DestroyPVehs(playerid)
{
    if(personalcar[0][playerid] != 0)
	{
		vehEngine[personalcar[0][playerid]] = 0;
		DestryVipTextVehicle(personalcar[0][playerid], playerid);
		DestroyNeon(playerid, personalcar[0][playerid]);
		DestroyVehicle(personalcar[0][playerid]);
		OwnedVeh(personalcar[0][playerid]) = 0;
		Gas[personalcar[0][playerid]] = 100;
		personalcar[0][playerid] = 0;
	}
	if(personalcar[1][playerid] != 0)
	{
		vehEngine[personalcar[1][playerid]] = 0;
		DestryVipTextVehicle(personalcar[1][playerid], playerid);
		DestroyNeon(playerid, personalcar[1][playerid]);
		DestroyVehicle(personalcar[1][playerid]);
		OwnedVeh(personalcar[1][playerid]) = 0;
		Gas[personalcar[1][playerid]] = 100;
		personalcar[1][playerid] = 0;
	}
	if(personalcar[2][playerid] != 0)
	{
		vehEngine[personalcar[2][playerid]] = 0;
		DestryVipTextVehicle(personalcar[2][playerid], playerid);
		DestroyNeon(playerid, personalcar[2][playerid]);
		DestroyVehicle(personalcar[2][playerid]);
		OwnedVeh(personalcar[2][playerid]) = 0;
		Gas[personalcar[2][playerid]] = 100;
		personalcar[2][playerid] = 0;
	}
	if(personalcar[3][playerid] != 0)
	{
		vehEngine[personalcar[3][playerid]] = 0;
		DestryVipTextVehicle(personalcar[3][playerid], playerid);
		DestroyNeon(playerid, personalcar[3][playerid]);
		DestroyVehicle(personalcar[3][playerid]);
		OwnedVeh(personalcar[3][playerid]) = 0;
		Gas[personalcar[3][playerid]] = 100;
		personalcar[3][playerid] = 0;
	}
	if(personalcar[4][playerid] != 0)
	{
		vehEngine[personalcar[4][playerid]] = 0;
		DestryVipTextVehicle(personalcar[4][playerid], playerid);
		DestroyNeon(playerid, personalcar[4][playerid]);
		DestroyVehicle(personalcar[4][playerid]);
		OwnedVeh(personalcar[4][playerid]) = 0;
		Gas[personalcar[4][playerid]] = 100;
		personalcar[4][playerid] = 0;
	}
	if(personalcar[5][playerid] != 0)
	{
		vehEngine[personalcar[5][playerid]] = 0;
		DestryVipTextVehicle(personalcar[5][playerid], playerid);
		DestroyNeon(playerid, personalcar[5][playerid]);
		DestroyVehicle(personalcar[5][playerid]);
		OwnedVeh(personalcar[5][playerid]) = 0;
		Gas[personalcar[5][playerid]] = 100;
		personalcar[5][playerid] = 0;
	}
	return 1;
}


stock IsPlayerInRangeOfPlayer(playerid, playerid2, Float: radius) {

	new
		Float:Floats[3];

	GetPlayerPos(playerid2, Floats[0], Floats[1], Floats[2]);
	return IsPlayerInRangeOfPoint(playerid, radius, Floats[0], Floats[1], Floats[2]);
}

stock GetClanMembers(clanid)
{
	new string[256],
		members=0;
	format(string, sizeof(string), "SELECT * FROM `users` WHERE `Clan` = '%d'", clanid);
	new Cache: membresult = mysql_query(SQL, string);
	for(new i, j = cache_get_row_count (); i != j; ++i)
	{
		members++;
	}
	cache_delete(membresult);
	return members;
}

stock GetFactionMembers(fid)
{
	new string[128],
		Cache: Result,
		Get[2];
	format(string, sizeof(string), "SELECT `Member` FROM `users` WHERE `Member` = %d", fid);
    Result = mysql_query(SQL, string);
    cache_get_data(Get[0], Get[1], SQL);
    cache_delete(Result);
	return Get[0];
}

stock ShowFactions(playerid)
{
	new stringz2[MAX_STRING];
 	if(DynamicFactions[1][fApplication] > 0)
  	{
		format(stringz2, sizeof(stringz2),"{FFFFFF}[%d/%d]\t%s\t\t{00FF00}[ON]{FFFFFF}\t\t[%d]\n", GetFactionMembers(1), DynamicFactions[1][fMaxMembers], DynamicFactions[1][fName], DynamicFactions[1][fMinLevel]);
	}
	else
	{
 		format(stringz2, sizeof(stringz2),"{FFFFFF}[%d/%d]\t%s\t\t{FF0000}[OFF]{FFFFFF}\t\t[%d]\n", GetFactionMembers(1), DynamicFactions[1][fMaxMembers], DynamicFactions[1][fName], DynamicFactions[1][fMinLevel]);
	}
 	if(DynamicFactions[2][fApplication] > 0)
  	{
		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t{00FF00}[ON]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(2), DynamicFactions[2][fMaxMembers], DynamicFactions[2][fName], DynamicFactions[2][fMinLevel]);
	}
	else
	{
 		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t{FF0000}[OFF]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(2), DynamicFactions[2][fMaxMembers], DynamicFactions[2][fName], DynamicFactions[2][fMinLevel]);
	}
	if(DynamicFactions[3][fApplication] > 0)
	{
		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t\t{00FF00}[ON]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(3), DynamicFactions[3][fMaxMembers], DynamicFactions[3][fName], DynamicFactions[3][fMinLevel]);
	}
	else
	{
 		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t\t{FF0000}[OFF]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(3), DynamicFactions[3][fMaxMembers], DynamicFactions[3][fName], DynamicFactions[3][fMinLevel]);
	}
 	if(DynamicFactions[4][fApplication] > 0)
  	{
		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t\t{00FF00}[ON]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(4), DynamicFactions[4][fMaxMembers], DynamicFactions[4][fName], DynamicFactions[4][fMinLevel]);
	}
	else
	{
 		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t\t{FF0000}[OFF]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(4), DynamicFactions[4][fMaxMembers], DynamicFactions[4][fName], DynamicFactions[4][fMinLevel]);
	}
 	if(DynamicFactions[5][fApplication] > 0)
  	{
		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t\t{00FF00}[ON]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(5), DynamicFactions[5][fMaxMembers], DynamicFactions[5][fName], DynamicFactions[5][fMinLevel]);
	}
	else
	{
		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t\t{FF0000}[OFF]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(5), DynamicFactions[5][fMaxMembers], DynamicFactions[5][fName], DynamicFactions[5][fMinLevel]);
	}
 	if(DynamicFactions[6][fApplication] > 0)
  	{
		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t\t{00FF00}[ON]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(6), DynamicFactions[6][fMaxMembers], DynamicFactions[6][fName], DynamicFactions[6][fMinLevel]);
	}
	else
	{
 		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t\t{FF0000}[OFF]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(6), DynamicFactions[6][fMaxMembers], DynamicFactions[6][fName], DynamicFactions[6][fMinLevel]);
	}
	if(DynamicFactions[7][fApplication] > 0)
  	{
		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t\t{00FF00}[ON]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(7), DynamicFactions[7][fMaxMembers], DynamicFactions[7][fName], DynamicFactions[7][fMinLevel]);
	}
	else
	{
 		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t\t{FF0000}[OFF]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(7), DynamicFactions[7][fMaxMembers], DynamicFactions[7][fName], DynamicFactions[7][fMinLevel]);
	}
 	if(DynamicFactions[8][fApplication] > 0)
  	{
		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t{00FF00}[ON]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(8), DynamicFactions[8][fMaxMembers], DynamicFactions[8][fName], DynamicFactions[8][fMinLevel]);
	}
	else
	{
 		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t{FF0000}[OFF]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(8), DynamicFactions[8][fMaxMembers], DynamicFactions[8][fName], DynamicFactions[8][fMinLevel]);
	}
 	if(DynamicFactions[9][fApplication] > 0)
  	{
		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t{00FF00}[ON]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(9), DynamicFactions[8][fMaxMembers], DynamicFactions[8][fName], DynamicFactions[8][fMinLevel]);
	}
	else
	{
 		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t{FF0000}[OFF]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(9), DynamicFactions[8][fMaxMembers], DynamicFactions[8][fName], DynamicFactions[8][fMinLevel]);
	}
 	if(DynamicFactions[10][fApplication] > 0)
  	{
		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t\t{00FF00}[ON]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(10), DynamicFactions[9][fMaxMembers], DynamicFactions[9][fName], DynamicFactions[9][fMinLevel]);
	}
	else
	{
 		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t\t{FF0000}[OFF]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(10), DynamicFactions[9][fMaxMembers], DynamicFactions[9][fName], DynamicFactions[9][fMinLevel]);
	}
 	if(DynamicFactions[11][fApplication] > 0)
  	{
		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t\t\t{00FF00}[ON]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(11), DynamicFactions[10][fMaxMembers], DynamicFactions[10][fName], DynamicFactions[10][fMinLevel]);
	}
	else
	{
 		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t\t\t{FF0000}[OFF]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(11), DynamicFactions[10][fMaxMembers], DynamicFactions[10][fName], DynamicFactions[10][fMinLevel]);
	}
 	if(DynamicFactions[12][fApplication] > 0)
  	{
		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t\t\t{00FF00}[ON]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(12), DynamicFactions[11][fMaxMembers], DynamicFactions[11][fName], DynamicFactions[11][fMinLevel]);
	}
	else
	{
 		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t\t\t{FF0000}[OFF]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(12), DynamicFactions[11][fMaxMembers], DynamicFactions[11][fName], DynamicFactions[11][fMinLevel]);
	}
 	if(DynamicFactions[13][fApplication] > 0)
  	{
		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t{00FF00}[ON]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(13), DynamicFactions[12][fMaxMembers], DynamicFactions[12][fName], DynamicFactions[12][fMinLevel]);
	}
	else
	{
 		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t{FF0000}[OFF]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(13), DynamicFactions[12][fMaxMembers], DynamicFactions[12][fName], DynamicFactions[12][fMinLevel]);
	}
 	if(DynamicFactions[14][fApplication] > 0)
  	{
		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t\t\t{00FF00}[ON]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(14), DynamicFactions[13][fMaxMembers], DynamicFactions[13][fName], DynamicFactions[13][fMinLevel]);
	}
	else
	{
 		format(stringz2, sizeof(stringz2),"%s{FFFFFF}[%d/%d]\t%s\t\t\t\t\t{FF0000}[OFF]{FFFFFF}\t\t[%d]\n", stringz2, GetFactionMembers(14), DynamicFactions[13][fMaxMembers], DynamicFactions[13][fName], DynamicFactions[13][fMinLevel]);
	}
	ShowPlayerDialog(playerid, DIALOG_FACTIONS, DIALOG_STYLE_LIST,"{FF0000}M{FFFFFF}embers                  {FF0000}F{FFFFFF}action {FF0000}N{FFFFFF}ame                          {FF0000}A{FFFFFF}pplications              {FF0000}L{FFFFFF}evel", stringz2, "Select", "Cancel");
	return 1;
}

stock GetOnLinePlayers()
{
    new OnLine;
    for(new i, g = GetMaxPlayers(); i < g; i++)
        if(IsPlayerConnected(i))
            OnLine++;
    return OnLine;
}

stock Text3D:CreateStreamed3DTextLabel(const string[], color, Float:posx, Float:posy, Float:posz, Float:draw_distance, virtualworld, testlos = 0)
{
	return CreateDynamic3DTextLabel(string, color, posx, posy, posz, draw_distance, INVALID_PLAYER_ID, INVALID_PLAYER_ID, testlos, virtualworld, -1, -1, 100.0);
}

stock GetVehicleSpeedIDCAR(vehicleid)
{
    new Float:x,Float:y,Float:z,vel;
    GetVehicleVelocity( vehicleid, x, y, z );
    vel = floatround( floatsqroot( x*x + y*y + z*z ) * 180 );
    return vel;
}

stock GetVehicleSpeed(vehicleid, get3d)
{
	new Float:x, Float:y, Float:z;
	GetVehicleVelocity(vehicleid, x, y, z);
	return SpeedCheck(x, y, z, 100.0, get3d);
}

stock ModifyVehicleSpeed(vehicleid,mph)
{
	new Float:Vx,Float:Vy,Float:Vz,Float:DV,Float:multiple;
	GetVehicleVelocity(vehicleid,Vx,Vy,Vz);
	DV = floatsqroot(Vx*Vx + Vy*Vy + Vz*Vz);
	if(DV > 0)
	{
		multiple = ((mph + DV * 100) / (DV * 100));
		return SetVehicleVelocity(vehicleid,Vx*multiple,Vy*multiple,Vz*multiple);
	}
	return 0;
}

stock PlayAudioStreamForPlayersInCar(vehicleid,url[])
{
    foreach(Player,i)
    {
        if(IsPlayerInAnyVehicle(i))
        {
            if(GetPlayerVehicleID(i) == vehicleid)
            {
                PlayAudioStreamForPlayer(i,url);
            }
        }
    }
    return 1;
}

stock StopAudioStreamForPlayersInCar(vehicleid)
{
    foreach(Player,i)
    {
        if(IsPlayerInAnyVehicle(i))
        {
            if(GetPlayerVehicleID(i) == vehicleid)
            {
                StopAudioStreamForPlayer(i);
            }
        }
    }
    return 1;
}

FormatNumber(number)
{
   new Str[15];
   format(Str, 15, "%d", number);

   if (strlen(Str) < sizeof(Str))
   {
      if (number >= 1000 && number < 10000)
             strins( Str, ",", 1, sizeof(Str));

      else if (number >= 10000 && number < 100000)
           strins(Str, ",", 2, sizeof(Str));

      else if (number >= 100000 && number < 1000000)
           strins(Str, ",", 3, sizeof(Str));

      else if (number >= 1000000 && number < 10000000)
           strins(Str, ",", 1, sizeof(Str)),strins(Str, ",", 5, sizeof(Str));

      else if (number >= 10000000 && number < 100000000)
           strins(Str, ",", 2, sizeof(Str)),strins(Str, ",", 6, sizeof(Str));

      else if (number >= 100000000 && number < 1000000000)
           strins(Str, ",", 3, sizeof(Str)),strins(Str, ",", 7, sizeof(Str));

      else if (number >= 1000000000 && number < 10000000000)
           strins(Str, ",", 1, sizeof(Str)),
           strins(Str, ",", 5, sizeof(Str)),
           strins(Str, ",", 9, sizeof(Str));
      else format(Str, 10, "%d", number);
   }
   else  format( Str, 15, "<BUG>" );
   return Str;
}

IsNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}

stock sscanf(string[], format[], {Float,_}:...)
{
	#if defined isnull
		if (isnull(string))
	#else
		if (string[0] == 0 || (string[0] == 1 && string[1] == 0))
	#endif
		{
			return format[0];
		}
	#pragma tabsize 4
	new
		formatPos = 0,
		stringPos = 0,
		paramPos = 2,
		paramCount = numargs(),
		delim = ' ';
	while (string[stringPos] && string[stringPos] <= ' ')
	{
		stringPos++;
	}
	while (paramPos < paramCount && string[stringPos])
	{
		switch (format[formatPos++])
		{
			case '\0':
			{
				return 0;
			}
			case 'i', 'd':
			{
				new
					neg = 1,
					num = 0,
					ch = string[stringPos];
				if (ch == '-')
				{
					neg = -1;
					ch = string[++stringPos];
				}
				do
				{
					stringPos++;
					if ('0' <= ch <= '9')
					{
						num = (num * 10) + (ch - '0');
					}
					else
					{
						return -1;
					}
				}
				while ((ch = string[stringPos]) > ' ' && ch != delim);
				setarg(paramPos, 0, num * neg);
			}
			case 'h', 'x':
			{
				new
					num = 0,
					ch = string[stringPos];
				do
				{
					stringPos++;
					switch (ch)
					{
						case 'x', 'X':
						{
							num = 0;
							continue;
						}
						case '0' .. '9':
						{
							num = (num << 4) | (ch - '0');
						}
						case 'a' .. 'f':
						{
							num = (num << 4) | (ch - ('a' - 10));
						}
						case 'A' .. 'F':
						{
							num = (num << 4) | (ch - ('A' - 10));
						}
						default:
						{
							return -1;
						}
					}
				}
				while ((ch = string[stringPos]) > ' ' && ch != delim);
				setarg(paramPos, 0, num);
			}
			case 'c':
			{
				setarg(paramPos, 0, string[stringPos++]);
			}
			case 'f':
			{

				new changestr[16], changepos = 0, strpos = stringPos;
				while(changepos < 16 && string[strpos] && string[strpos] != delim)
				{
					changestr[changepos++] = string[strpos++];
    				}
				changestr[changepos] = '\0';
				setarg(paramPos,0,_:floatstr(changestr));
			}
			case 'p':
			{
				delim = format[formatPos++];
				continue;
			}
			case '\':
			{
				new
					end = formatPos - 1,
					ch;
				while ((ch = format[++end]) && ch != '\') {}
				if (!ch)
				{
					return -1;
				}
				format[end] = '\0';
				if ((ch = strfind(string, format[formatPos], false, stringPos)) == -1)
				{
					if (format[end + 1])
					{
						return -1;
					}
					return 0;
				}
				format[end] = '\';
				stringPos = ch + (end - formatPos);
				formatPos = end + 1;
			}
			case 'u':
			{
				new
					end = stringPos - 1,
					id = 0,
					bool:num = true,
					ch;
				while ((ch = string[++end]) && ch != delim)
				{
					if (num)
					{
						if ('0' <= ch <= '9')
						{
							id = (id * 10) + (ch - '0');
						}
						else
						{
							num = false;
						}
					}
				}
				if (num && IsPlayerConnected(id))
				{
					setarg(paramPos, 0, id);
				}
				else
				{
					#if !defined foreach
						#define foreach(%1,%2) for (new %2 = 0; %2 < MAX_PLAYERS; %2++) if (IsPlayerConnected(%2))
						#define __SSCANF_FOREACH__
					#endif
					string[end] = '\0';
					num = false;
					new
						name[MAX_PLAYER_NAME];
					id = end - stringPos;
					foreach (Player, playerid)
					{
						GetPlayerName(playerid, name, sizeof (name));
						if (!strcmp(name, string[stringPos], true, id))
						{
							setarg(paramPos, 0, playerid);
							num = true;
							break;
						}
					}
					if (!num)
					{
						setarg(paramPos, 0, INVALID_PLAYER_ID);
					}
					string[end] = ch;
					#if defined __SSCANF_FOREACH__
						#undef foreach
						#undef __SSCANF_FOREACH__
					#endif
				}
				stringPos = end;
			}
			case 's', 'z':
			{
				new
					i = 0,
					ch;
				if (format[formatPos])
				{
					while ((ch = string[stringPos++]) && ch != delim)
					{
						setarg(paramPos, i++, ch);
					}
					if (!i)
					{
						return -1;
					}
				}
				else
				{
					while ((ch = string[stringPos++]))
					{
						setarg(paramPos, i++, ch);
					}
				}
				stringPos--;
				setarg(paramPos, i, '\0');
			}
			default:
			{
				continue;
			}
		}
		while (string[stringPos] && string[stringPos] != delim && string[stringPos] > ' ')
		{
			stringPos++;
		}
		while (string[stringPos] && (string[stringPos] == delim || string[stringPos] <= ' '))
		{
			stringPos++;
		}
		paramPos++;
	}
	do
	{
		if ((delim = format[formatPos++]) > ' ')
		{
			if (delim == '\')
			{
				while ((delim = format[formatPos++]) && delim != '\') {}
			}
			else if (delim != 'z')
			{
				return delim;
			}
		}
	}
	while (delim > ' ');
	return 0;
}

stock right(source[], len)
{
	new retval[MAX_STRING], srclen;
	srclen = strlen(source);
	strmid(retval, source, srclen - len, srclen, MAX_STRING);
	return retval;
}

stock IsMail(email[])
{
  	new len=strlen(email),
  		cstate=0,
  		i;
  	for(i=0;i<len;i++)
	{
	    if ((cstate==0 || cstate==1) && (email[i]>='A' && email[i]<='Z')||(email[i]>='0' && email[i]<='9') || (email[i]>='a' && email[i]<='z')  || (email[i]=='.')  || (email[i]=='-')  || (email[i]=='_'))
	    {
	    }
		else
		{
	       if ((cstate==0) &&(email[i]=='@'))
		   {
	          cstate=1;
	       }
		   else
		   {
	          return false;
	       }
	 	}
	}
  	if (cstate<1) return false;
  	if (len<6) return false;
  	if ((email[len-3]=='.') || (email[len-4]=='.') || (email[len-5]=='.')) return true;
  	return false;
}

stock IsVehicleOccupied(vehicleid)
{
	foreach(Player, i)
	{
		if( IsPlayerInVehicle( i, vehicleid ) ) return 1;
	}
	return 0;
}

public Spectator()
{
	new string[256];
	foreach(Player,i)
	{
	    if(PlayerInfo[i][pAdmin] >= 1 || PlayerInfo[i][pHelper] >= 1)
	    {
			if(IsPlayerConnected(i))
			{
				if(Spectate[i] != -1)
				{
					new targetid = Spectate[i];
					if(IsPlayerConnected(targetid))
					{
				        new Float:health,
					    	name[MAX_PLAYER_NAME];
					    GetPlayerName(targetid, name, sizeof(name));
					    GetPlayerHealthEx(targetid, health);
					    if(GetPlayerState(targetid) == PLAYER_STATE_DRIVER || GetPlayerState(targetid) == PLAYER_STATE_PASSENGER)
						{
					        new Float:Valoarea,
								carid = GetPlayerVehicleID(targetid),
								speed = Carspeed(targetid);
							GetVehicleHealth(carid,Valoarea);
						    format(string, sizeof(string), "%s (~r~%d~w~) - L ~r~%d", name, targetid, PlayerInfo[targetid][pLevel]);
						    PlayerTextDrawSetString(i, TextDrawSpec[i][1], string);
						    format(string, sizeof(string), "HEALTH:~r~ %.1f", health);
						    PlayerTextDrawSetString(i, TextDrawSpec[i][2], string);
						    format(string, sizeof(string), "W: ~r~%d ~w~- JAIL: ~r~%d", PlayerInfo[targetid][pWantedLevel], PlayerInfo[targetid][pJailTime]);
							PlayerTextDrawSetString(i, TextDrawSpec[i][3], string);
							format(string, sizeof(string), "CAR: ~r~%d ~w~(~r~%.1f~w~ HP)", carid, Valoarea);
							PlayerTextDrawSetString(i, TextDrawSpec[i][4], string);
							format(string, sizeof(string), "SPEED: ~g~%d KM/H", speed);
							PlayerTextDrawSetString(i, TextDrawSpec[i][5], string);
						    PlayerTextDrawShow(i, TextDrawSpec[i][1]);
							PlayerTextDrawShow(i, TextDrawSpec[i][2]);
							PlayerTextDrawShow(i, TextDrawSpec[i][3]);
							PlayerTextDrawShow(i, TextDrawSpec[i][4]);
							PlayerTextDrawShow(i, TextDrawSpec[i][5]);
						}
						else
						{
						    format(string, sizeof(string), "%s (~r~%d~w~) - L ~r~%d", name, targetid, PlayerInfo[targetid][pLevel]);
						    PlayerTextDrawSetString(i, TextDrawSpec[i][1], string);
						    format(string, sizeof(string), "HEALTH:~r~ %.1f", health);
						    PlayerTextDrawSetString(i, TextDrawSpec[i][2], string);
							format(string, sizeof(string), "W: ~r~%d ~w~- JAIL: ~r~%d", PlayerInfo[targetid][pWantedLevel], PlayerInfo[targetid][pJailTime]);
						    PlayerTextDrawSetString(i, TextDrawSpec[i][3], string);
						    PlayerTextDrawShow(i, TextDrawSpec[i][1]);
					        PlayerTextDrawShow(i, TextDrawSpec[i][2]);
					        PlayerTextDrawShow(i, TextDrawSpec[i][3]);
					    	PlayerTextDrawHide(i, TextDrawSpec[i][4]);
					    	PlayerTextDrawHide(i, TextDrawSpec[i][5]);
						}
						if(GetPlayerInterior(targetid) != GetPlayerInterior(i))
						{
							SetPlayerInterior(i,GetPlayerInterior(targetid));
							PlayerSpectatePlayer(i, targetid);
						}
						if(GetPlayerVirtualWorld(targetid) != GetPlayerVirtualWorld(i))
						{
							SetPlayerVirtualWorld(i,GetPlayerVirtualWorld(targetid));
							PlayerSpectatePlayer(i, targetid);
						}
						if(SpectateState[targetid] == 1 && GetPlayerState(targetid) == PLAYER_STATE_DRIVER || SpectateState[targetid] == 1 && GetPlayerState(targetid) == PLAYER_STATE_PASSENGER)
						{
							new carid = GetPlayerVehicleID(targetid);
						    PlayerSpectateVehicle(i, carid);
							SpectateState[targetid] = 2;
						}
						if(SpectateState[targetid] == 2 && GetPlayerState(targetid) == PLAYER_STATE_ONFOOT)
						{
							PlayerSpectatePlayer(i, Spectate[targetid]);
							SpectateState[targetid] = 1;
						}
					}
				}
				else
				{
				    PlayerTextDrawHide(i, TextDrawSpec[i][1]);
			    	PlayerTextDrawHide(i, TextDrawSpec[i][2]);
	    			PlayerTextDrawHide(i, TextDrawSpec[i][3]);
			    	PlayerTextDrawHide(i, TextDrawSpec[i][4]);
			    	PlayerTextDrawHide(i, TextDrawSpec[i][5]);
				}
			}
		}
	}
	return 1;
}

// FISH PLACE
public VaildFishPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(IsPlayerInRangeOfPoint(playerid, 4,403.8266,-2088.7598,7.8359) || IsPlayerInRangeOfPoint(playerid, 4,398.7553,-2088.7490,7.8359))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4,396.2197,-2088.6692,7.8359) || IsPlayerInRangeOfPoint(playerid, 4,391.1094,-2088.7976,7.8359))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4,383.4157,-2088.7849,7.8359) || IsPlayerInRangeOfPoint(playerid, 4,374.9598,-2088.7979,7.8359))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4,369.8107,-2088.7927,7.8359) || IsPlayerInRangeOfPoint(playerid, 4,367.3637,-2088.7925,7.8359))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4,362.2244,-2088.7981,7.8359) || IsPlayerInRangeOfPoint(playerid, 4,354.5382,-2088.7979,7.8359))
		{
		    return 1;
		}
	}
	return 0;
}

forward DepositMoney(playerid);
public DepositMoney(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader],
	    	member = PlayerInfo[playerid][pMember];
	    if(member == 1 || member == 2 || member == 3 || member == 4 || member == 5 || member == 6 || member == 7 || member == 8 || member == 9 || member == 10 || member == 11 || member == 12 || member == 13 || member == 14)
		{
		    return 1;
		}
		if(leader == 1 || leader == 2 || leader == 3 || leader == 4 || leader == 5 || leader == 6 || leader == 7 || leader == 8 || leader == 9 || leader == 10 || leader == 11 || leader == 12 || leader == 13 || leader == 14)
		{
		    return 1;
		}
	}
	return 0;
}

// ATM
public IsAtATM(playerid)
{
    if(IsPlayerConnected(playerid))
	{
        if(PlayerToPoint(2.0,playerid,1158.4275,-1771.8380,16.6256))
		{
		    return 1;
		}
	}
	return 0;
}

// MAFIA MEMBER
public IsAMember(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader],
	    	member = PlayerInfo[playerid][pMember];
	    if(member == 4 || member == 5 || member == 6 || member == 10)
		{
		    return 1;
		}
		if(leader==4 || leader==5 || leader==6 || leader==10)
		{
		    return 1;
		}
	}
	return 0;
}

// COP
public IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader],
	    	member = PlayerInfo[playerid][pMember];
	    if(member==1 || member==2 || member==3 || member==8)
		{
		    return 1;
		}
		else if(leader==1 || leader==2 || leader==3 || leader==8)
		{
		    return 1;
		}
	}
	return 0;
}

// BANK
public IsAtBank(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(IsPlayerInRangeOfPoint(playerid, 50.0, 2306.5564,-16.3045,26.7496))
	    {//BANK LS
	        return 1;
	    }
	}
	return 0;
}

// ORDER PLACE
public IsAtOrderPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(IsPlayerInRangeOfPoint(playerid, 50.0, 2316.0618,-1143.6814,1054.3047) || IsPlayerInRangeOfPoint(playerid,50.0, 2496.049804,-1695.238159,1014.742187) || IsPlayerInRangeOfPoint(playerid, 50.0, 940.8331,-18.1071,1000.9297) || IsPlayerInRangeOfPoint(playerid, 70.0, 774.2140,-48.9243,1000.5859))
	    {//BANK LS
	        return 1;
	    }
	}
	return 0;
}

// GAS STATION PLACE
public IsAtGasStation(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    //Los Santos Gas Station
		if(IsPlayerInRangeOfPoint(playerid,15.0,BizzInfo[33][bEntranceX],BizzInfo[33][bEntranceY],BizzInfo[33][bEntranceZ]) || IsPlayerInRangeOfPoint(playerid,15.0,BizzInfo[42][bEntranceX],BizzInfo[42][bEntranceY],BizzInfo[42][bEntranceZ]))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,BizzInfo[43][bEntranceX],BizzInfo[43][bEntranceY],BizzInfo[43][bEntranceZ]) || IsPlayerInRangeOfPoint(playerid,15.0,BizzInfo[44][bEntranceX],BizzInfo[44][bEntranceY],BizzInfo[44][bEntranceZ]))
		{
		    return 1;
		}
		//Las Venturas Gas Station
		else if(IsPlayerInRangeOfPoint(playerid,15.0,BizzInfo[44][bEntranceX],BizzInfo[44][bEntranceY],BizzInfo[44][bEntranceZ]) || IsPlayerInRangeOfPoint(playerid,15.0,BizzInfo[45][bEntranceX],BizzInfo[45][bEntranceY],BizzInfo[45][bEntranceZ]))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,BizzInfo[46][bEntranceX],BizzInfo[46][bEntranceY],BizzInfo[46][bEntranceZ]) || IsPlayerInRangeOfPoint(playerid,15.0,BizzInfo[47][bEntranceX],BizzInfo[47][bEntranceY],BizzInfo[47][bEntranceZ]))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,BizzInfo[48][bEntranceX],BizzInfo[48][bEntranceY],BizzInfo[48][bEntranceZ]) || IsPlayerInRangeOfPoint(playerid,15.0,BizzInfo[49][bEntranceX],BizzInfo[49][bEntranceY],BizzInfo[49][bEntranceZ]))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,BizzInfo[50][bEntranceX],BizzInfo[50][bEntranceY],BizzInfo[50][bEntranceZ]))
		{
		    return 1;
		}
	}
	return 0;
}

// BOAT
public IsABoat(carid)
{
	if(GetVehicleModel(carid) == 430 || GetVehicleModel(carid) == 446 || GetVehicleModel(carid) == 452 || GetVehicleModel(carid) == 453 || GetVehicleModel(carid) == 454 || GetVehicleModel(carid) == 472 || GetVehicleModel(carid) == 473 || GetVehicleModel(carid) == 484 || GetVehicleModel(carid) == 493 || GetVehicleModel(carid) == 595)
	{
		return 1;
	}
	return 0;
}

// PLANE
public IsAPlane(carid)
{
	if(GetVehicleModel(carid) == 417 || GetVehicleModel(carid) == 425 || GetVehicleModel(carid) == 447 || GetVehicleModel(carid) == 460 || GetVehicleModel(carid) == 464 || GetVehicleModel(carid) == 465 || GetVehicleModel(carid) == 469 || GetVehicleModel(carid) == 476 || GetVehicleModel(carid) == 487 || GetVehicleModel(carid) == 488 || GetVehicleModel(carid) == 497 || GetVehicleModel(carid) == 501 || GetVehicleModel(carid) == 511 || GetVehicleModel(carid) == 512 || GetVehicleModel(carid) == 513
	 || GetVehicleModel(carid) == 519 || GetVehicleModel(carid) == 520 || GetVehicleModel(carid) == 548 || GetVehicleModel(carid) == 553 || GetVehicleModel(carid) == 563 || GetVehicleModel(carid) == 577 || GetVehicleModel(carid) == 592 || GetVehicleModel(carid) == 593)
	{
		return 1;
	}
	return 0;
}

// COP CAR PD
public IsACopCar(carid)
{
	if(carid == Copcar[1] || carid == Copcar[2] || carid == Copcar[3] || carid == Copcar[4] || carid == Copcar[5] || carid == Copcar[6] || carid == Copcar[7] || carid == Copcar[8] || carid == Copcar[9] || carid == Copcar[10] || carid == Copcar[11] || carid == Copcar[12] || carid == Copcar[13] || carid == Copcar[14] ||
	carid == Copcar[15] || carid == Copcar[16] || carid == Copcar[17] || carid == Copcar[18] || carid == Copcar[19] || carid == Copcar[20] || carid == Copcar[21] || carid == Copcar[22] || carid == Copcar[23] || carid == Copcar[24] || carid == Copcar[25] || carid == Copcar[26] || carid == Copcar[27] ||
	carid == Copcar[28] || carid == Copcar[29] || carid == Copcar[30] || carid == Copcar[31] || carid == Copcar[32])
	{
  		return 1;
	}
	return 0;
}

// COP CAR PD
public IsAGovCar(carid)
{
	if(carid == Govc[1] || carid == Govc[2] || carid == Govc[3] || carid == Govc[4])
	{
  		return 1;
	}
	return 0;
}

// ALL COPS CAR
public Copcar2(carid)
{
	if(carid == Copcar[1] || carid == Copcar[2] || carid == Copcar[3] || carid == Copcar[4] || carid == Copcar[5] || carid == Copcar[6] || carid == Copcar[7] || carid == Copcar[8] || carid == Copcar[9] || carid == Copcar[10] || carid == Copcar[11] || carid == Copcar[12] || carid == Copcar[13] || carid == Copcar[14] ||
	carid == Copcar[15] || carid == Copcar[16] || carid == Copcar[17] || carid == Copcar[18] || carid == Copcar[19] || carid == Copcar[20] || carid == Fbicar[1] || carid == Fbicar[2] || carid == Fbicar[3] || carid == Fbicar[4] || carid == Fbicar[5] || carid == Fbicar[6] || carid == Fbicar[7] || carid == Fbicar[8] || carid == Fbicar[9] || carid == Fbicar[10]
	|| carid == Fbicar[11] || carid == Fbicar[12] || carid == Fbicar[13] || carid == Fbicar[14] || carid == Fbicar[15] || carid == Fbicar[16] || carid == Ngcar[1] || carid == Ngcar[2] || carid == Ngcar[3] || carid == Ngcar[4] || carid == Ngcar[5] || carid == Ngcar[6] || carid == Ngcar[7] || carid == Ngcar[8] || carid == Ngcar[9] || carid == Ngcar[10] || carid == Ngcar[11]
	|| carid == Copcar[21] || carid == Copcar[22] || carid == Copcar[23] || carid == Copcar[24] || carid == Copcar[25] || carid == Copcar[26] || carid == Copcar[27] || carid == Copcar[28] || carid == Copcar[29] || carid == Copcar[30] || carid == Copcar[31] || carid == Copcar[32] || carid == LVpdcar[1] || carid == LVpdcar[2] || carid == LVpdcar[3] || carid == LVpdcar[4] || carid == LVpdcar[5]
	|| carid == LVpdcar[6] || carid == LVpdcar[7] || carid == LVpdcar[8] || carid == LVpdcar[9] || carid == LVpdcar[10] || carid == LVpdcar[11] || carid == LVpdcar[12] || carid == LVpdcar[13] || carid == LVpdcar[14] || carid == LVpdcar[15] || carid == LVpdcar[16] || carid == LVpdcar[17] || carid == LVpdcar[18] || carid == LVpdcar[19] || carid == LVpdcar[20]
	|| carid == LVpdcar[21] || carid == LVpdcar[22] || carid == LVpdcar[23] || carid == LVpdcar[24] || carid == LVpdcar[25] || carid == LVpdcar[26] || carid == LVpdcar[27] || carid == LVpdcar[28] || carid == LVpdcar[29] || carid == LVpdcar[30] || carid == LVpdcar[31] || carid == LVpdcar[32] || carid == LVpdcar[33] || carid == LVpdcar[34] || carid == LVpdcar[35]
	|| carid == LVpdcar[36] || carid == LVpdcar[37] || carid == LVpdcar[38] || carid == LVpdcar[39] || carid == LVpdcar[40])
	{
  		return 1;
	}
	return 0;
}

// FBI CAR
public IsAFbiCar(carid)
{
	if(carid == Fbicar[1] || carid == Fbicar[2] || carid == Fbicar[3] || carid == Fbicar[4] || carid == Fbicar[5] || carid == Fbicar[6] || carid == Fbicar[7] || carid == Fbicar[8] || carid == Fbicar[9] || carid == Fbicar[10] || carid == Fbicar[11] || carid == Fbicar[12] || carid == Fbicar[13] || carid == Fbicar[14] || carid == Fbicar[14] || carid == Fbicar[15] || carid == Fbicar[16])
	{
  		return 1;
	}
	return 0;
}

// LVPD CAR
public IsALVPDCar(carid)
{
	if(carid == LVpdcar[1] || carid == LVpdcar[2] || carid == LVpdcar[3] || carid == LVpdcar[4] || carid == LVpdcar[5]
	|| carid == LVpdcar[6] || carid == LVpdcar[7] || carid == LVpdcar[8] || carid == LVpdcar[9] || carid == LVpdcar[10] || carid == LVpdcar[11] || carid == LVpdcar[12] || carid == LVpdcar[13] || carid == LVpdcar[14] || carid == LVpdcar[15] || carid == LVpdcar[16] || carid == LVpdcar[17] || carid == LVpdcar[18] || carid == LVpdcar[19] || carid == LVpdcar[20]
	|| carid == LVpdcar[21] || carid == LVpdcar[22] || carid == LVpdcar[23] || carid == LVpdcar[24] || carid == LVpdcar[25] || carid == LVpdcar[26] || carid == LVpdcar[27] || carid == LVpdcar[28] || carid == LVpdcar[29] || carid == LVpdcar[30] || carid == LVpdcar[31] || carid == LVpdcar[32] || carid == LVpdcar[33] || carid == LVpdcar[34] || carid == LVpdcar[35]
	|| carid == LVpdcar[36] || carid == LVpdcar[37] || carid == LVpdcar[38] || carid == LVpdcar[39] || carid == LVpdcar[40])
	{
  		return 1;
	}
	return 0;
}

// NG CAR
public IsANgCar(carid)
{
	if(carid == Ngcar[1] || carid == Ngcar[2] || carid == Ngcar[3] || carid == Ngcar[4] || carid == Ngcar[5] || carid == Ngcar[6] || carid == Ngcar[7] || carid == Ngcar[8] || carid == Ngcar[9] || carid == Ngcar[10] || carid == Ngcar[11])
    {
  		return 1;
	}
	return 0;
}

// AMBULANCE
public IsAnAmbulance(carid)
{
	if(carid == ambcars[1] || carid == ambcars[2] || carid == ambcars[3] || carid == ambcars[4] || carid == ambcars[5] || carid == ambcars[6] || carid == ambcars[7] || carid == ambcars[8] || carid == ambcars[9] || carid == ambcars[10])
	{
		return 1;
	}
	return 0;
}

// TAXI CAR
public IsAnTaxi(carid)
{
	if(carid == taxic[1] || carid == taxic[2] || carid == taxic[3] || carid == taxic[4] || carid == taxic[5] || carid == taxic[6] || carid == taxic[7] || carid == taxic[8] || carid == taxic[9] || carid == taxic[10])
	{
	    return 1;
	}
	return 0;
}

// GARBAGE TRUCK
public IsAGarbageTruck(carid)
{
	if(carid == garbage[1] || carid == garbage[2] || carid == garbage[3] || carid == garbage[4] || carid == garbage[5] || carid == garbage[6] || carid == garbage[7] || carid == garbage[8] || carid == garbage[9] || carid == garbage[10] )
	{
		return 1;
	}
	return 0;
}



// BUS
public IsABus(carid)
{
	if(carid == bus[1] || carid == bus[2] || carid == bus[3] || carid == bus[4] || carid == bus[5] || carid == bus[6] || carid == bus[7] || carid == bus[8] || carid == bus[9] || carid == bus[10] || carid == bus[11] || carid == bus[12] || carid == bus[13] || carid == bus[14] || carid == bus[15] || carid == bus[16])
	{
		return 1;
	}
	return 0;
}

// PIZZA SCOOTER
public IsAPizza(carid)
{
	if(carid == pizza[1] || carid == pizza[2] || carid == pizza[3] || carid == pizza[4] || carid == pizza[5] || carid == pizza[6] || carid == pizza[7] || carid == pizza[8] || carid == pizza[9] || carid == pizza[10] || carid == pizza[11] || carid == pizza[12] || carid == pizza[13] || carid == pizza[14])
	{
		return 1;
	}
	return 0;
}

// FAMER CAR
public IsAFarmer(carid)
{
	if(carid == farm[1] || carid == farm[2] || carid == farm[3] || carid == farm[4] || carid == farm[5] || carid == farm[6] || carid == farm[7] || carid == farm[8] || carid == farm[9] || carid == farm[10]
	|| carid == farm[11] || carid == farm[12] || carid == farm[13])
	{
		return 1;
	}
	return 0;
}

// TRUCK
public IsATruck(carid)
{
	if(carid == truck[1] || carid == truck[2] || carid == truck[3] || carid == truck[4] || carid == truck[5] || carid == truck[6] || carid == truck[7] || carid == truck[8] || carid == truck[9] || carid == truck[10] || carid == truck[11] || carid == truck[12] || carid == truck[13] || carid == truck[14]
	|| carid == truck[15] || carid == truck[16] || carid == truck[17] || carid == truck[18])
	{
		return 1;
	}
	return 0;
}
forward IsACoal(playerid, vehicleid);
public IsACoal(playerid, vehicleid)
{
	new model = GetVehicleModel(vehicleid);
	if(model == 573)
	{
	    return 1;
	}
	return 0;
}
// BIKE
public IsABike(carid)
{

	if(GetVehicleModel(carid) == 481 || GetVehicleModel(carid) == 509 || GetVehicleModel(carid) == 510)
	{
		return 1;
	}
	return 0;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(PlayerInfo[playerid][pAdmin] > 0)
	{
	    if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, fX, fY, fZ+5);
		}
		else
		{
			SetPlayerPosFindZ(playerid, fX, fY, fZ+5);
		}
	}
    return 1;
}

public OnPlayerModelSelection(playerid, response, listid, modelid)
{
    new string[256];
    if(listid == skinlist)
    {
        if(response)
        {
            SetPlayerSkin(playerid, modelid);
            PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d',`Model`='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pModel], PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    if(listid == skinlist1)
    {
        if(response)
        {
            SetPlayerSkin(playerid, modelid);
            PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d',`Model`='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pModel], PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    if(listid == skinlist2)
    {
        if(response)
        {
            SetPlayerSkin(playerid, modelid);
            PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d',`Model`='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pModel], PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    if(listid == skinlist3)
    {
        if(response)
        {
            SetPlayerSkin(playerid, modelid);
            PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d',`Model`='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pModel], PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    if(listid == skinlist4)
    {
        if(response)
        {
            SetPlayerSkin(playerid, modelid);
            PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d',`Model`='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pModel], PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    if(listid == skinlist5)
    {
        if(response)
        {
            SetPlayerSkin(playerid, modelid);
            PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d',`Model`='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pModel], PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    if(listid == skinlist6)
    {
        if(response)
        {
            SetPlayerSkin(playerid, modelid);
            PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d',`Model`='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pModel], PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    if(listid == skinlist8)
    {
        if(response)
        {
            SetPlayerSkin(playerid, modelid);
            PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d',`Model`='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pModel], PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    if(listid == skinlist9)
    {
        if(response)
        {
            SetPlayerSkin(playerid, modelid);
            PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d',`Model`='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pModel], PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    if(listid == skinlist10)
    {
        if(response)
        {
            SetPlayerSkin(playerid, modelid);
            PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d',`Model`='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pModel], PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    if(listid == skinlist11)
    {
        if(response)
        {
            SetPlayerSkin(playerid, modelid);
            PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d',`Model`='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pModel], PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    if(listid == skinlist12)
    {
        if(response)
        {
            SetPlayerSkin(playerid, modelid);
            PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);

            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d',`Model`='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pModel], PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    if(listid == skinlist13)
    {
        if(response)
        {
            SetPlayerSkin(playerid, modelid);
            PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d',`Model`='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pModel], PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    if(listid == skinlist14)
    {
        if(response)
        {
            SetPlayerSkin(playerid, modelid);
            PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d',`Model`='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pModel], PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
   	}
   	if(listid == skinlist15)
  	{
        if(response)
        {
            SetPlayerSkin(playerid, modelid);
            PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d',`Model`='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pModel], PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    if(listid == skinlist16)
    {
        if(response)
        {
            SetPlayerSkin(playerid, modelid);
            PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d',`Model`='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pModel], PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    if(listid == skinlist17)
    {
        if(response)
        {
            SetPlayerSkin(playerid, modelid);
            PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d',`Model`='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pModel], PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    if(listid == skinlist18)
    {
        if(response)
        {
            SetPlayerSkin(playerid, modelid);
            PlayerInfo[playerid][pModel] = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d',`SecSkin`='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pModel], PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    return 1;
}

public OnPlayerModelSelectionEx(playerid, response, extraid, modelid)
{
    if(extraid == 1)
    {
        if(response)
        {
            new skin,string[256];
            skin = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
			Sunglasses[playerid] = 1;
            PlayerInfo[playerid][pGlasses] = modelid;
            Update(playerid, pGlassesx);
            SetPlayerHoldingObject(playerid, modelid, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    else if(extraid == 2)
    {
        if(response)
        {
            new skin,string[256];
            skin = GetPlayerSkin(playerid);
            GivePlayerCash(playerid,-5000);
            mysql_format(SQL, string, sizeof(string), "UPDATE users SET Money='%d' WHERE name='%s'", GetPlayerCash(playerid), PlayerInfo[playerid][pNormalName]);
      		mysql_tquery(SQL,string,"","");
			BizzInfo[InBussines[playerid]][bTill] += 5000;
			mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
			mysql_tquery(SQL,string,"","");
			Hatss[playerid] = 1;
            PlayerInfo[playerid][pHats] = modelid;
            Update(playerid, pHatsx);
            SetPlayerAttachedObject(playerid, 0, modelid, 2, SkinCaps[skin][0], SkinCaps[skin][1], SkinCaps[skin][2], SkinCaps[skin][3],SkinCaps[skin][4], SkinCaps[skin][5], 1.000000, 1.000000, 1.000000);
            GameTextForPlayer(playerid, "~r~-$5,000", 5000, 1);
        }
    }
    return 1;
}

public OnPlayerConnect(playerid)
{
    new ipplayer[16];
    GetPlayerIp(playerid, ipplayer, sizeof(ipplayer));
    if(IsPlayerNPC(playerid)) {
        new server_IP[16];
        format(server_IP, 16, "93.119.25.49");

        if(strcmp(ipplayer,server_IP,true) != 0) {
            Ban(playerid);
            return 0;
        }
    }
    for(new i; i<sizeof(AntiNickNameProtection); i++)
    {
        new Nome[40];
        new string[256];
        new Nick[MAX_PLAYER_NAME];
        GetPlayerName(i,Nome,sizeof(Nome));
        GetPlayerName(playerid, Nick, sizeof(Nick));
        if(!strcmp(Nick, TLD[i], true))
        if(!strcmp(Nick, AntiNickNameProtection[i], true))
        {
            SendClientMessage(i, COLOR_LIGHTRED, "You Have Been Kicked Because You Had A Forbidden Name !");
            format(string, sizeof(string), "Notice: {FFFFFF}%s has been kicked because he had a forbidden name.", Nome);
            ABroadCast(COLOR_RED2,string,1);
            KickEx(i);
			return 1;
        }
    }
	new Nick[MAX_PLAYER_NAME];
	GetPlayerName(playerid, Nick, sizeof(Nick));
	if(FindIP(Nick))
	{
		new string[256];
		SendClientMessage(playerid, COLOR_ERROR, "You Have Been Kicked Because You Had A Forbidden Name !");
        format(string, sizeof(string), "Notice: {FFFFFF}%s Has been disconnected from the server because it has an invalid name.", Nick);
        ABroadCast(COLOR_RED2,string,1);
		KickEx(playerid);
		return 1;
	}
    new playerip[16];
 	GetPlayerIp(playerid,playerip,sizeof(playerip));
    /*if(NumIp(playerip, playerid) >= 3 && !IsBotOnIP(playerip))
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "There are already 2 players connected with same IP.");
 		KickEx(playerid);
 		return 1;
	}*/
	new playerskin;
    playerskin = GetPlayerSkin(playerid);
	PlayerTextDrawSetPreviewModel(playerid, SkinPreview[playerid], playerskin);
	PlayerTextDrawShow(playerid, SkinPreview[playerid]);
    PlayAudioStreamForPlayer(playerid, "http://NL-Gaming.iR/Welcome.mp3");
    SendClientMessage(playerid, 0x0080FFFF, "[New-Land]: {FFFFFF}Welcome To The Server , Wait For A Few Seconds To Load");
    AntiFlood_InitPlayer( playerid );
	lastquestion[playerid] = -1;
	timefornextquestion[playerid] = -1;
	aprimitintrebarea[playerid] = -1;
	arefreeze[playerid] = 0;
	XDeaths[playerid] = 0;
	InCoal[playerid] = 0;
	CoalCar[playerid] = 0;
    PoateVorbiVIP[playerid] = 1;
    UseCmdTimer[playerid] = 1;
    LastDeath[playerid] = 0;
    SpecFactiune[playerid] = 0;
    pnsmoney[playerid] = 0;
    OnDutymedic[playerid] = 0;
    cased[playerid] = 0;
    caser[playerid] = 1001;
    RepairTime[playerid] = 0;
    Tigaanel[playerid] = 0;
    LastPlayer[playerid] = -1;
    PlayerInfo[playerid][pNRE] = -1;
    payala[playerid] = 0;

	NoConnectStupid(playerid, "PWT");
	NoConnectStupid(playerid, "Skim");
	NoConnectStupid(playerid, "Fuck");
	NoConnectStupid(playerid, "LFG");
	NoConnectStupid(playerid, "Massive");
	NoConnectStupid(playerid, "ZanyX");

    KillTimer(login[playerid]);

 	if(antirem[playerid] == 0)
 	{
 		antirem[playerid] = 1;
 	}
	if(antirem[playerid] == 1)
	{
		RemoveBuildingForPlayer(playerid, 13242, 701.7109, -565.1328, 15.3359, 0.25);//Hq FBI
		RemoveBuildingForPlayer(playerid, 13245, 666.7109, -565.1328, 17.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 782, 643.1484, -614.5625, 15.2813, 0.25);
		RemoveBuildingForPlayer(playerid, 12854, 666.4922, -571.1797, 17.3125, 0.25);
		RemoveBuildingForPlayer(playerid, 1510, 664.2031, -567.6953, 16.2266, 0.25);
		RemoveBuildingForPlayer(playerid, 1512, 664.2109, -567.4141, 16.4141, 0.25);
		RemoveBuildingForPlayer(playerid, 2362, 662.9219, -567.0547, 16.2031, 0.25);
		RemoveBuildingForPlayer(playerid, 1514, 665.2891, -567.2813, 16.4297, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 655.6641, -571.2109, 15.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 655.6641, -569.6016, 15.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 1691, 665.7500, -566.3047, 20.0313, 0.25);
		RemoveBuildingForPlayer(playerid, 1688, 705.3438, -576.1406, 21.3281, 0.25);
		RemoveBuildingForPlayer(playerid, 1690, 694.6406, -571.4922, 21.0078, 0.25);
		RemoveBuildingForPlayer(playerid, 12853, 666.7109, -565.1328, 17.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 655.6641, -558.9297, 15.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 1686, 655.6641, -560.5469, 15.3594, 0.25);
		RemoveBuildingForPlayer(playerid, 12863, 701.7109, -565.1328, 15.3359, 0.25);
		RemoveBuildingForPlayer(playerid, 1687, 670.1016, -558.4063, 20.4297, 0.25);
		RemoveBuildingForPlayer(playerid, 956, 662.4297, -552.1641, 15.7109, 0.25);
		RemoveBuildingForPlayer(playerid, 1438, 670.1094, -550.6563, 15.2734, 0.25);
		RemoveBuildingForPlayer(playerid, 1690, 702.5313, -546.6094, 21.0078, 0.25);
		RemoveBuildingForPlayer(playerid, 1438, 663.3750, -541.6250, 15.2891, 0.25);
		RemoveBuildingForPlayer(playerid, 14843, 266.3516, 81.1953, 1001.2813, 0.25);
		RemoveBuildingForPlayer(playerid, 17350, -54.9922, -1130.7266, 4.5781, 0.25);// trucker
		RemoveBuildingForPlayer(playerid, 1447, -89.9297, -1133.7500, 1.3906, 0.25);
		RemoveBuildingForPlayer(playerid, 1438, -87.0547, -1132.6797, 0.0469, 0.25);
		RemoveBuildingForPlayer(playerid, 17072, -54.9922, -1130.7266, 4.5781, 0.25);
		RemoveBuildingForPlayer(playerid, 17073, -56.1250, -1130.1719, 4.4922, 0.25);
		RemoveBuildingForPlayer(playerid, 1462, -84.3750, -1116.0938, 0.2578, 0.25);
		RemoveBuildingForPlayer(playerid, 1447, -84.0547, -1117.2188, 1.3906, 0.25);
		RemoveBuildingForPlayer(playerid, 1415, -68.3516, -1104.9922, 0.2188, 0.25);
		RemoveBuildingForPlayer(playerid, 1462, -60.3594, -1116.9375, 0.2578, 0.25);
		RemoveBuildingForPlayer(playerid, 1438, -63.6719, -1125.6953, 0.0469, 0.25);
		RemoveBuildingForPlayer(playerid, 1438, -63.4141, -1115.4141, 0.0469, 0.25);
		RemoveBuildingForPlayer(playerid, 1415, -63.8125, -1106.4219, 0.2188, 0.25);
		RemoveBuildingForPlayer(playerid, 1257, 1918.7500, 2314.3984, 11.0938, 0.25);// baracile
		RemoveBuildingForPlayer(playerid, 1257, 1918.8672, 2115.7188, 11.0938, 0.25);
		RemoveBuildingForPlayer(playerid, 1226, 1808.1250, -1859.5391, 16.3516, 0.25);
		RemoveBuildingForPlayer(playerid, 1226, 1783.6719, -1859.5391, 16.3516, 0.25);
		RemoveBuildingForPlayer(playerid, 1302, 0.0, 0.0, 0.0, 6000.0);
		RemoveBuildingForPlayer(playerid, 1209, 0.0, 0.0, 0.0, 6000.0);
		RemoveBuildingForPlayer(playerid, 955, 0.0, 0.0, 0.0, 6000.0);
		RemoveBuildingForPlayer(playerid, 956, 0.0, 0.0, 0.0, 6000.0);
		RemoveBuildingForPlayer(playerid, 1775, 0.0, 0.0, 0.0, 6000.0);
		RemoveBuildingForPlayer(playerid, 1776, 0.0, 0.0, 0.0, 6000.0);
		RemoveBuildingForPlayer(playerid, 1977, 316.8750, -140.3516, 998.5859, 0.25);
		RemoveBuildingForPlayer(playerid, 1226, 2093.9297, -1762.6406, 16.4063, 0.25); // Pizza
		RemoveBuildingForPlayer(playerid, 712, 2100.8125, -1764.3750, 21.3906, 0.25);
		RemoveBuildingForPlayer(playerid, 620, 2105.0859, -1765.6094, 10.8047, 0.25);
		RemoveBuildingForPlayer(playerid, 1226, 2114.7188, -1785.1797, 16.3984, 0.25);
		RemoveBuildingForPlayer(playerid, 1308, 2128.3125, -1786.7109, 12.7031, 0.25);
		RemoveBuildingForPlayer(playerid, 733, 778.2109, -1207.2031, 13.5391, 0.25); // Taietor de gazon
		RemoveBuildingForPlayer(playerid, 729, 731.3906, -1223.1641, 12.5078, 0.25);
		RemoveBuildingForPlayer(playerid, 733, 717.1172, -1236.2266, 12.0625, 0.25);
		RemoveBuildingForPlayer(playerid, 726, 680.8594, -1293.3984, 12.3984, 0.25);
		RemoveBuildingForPlayer(playerid, 732, 782.7969, -1304.0781, 12.3906, 0.25);
		RemoveBuildingForPlayer(playerid, 620, 746.4922, -1303.4141, 11.6719, 0.25);
		RemoveBuildingForPlayer(playerid, 620, 760.4531, -1304.1328, 12.2813, 0.25);
		RemoveBuildingForPlayer(playerid, 620, 782.3438, -1277.8359, 12.2031, 0.25);
		RemoveBuildingForPlayer(playerid, 620, 783.0625, -1245.7969, 12.5938, 0.25);
		RemoveBuildingForPlayer(playerid, 1447, -107.0859, -1196.0859, 3.0391, 0.25); // Garbage
		RemoveBuildingForPlayer(playerid, 1412, -112.1719, -1194.7500, 3.0391, 0.25);
		RemoveBuildingForPlayer(playerid, 1413, -102.1328, -1197.1641, 2.9609, 0.25);
		RemoveBuildingForPlayer(playerid, 1412, -98.9219, -1204.9141, 3.0391, 0.25);
		RemoveBuildingForPlayer(playerid, 985, 2497.4063, 2777.0703, 11.5313, 0.25);
		RemoveBuildingForPlayer(playerid, 986, 2497.4063, 2769.1094, 11.5313, 0.25);
		RemoveBuildingForPlayer(playerid, 1412, -98.8750, -1199.9297, 3.0391, 0.25);
		RemoveBuildingForPlayer(playerid, 727, -73.8203, -1569.1719, 1.3516, 0.25);
		RemoveBuildingForPlayer(playerid, 3175, -64.3828, -1572.2109, 1.4063, 0.25);
		RemoveBuildingForPlayer(playerid, 1226, 1774.7578, -1931.3125, 16.3750, 0.25); //Taxi LS
		RemoveBuildingForPlayer(playerid, 700, 1810.6797, -1944.6406, 11.4453, 0.25);
		RemoveBuildingForPlayer(playerid, 700, 1817.1797, -1944.6406, 11.4453, 0.25);
		RemoveBuildingForPlayer(playerid, 1226, 1806.4297, -1931.6016, 16.3750, 0.25);
		RemoveBuildingForPlayer(playerid, 5024, 1748.8438, -1883.0313, 14.1875, 0.25);
		RemoveBuildingForPlayer(playerid, 1226, 1774.7578, -1901.5391, 16.3750, 0.25);
		RemoveBuildingForPlayer(playerid, 1226, 1806.4297, -1901.8281, 16.3750, 0.25);
		RemoveBuildingForPlayer(playerid, 620, 1836.7188, -1898.8984, 13.7344, 0.25);
		RemoveBuildingForPlayer(playerid, 620, 1747.1875, -1846.7109, 10.8047, 0.25);
		RemoveBuildingForPlayer(playerid, 1297, 937.5547, -1213.8672, 18.5938, 0.25);
		RemoveBuildingForPlayer(playerid, 5818, 954.6875, -1305.7734, 30.1406, 0.25);
		RemoveBuildingForPlayer(playerid, 1267, 953.4922, -1232.5703, 24.1328, 0.25);
		RemoveBuildingForPlayer(playerid, 717, 824.3438, -1155.3750, 23.0000, 0.25);
		RemoveBuildingForPlayer(playerid, 717, 850.9844, -1155.3750, 23.0000, 0.25);
		RemoveBuildingForPlayer(playerid, 717, 875.6094, -1155.3750, 23.0000, 0.25);
		RemoveBuildingForPlayer(playerid, 717, 895.6953, -1155.3750, 23.0000, 0.25);
		RemoveBuildingForPlayer(playerid, 717, 907.7813, -1155.3750, 23.0000, 0.25);
		RemoveBuildingForPlayer(playerid, 717, 927.6172, -1155.3750, 23.0000, 0.25);
		RemoveBuildingForPlayer(playerid, 14843, 266.3516, 81.1953, 1001.2813, 0.25);//gratii pd
		RemoveBuildingForPlayer(playerid, 656, 1096.6250, -294.4141, 72.9375, 0.25);//hitman
		RemoveBuildingForPlayer(playerid, 1340, 2327.8594, 2421.2500, 10.8594, 0.25);//lvpd
		RemoveBuildingForPlayer(playerid, 714, 1481.6484, -638.4844, 90.2422, 0.25);//palat MaWReZ
		RemoveBuildingForPlayer(playerid, 659, 1503.7578, -720.7031, 91.6563, 0.25);
		RemoveBuildingForPlayer(playerid, 659, 1492.1250, -716.1250, 93.5000, 0.25);
		RemoveBuildingForPlayer(playerid, 1340, 388.8594, -2071.6641, 7.9453, 0.25); //Garduri Fish
		RemoveBuildingForPlayer(playerid, 1351, 670.8984, -605.9375, 15.1797, 0.25); //Setrese 2 semafoare
		RemoveBuildingForPlayer(playerid, 1351, 647.6641, -540.8359, 15.1797, 0.25); //Setrese 2 semafoare
	}

	PaintBallText[playerid] = CreatePlayerTextDraw(playerid, 1.599968, 430.080230, " ");
	PlayerTextDrawLetterSize(playerid, PaintBallText[playerid], 0.217200, 1.973333);
	PlayerTextDrawAlignment(playerid, PaintBallText[playerid], 1);
	PlayerTextDrawColor(playerid, PaintBallText[playerid], -1);
	PlayerTextDrawSetShadow(playerid, PaintBallText[playerid], 0);
	PlayerTextDrawSetOutline(playerid, PaintBallText[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, PaintBallText[playerid], 51);
	PlayerTextDrawFont(playerid, PaintBallText[playerid], 2);
	PlayerTextDrawSetProportional(playerid, PaintBallText[playerid], 1);

	Fuell[playerid] = CreatePlayerTextDraw(playerid, 522.400024, 374.826629, " ");
	PlayerTextDrawLetterSize(playerid, Fuell[playerid], 0.236395, 1.629866);
	PlayerTextDrawAlignment(playerid, Fuell[playerid], 1);
	PlayerTextDrawColor(playerid, Fuell[playerid], -1);
	PlayerTextDrawSetShadow(playerid, Fuell[playerid], 0);
	PlayerTextDrawSetOutline(playerid, Fuell[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Fuell[playerid], 255);
	PlayerTextDrawFont(playerid, Fuell[playerid], 2);
	PlayerTextDrawSetProportional(playerid, Fuell[playerid], 1);

	SkinPreview[playerid] = CreatePlayerTextDraw(playerid,-34.000000, 365.000000, "_");
	PlayerTextDrawBackgroundColor(playerid,SkinPreview[playerid], 0);
	PlayerTextDrawFont(playerid,SkinPreview[playerid], 5);
	PlayerTextDrawLetterSize(playerid,SkinPreview[playerid], 0.749998, 1.899999);
	PlayerTextDrawColor(playerid,SkinPreview[playerid], -1);
	PlayerTextDrawSetOutline(playerid,SkinPreview[playerid], 0);
	PlayerTextDrawSetProportional(playerid,SkinPreview[playerid], 1);
	PlayerTextDrawSetShadow(playerid,SkinPreview[playerid], 1);
	PlayerTextDrawUseBox(playerid,SkinPreview[playerid], 1);
	PlayerTextDrawBoxColor(playerid,SkinPreview[playerid], 0);
	PlayerTextDrawTextSize(playerid,SkinPreview[playerid], 106.000000, 72.000000);
	PlayerTextDrawSetPreviewModel(playerid, SkinPreview[playerid], 0);
	PlayerTextDrawSetPreviewRot(playerid, SkinPreview[playerid], -8.000000, 0.000000, 15.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,SkinPreview[playerid], 0);

	credite0[playerid] = CreatePlayerTextDraw(playerid, 417.200225, 171.739990, "usebox");
	PlayerTextDrawLetterSize(playerid, credite0[playerid], 0.000000, 15.715927);
	PlayerTextDrawTextSize(playerid, credite0[playerid], 162.799987, 0.000000);
	PlayerTextDrawAlignment(playerid, credite0[playerid], 1);
	PlayerTextDrawColor(playerid, credite0[playerid], 0);
	PlayerTextDrawUseBox(playerid, credite0[playerid], true);
	PlayerTextDrawBoxColor(playerid, credite0[playerid], 102);
	PlayerTextDrawSetShadow(playerid, credite0[playerid], 0);
	PlayerTextDrawSetOutline(playerid, credite0[playerid], 0);
	PlayerTextDrawFont(playerid, credite0[playerid], 0);

	credite1[playerid] = CreatePlayerTextDraw(playerid, 174.400024, 167.253341, "New Land - We are few / We are pround");
	PlayerTextDrawLetterSize(playerid, credite1[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, credite1[playerid], 1);
	PlayerTextDrawColor(playerid, credite1[playerid], -1);
	PlayerTextDrawSetShadow(playerid, credite1[playerid], 0);
	PlayerTextDrawSetOutline(playerid, credite1[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, credite1[playerid], 51);
	PlayerTextDrawFont(playerid, credite1[playerid], 0);
	PlayerTextDrawSetProportional(playerid, credite1[playerid], 1);

	credite2[playerid] = CreatePlayerTextDraw(playerid, 191.199935, 219.519958, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, credite2[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, credite2[playerid], 204.800003, 1.493329);
	PlayerTextDrawAlignment(playerid, credite2[playerid], 1);
	PlayerTextDrawColor(playerid, credite2[playerid], -2139062017);
	PlayerTextDrawSetShadow(playerid, credite2[playerid], 0);
	PlayerTextDrawSetOutline(playerid, credite2[playerid], 0);
	PlayerTextDrawFont(playerid, credite2[playerid], 4);

	credite3[playerid] = CreatePlayerTextDraw(playerid, 223.999954, 197.119979, "~r~Credits~w~:");
	PlayerTextDrawLetterSize(playerid, credite3[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, credite3[playerid], 1);
	PlayerTextDrawColor(playerid, credite3[playerid], -1);
	PlayerTextDrawSetShadow(playerid, credite3[playerid], 0);
	PlayerTextDrawSetOutline(playerid, credite3[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, credite3[playerid], 51);
	PlayerTextDrawFont(playerid, credite3[playerid], 1);
	PlayerTextDrawSetProportional(playerid, credite3[playerid], 1);

	credite4[playerid] = CreatePlayerTextDraw(playerid, 176.000000, 241.173309, "~r~MaWReZ~w~ - Mohammadreza");
	PlayerTextDrawLetterSize(playerid, credite4[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, credite4[playerid], 1);
	PlayerTextDrawColor(playerid, credite4[playerid], -1);
	PlayerTextDrawSetShadow(playerid, credite4[playerid], 0);
	PlayerTextDrawSetOutline(playerid, credite4[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, credite4[playerid], 51);
	PlayerTextDrawFont(playerid, credite4[playerid], 1);
	PlayerTextDrawSetProportional(playerid, credite4[playerid], 1);

	credite5[playerid] = CreatePlayerTextDraw(playerid, 252.000015, 257.600006, "~r~MaWReZ~w~ - Mohammadreza");
	PlayerTextDrawLetterSize(playerid, credite5[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, credite5[playerid], 2);
	PlayerTextDrawColor(playerid, credite5[playerid], -1);
	PlayerTextDrawSetShadow(playerid, credite5[playerid], 0);
	PlayerTextDrawSetOutline(playerid, credite5[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, credite5[playerid], 51);
	PlayerTextDrawFont(playerid, credite5[playerid], 1);
	PlayerTextDrawSetProportional(playerid, credite5[playerid], 1);

	credite6[playerid] = CreatePlayerTextDraw(playerid, 175.200012, 272.533355, "~r~MaWReZ~w~ - Mohammadreza");
	PlayerTextDrawLetterSize(playerid, credite6[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, credite6[playerid], 1);
	PlayerTextDrawColor(playerid, credite6[playerid], -1);
	PlayerTextDrawSetShadow(playerid, credite6[playerid], 0);
	PlayerTextDrawSetOutline(playerid, credite6[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, credite6[playerid], 51);
	PlayerTextDrawFont(playerid, credite6[playerid], 1);
	PlayerTextDrawSetProportional(playerid, credite6[playerid], 1);

	credite7[playerid] = CreatePlayerTextDraw(playerid, 175.199966, 297.920043, "Community ~r~New Land");
	PlayerTextDrawLetterSize(playerid, credite7[playerid], 0.414799, 1.473066);
	PlayerTextDrawAlignment(playerid, credite7[playerid], 1);
	PlayerTextDrawColor(playerid, credite7[playerid], -1);
	PlayerTextDrawSetShadow(playerid, credite7[playerid], 0);
	PlayerTextDrawSetOutline(playerid, credite7[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, credite7[playerid], 51);
	PlayerTextDrawFont(playerid, credite7[playerid], 1);
	PlayerTextDrawSetProportional(playerid, credite7[playerid], 1);

	Speedd[playerid] = CreatePlayerTextDraw(playerid, 519.199951, 359.147064, " ");
	PlayerTextDrawLetterSize(playerid, Speedd[playerid], 0.236395, 1.629866);
	PlayerTextDrawAlignment(playerid, Speedd[playerid], 1);
	PlayerTextDrawColor(playerid, Speedd[playerid], -1);
	PlayerTextDrawSetShadow(playerid, Speedd[playerid], 0);
	PlayerTextDrawSetOutline(playerid, Speedd[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Speedd[playerid], 255);
	PlayerTextDrawFont(playerid, Speedd[playerid], 2);
	PlayerTextDrawSetProportional(playerid, Speedd[playerid], 1);

	Odom[playerid] = CreatePlayerTextDraw(playerid, 522.399902, 390.506561, " ");
	PlayerTextDrawLetterSize(playerid, Odom[playerid], 0.236395, 1.629866);
	PlayerTextDrawAlignment(playerid, Odom[playerid], 1);
	PlayerTextDrawColor(playerid, Odom[playerid], -1);
	PlayerTextDrawSetShadow(playerid, Odom[playerid], 0);
	PlayerTextDrawSetOutline(playerid, Odom[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Odom[playerid], 255);
	PlayerTextDrawFont(playerid, Odom[playerid], 2);
	PlayerTextDrawSetProportional(playerid, Odom[playerid], 1);

	carlocked[playerid] = CreatePlayerTextDraw(playerid, 522.400207, 406.933349, " ");
	PlayerTextDrawLetterSize(playerid, carlocked[playerid], 0.236395, 1.629866);
	PlayerTextDrawAlignment(playerid, carlocked[playerid], 1);
	PlayerTextDrawColor(playerid, carlocked[playerid], -1);
	PlayerTextDrawSetShadow(playerid, carlocked[playerid], 0);
	PlayerTextDrawSetOutline(playerid, carlocked[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, carlocked[playerid], 255);
	PlayerTextDrawFont(playerid, carlocked[playerid], 2);
	PlayerTextDrawSetProportional(playerid, carlocked[playerid], 1);

	farmbox[playerid] = CreatePlayerTextDraw(playerid, 199.599990, 185.926666, "usebox");
	PlayerTextDrawLetterSize(playerid, farmbox[playerid], 0.000000, 7.149999);
	PlayerTextDrawTextSize(playerid, farmbox[playerid], -3.599999, 0.000000);
	PlayerTextDrawAlignment(playerid, farmbox[playerid], 1);
	PlayerTextDrawColor(playerid, farmbox[playerid], 0);
	PlayerTextDrawUseBox(playerid, farmbox[playerid], true);
	PlayerTextDrawBoxColor(playerid, farmbox[playerid], 102);
	PlayerTextDrawSetShadow(playerid, farmbox[playerid], 0);
	PlayerTextDrawSetOutline(playerid, farmbox[playerid], 0);
	PlayerTextDrawFont(playerid, farmbox[playerid], 0);

	farmjob[playerid] = CreatePlayerTextDraw(playerid, 6.399997, 183.679962, "JOB");
	PlayerTextDrawLetterSize(playerid, farmjob[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, farmjob[playerid], 1);
	PlayerTextDrawColor(playerid, farmjob[playerid], -1);
	PlayerTextDrawSetShadow(playerid, farmjob[playerid], 0);
	PlayerTextDrawSetOutline(playerid, farmjob[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, farmjob[playerid], 51);
	PlayerTextDrawFont(playerid, farmjob[playerid], 0);
	PlayerTextDrawSetProportional(playerid, farmjob[playerid], 1);

	farmspeed[playerid] = CreatePlayerTextDraw(playerid, 3.199995, 219.519958, "~r~(!) You Must Be Have +25KM/h Speed");
	PlayerTextDrawLetterSize(playerid, farmspeed[playerid], 0.193999, 1.555199);
	PlayerTextDrawAlignment(playerid, farmspeed[playerid], 1);
	PlayerTextDrawColor(playerid, farmspeed[playerid], -1);
	PlayerTextDrawSetShadow(playerid, farmspeed[playerid], 0);
	PlayerTextDrawSetOutline(playerid, farmspeed[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, farmspeed[playerid], 255);
	PlayerTextDrawFont(playerid, farmspeed[playerid], 1);
	PlayerTextDrawSetProportional(playerid, farmspeed[playerid], 1);

	farmtime[playerid] = CreatePlayerTextDraw(playerid, 2.399992, 203.093383, " ");
	PlayerTextDrawLetterSize(playerid, farmtime[playerid], 0.204399, 1.592533);
	PlayerTextDrawAlignment(playerid, farmtime[playerid], 1);
	PlayerTextDrawColor(playerid, farmtime[playerid], -1);
	PlayerTextDrawSetShadow(playerid, farmtime[playerid], 0);
	PlayerTextDrawSetOutline(playerid, farmtime[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, farmtime[playerid], 255);
	PlayerTextDrawFont(playerid, farmtime[playerid], 1);
	PlayerTextDrawSetProportional(playerid, farmtime[playerid], 1);

	gunoierr[playerid] = CreatePlayerTextDraw(playerid, 523.199890, 142.613327, " ");
	PlayerTextDrawLetterSize(playerid, gunoierr[playerid], 0.219599, 1.689600);
	PlayerTextDrawAlignment(playerid, gunoierr[playerid], 1);
	PlayerTextDrawColor(playerid, gunoierr[playerid], -1);
	PlayerTextDrawSetShadow(playerid, gunoierr[playerid], 0);
	PlayerTextDrawSetOutline(playerid, gunoierr[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, gunoierr[playerid], 255);
	PlayerTextDrawFont(playerid, gunoierr[playerid], 2);
	PlayerTextDrawSetProportional(playerid, gunoierr[playerid], 1);

	farmwanted[playerid] = CreatePlayerTextDraw(playerid, 2.400026, 219.520034, "~r~Go back to the farm or you'll get wanted!");
	PlayerTextDrawLetterSize(playerid, farmwanted[playerid], 0.241199, 1.697066);
	PlayerTextDrawAlignment(playerid, farmwanted[playerid], 1);
	PlayerTextDrawColor(playerid, farmwanted[playerid], -1);
	PlayerTextDrawSetShadow(playerid, farmwanted[playerid], 0);
	PlayerTextDrawSetOutline(playerid, farmwanted[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, farmwanted[playerid], 255);
	PlayerTextDrawFont(playerid, farmwanted[playerid], 1);
	PlayerTextDrawSetProportional(playerid, farmwanted[playerid], 1);

	WarBox[playerid] = CreatePlayerTextDraw(playerid, 650.600036, 140.759963, "usebox");
	PlayerTextDrawLetterSize(playerid, WarBox[playerid] , 0.000000, 10.000000);
	PlayerTextDrawTextSize(playerid, WarBox[playerid] , 480.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, WarBox[playerid] , 1);
	PlayerTextDrawColor(playerid, WarBox[playerid] , 0);
	PlayerTextDrawUseBox(playerid, WarBox[playerid] , true);
	PlayerTextDrawBoxColor(playerid, WarBox[playerid] , 102);
	PlayerTextDrawSetShadow(playerid, WarBox[playerid] , 0);
	PlayerTextDrawSetOutline(playerid, WarBox[playerid] , 0);
	PlayerTextDrawFont(playerid, WarBox[playerid] , 0);
	PlayerTextDrawSetProportional(playerid, WarBox[playerid] , 1);
	
	TimeLeftWar1[playerid] = CreatePlayerTextDraw(playerid, 501.600036, 190.759963, " ");
	PlayerTextDrawLetterSize(playerid, TimeLeftWar1[playerid], 0.332400, 2.264533);
	PlayerTextDrawAlignment(playerid, TimeLeftWar1[playerid], 1);
	PlayerTextDrawColor(playerid, TimeLeftWar1[playerid], -1);
	PlayerTextDrawSetShadow(playerid, TimeLeftWar1[playerid], 0);
	PlayerTextDrawSetOutline(playerid, TimeLeftWar1[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, TimeLeftWar1[playerid], 255);
	PlayerTextDrawFont(playerid, TimeLeftWar1[playerid], 1);
	PlayerTextDrawSetProportional(playerid, TimeLeftWar1[playerid], 1);
	
	AttackerScore[playerid] = CreatePlayerTextDraw(playerid, 501.600036, 170.759963, " ");
	PlayerTextDrawLetterSize(playerid, AttackerScore[playerid], 0.332400, 2.264533);
	PlayerTextDrawAlignment(playerid, AttackerScore[playerid], 1);
	PlayerTextDrawColor(playerid, AttackerScore[playerid], 0xFFFFFFFF);
	PlayerTextDrawSetShadow(playerid, AttackerScore[playerid], 0);
	PlayerTextDrawSetOutline(playerid, AttackerScore[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, AttackerScore[playerid], 255);
	PlayerTextDrawFont(playerid, AttackerScore[playerid], 1);
	PlayerTextDrawSetProportional(playerid, AttackerScore[playerid], 1);
	
	DefenderScore[playerid] = CreatePlayerTextDraw(playerid, 501.600036, 150.759963, " ");
	PlayerTextDrawLetterSize(playerid, DefenderScore[playerid], 0.332400, 2.264533);
	PlayerTextDrawAlignment(playerid, DefenderScore[playerid], 1);
	PlayerTextDrawColor(playerid, DefenderScore[playerid], -1);
	PlayerTextDrawSetShadow(playerid, DefenderScore[playerid], 0);
	PlayerTextDrawSetOutline(playerid, DefenderScore[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, DefenderScore[playerid], 255);
	PlayerTextDrawFont(playerid, DefenderScore[playerid], 1);
	PlayerTextDrawSetProportional(playerid, DefenderScore[playerid], 1);

	Jailtime[playerid] = CreatePlayerTextDraw(playerid, 504.000000, 97.000000, " ");
	PlayerTextDrawLetterSize(playerid, Jailtime[playerid], 0.198999, 1.357499);
	PlayerTextDrawColor(playerid, Jailtime[playerid], -1);
	PlayerTextDrawSetShadow(playerid, Jailtime[playerid], 1);
	PlayerTextDrawSetOutline(playerid, Jailtime[playerid], 1);
	PlayerTextDrawFont(playerid, Jailtime[playerid], 1);

	Bus1[playerid] = CreatePlayerTextDraw(playerid, 256.000030, 351.431243, "Please wait a moment...");
	PlayerTextDrawLetterSize(playerid, Bus1[playerid], 0.292799, 1.614933);
	PlayerTextDrawColor(playerid, Bus1[playerid], -136734721);
	PlayerTextDrawSetShadow(playerid, Bus1[playerid], 1);
	PlayerTextDrawSetOutline(playerid, Bus1[playerid], 1);
	PlayerTextDrawFont(playerid, Bus1[playerid], 1);

	Bus2[playerid] = CreatePlayerTextDraw(playerid, 270.000030, 364.373382, " ");
	PlayerTextDrawLetterSize(playerid, Bus2[playerid], 0.206000, 1.525333);
	PlayerTextDrawColor(playerid, Bus2[playerid], -1);
	PlayerTextDrawSetShadow(playerid, Bus2[playerid], 1);
	PlayerTextDrawSetOutline(playerid, Bus2[playerid], 1);
	PlayerTextDrawFont(playerid, Bus2[playerid], 1);

	TextDrawSpec[playerid][1] = CreatePlayerTextDraw(playerid, 224.799926, 317.333343, " ");
	PlayerTextDrawLetterSize(playerid, TextDrawSpec[playerid][1], 0.392397, 2.219732);
	PlayerTextDrawAlignment(playerid, TextDrawSpec[playerid][1], 1);
	PlayerTextDrawColor(playerid, TextDrawSpec[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, TextDrawSpec[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, TextDrawSpec[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, TextDrawSpec[playerid][1], 255);
	PlayerTextDrawFont(playerid, TextDrawSpec[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, TextDrawSpec[playerid][1], 1);

	TextDrawSpec[playerid][2] = CreatePlayerTextDraw(playerid, 224.800003, 336.746551, " ");
	PlayerTextDrawLetterSize(playerid, TextDrawSpec[playerid][2], 0.434798, 2.092799);
	PlayerTextDrawAlignment(playerid, TextDrawSpec[playerid][2], 1);
	PlayerTextDrawColor(playerid, TextDrawSpec[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, TextDrawSpec[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, TextDrawSpec[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, TextDrawSpec[playerid][2], 255);
	PlayerTextDrawFont(playerid, TextDrawSpec[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, TextDrawSpec[playerid][2], 1);

	TextDrawSpec[playerid][3] = CreatePlayerTextDraw(playerid, 225.599975, 356.159973, " ");
	PlayerTextDrawLetterSize(playerid, TextDrawSpec[playerid][3], 0.437999, 2.182399);
	PlayerTextDrawAlignment(playerid, TextDrawSpec[playerid][3], 1);
	PlayerTextDrawColor(playerid, TextDrawSpec[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, TextDrawSpec[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, TextDrawSpec[playerid][3], 1);
	PlayerTextDrawBackgroundColor(playerid, TextDrawSpec[playerid][3], 255);
	PlayerTextDrawFont(playerid, TextDrawSpec[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid, TextDrawSpec[playerid][3], 1);

	TextDrawSpec[playerid][4] = CreatePlayerTextDraw(playerid, 226.400039, 375.573486, " ");
	PlayerTextDrawLetterSize(playerid, TextDrawSpec[playerid][4], 0.408400, 2.040534);
	PlayerTextDrawAlignment(playerid, TextDrawSpec[playerid][4], 1);
	PlayerTextDrawColor(playerid, TextDrawSpec[playerid][4], -1);
	PlayerTextDrawSetShadow(playerid, TextDrawSpec[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, TextDrawSpec[playerid][4], 1);
	PlayerTextDrawBackgroundColor(playerid, TextDrawSpec[playerid][4], 255);
	PlayerTextDrawFont(playerid, TextDrawSpec[playerid][4], 2);
	PlayerTextDrawSetProportional(playerid, TextDrawSpec[playerid][4], 1);

	TextDrawSpec[playerid][5] = CreatePlayerTextDraw(playerid, 226.399963, 394.240020, " ");
	PlayerTextDrawLetterSize(playerid, TextDrawSpec[playerid][5], 0.430000, 1.958400);
	PlayerTextDrawAlignment(playerid, TextDrawSpec[playerid][5], 1);
	PlayerTextDrawColor(playerid, TextDrawSpec[playerid][5], -1);
	PlayerTextDrawSetShadow(playerid, TextDrawSpec[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, TextDrawSpec[playerid][5], 1);
	PlayerTextDrawBackgroundColor(playerid, TextDrawSpec[playerid][5], 255);
	PlayerTextDrawFont(playerid, TextDrawSpec[playerid][5], 2);
	PlayerTextDrawSetProportional(playerid, TextDrawSpec[playerid][5], 1);

	HUD[1][playerid] = CreatePlayerTextDraw(playerid,575.199768, 65.706687, " ");
	PlayerTextDrawAlignment(playerid,HUD[1][playerid], 2);
	PlayerTextDrawBackgroundColor(playerid,HUD[1][playerid], 255);
	PlayerTextDrawFont(playerid,HUD[1][playerid], 1);
	PlayerTextDrawLetterSize(playerid,HUD[1][playerid], 0.310799, 1.151998);
	PlayerTextDrawColor(playerid,HUD[1][playerid], 16711935);
	PlayerTextDrawSetOutline(playerid,HUD[1][playerid], 0);
	PlayerTextDrawSetProportional(playerid,HUD[1][playerid], 1);
	PlayerTextDrawSetShadow(playerid,HUD[1][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,HUD[1][playerid], 0);

	HUD[2][playerid] = CreatePlayerTextDraw(playerid,575.199768, 43.306674, " ");
	PlayerTextDrawAlignment(playerid,HUD[2][playerid], 2);
	PlayerTextDrawBackgroundColor(playerid,HUD[2][playerid], 255);
	PlayerTextDrawFont(playerid,HUD[2][playerid], 1);
	PlayerTextDrawLetterSize(playerid,HUD[2][playerid], 0.310799, 1.151998);
	PlayerTextDrawColor(playerid,HUD[2][playerid], 16711935);
	PlayerTextDrawSetOutline(playerid,HUD[2][playerid], 0);
	PlayerTextDrawSetProportional(playerid,HUD[2][playerid], 1);
	PlayerTextDrawSetShadow(playerid,HUD[2][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,HUD[2][playerid], 0);

	HUD[3][playerid] = CreatePlayerTextDraw(playerid,2.000000, 434.000000, " ");
	PlayerTextDrawBackgroundColor(playerid,HUD[3][playerid], 255);
	PlayerTextDrawFont(playerid,HUD[3][playerid], 3);
	PlayerTextDrawLetterSize(playerid,HUD[3][playerid], 0.500000, 1.299999);
	PlayerTextDrawColor(playerid,HUD[3][playerid], 0xFFFF00FF);
	PlayerTextDrawSetOutline(playerid,HUD[3][playerid], 0);
	PlayerTextDrawSetProportional(playerid,HUD[3][playerid], 1);
	PlayerTextDrawSetShadow(playerid,HUD[3][playerid], 1);
	PlayerTextDrawSetSelectable(playerid,HUD[3][playerid], 0);

	RentCar[playerid] = CreatePlayerTextDraw(playerid, 45.333335, 320.237182, " ");
	PlayerTextDrawLetterSize(playerid, RentCar[playerid], 0.244333, 1.716147);
	PlayerTextDrawAlignment(playerid, RentCar[playerid], 1);
	PlayerTextDrawColor(playerid, RentCar[playerid], -1);
	PlayerTextDrawSetShadow(playerid, RentCar[playerid], 0);
	PlayerTextDrawSetOutline(playerid, RentCar[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, RentCar[playerid], 255);
	PlayerTextDrawFont(playerid, RentCar[playerid], 3);
	PlayerTextDrawSetProportional(playerid, RentCar[playerid], 1);

	/*Tutorial[playerid] = CreatePlayerTextDraw(playerid, 280.000000, 377.000000, "~y~Tutorial");
	PlayerTextDrawLetterSize(playerid, Tutorial[playerid], 0.420000, 1.500000);
	PlayerTextDrawSetShadow(playerid, Tutorial[playerid], 0);
	PlayerTextDrawSetOutline(playerid, Tutorial[playerid], 1);
	PlayerTextDrawFont(playerid, Tutorial[playerid], 2);

	Step[playerid][1] = CreatePlayerTextDraw(playerid, 282.000000, 390.000000, "~w~Step: ~r~1~w~/~r~8");
	PlayerTextDrawLetterSize(playerid, Step[playerid][1], 0.470000, 1.500000);
	PlayerTextDrawSetShadow(playerid, Step[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, Step[playerid][1], 1);
	PlayerTextDrawFont(playerid, Step[playerid][1], 2);

	Step[playerid][2] = CreatePlayerTextDraw(playerid, 282.000000, 390.000000, "~w~Step: ~r~2~w~/~r~8");
	PlayerTextDrawLetterSize(playerid, Step[playerid][2], 0.470000, 1.500000);
	PlayerTextDrawSetShadow(playerid, Step[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, Step[playerid][2], 1);
	PlayerTextDrawFont(playerid, Step[playerid][2], 2);

	Step[playerid][3] = CreatePlayerTextDraw(playerid, 282.000000, 390.000000, "~w~Step: ~r~3~w~/~r~8");
	PlayerTextDrawLetterSize(playerid, Step[playerid][3], 0.470000, 1.500000);
	PlayerTextDrawSetShadow(playerid, Step[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, Step[playerid][3], 1);
	PlayerTextDrawFont(playerid, Step[playerid][3], 2);

	Step[playerid][4] = CreatePlayerTextDraw(playerid, 282.000000, 390.000000, "~w~Step: ~r~4~w~/~r~8");
	PlayerTextDrawLetterSize(playerid, Step[playerid][4], 0.470000, 1.500000);
	PlayerTextDrawSetShadow(playerid, Step[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, Step[playerid][4], 1);
	PlayerTextDrawFont(playerid, Step[playerid][4], 2);

	Step[playerid][5] = CreatePlayerTextDraw(playerid, 282.000000, 390.000000, "~w~Step: ~r~5~w~/~r~8");
	PlayerTextDrawLetterSize(playerid, Step[playerid][5], 0.470000, 1.500000);
	PlayerTextDrawSetShadow(playerid, Step[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, Step[playerid][5], 1);
	PlayerTextDrawFont(playerid, Step[playerid][5], 2);

	Step[playerid][6] = CreatePlayerTextDraw(playerid, 282.000000, 390.000000, "~w~Step: ~r~6~w~/~r~8");
	PlayerTextDrawLetterSize(playerid, Step[playerid][6], 0.470000, 1.500000);
	PlayerTextDrawSetShadow(playerid, Step[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, Step[playerid][6], 1);
	PlayerTextDrawFont(playerid, Step[playerid][6], 2);

	Step[playerid][7] = CreatePlayerTextDraw(playerid, 282.000000, 390.000000, "~w~Step: ~r~7~w~/~r~8");
	PlayerTextDrawLetterSize(playerid, Step[playerid][7], 0.470000, 1.500000);
	PlayerTextDrawSetShadow(playerid, Step[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, Step[playerid][7], 1);
	PlayerTextDrawFont(playerid, Step[playerid][7], 2);

	Step[playerid][8] = CreatePlayerTextDraw(playerid, 282.000000, 390.000000, "~w~Step: ~r~8~w~/~r~8");
	PlayerTextDrawLetterSize(playerid, Step[playerid][8], 0.470000, 1.500000);
	PlayerTextDrawSetShadow(playerid, Step[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, Step[playerid][8], 1);
	PlayerTextDrawFont(playerid, Step[playerid][8], 2);*/

	BusJob[playerid] = CreatePlayerTextDraw(playerid, 260.999847, 367.526092, "~y~BUS DRIVER JOB");
	PlayerTextDrawLetterSize(playerid, BusJob[playerid], 0.350333, 1.815703);
	PlayerTextDrawAlignment(playerid, BusJob[playerid], 1);
	PlayerTextDrawColor(playerid, BusJob[playerid], -1);
	PlayerTextDrawSetShadow(playerid, BusJob[playerid], 0);
	PlayerTextDrawSetOutline(playerid, BusJob[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, BusJob[playerid], 255);
	PlayerTextDrawFont(playerid, BusJob[playerid], 2);
	PlayerTextDrawSetProportional(playerid, BusJob[playerid], 1);

	BusCheck[playerid] = CreatePlayerTextDraw(playerid, 260.999969, 382.459259, " ");
	PlayerTextDrawLetterSize(playerid, BusCheck[playerid], 0.281666, 1.989928);
	PlayerTextDrawAlignment(playerid, BusCheck[playerid], 1);
	PlayerTextDrawColor(playerid, BusCheck[playerid], -1);
	PlayerTextDrawSetShadow(playerid, BusCheck[playerid], 0);
	PlayerTextDrawSetOutline(playerid, BusCheck[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, BusCheck[playerid], 255);
	PlayerTextDrawFont(playerid, BusCheck[playerid], 2);
	PlayerTextDrawSetProportional(playerid, BusCheck[playerid], 1);

	DMVexam[playerid] = CreatePlayerTextDraw(playerid, 200.799987, 356.906677, "~y~DMV");
	PlayerTextDrawLetterSize(playerid, DMVexam[playerid], 0.497200, 1.950933);
	PlayerTextDrawAlignment(playerid, DMVexam[playerid], 1);
	PlayerTextDrawColor(playerid, DMVexam[playerid], -1);
	PlayerTextDrawSetShadow(playerid, DMVexam[playerid], 0);
	PlayerTextDrawSetOutline(playerid, DMVexam[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, DMVexam[playerid], 255);
	PlayerTextDrawFont(playerid, DMVexam[playerid], 2);
	PlayerTextDrawSetProportional(playerid, DMVexam[playerid], 1);

	DMVcheck[playerid] = CreatePlayerTextDraw(playerid, 201.600006, 373.333343, " ");
	PlayerTextDrawLetterSize(playerid, DMVcheck[playerid], 0.467599, 2.152534);
	PlayerTextDrawAlignment(playerid, DMVcheck[playerid], 1);
	PlayerTextDrawColor(playerid, DMVcheck[playerid], -1);
	PlayerTextDrawSetShadow(playerid, DMVcheck[playerid], 0);
	PlayerTextDrawSetOutline(playerid, DMVcheck[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, DMVcheck[playerid], 255);
	PlayerTextDrawFont(playerid, DMVcheck[playerid], 2);
	PlayerTextDrawSetProportional(playerid, DMVcheck[playerid], 1);

	WantedText[playerid] = CreatePlayerTextDraw(playerid, 504.000000, 122.000000, "Wanted Clear In");
	PlayerTextDrawBackgroundColor(playerid, WantedText[playerid], 255);
	PlayerTextDrawFont(playerid, WantedText[playerid], 1);
	PlayerTextDrawLetterSize(playerid, WantedText[playerid], 0.198999, 1.67499);
	PlayerTextDrawColor(playerid, WantedText[playerid], -1);
	PlayerTextDrawSetOutline(playerid, WantedText[playerid], 1);
	PlayerTextDrawSetProportional(playerid, WantedText[playerid], 1);

	UndercoverText[playerid] = CreatePlayerTextDraw(playerid, 250.000000, 374.000000, "~r~You Are Undercover");
	PlayerTextDrawBackgroundColor(playerid, UndercoverText[playerid], 255);
	PlayerTextDrawFont(playerid, UndercoverText[playerid], 3);
	PlayerTextDrawLetterSize(playerid, UndercoverText[playerid], 0.549999, 1.500000);
	PlayerTextDrawColor(playerid, UndercoverText[playerid], -1);
	PlayerTextDrawSetOutline(playerid, UndercoverText[playerid], 0);
	PlayerTextDrawSetProportional(playerid, UndercoverText[playerid], 1);
	PlayerTextDrawSetShadow(playerid, UndercoverText[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, UndercoverText[playerid], 0);

	Reportss[playerid] = CreatePlayerTextDraw(playerid, 500.000000, 96.813362, " ");
	PlayerTextDrawLetterSize(playerid, Reportss[playerid], 0.198999, 1.67499);
	PlayerTextDrawColor(playerid, Reportss[playerid], -1);
	PlayerTextDrawSetShadow(playerid, Reportss[playerid], 0);
	PlayerTextDrawSetOutline(playerid, Reportss[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Reportss[playerid], 51);
	PlayerTextDrawFont(playerid, Reportss[playerid], 2);
	PlayerTextDrawSetProportional(playerid, Reportss[playerid], 1);


 	// VARIABILELE
	gPlayerUsingLoopingAnim[playerid] = 0;  BusCheckk[playerid] = 0;
	SelectChar[playerid] = 0; 				HidePM[playerid] = 0;
	PhoneOnline[playerid] = 0; 				SelectCharID[playerid] = 0;
	SelectCharPlace[playerid] = 0;			ChosenSkin[playerid] = 0;
	UsingDrugs[playerid] = 0; 				CurrentMoney[playerid] = 0;
	UsedFind[playerid] = 0; 				CP[playerid] = 0;
	Vending[playerid] = 0;                  PlayerInfo[playerid][pFirstAnswer] = 0;
	MoneyMessage[playerid] = 0; 			Hatss[playerid] = 0;
	RepairOffer[playerid] = 999; 			RepairPrice[playerid] = 0;
	RepairCar[playerid] = 0; 				TalkingLive[playerid] = 0;
	LiveOffer[playerid] = 999; 				TakingLesson[playerid] = 0;
	RefillOffer[playerid] = 999; 			RefillPrice[playerid] = 0;
	DrugOffer[playerid] = 999; 				PlayerCuffed[playerid] = 0;
	PlayerCuffedTime[playerid] = 0; 		DrugPrice[playerid] = 0;
	RegistrationStep[playerid] = 0; 		PlayerCuffed2[playerid] = 0;
	DrugGram[playerid] = 0; 				HouseOffer[playerid] = 999;
	HouseID[playerid] = 0;				 	HousePrice[playerid] = 0;
	JailPrice[playerid] = 0; 				MedicTime[playerid] = 0;
	NeedMedicTime[playerid] = 0; 			PlacedNews[playerid] = 0;
	GoChase[playerid] = 999; 				GetChased[playerid] = 999;
	OnDuty[playerid] = 0;                   ofercar[playerid] = -1;
	carprice[playerid] = 0;                 primesccar[playerid] = 0;
	CarID[playerid] = -1;                  	cartype[playerid] = 0;
	OrderReady[playerid] = 0;				Diceid[playerid] = 999;
	GotHit[playerid] = 0; 					MedicCall[playerid] = -1;
	SafeTime[playerid] = 60; 				TransportDuty[playerid] = 0;
	PlayerTied[playerid] = 0; 				TaxiCallTime[playerid] = 0;
	TaxiCall[playerid] = -1; 				MedicCallTime[playerid] = 0;
	MechanicCallTime[playerid] = 0; 		JobDuty[playerid] = 0;
	Mobile[playerid] = -1; 					MechanicCall[playerid] = -1;
	Spectate[playerid] = -1; 				PlayerDrunk[playerid] = 0;
	PlayerDrunkTime[playerid] = 0; 			Unspec[playerid][sLocal] = -1;
 	PlayerInfo[playerid][pNewbieEnabled] = 1;
 	flymode[playerid] = 0;					IsBot[playerid] = 0;
 	tradecars[playerid] = -1;               tradecars2[playerid] = -1;
	tradetype[playerid] = -1;               tradetype2[playerid] = -1;
	tradeofferer[playerid] = -1;            tradediff[playerid] = 0;
 	ConsumingMoney[playerid] = 0;           hiddenoffer[playerid] = 999;
 	hiddenprice[playerid] = 0;              IsPlayerAFK[playerid] = 0;
	IsCollectingRubbish[playerid] = 0; 		GarbageEndTime[playerid] = 0;
	GarbageTime[playerid] = 0; 				BinTime[playerid] = 0;
    gLastCar[playerid] = 0; 				FirstSpawn[playerid] = 0;
	gOoc[playerid] = 0;                     FactionOffer[playerid] = 999;
	gNews[playerid] = 0; 					BigEar[playerid] = 0;
	gFam[playerid] = 0;						examcar[playerid] = -1;
    hudactivated[playerid] = 0;				PhoneOnlineCalls[playerid] = 0;
	gPlayerLogged[playerid] = 0;            Sunglasses[playerid] = 0;
	gPlayerLogTries[playerid] = 2; 			gPlayerAccount[playerid] = 0;
 	gPlayerSpawned[playerid] = 0;           ReportTime[playerid] = 0;
	FreeOffer[playerid] = -1;               TowAcc[playerid] = 0;
	FreePrice[playerid] = 0; 				PlayerTazeTime[playerid] = 0;
	PlayerStoned[playerid] = 0; 			AcceptOffer[playerid] = -1;
	AcceptPrice[playerid] = 0; 				TicketOffer[playerid] = 999;
	TicketMoney[playerid] = 0; 				TutTime[playerid] = 0;
 	TaxiAccepted[playerid] = 999;           FreePlayer[playerid] = -1;
	TurfsDisp[playerid] = 0; 				PlayerInfo[playerid][pCash] = dollah;
	NoFuel[playerid] = 0; 					LastBiz[playerid] = -1;
	HireCar[playerid] = -1; 				gPlayerAnimLibsPreloaded[playerid] = 0;
	TransportValue[playerid] = 0; 			TransportMoney[playerid] = 0;
	TransportTime[playerid] = 0; 			TransportCost[playerid] = 0;
	TransportDriver[playerid] = 999; 		TransferOffer[playerid] = 999;
	TransferMoney[playerid] = 0; 			AdvPlayer[playerid] = 0;
	AfterTutorial[playerid] = 0;	 		pizzaprize[playerid] = 0;
	InHouse[playerid] = -1; 				InBussines[playerid] = -1;
	targetfind[playerid] = -1; 				PlayerInfo[playerid][pNMessage] = 0;
	adminacceptedhelp[playerid] = -1;       PlayerInfo[playerid][pNMessage2] = 0;
	licenseaccepted[playerid] = -1;         timerrent[playerid] = 0;
	licensesend[playerid] = -1;			 	MatsHolding[playerid] = 0;
	MatsOffer[playerid] = -1; 				MatsPrice[playerid] = 0;
	MatsAmmo[playerid] = 0; 				SellgunOffer[playerid] = -1;
	SellgunPrice[playerid] = 0; 			SellgunMats[playerid] = 0;
	SellgunAmmo[playerid] = 0; 				SellgunID[playerid] = 0;
	pizzaj[playerid] = 0; 					farmerc[playerid] = 0;
	farmertime[playerid] = 1;               pizzatime[playerid] = 0;
	togfind[playerid] = 0;				 	SwitchKey[playerid] = 2;
	bizid[playerid] = 0; 					bizprice[playerid] = 0;
	bizoffer[playerid] = 999; 				BusinessRob[playerid] = 0;
	playerdeath[playerid] = 0; 				curatj[playerid] = 0;
	tazer[playerid] = 0; 					togip[playerid] = 0;
	Speedlimit[playerid] = 0;				WTToggle[playerid] = false;
	WTChannel[playerid] = 0.0; 				Clanidoff[playerid] = 999;
	PlayerHandsup[playerid] = 0;			failpizza[playerid] = -1;
	Trucker[playerid] = 0;					RobTime[playerid] = -1;
	QuestWait[playerid] = 0;                togadminchat[playerid] = 0;
    Radaron[playerid] = 0;                  Radarlimit[playerid] = 0;
	wantedlost[playerid] = 1799;			personalcar[0][playerid] = 0;
	personalcar[1][playerid] = 0;           personalcar[2][playerid] = 0;
	personalcar[3][playerid] = 0;           personalcar[4][playerid] = 0;
	personalcar[5][playerid] = 0;			PizzaCP[playerid] = 0;
	Dicem[playerid] = 999; 					Undercover[playerid] = 0;
	Refueling[playerid] = 0;				InHQ[playerid] = -1;
	raceoff[playerid] = 999;				reportcheater[playerid] = -1;
	toglc[playerid] = 0;					reportreason[playerid] = 0;
	fight2[playerid] = 999;					playerreported[playerid] = -1;
	taxim[playerid] = 0;					RentTime[playerid] = 0;
	shotTime[playerid] = 0;					TotalTimeRent[playerid] = 0;
    shot[playerid] = 0;						RentVeh[playerid] = -1;
	DeathP[playerid] = 0;                   EnterInModShop[playerid] = 0;
	firerockettime[playerid] = 0;           RocketBoxTime[playerid] = 0;
    SomatePermission[playerid] = 1;         TimerFree[playerid] = 0;
    somatee[playerid] = 1;					somated[playerid] = -1;
    CheckBus[playerid] = 0;                 JobStep[playerid] = 0;
    busc[playerid] = 0;                     viddd[playerid] = 0;
 	TruckID[playerid] = 0;					GotoMats[playerid] = 0;
 	Trucker3[playerid] = 0;					Trucker4[playerid] = 0;
 	Trucker2[playerid] = 0;                 AreFaina[playerid] = 0;
 	CarJacker[playerid] = 0;                JackAcc[playerid] = 0;
 	Fishing[playerid] = 0;                  FishTimer[playerid] = 0;
 	TipPeste[playerid] = 0;                 SelFac[playerid] = 0;
 	BuyCar[playerid] = -1;                  PlayerInfo[playerid][pNewbieTimeout] = 0;
 	PlayerInfo[playerid][pDrunkLevelLast] = 0;
 	PlayerInfo[playerid][pFPS] = 0;
 	PlayerInfo[playerid][pPaintBallG] = 0;
 	PlayerInfo[playerid][pPaintBallKills] = 0;
 	PlayerInfo[playerid][pPaintBallVoted] = 0;
 	PlayerInfo[playerid][pPaintBallVoted2] = 0;
 	PlayerInfo[playerid][pNextNotification] = 0;
 	PlayerInfo[playerid][pGiftBox] = random(3) + 1;
	format(PlayerInfo[playerid][pNormalName], 30, "NULL");
	format(somatename[playerid], 30, "NULL");
	format(reporttext[playerid], 30, "NULL");
	format(cheattext[playerid], 30, "NULL");
	format(AdvMSG[playerid], 256, "");

	GivePlayerCash(playerid,PlayerInfo[playerid][pCash]);

	// ANTI WEAPON CHEAT
	WeaponData[playerid][0] = false; 			WeaponData[playerid][1] = false;
	WeaponData[playerid][2] = false;			WeaponData[playerid][3] = false;
	WeaponData[playerid][4] = false; 			WeaponData[playerid][5] = false;
	WeaponData[playerid][6] = false; 			WeaponData[playerid][7] = false;
	WeaponData[playerid][8] = false; 			WeaponData[playerid][9] = false;
	WeaponData[playerid][10] = false; 			WeaponData[playerid][11] = false;
	WeaponData[playerid][12] = false;

	//Anti connect clan
	new playername[30];
	GetPlayerName(playerid, playername, sizeof(playername));
	foreach(Player, ids)
	{
		if(!strcmp(playername, PlayerInfo[ids][pNormalName], true))
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "Someone already logged in with this nick.");
            KickEx(playerid);
			return 1;
		}
	}

	// ANTI MONEY CHEAT
	TimerAtuPlayer[playerid] = SetTimerEx("UpdatePlayer", 2000, true, "d", playerid);

    // COLOR ON LOGIN
	SetPlayerColor(playerid,COLOR_GRAD2);

	// RESET WANTED
	ClearWanted(playerid);

	// TEAM PLAYER
	if(PlayerInfo[playerid][pMember] == 0)
	{
	    gTeam[playerid] = 3;
    	PlayerInfo[playerid][pTeam] = 3;
	}
	else if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pMember] == 8)
	{
	    gTeam[playerid] = 2;
    	PlayerInfo[playerid][pTeam] = 2;
	}
	else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 10)
	{
	    gTeam[playerid] = 5;
    	PlayerInfo[playerid][pTeam] = 5;
	}
	else if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pMember] == 14)
	{
	    gTeam[playerid] = 4;
    	PlayerInfo[playerid][pTeam] = 4;
	}
	else if(PlayerInfo[playerid][pMember] == 11)
	{
	    gTeam[playerid] = 11;
    	PlayerInfo[playerid][pTeam] = 11;
	}
	new string[2000];
    TextDrawShowForPlayer(playerid, LoginBox);
	format(string, sizeof(string), "Accounts: ~y~%s~w~ / Newest account: ~y~%s ~w~/ Most players online: %s",FormatNumber(sumaconturi),celmainoucont,recordjucatori);
	TextDrawSetString(LoginInfo, string);
	TextDrawShowForPlayer(playerid, LoginInfo);
	BanCheck(playerid);
	return 1;
}

public ClearCrime(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new string[50];
		format(string, sizeof(string), "********");
		strmid(PlayerInfo[playerid][pVictim], string, 0, strlen(string), 255);
		strmid(PlayerInfo[playerid][pAccused], string, 0, strlen(string), 255);
		format(string, sizeof(string), "Fara Crima");
		strmid(PlayerInfo[playerid][pCrime1], string, 0, strlen(string), 255);
		strmid(PlayerInfo[playerid][pCrime2], string, 0, strlen(string), 255);
		strmid(PlayerInfo[playerid][pCrime3], string, 0, strlen(string), 255);
		Update(playerid,pCrime1x);
		Update(playerid,pCrime2x);
		Update(playerid,pCrime3x);
		Update(playerid,pAccusedx);
		Update(playerid,pVictimx);
	}
	return 1;
}

public GetWeekDay()
{
	new year,month,day;
    getdate(year, month, day);

	new
		weekday,
		j,
		e;

	if (month <= 2)
	{
		month += 12;
		--year;
	}

	j = year % 100;
	e = year / 100;

	switch ((day + (month+1)*26/10 + j + j/4 + e/4 - 2*e) % 7)
	{
		case 0: weekday = 1;
		case 1: weekday = 2;
		case 2: weekday = 3;
		case 3: weekday = 4;
		case 4: weekday = 5;
		case 5: weekday = 6;
		case 6: weekday = 7;
	}
	return weekday;
}

forward SendLeaderMessage(leader, color, string[]);
public SendLeaderMessage(leader, color, string[])
{
	foreach(Player, i)
	{
	    if(PlayerInfo[i][pLeader] == leader)
	    {
			SendClientMessage(i, color, string);
		}
	}
	return 1;
}

forward SendToClan(groupid, colour, string[]);
public SendToClan(groupid, colour, string[])
{
	foreach(Player, i)
	{
		if(PlayerInfo[i][pClan] == groupid)
		{
			SendClientMessage(i, colour, string);
		}
	}
	return 1;
}

public RACtime(playerid)
{
      for(new player=0; player<MAX_PLAYERS; player++)
      {
      if(!IsVehicleOccupied(player)) SetVehicleToRespawn(player);
      }
      for(new car = 1; car <= 1300; car++)
      {
          if(!IsVehicleOccupied(car)) SetVehicleToRespawn(car);

      }
      return 1;
}


// ONPLAYERDISCONNECT
public OnPlayerDisconnect(playerid, reason)
{
	if(somated[playerid] != -1)
	{
		if(PlayerInfo[playerid][pWantedLevel] > 0 && sarmale[playerid] == 0)
		{
			new string[256];
			foreach(Player, i)
			{
				if(IsPlayerConnected(i))
				{
					new wakaname2[MAX_PLAYER_NAME], price = PlayerInfo[playerid][pWantedLevel] * 1000, totalprice = price / 2, streap[MAX_PLAYER_NAME];
					if(IsACop(i) && CrimInRange(50.0, playerid,i) && OnDuty[i] == 1)
					{
						GetPlayerName(playerid, streap, sizeof(streap));
						GetPlayerName(i, wakaname2, sizeof(wakaname2));
						GameTextForPlayer(i, "Running Suspect bonus!", 5000, 1);
						format(string, sizeof(string), "You Recieved $%d For Arresting Suspect %s.", totalprice, streap);
						SendClientMessage(i, COLOR_DBLUE, string);
						new var[356], wtime = (300*PlayerInfo[playerid][pWantedLevel]);
						mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `JailTime`='%d',`Jailed`= '1',`WantedLevel`='0' WHERE `name`='%s'",wtime,PlayerInfo[playerid][pNormalName]);
						mysql_tquery(SQL,var,"","");
						format(string, sizeof(string), "********");
						strmid(PlayerInfo[playerid][pVictim], string, 0, strlen(string), 255);
						strmid(PlayerInfo[playerid][pAccused], string, 0, strlen(string), 255);
						format(string, sizeof(string), "Fara Crima");
						PlayerInfo[playerid][pJailTime]=300*PlayerInfo[playerid][pWantedLevel];
						PlayerInfo[playerid][pCommands]++;
						Update(playerid,pCommandsx);
						new str[256];
				        mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCommands],PlayerInfo[playerid][pNormalName]);
			        	mysql_tquery(SQL,str,"","");
						PlayerInfo[playerid][pJailed] = 1;
						PlayerInfo[playerid][pWantedLevel] = 0;
						PlayerInfo[playerid][pWantedDeaths] += 1;
						WantedPoints[playerid] = 0;
						ClearCrime(playerid);
						arefreeze[playerid] = 0;
					    TextDrawHideForPlayer(playerid, Logosv1);
						TextDrawHideForPlayer(playerid, Logosv2);
						TextDrawHideForPlayer(playerid, LoginBox);
                        TextDrawHideForPlayer(playerid, LoginInfo);
						strmid(PlayerInfo[playerid][pCrime1], string, 0, strlen(string), 255);
						strmid(PlayerInfo[playerid][pCrime2], string, 0, strlen(string), 255);
						strmid(PlayerInfo[playerid][pCrime3], string, 0, strlen(string), 255);
						Update(playerid,pCrime1x);
						Update(playerid,pCrime2x);
						Update(playerid,pCrime3x);
						Update(playerid,pAccusedx);
						Update(playerid,pVictimx);
						GivePlayerCash(i, totalprice);
						sarmale[playerid] = 1;
						format(string, sizeof(string), "[Dispatch]: %s has been killed by No One and will be in jail for %d seconds, over.",streap,PlayerInfo[playerid][pJailTime]);
					}
				}
			}
			SendTeamMessage(1, COLOR_LIGHTBLUE, string);
			SendTeamMessage(2, COLOR_LIGHTBLUE, string);
			SendTeamMessage(3, COLOR_LIGHTBLUE, string);
			SendTeamMessage(8, COLOR_LIGHTBLUE, string);
		}
		else if(PlayerInfo[playerid][pWantedLevel] < 1)
		{
			new string[256],var100[256],sendername[30];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "Unknown");
			strmid(PlayerInfo[playerid][pVictim], string, 0, strlen(string), 255);
			Update(playerid,pVictimx);
			if(strcmp(PlayerInfo[playerid][pCrime1], "Fara Crima", true) == 0)
			{
		    	format(string,sizeof(string),"disconnect during a chase");
				strmid(PlayerInfo[playerid][pCrime1], string, 0, strlen(string), 255);
				Update(playerid,pCrime1x);
			}
			else if(strcmp(PlayerInfo[playerid][pCrime2], "Fara Crima", true) == 0)
			{
		    	format(string,sizeof(string),"disconnect during a chase");
				strmid(PlayerInfo[playerid][pCrime2], string, 0, strlen(string), 255);
				Update(playerid,pCrime2x);
			}
			else if(strcmp(PlayerInfo[playerid][pCrime3], "Fara Crima", true) == 0)
			{
		    	format(string,sizeof(string),"disconnect during a chase");
				strmid(PlayerInfo[playerid][pCrime3], string, 0, strlen(string), 255);
				Update(playerid,pCrime3x);
			}
			else if(strcmp(PlayerInfo[playerid][pCrime1],  "Fara Crima", true) == 0 && strcmp(PlayerInfo[playerid][pCrime2], "Fara Crima", true) == 0 && strcmp(PlayerInfo[playerid][pCrime3], "Fara Crima", true) == 0) { }
			else
			{
				format(string,sizeof(string),"disconnect during a chase");
				strmid(PlayerInfo[playerid][pCrime1], string, 0, strlen(string), 255);
				Update(playerid,pCrime1x);
				format(string, sizeof(string), "Fara Crima");
				strmid(PlayerInfo[playerid][pCrime2], string, 0, strlen(string), 255);
				strmid(PlayerInfo[playerid][pCrime3], string, 0, strlen(string), 255);
				Update(playerid,pCrime2x);
				Update(playerid,pCrime3x);
			}
			format(string, sizeof(string), "[Dispatch]: %s is now wanted for disconnecting during a chase.",sendername);
			SendTeamMessage(1, COLOR_DBLUE, string);
			SendTeamMessage(2, COLOR_DBLUE, string);
			SendTeamMessage(3, COLOR_DBLUE, string);
			SendTeamMessage(8, COLOR_DBLUE, string);
			PlayerInfo[playerid][pWantedLevel] = (2+PlayerInfo[playerid][pWantedLevel]);
			Update(playerid,pWantedLevelx);
			if(JCurier[playerid][0] > 0) DestroyVehicle(JCurier[playerid][2]);
			mysql_format(SQL, var100, sizeof(var100), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','Nivelul tau de wanted a fost modificat (+2) pentru ca te-ai deconectat in timp ce erai urmarit de politie.')",PlayerInfo[playerid][pSQLID]);
			mysql_tquery(SQL,var100,"","");
		}
	}
	// PAYDAY SAVE
	DestroyNeon(playerid, OwnedVeh(personalcar[0][playerid]));
	DestroyNeon(playerid, OwnedVeh(personalcar[1][playerid]));
	DestroyNeon(playerid, OwnedVeh(personalcar[2][playerid]));
	DestroyNeon(playerid, OwnedVeh(personalcar[3][playerid]));
	DestroyNeon(playerid, OwnedVeh(personalcar[4][playerid]));
	DestroyNeon(playerid, OwnedVeh(personalcar[5][playerid]));

	DestryVipTextVehicle(OwnedVeh(personalcar[0][playerid]),playerid);
	DestryVipTextVehicle(OwnedVeh(personalcar[1][playerid]),playerid);
	DestryVipTextVehicle(OwnedVeh(personalcar[2][playerid]),playerid);
	DestryVipTextVehicle(OwnedVeh(personalcar[3][playerid]),playerid);
	DestryVipTextVehicle(OwnedVeh(personalcar[4][playerid]),playerid);
	DestryVipTextVehicle(OwnedVeh(personalcar[5][playerid]),playerid);
	PinLogged[playerid] = 0;
    
	if(IsWorkingCariera[playerid] >= 1)
	{
		DisablePlayerCheckpoint(playerid);
		DestroyVehicle(MasinaCariera[playerid]);
		IsWorkingCariera[playerid] = 0;
		SendClientMessage(playerid, -1, "Work Failed ! You Left The Vehicle");
	}
	
	if(isRelogging[playerid] == true)
    {
        new string[30];
        isRelogging[playerid] = false;
        format(string, sizeof(string), "unbanip %s", relogPlayerIP[playerid]);
		SCM(playerid, COLOR_RED, string);
        SendRconCommand(string);
    }
	
	for(new i = 0;i < MAX_VEHICLES;i++) 
	{
		if(VehOwned[i] == 2 && VehOwner[i] == playerid) 
		{
		VehOwner[i] = 9999;
		VehOwned[i] = 2;
		}
	}
	
	if(gPlayerLogged[playerid] != 0)
	{
		OnPlayerDateUpdateX2(playerid);
		Update(playerid, pPayDayx);
		Update(playerid, pPayCheckx);
		Update(playerid, pFpunishx);
		Update(playerid, pConnectTimex);
		Update(playerid, pLawyerx);
		Update(playerid, pBank);
		Update(playerid, pCashx);
		Update(playerid, pRP);
		Update(playerid, pHTokenx);
		Update(playerid, pJailTimex);
		Update(playerid, pLevelx);
		Update(playerid, pCommandsx);
		Update(playerid, pPremiumPointsx);
	}
	if(acovers == 1)return printf("Data from an acover admin was not saved!");
	pnsmoney[playerid] = 0;
	OnDutymedic[playerid] = 0;
	RepairTime[playerid] = 0;
	Tigaanel[playerid] = 0;
	foreach(Player, i)
	{
		if(IsACop(playerid))
		{
			if(caser[playerid] == i)
			{
				cased[i] --;
				caser[playerid] = 1001;
			}
		}
	}
	cased[playerid] = 0;
	caser[playerid] = 1001;

    if(PlayerInfo[playerid][pMember] > 0)
	{
	    new namex[25],disc[84];
	    GetPlayerName(playerid,namex,sizeof(namex));
	    if(serverrestart2 == -1)
	    {
			switch(reason)
	    	{
	        	case 0: format(disc,sizeof(disc),"%s from your group has disconnected (crash).",namex);
	        	case 1: format(disc,sizeof(disc),"%s from your group has disconnected (quit).",namex);
    			case 2: format(disc,sizeof(disc),"%s from your group has disconnected (banned/kicked).",namex);
	    	}
	    	SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_GENANNOUNCE, disc);
		}
	}
	if(PlayerInfo[playerid][pAdmin] > 0 || PlayerInfo[playerid][pHelper] > 0)
	{
		new string2[128],namee[30];
		GetPlayerName(playerid, namee, sizeof(namee));
		if(serverrestart2 == -1)
		{
			switch(reason)
			{
				case 0: format(string2, sizeof(string2), "[QuitBot]: %s left the game (crash).",namee);
				case 1: format(string2, sizeof(string2), "[QuitBot]: %s left the game (quit).",namee);
				case 2: format(string2, sizeof(string2), "[QuitBot]: %s left the game (banned/kicked).",namee);
			}
			ABroadCast(COLOR_ADMCHAT, string2,1);
			HLChat(COLOR_ADMCHAT,string2);
		}
	}
    if(aprimitintrebarea[playerid] >= 0)
	{
 		format(MGLOBAL, sizeof(MGLOBAL), "The Question Got Deleted Because %s Has Left The Server",GetName(playerid));
   		SCM(aprimitintrebarea[playerid], COLOR_ERROR, MGLOBAL);
	    lastquestion[aprimitintrebarea[playerid]] = -1;
	    timefornextquestion[aprimitintrebarea[playerid]] = 20;
	}
	if(lastquestion[playerid] >= 0)
	{
        PlayerInfo[lastquestion[playerid]][pNMessage2] = 0;
 		PlayerInfo[lastquestion[playerid]][pNMessage] = 0;
   		PlayerInfo[lastquestion[playerid]][pFirstAnswer] = 0;
		SendClientMessage(lastquestion[playerid], COLOR_SERVER, "Now You Can Use The /N Command Because The Helper Who Took The Question Has Left The Game");
        aprimitintrebarea[lastquestion[playerid]] = -1;
		lastquestion[playerid] = -1;
	}
	Update(playerid,pWantedLevelx);
	timefornextquestion[playerid] = -1;
    HelperDuty[playerid] = 0;
	if(PlayerInfo[playerid][pPaintBallG] > 0)
 	{
  		new string [128],sendername[30];
    	GetPlayerName(playerid, sendername, sizeof(sendername));
		foreach(Player, i)
		{
  			if(PlayerInfo[i][pPaintBallG] == PlayerInfo[playerid][pPaintBallG])
	    	{
      			format(string,sizeof(string),"%s has left the paintball arena.", sendername);
	        	SendClientMessage(i, COLOR_YELLOW, string);
			}
		}
		curatj[playerid] = 0;
		for (new i = 0; i != 5; ++i) SendDeathMessageToPlayer(playerid, 1001, 1001, 1001);
		PlayerTextDrawHide(playerid, PaintBallText[playerid]);
		SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
		paintp[PlayerInfo[playerid][pPaintBallG]]--;
  		PlayerInfo[playerid][pPaintBallG] = 0;
    	PlayerInfo[playerid][pPaintBallKills] = 0;
    	PlayerInfo[playerid][pPaintBallVoted] = 0;
    	PlayerInfo[playerid][pPaintBallVoted2] = 0;
	    PlayerInfo[playerid][NoTp] = 0;
     	ResetPlayerWeaponsEx(playerid);
	    ResetPlayerWeapons(playerid);
	    SetPlayerArmourEx(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid,0);
	    SetPlayerToTeamColor(playerid);
	    SetPlayerWorldBounds(playerid, 20000.0000, -20000.0000, 20000.0000, -20000.0000);
	    SetPlayerPos(playerid, 1154.4122,-1440.0548,15.7969);
	}
 	if(PlayerInfo[playerid][pPremiumAccount] == 1)
 	{
 	    if(PlayerInfo[playerid][pColor] >=1)
 	    {
 	    	PlayerInfo[playerid][pColor] = 0;
	  	}
	}


	if(PlayerInfo[playerid][pFlyMode] > 0)
	{
	    SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid, 0);
		PlayerInfo[playerid][pFlyMode] = 0;
	}

	if(TakingLesson[playerid] == 1)
	{
		PlayerTextDrawHide(playerid, DMVexam[playerid]);
		PlayerTextDrawHide(playerid, DMVcheck[playerid]);
		DestroyVehicle(examcar[playerid]);
		DisableRemoteVehicleCollisions(playerid, 0);
		examcar[playerid] = -1;
        TakingLesson[playerid] = 0;
	    DisablePlayerRaceCheckpoint(playerid);
	}

	if(AdvPlayer[playerid] != 0)
	{
		KillTimer(AdvTimer[playerid]);
		AdvPlayer[playerid] = 0;
		format(AdvMSG[playerid], 256, "");
	}

	new qqerry[128];
	mysql_format(SQL,qqerry, sizeof(qqerry), "UPDATE `users` SET `Status` = '0' WHERE `id` = '%d'", PlayerInfo[playerid][pSQLID]);
    mysql_tquery(SQL,qqerry,"","");
	mysql_format(SQL,qqerry, sizeof(qqerry), "UPDATE `friends` SET `Status` = '0' WHERE `FriendID` = '%d'", PlayerInfo[playerid][pSQLID]);
    mysql_tquery(SQL,qqerry,"","");

	DestroyPVehs(playerid);
	new vehicleid = GetPlayerVehicleID(playerid);
	if(viddd[playerid] != 0)
	{
        DestroyDynamicObject(vText[OwnedVeh(vehicleid)][playerid]);
	    DestroyVehicle(viddd[playerid]);
	    viddd[playerid] = 0;
	}

	tazer[playerid] = 0;						curatj[playerid] = 0;
	playerdeath[playerid] = 0;
	bizid[playerid] = 0; 						bizprice[playerid] = 0;
	bizoffer[playerid] = 999;					PlayerInfo[playerid][pSleeping] = 0;
	adminacceptedhelp[playerid] = -1;			DeletePVar(playerid, "Help");
	licenseaccepted[playerid] = -1;				licensesend[playerid] = -1;
	SellgunOffer[playerid] = -1;				SellgunPrice[playerid] = 0;
	SellgunMats[playerid] = 0;					SellgunAmmo[playerid] = 0;
	SellgunID[playerid] = 0;					pizzaj[playerid] = 0;
	requestingevent[playerid] = 0;              pizzatime[playerid] = 0;
	eventorganizer[playerid] = 0;				togfind[playerid] = 0;
    PlayerCuffed2[playerid] = 0;                timerrent[playerid] = 0;
	togip[playerid] = 0;						Clanidoff[playerid] = 999;
	WTToggle[playerid] = false; 				WTChannel[playerid] = 0.0;
	antirem[playerid] = 0;
  	wantedlost[playerid] = 1799;                Trucker[playerid] = 0;
	Diceid[playerid] = 999;                     PlayerHandsup[playerid] = 0;
	Dicem[playerid] = 999; 					    firerockettime[playerid] = 0;
	TaxiCall[playerid] = -1;					Refueling[playerid] = 0;
 	InHQ[playerid] = -1;						InHouse[playerid] = -1;
	InBussines[playerid] = -1; 					raceoff[playerid] = 999;
	toglc[playerid] = 0;                        togadminchat[playerid] = 0;
    taxim[playerid] = 0;
	RocketBoxTime[playerid] = 0;				somated[playerid] = -1;
	SomatePermission[playerid] = 1;             somatee[playerid] = 1;
	ReportTime[playerid] = 0;                   IsCollectingRubbish[playerid] = 0;
 	hudactivated[playerid] = 0;
	Radaron[playerid] = 0; 						Radarlimit[playerid] = 0;
    Vending[playerid] = 0;                      PlayerInfo[playerid][pFishPrice] = 0;
	FactionOffer[playerid] = 999;               Sunglasses[playerid] = 0;
	Hatss[playerid] = 0;                        TowAcc[playerid] = 0;
	CheckBus[playerid] = 0;                     JobStep[playerid] = 0;
	viddd[playerid] = 0;                        Trucker2[playerid] = 0;
	TruckID[playerid] = 0;                      Trucker3[playerid] = 0;
	Trucker4[playerid] = 0;                     AreFaina[playerid] = 0;
	CarJacker[playerid] = 0;                    JackAcc[playerid] = 0;
	Fishing[playerid] = 0;                      FishTimer[playerid] = 0;
	TipPeste[playerid] = 0;                     SelFac[playerid] = 0;
	BuyCar[playerid] = -1;                      EnterInModShop[playerid] = 0;
	PlayerInfo[playerid][pHelpedPlayers] = 0;
	PlayerInfo[playerid][pCommands] = 0;
	PlayerInfo[playerid][pNMuted] = 0;
	PlayerInfo[playerid][pNRE] = -1;
	WantedPoints[playerid] = 0;                 PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	for(new i = 0; i < 4; i++) JCurier[playerid][i] = -1;

	PlayerTextDrawHide(playerid, WarBox[playerid]);
    PlayerTextDrawHide(playerid, TimeLeftWar1[playerid]);
	PlayerTextDrawHide(playerid, AttackerScore[playerid]);
	PlayerTextDrawHide(playerid, DefenderScore[playerid]);
    KillTimer(timersoo[playerid]);
	KillTimer(soexpire[playerid]);
	PlayerTextDrawHide(playerid, UndercoverText[playerid]);
	PlayerTextDrawHide(playerid, HUD[1][playerid]);
	PlayerTextDrawHide(playerid, HUD[2][playerid]);
	PlayerTextDrawHide(playerid, HUD[3][playerid]);
	PlayerTextDrawHide(playerid, Reportss[playerid]);
	PlayerTextDrawHide(playerid, RentCar[playerid]);
	PlayerTextDrawHide(playerid, WantedText[playerid]);

	if(RentVeh[playerid] != -1)
	{
		VehicleRent[RentVeh[playerid]] = -1;
		RentTime[playerid] = 0;
		TotalTimeRent[playerid] = 0;
		KillTimer(RentTimerr[playerid]);
		RentVeh[playerid] = -1;
	}

    RemovePlayerAttachedObject(playerid,0);
    RemovePlayerAttachedObject(playerid,1);
    RemovePlayerAttachedObject(playerid,2);
    RemovePlayerAttachedObject(playerid,3);
    RemovePlayerAttachedObject(playerid,4);

    if(HireCar[playerid] > 0)
    {
  		new engine,lights,alarm,doors,bonnet,boot,objective;
    	gCarLock[HireCar[playerid]] = 0;
     	GetVehicleParamsEx(HireCar[playerid],engine,lights,alarm,doors,bonnet,boot,objective);
     	SetVehicleParamsEx(HireCar[playerid],engine,lights,alarm,0,bonnet,boot,objective);
      	vehEngine[HireCar[playerid]] = 0;
       	GetVehicleParamsEx(HireCar[playerid],engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(HireCar[playerid],VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
		HireCar[playerid] = -1;
  		SetVehicleToRespawn(HireCar[playerid]);
  		timerrent[playerid] = 0;
	}

	// HITMAN
	if(GotHit[playerid] > 0)
	{
	    if(GetChased[playerid] < 999)
	    {
	        if(IsPlayerConnected(GetChased[playerid]))
	        {
	        	SendClientMessage(GetChased[playerid], COLOR_YELLOW, "Your hit has left the server.");
	            GoChase[GetChased[playerid]] = 999;
		        togfind[GetChased[playerid]] = 0;
		        PlayerInfo[GetChased[playerid]][pHitT] = 0;
				new string[124];
				mysql_format(SQL, string, sizeof(string), "UPDATE users SET `HitT`='%d' WHERE `name`='%s'", PlayerInfo[GetChased[playerid]][pHitT], PlayerInfo[GetChased[playerid]][pNormalName]);
		        mysql_tquery(SQL,string,"","");
			}
	    }
	}
	if(GoChase[playerid] != 999)
	{
		GotHit[GoChase[playerid]] = 0;
		GetChased[GoChase[playerid]] = 999;
		GoChase[playerid] = 999;
	}
	GetChased[playerid] = 999;					 GotHit[playerid] = 0;

	// TIMER MONEY
	KillTimer(TimerAtuPlayer[playerid]);

	// LAST LOGIN
	new y,m,d,h,mi,sec;
	getdate(y,m,d);
	gettime(h,mi,sec);
	new str[184];
	mysql_format(SQL,str,sizeof(str), "UPDATE users SET `lastOn`='%d-%02d-%02d %02d:%02d:%02d' WHERE `name`='%s'",y,m,d,h,mi,sec,PlayerInfo[playerid][pNormalName]);
	mysql_tquery(SQL,str,"","");

	// MESAJ DECONECTARE
 	new wakaname2[25],
		string2[64];
	GetPlayerName(playerid, wakaname2, sizeof(wakaname2));
	if(serverrestart2 == -1)
 	{
		switch(reason)
    	{
   			case 0: format(string2,sizeof(string2),"%s has timed out from the server (crash).",wakaname2);
   			case 1: format(string2,sizeof(string2),"%s has left the server.",wakaname2);
   			case 2: format(string2,sizeof(string2),"%s has been kicked or banned from the server.",wakaname2);
    	}
    	ProxDetector(20.0, playerid, string2, COLOR_GENANNOUNCE,COLOR_GENANNOUNCE,COLOR_GENANNOUNCE,COLOR_GENANNOUNCE,COLOR_GENANNOUNCE);
	}
	// TAXI
	foreach(Player,i)
	{
		if(IsPlayerConnected(Mobile[playerid]))
		{
			if(Mobile[playerid] != -1)
			{
				CellTime[Mobile[playerid]] = 0;
				CellTime[playerid] = 0;
				Mobile[Mobile[playerid]] = -1;
				SetPlayerSpecialAction(Mobile[playerid],SPECIAL_ACTION_STOPUSECELLPHONE);
				Mobile[playerid] = -1;
				PlayerInfo[playerid][pSpeaker] = 0;
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			}
		}
		if(targetfind[i] == playerid)
		{
		    targetfind[i] = -1;
		    UsedFind[i] = 0;
		    DisablePlayerCheckpoint(i);
	        GameTextForPlayer(i, "~r~Your target left the game.", 5000, 1);
			if(IsACop(i))
			{
				if(caser[i] == playerid)
				{
					caser[i] = 0;
				}
			}
		}
	    if(TaxiAccepted[i] < 999)
        {
	        if(TaxiAccepted[i] == playerid)
	        {
	            TaxiAccepted[i] = 999;
	            GameTextForPlayer(i, "~w~Taxi Caller~n~~r~~h~Left the game", 5000, 1);
	            TaxiCallTime[i] = 0;
	            DisablePlayerCheckpoint(i);
	        }
        }
	}
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
	{
	    if(IsPlayerConnected(TransportDriver[playerid]))
		{
		    new string[256],sendername[30],giveplayer[30];
		    GetPlayerName(playerid,sendername,sizeof(sendername));
		    GetPlayerName(TransportDriver[playerid],giveplayer,sizeof(giveplayer));
		    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
		    TransportTime[TransportDriver[playerid]] = 0;
		    TransportCost[TransportDriver[playerid]] = 0;
		    format(string, sizeof(string), "~w~Passenger left~n~~g~Earned $%d",TransportCost[playerid]);
		    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
		    PlayerInfo[playerid][pCommands]++;
		    Update(playerid,pCommandsx);
		    mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCommands],PlayerInfo[playerid][pNormalName]);
		    mysql_tquery(SQL,str,"","");
		    format(string, sizeof(string), "# %s gets off the cab and pays $%s to %s.",sendername,FormatNumber(TransportCost[playerid]),giveplayer);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}

	// TRANSPORT DUTY / JOB DUTY
    if(TransportDuty[playerid] == 1)
	{
		TaxiDrivers -= 1;
	}
	if(PlayerInfo[playerid][pJob] == 5)
	{
	    if(JobDuty[playerid] == 1) { Medics -= 1; }
	}
	else if(PlayerInfo[playerid][pJob] == 8)
	{
	    if(JobDuty[playerid] == 1) { Mechanics -= 1; }
	}
    return 1;
}

public SetPlayerSpawn(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		InHouse[playerid] = -1;
		InBussines[playerid] = -1;
		InHQ[playerid] = -1;
		StopAudioStreamForPlayer(playerid);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
	    if(PlayerInfo[playerid][pTut] == 0)
	    {
			GodMode[playerid] = 1;
			gOoc[playerid] = 1; gNews[playerid] = 1; gFam[playerid] = 1;
			RegistrationStep[playerid] = 1;
			new sendername[30],stringy[128];
			GetPlayerName(playerid, sendername,  sizeof(sendername));
			SendClientMessage(playerid, COLOR_TEAL, "----------------------------------------------------------------------------");
			format(stringy,sizeof(stringy),"Welcome to New Land RP, %s.", sendername);
			SendClientMessage(playerid, COLOR_YELLOW, stringy);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid, 9994);
			//SetPlayerPosEx(playerid, 1135.7133,-1551.3575,68.6948);
			InterpolateCameraPos(playerid, 1022.1117,-1574.3024,82.9095, 1037.3715,-1732.7358,25.2859, 30000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid,1022.1117,-1574.3024,82.9095,1037.3715,-1732.7358,25.2859, 30000, CAMERA_MOVE);
			ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_MSGBOX, "Language", "Lotfan Zabane Khod Ra Entekhab Konid\nChoose the language that you speak.", "Persian", "English");
			return 1;
		}
		new rand,
			house = PlayerInfo[playerid][pPhousekey];
		if(PlayerInfo[playerid][pPaintBallG] >= 1)
		{
		    curatj[playerid] = 1;
		    SetPlayerToTeamColor(playerid);
		    if(PlayerInfo[playerid][pPaintBallG] == 2 && paintt[PlayerInfo[playerid][pPaintBallG]] > 0)
		    {
		        SetPlayerArmourEx(playerid, 100.0);
			}
			if(PlayerInfo[playerid][pPaintBallG] == 1 || PlayerInfo[playerid][pPaintBallG] == 2)
			{
		    	if(paintg[PlayerInfo[playerid][pPaintBallG]] == 1 && paintt[PlayerInfo[playerid][pPaintBallG]] > 0)
		    	{
		        	GivePlayerWeaponEx(playerid, 24, 1000);
		        	GivePlayerWeaponEx(playerid, 31, 1000);
		        	GivePlayerWeaponEx(playerid, 16, 1);
		        	GivePlayerWeaponEx(playerid, 41, 1000);
				}
				else if(paintg[PlayerInfo[playerid][pPaintBallG]] == 2 && paintt[PlayerInfo[playerid][pPaintBallG]] > 0)
		    	{
		        	GivePlayerWeaponEx(playerid, 5, 1);
				}
				else if(paintg[PlayerInfo[playerid][pPaintBallG]] == 3 && paintt[PlayerInfo[playerid][pPaintBallG]] > 0)
		    	{
		       	 	GivePlayerWeaponEx(playerid, 9, 1);
				}
			}
			else if(PlayerInfo[playerid][pPaintBallG] == 3 && paintt[PlayerInfo[playerid][pPaintBallG]] > 0)
			{
				if(PlayerInfo[playerid][pPaintBallKills] >= 0 && PlayerInfo[playerid][pPaintBallKills] <= 1) { ResetPlayerWeaponsEx(playerid); ResetPlayerWeapons(playerid); GivePlayerWeaponEx(playerid, 24, 1000); }
				else if(PlayerInfo[playerid][pPaintBallKills] >= 2 && PlayerInfo[playerid][pPaintBallKills] <= 3) { ResetPlayerWeaponsEx(playerid); ResetPlayerWeapons(playerid); GivePlayerWeaponEx(playerid, 29, 1000); }
				else if(PlayerInfo[playerid][pPaintBallKills] >= 4 && PlayerInfo[playerid][pPaintBallKills] <= 5) { ResetPlayerWeaponsEx(playerid); ResetPlayerWeapons(playerid); GivePlayerWeaponEx(playerid, 28, 1000); }
				else if(PlayerInfo[playerid][pPaintBallKills] >= 6 && PlayerInfo[playerid][pPaintBallKills] <= 7) { ResetPlayerWeaponsEx(playerid); ResetPlayerWeapons(playerid); GivePlayerWeaponEx(playerid, 33, 1000); }
				else if(PlayerInfo[playerid][pPaintBallKills] >= 8 && PlayerInfo[playerid][pPaintBallKills] <= 9) { ResetPlayerWeaponsEx(playerid); ResetPlayerWeapons(playerid); GivePlayerWeaponEx(playerid, 32, 1000); }
				else if(PlayerInfo[playerid][pPaintBallKills] >= 10 && PlayerInfo[playerid][pPaintBallKills] <= 11) { ResetPlayerWeaponsEx(playerid); ResetPlayerWeapons(playerid); GivePlayerWeaponEx(playerid, 25, 1000); }
				else if(PlayerInfo[playerid][pPaintBallKills] >= 12 && PlayerInfo[playerid][pPaintBallKills] <= 13) { ResetPlayerWeaponsEx(playerid); ResetPlayerWeapons(playerid); GivePlayerWeaponEx(playerid, 26, 1000); }
				else if(PlayerInfo[playerid][pPaintBallKills] >= 14 && PlayerInfo[playerid][pPaintBallKills] <= 15) { ResetPlayerWeaponsEx(playerid); ResetPlayerWeapons(playerid); GivePlayerWeaponEx(playerid, 34, 1000); }
				else if(PlayerInfo[playerid][pPaintBallKills] >= 16 && PlayerInfo[playerid][pPaintBallKills] <= 17) { ResetPlayerWeaponsEx(playerid); ResetPlayerWeapons(playerid); GivePlayerWeaponEx(playerid, 27, 1000); }
				else if(PlayerInfo[playerid][pPaintBallKills] >= 18 && PlayerInfo[playerid][pPaintBallKills] <= 19) { ResetPlayerWeaponsEx(playerid); ResetPlayerWeapons(playerid); GivePlayerWeaponEx(playerid, 31, 1000); }
				else if(PlayerInfo[playerid][pPaintBallKills] >= 20 && PlayerInfo[playerid][pPaintBallKills] <= 21) { ResetPlayerWeaponsEx(playerid); ResetPlayerWeapons(playerid); GivePlayerWeaponEx(playerid, 30, 1000); }
				else if(PlayerInfo[playerid][pPaintBallKills] >= 22 && PlayerInfo[playerid][pPaintBallKills] <= 23) { ResetPlayerWeaponsEx(playerid); ResetPlayerWeapons(playerid); GivePlayerWeaponEx(playerid, 23, 1000); }
				else if(PlayerInfo[playerid][pPaintBallKills] >= 24 && PlayerInfo[playerid][pPaintBallKills] <= 25) { ResetPlayerWeaponsEx(playerid); ResetPlayerWeapons(playerid); GivePlayerWeaponEx(playerid, 22, 1000); }
				else if(PlayerInfo[playerid][pPaintBallKills] >= 26 && PlayerInfo[playerid][pPaintBallKills] <= 27) { ResetPlayerWeaponsEx(playerid); ResetPlayerWeapons(playerid); GivePlayerWeaponEx(playerid, 9, 1); }
				else if(PlayerInfo[playerid][pPaintBallKills] >= 28) { ResetPlayerWeaponsEx(playerid); ResetPlayerWeapons(playerid); GivePlayerWeaponEx(playerid, 4, 1); }
			}
			else if(PlayerInfo[playerid][pPaintBallG] == 4 && paintt[PlayerInfo[playerid][pPaintBallG]] > 0)
			{
			    GivePlayerWeaponEx(playerid, 24, 1000);
			}
			if(paintm[PlayerInfo[playerid][pPaintBallG]] == 1)
			{
   				rand = random(sizeof(gRandomSpawnRC));
			    SetPlayerPosEx(playerid,gRandomSpawnRC[rand][0],gRandomSpawnRC[rand][1],gRandomSpawnRC[rand][2]);
			    SetPlayerSkin(playerid, 25);
			    SetPlayerInterior(playerid, 10);
			    if(PlayerInfo[playerid][pPaintBallG] == 1)
			    {
			    	SetPlayerVirtualWorld(playerid,125);
				}
				else if(PlayerInfo[playerid][pPaintBallG] == 2)
			    {
			    	SetPlayerVirtualWorld(playerid,126);
				}
				else if(PlayerInfo[playerid][pPaintBallG] == 3)
			    {
			    	SetPlayerVirtualWorld(playerid,127);
				}
				else if(PlayerInfo[playerid][pPaintBallG] == 4)
			    {
			    	SetPlayerVirtualWorld(playerid,128);
				}
			    SetTimerEx("UnFreezeStation", 100, false, "i", playerid);
			}
			else if(paintm[PlayerInfo[playerid][pPaintBallG]] == 2)
			{
   				rand = random(sizeof(gRandomSpawnTennis));
			    SetPlayerPosEx(playerid,gRandomSpawnTennis[rand][0],gRandomSpawnTennis[rand][1],gRandomSpawnTennis[rand][2]);
			    SetPlayerSkin(playerid, 96);
	     		SetPlayerWorldBounds(playerid, -2712.4683, -2792.2351,-229.3094, -274.6794);
	     		SetPlayerInterior(playerid, 0);
			    if(PlayerInfo[playerid][pPaintBallG] == 1)
			    {
			    	SetPlayerVirtualWorld(playerid,125);
				}
				else if(PlayerInfo[playerid][pPaintBallG] == 2)
			    {
			    	SetPlayerVirtualWorld(playerid,126);
				}
				else if(PlayerInfo[playerid][pPaintBallG] == 3)
			    {
			    	SetPlayerVirtualWorld(playerid,127);
				}
				else if(PlayerInfo[playerid][pPaintBallG] == 4)
			    {
			    	SetPlayerVirtualWorld(playerid,128);
				}
			    SetTimerEx("UnFreezeStation", 100, false, "i", playerid);
			}
			else if(paintm[PlayerInfo[playerid][pPaintBallG]] == 3)
			{
   				rand = random(sizeof(gRandomSpawnFarm));
			    SetPlayerPosEx(playerid,gRandomSpawnFarm[rand][0],gRandomSpawnFarm[rand][1],gRandomSpawnFarm[rand][2]);
			    SetPlayerSkin(playerid, 158);
			    SetPlayerWorldBounds(playerid, 135.3258, -287.9915, 57.6137 ,-74.2723);
			    SetPlayerInterior(playerid, 0);
			    if(PlayerInfo[playerid][pPaintBallG] == 1)
			    {
			    	SetPlayerVirtualWorld(playerid,125);
				}
				else if(PlayerInfo[playerid][pPaintBallG] == 2)
			    {
			    	SetPlayerVirtualWorld(playerid,126);
				}
				else if(PlayerInfo[playerid][pPaintBallG] == 3)
			    {
			    	SetPlayerVirtualWorld(playerid,127);
				}
				else if(PlayerInfo[playerid][pPaintBallG] == 4)
			    {
			    	SetPlayerVirtualWorld(playerid,128);
				}
			    SetTimerEx("UnFreezeStation", 100, false, "i", playerid);
			}
			else if(paintm[PlayerInfo[playerid][pPaintBallG]] == 4)
			{
   				rand = random(sizeof(gRandomSpawnBeach));
			    SetPlayerPosEx(playerid,gRandomSpawnBeach[rand][0],gRandomSpawnBeach[rand][1],gRandomSpawnBeach[rand][2]);
			    SetPlayerSkin(playerid, 97);
			    SetPlayerWorldBounds(playerid, 708.0417, 409.4930, -1806.0677, -1907.7119);
			    SetPlayerInterior(playerid, 0);
			    if(PlayerInfo[playerid][pPaintBallG] == 1)
			    {
			    	SetPlayerVirtualWorld(playerid,125);
				}
				else if(PlayerInfo[playerid][pPaintBallG] == 2)
			    {
			    	SetPlayerVirtualWorld(playerid,126);
				}
				else if(PlayerInfo[playerid][pPaintBallG] == 3)
			    {
			    	SetPlayerVirtualWorld(playerid,127);
				}
				else if(PlayerInfo[playerid][pPaintBallG] == 4)
			    {
			    	SetPlayerVirtualWorld(playerid,128);
				}
			    SetTimerEx("UnFreezeStation", 100, false, "i", playerid);
			}
			else if(paintm[PlayerInfo[playerid][pPaintBallG]] == 5)
			{
   				rand = random(sizeof(gRandomSpawnLSPD));
			    SetPlayerPosEx(playerid,gRandomSpawnLSPD[rand][0],gRandomSpawnLSPD[rand][1],gRandomSpawnLSPD[rand][2]);
			    SetPlayerSkin(playerid, 285);
			    SetPlayerWorldBounds(playerid, 1558.4261, 1387.0891, -1578.9333, -1776.6854);
			    SetPlayerInterior(playerid, 0);
			    if(PlayerInfo[playerid][pPaintBallG] == 1)
			    {
			    	SetPlayerVirtualWorld(playerid,125);
				}
				else if(PlayerInfo[playerid][pPaintBallG] == 2)
			    {
			    	SetPlayerVirtualWorld(playerid,126);
				}
				else if(PlayerInfo[playerid][pPaintBallG] == 3)
			    {
			    	SetPlayerVirtualWorld(playerid,127);
				}
				else if(PlayerInfo[playerid][pPaintBallG] == 4)
			    {
			    	SetPlayerVirtualWorld(playerid,128);
				}
			    SetTimerEx("UnFreezeStation", 100, false, "i", playerid);
			}
			return 1;
		}
		if(BeforeSpectate[playerid][pSpectating])
  		{
   			SetPlayerVirtualWorld(playerid, BeforeSpectate[playerid][pWorld]);
   			SetPlayerInterior(playerid, BeforeSpectate[playerid][pInt]);

   			if(BeforeSpectate[playerid][pState] == PLAYER_STATE_DRIVER)
    		PutPlayerInVehicle(playerid, BeforeSpectate[playerid][pInVehicle], 0);

   			else if(BeforeSpectate[playerid][pState] == PLAYER_STATE_PASSENGER)
    			PutPlayerInVehicle(playerid, BeforeSpectate[playerid][pInVehicle], 1 + random(3));

   			else
    			SetPlayerPos(playerid, BeforeSpectate[playerid][pOldPos][0], BeforeSpectate[playerid][pOldPos][1], BeforeSpectate[playerid][pOldPos][2]);

   			BeforeSpectate[playerid][pSpectating] = false;
   			return 1;
  		}
		if(PlayerInfo[playerid][pJailed] == 1)
		{
			SetPlayerWantedLevel(playerid, 0);
			DestroyDynamic3DTextLabel(WantedScris[playerid]);
			PlayerTextDrawHide(playerid, WantedText[playerid]);
			SetPlayerInterior(playerid, 6);
			rand = random(sizeof(gRandomJailSpawns));
			SetPlayerPosEx(playerid,gRandomJailSpawns[rand][0],gRandomJailSpawns[rand][1],gRandomJailSpawns[rand][2]);
			TogglePlayerControllable(playerid, 0);
			SetTimerEx("UnFreezeStation", 1000, false, "i", playerid);
			if(PlayerInfo[playerid][pVirtualPD] == 3)
			{
			    SetPlayerVirtualWorld(playerid, 3);
			}
			else
			{
			    SetPlayerVirtualWorld(playerid, 0);
			}
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 2)
		{
			DestroyDynamic3DTextLabel(WantedScris[playerid]);
			PlayerTextDrawHide(playerid, WantedText[playerid]);
			SetPlayerInterior(playerid, 10);
			rand = random(sizeof(gRandomAJailSpawns));
			SetPlayerPosEx(playerid,gRandomAJailSpawns[rand][0],gRandomAJailSpawns[rand][1],gRandomAJailSpawns[rand][2]);
			TogglePlayerControllable(playerid, 0);
			SetTimerEx("UnFreezeStation", 1000, false, "i", playerid);
			return 1;
		}
		if(house != 999)
		{
		    if(PlayerInfo[playerid][pSpawnChange] == 1)
		    {
				SetPlayerToTeamColor(playerid);
				SetPlayerInterior(playerid,HouseInfo[house][hInterior]);
				SetPlayerPosEx(playerid, HouseInfo[house][hExitx], HouseInfo[house][hExity],HouseInfo[house][hExitz]);
                SetPlayerVirtualWorld(playerid, HouseInfo[house][hVirtual]);
				PlayerInfo[playerid][pLocal] = house;
				PlayerInfo[playerid][pInt] = HouseInfo[house][hInterior];
				InHouse[playerid] = house;
				if(strlen(housestring[InHouse[playerid]]) > 0)
				{
    				StopAudioStreamForPlayer(playerid);
					PlayAudioStreamForPlayer(playerid, housestring[InHouse[playerid]]);
				}
				return 1;
			}
		}
		if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) // LSPD
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerPosEx(playerid, 246.7732,65.1425,1003.6406);
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerInterior(playerid,6);
			PlayerInfo[playerid][pInt] = 6;
			return 1;
	    }
		if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) // FBI
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 3);
		    SetPlayerPosEx(playerid, 230.0687,165.1646,1003.0234);
		    PlayerInfo[playerid][pInt] = 3;
			InHQ[playerid] = 2;
		    return 1;
		}
		if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) // NG
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPosEx(playerid, 213.8154,1866.6807,13.1406);
		    PlayerInfo[playerid][pInt] = 0;
		    return 1;
		}
		if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) // Los Aztecas
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 6);
		    SetPlayerPosEx(playerid, 774.213989,-48.924297,1000.585937);
		    PlayerInfo[playerid][pInt] = 6;
		    SetPlayerVirtualWorld(playerid, 1);
			InHQ[playerid] = 4;
			if(PlayerInfo[playerid][pGunLic] == 1)
			{
				GivePlayerWeaponEx(playerid, 24, 50);
			}
		    return 1;
		}
		if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) // Grove Street
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerPosEx(playerid,2496.049804,-1695.238159,1014.742187);
		    SetPlayerInterior(playerid, 3);
		    PlayerInfo[playerid][pInt] = 3;
			InHQ[playerid] = 5;
			if(PlayerInfo[playerid][pGunLic] == 1)
			{
				GivePlayerWeaponEx(playerid, 24, 50);
			}
			SetPlayerVirtualWorld(playerid,393);
		    return 1;
		}
		if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) // Los Vagos
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 12);
		    SetPlayerPosEx(playerid, 2324.4199,-1145.5684,1050.7101);
		    PlayerInfo[playerid][pInt] = 12;
			InHQ[playerid] = 6;
			if(PlayerInfo[playerid][pGunLic] == 1)
			{
				GivePlayerWeaponEx(playerid, 24, 50);
			}
			SetPlayerVirtualWorld(playerid,1);
		    return 1;
		}
		if (PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7) // Government
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 3);
		    SetPlayerPosEx(playerid, 386.5259, 173.6381, 1008.3828);
		    PlayerInfo[playerid][pInt] = 3;
			InHQ[playerid] = 7;
		    return 1;
		}
	    if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) // Tow Car Company
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPosEx(playerid, 246.8886,64.7381,1003.6406);
			SetPlayerInterior(playerid,6);
			PlayerInfo[playerid][pInt] = 6;
			InHQ[playerid] = 8;
			SetPlayerVirtualWorld(playerid, 3);
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) // News Reporter
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPosEx(playerid, -2027.0515,-104.5211,1035.1719);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 3;
			GivePlayerWeaponEx(playerid,43,50);
			InHQ[playerid] = 9;
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) // Ballas
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPosEx(playerid, 964.106994,-53.205497,1001.124572);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 3;
			InHQ[playerid] = 10;
			if(PlayerInfo[playerid][pGunLic] == 1)
			{
				GivePlayerWeaponEx(playerid, 24, 50);
			}
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) // Hitman
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPosEx(playerid, 2323.9993,-1148.0469,1050.7101);
			SetPlayerInterior(playerid,12);
			PlayerInfo[playerid][pInt] = 12;
			InHQ[playerid] = 11;
			SetPlayerVirtualWorld(playerid, 2);
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12) // SI
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPosEx(playerid,1494.325195,1304.942871,1093.289062);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid, 3);
			InHQ[playerid] = 12;
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13) // LS TAXI
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPosEx(playerid,1700.9830,-1667.8865,20.2188);
			SetPlayerInterior(playerid,18);
			PlayerInfo[playerid][pInt] = 18;
			SetPlayerVirtualWorld(playerid, 5);
			InHQ[playerid] = 13;
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) // Paramedic
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPosEx(playerid,1494.325195,1304.942871,1093.289062);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid, 7);
			InHQ[playerid] = 14;
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 0 || PlayerInfo[playerid][pLeader] == 0) // Spawn Civil
	    {
			SetPlayerPosEx(playerid, 1743.1161,-1836.8521,13.6117);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
	        return 1;
	    }
	    if ((gTeam[playerid]) == 3)
	    {
			SetPlayerPosEx(playerid, 1743.1161,-1836.8521,13.6117);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			return 1;
		}
	    else
	    {
			SetPlayerToTeamColor(playerid);
			if(PlayerInfo[playerid][pOrigin] == 1) // Europa
			{
				SetPlayerPosEx(playerid, 1743.1161,-1836.8521,13.6117);
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if(PlayerInfo[playerid][pOrigin] == 2) // America
			{
				SetPlayerPosEx(playerid, 1743.1161,-1836.8521,13.6117);
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if(PlayerInfo[playerid][pOrigin] == 3) // Asia
			{
				SetPlayerPosEx(playerid, 1743.1161,-1836.8521,13.6117);
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if(PlayerInfo[playerid][pOrigin] == 4) // Africa
			{
				SetPlayerPosEx(playerid, 1743.1161,-1836.8521,13.6117);
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if(PlayerInfo[playerid][pOrigin] == 5) // Australia
			{
				SetPlayerPosEx(playerid, 1743.1161,-1836.8521,13.6117);
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
			}
			else
			{
                SetPlayerPosEx(playerid,1743.1161,-1836.8521,13.6117);
				SetPlayerInterior(playerid,0);
			    SetPlayerFacingAngle(playerid, 90.0);
		        SetPlayerCameraPos(playerid,1460.0, -1324.0, 287.2);
			    SetPlayerCameraLookAt(playerid,1374.5, -1291.1, 239.0);
	            PlayerPlaySound(playerid, 1097,-119.9460,23.1096,12.2238);
			}
		}
		SetTimerEx("UpdateSecondary", 3000, false, "i", playerid);
	}
	return 1;
}

forward UpdateSecondary(playerid);
public UpdateSecondary(playerid)
{
    if(gPlayerLogged[playerid] != 0)
	{
		Update(playerid, pConnectTimex);
		Update(playerid, pBank);
		Update(playerid, pCashx);
		Update(playerid, pCommandsx);
		Update(playerid, pRP);
		Update(playerid, pPayDayx);
		Update(playerid, pJailTimex);
		OnPlayerDateUpdateX2(playerid);
	}
	return 1;
}

forward OnPlayerDateUpdateX2(playerid);
public OnPlayerDateUpdateX2(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new var[556];
		{
			mysql_format(SQL,var,sizeof(var),"UPDATE `users` SET `CarLic`='%d',`FlyLic`='%d',`BoatLic`='%d',`GunLic`='%d',`CarLicT`='%d',`FlyLicT`='%d',`BoatLicT`='%d',`GunLicT`='%d',`Rob`='%d',`Jailed`='%d',`HitT`='%d',`Muted`='%d',`MuteTime`='%d' WHERE `name`='%s'",
			PlayerInfo[playerid][pCarLic],
			PlayerInfo[playerid][pFlyLic],
			PlayerInfo[playerid][pBoatLic],
			PlayerInfo[playerid][pGunLic],
			PlayerInfo[playerid][pCarLicT],
	  		PlayerInfo[playerid][pFlyLicT],
			PlayerInfo[playerid][pBoatLicT],
			PlayerInfo[playerid][pGunLicT],
			PlayerInfo[playerid][pRob],
			PlayerInfo[playerid][pJailed],
			PlayerInfo[playerid][pHitT],
			PlayerInfo[playerid][pMuted],
			PlayerInfo[playerid][pMuteTime],
			PlayerInfo[playerid][pNormalName]);
			mysql_tquery(SQL,var,"","");
		}
	}
	return 1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
{
	if (GodMode[playerid] == 1)
	{
		SetPlayerHealth(playerid,10000);
	}

	if(issuerid != INVALID_PLAYER_ID)
    {
		for(new sf = 0; sf < MAX_SAFEZONES; sf++)
		{
			if(SafeZone[sf][szRange] >= 15) {
				if(PlayerToPoint(SafeZone[sf][szRange], playerid, SafeZone[sf][szX], SafeZone[sf][szY], SafeZone[sf][szZ]))
				{
				    printf("test");
					if(IsACop(playerid) && PlayerInfo[issuerid][pWantedLevel] >= 1) return 1;
					if(GoChase[playerid] == issuerid) return 1;
					new Float: health;
					GetPlayerHealth( playerid, health );
					SetPlayerHealth( playerid, health );
					SCM(issuerid, COLOR_WARNING, "You Are In Safe-Zone Area | You're Not Allowed To Do DeathMatch");
				}
			}
	    }
		if(amount < 0)
		{
			new string[256],sendername[25];
		    GetPlayerName(issuerid,sendername,sizeof(sendername));
			format(string, sizeof(string), "[Cheating] %s (%d, level %d) can use global kill, damage: %.2f.",sendername,issuerid,PlayerInfo[issuerid][pLevel],amount);
            ABroadCast(COLOR_RED,string,1);
			return 1;
		}
		if(weaponid == 54 && GetPlayerState(issuerid) != PLAYER_STATE_DRIVER)
		{
		    if(playerdeath[issuerid] == 0)
		    {
				new Float:HP, Float:AP, Float:remainHP;
			 	GetPlayerHealthEx(issuerid,HP);
			 	GetPlayerArmourEx(issuerid,AP);
				if ( AP >= amount )
				{
					SetPlayerArmourEx( issuerid, AP - amount );
					SetPlayerHealthEx( issuerid, HP );
				}
				else if ( AP <= 0 )
				{
					remainHP = HP - amount;
					SetPlayerHealthEx( issuerid, remainHP );
					if ( remainHP <= 0 && playerdeath[issuerid] == 0 )
					{
						OnPlayerDeath( playerid, issuerid, weaponid );
						playerdeath[playerid] = 1;
					}
				}
				else
				{
					remainHP = HP + ( AP - amount );
					SetPlayerArmourEx( issuerid, 0.0 );
					SetPlayerHealthEx( issuerid, remainHP );
					if ( remainHP <= 0 && playerdeath[issuerid] == 0 )
					{
						OnPlayerDeath( playerid, issuerid, weaponid );
						playerdeath[issuerid] = 1;
					}
				}
			}
		}
	}
	if(weaponid == 49 || weaponid == 50 || weaponid == 51 || weaponid == 52 || weaponid == 53 || weaponid == 54 || GetPlayerState(issuerid) == PLAYER_STATE_DRIVER)
	{
	    if(playerdeath[playerid] == 0)
	    {
			new Float:HP, Float:AP, Float:remainHP;
		 	GetPlayerHealthEx(playerid,HP);
		 	GetPlayerArmourEx(playerid,AP);
			if ( AP >= amount )
			{
				SetPlayerArmourEx( playerid, AP - amount );
				SetPlayerHealthEx( playerid, HP );
			}
			else if ( AP <= 0 )
			{
				remainHP = HP - amount;
				SetPlayerHealthEx( playerid, remainHP );
				if ( remainHP <= 0 && playerdeath[playerid] == 0 )
				{
					OnPlayerDeath( playerid, issuerid, weaponid );
					playerdeath[playerid] = 1;
				}
			}
			else
			{
				remainHP = HP + ( AP - amount );
				SetPlayerArmourEx( playerid, 0.0 );
				SetPlayerHealthEx( playerid, remainHP );
				if ( remainHP <= 0 && playerdeath[playerid] == 0 )
				{
					OnPlayerDeath( playerid, issuerid, weaponid );
					playerdeath[playerid] = 1;
				}
			}
		}
	}
	return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart)
{
	if(damagedid != INVALID_PLAYER_ID)
    {
	 	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return 1;
		if(GetPlayerSurfingVehicleID(playerid) != INVALID_VEHICLE_ID) return 1;
		if(amount < 0)
		{
			new string[256],sendername[25];
		    GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string, sizeof(string), "[Cheating] %s (%d, level %d) can use global kill, damage: %.2f.",sendername, playerid, PlayerInfo[playerid][pLevel], amount);
            ABroadCast(COLOR_RED,string,1);
			return 1;
		}
		if(PlayerInfo[playerid][pPaintBallG] > 0)
		{
		    PlayerPlaySound(playerid,17802,0.0,0.0,0.0);
		}
		new fpm,fkm;
    	fpm = PlayerInfo[playerid][pMember];
    	fkm = PlayerInfo[damagedid][pMember];
    	for(new turf = 1; turf < sizeof(TurfInfo); turf++)
		{
         	if(IsPlayerInTurf(playerid, turf) && IsPlayerInTurf(damagedid, turf))
         	{
                if(IsAMember(playerid) && IsAMember(damagedid))
                {
	             	if(WarInfo[turf][wFaction] == fpm && WarInfo[turf][wAttacker] == fkm || WarInfo[turf][wFaction] == fkm && WarInfo[turf][wAttacker] == fpm)
	             	{
	             	    PlayerPlaySound(playerid,17802,0.0,0.0,0.0);
					}
				}
			}
		}
		if(PlayerInfo[damagedid][pPaintBallG] > 0)
		{
		    if(paintrs[PlayerInfo[damagedid][pPaintBallG]] > 0)
		    {
		    	SetPlayerHealthEx(damagedid, 100.0);
			}
		}
		if(playerdeath[damagedid] == 0)
		{
			if(weaponid == 34 && PlayerInfo[damagedid][pPaintBallG] < 1)
		    {
		        SetPlayerHealthEx(damagedid, 0.0);
		        SetPlayerArmourEx(damagedid, 0.0);
		        OnPlayerDeath(damagedid,playerid,weaponid);
				playerdeath[damagedid] = 1;
				return 1;
		    }
		 	new Float: HP, Float: AP ;
			GetPlayerHealthEx(damagedid,HP);
			GetPlayerArmourEx(damagedid,AP);
			if ( AP >= amount )
			{
				SetPlayerArmourEx ( damagedid, AP - amount );
			}
			else if ( AP <= 0 )
			{
				new const Float: remainHP = HP - amount;
				SetPlayerHealthEx ( damagedid, remainHP );
				if ( remainHP <= 0 )
				{
					OnPlayerDeath( damagedid, playerid, weaponid );
					playerdeath[damagedid] = 1;
					return 1;
				}
			}
			else
			{
				new const Float: remainHP = HP + ( AP - amount );
				SetPlayerArmourEx ( damagedid, 0.0 );
				SetPlayerHealthEx ( damagedid, remainHP );
				if ( remainHP <= 0 )
				{
					OnPlayerDeath( damagedid, playerid, weaponid );
					playerdeath[damagedid] = 1;
					return 1;
				}
			}
			if(PlayerCuffed[damagedid] == 1)
			{
				SetPlayerHealthEx(damagedid,100);
			}
			if(PlayerInfo[damagedid][pSleeping] == 1)
			{
				SetPlayerHealthEx(damagedid, 100);
			}
			if(tazer[playerid] == 1 && IsACop(playerid) && weaponid == 24)
			{
				if(IsACop(damagedid)) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Cannot Tazer Cops/FBI/National Guard.");
				if(PlayerCuffed[damagedid] == 1) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Player already tazed.");
				if(PlayerInfo[damagedid][pSleeping] == 1) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Player is on sleeping.");
				if(GetDistanceBetweenPlayers(playerid,damagedid) < 15)
				{
					new string[126],sendername[25],giveplayer[25];
					GetPlayerName(playerid,sendername,sizeof(sendername));
					GetPlayerName(damagedid,giveplayer,sizeof(giveplayer));
					format(string, sizeof(string), "* You were Tazed by %s for 8 seconds.", sendername);
					SendClientMessage(damagedid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* You Tazed %s for 8 seconds.", giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s shoots with his Tazer at %s, and tazed him.", sendername ,giveplayer);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GameTextForPlayer(damagedid, "~r~~h~Tazed", 2500, 3);
					TogglePlayerControllable(damagedid, 0);
					PlayerCuffed[damagedid] = 1;
					PlayerCuffedTime[damagedid] = 8;
					SetPlayerHealthEx(damagedid,100);
				}
			}
		}
	}
	return 1;
}

stock GetName(playerid)
{
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid,name,sizeof(name));
	return name;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	GodMode[playerid] = 0;
	if(killerid != INVALID_PLAYER_ID)
	{
	    new var100[256],playername[30],killername[30];
		GetPlayerName(playerid,playername,sizeof(playername));
		GetPlayerName(killerid,killername,sizeof(killername));
	    mysql_format(SQL, var100, sizeof(var100), "INSERT INTO kill_logs (`playerid`,`killerid`,`reason`,`playername`,`killername`) VALUES ('%d','%d','%d','%s','%s')", PlayerInfo[playerid][pSQLID],PlayerInfo[killerid][pSQLID],reason,playername,killername);
		mysql_tquery(SQL,var100,"","");
		if(BusinessRob[playerid] > 0)
		{
			DisablePlayerCheckpoint(playerid);
			BusinessRob[playerid] = 0;
			RobTime[playerid] = -1;
			SendClientMessage(playerid, COLOR_ROB, "Rob failed. You died.");
		}
	    if(PlayerInfo[playerid][pWantedLevel] >= 1)
		{
		    new copkill=0, price = PlayerInfo[playerid][pWantedLevel] * 1000, count, str23[MAX_STRING], totalprice = price / 2, string[256], lastname[30], streap[30];
		    if((PlayerInfo[playerid][pMember] != 1 && PlayerInfo[playerid][pMember] != 2 && PlayerInfo[playerid][pMember] != 3 && PlayerInfo[playerid][pMember] != 8))
			{
			    for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
					{
					    if((IsACop(i) && CrimInRange(50.0, playerid,i) && OnDuty[i] == 1)|| (IsACop(i) && killerid == i))
						{
						    if(OnDuty[i] != 1) return 1;
						    PlayerInfo[i][pRunners] += 1;
						    Update(i, pRunnersx);
							GetPlayerName(killerid, lastname, sizeof(lastname));
							GetPlayerName(playerid, streap, sizeof(streap));
							count++;
							GameTextForPlayer(i, "Running Suspect bonus!", 5000, 1);
							format(string, sizeof(string), "You Recieved $%d For Arresting Suspect %s.", totalprice, streap);
							SendClientMessage(i, COLOR_DBLUE, string);
							ConsumingMoney[i] = 1;
							GivePlayerCash(i, price);
							Update(i, pCashx);
							new idfac = PlayerInfo[i][pMember];
                        	DynamicFactions[idfac][fBank] += totalprice;
							mysql_format(SQL,str23,sizeof(str23),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'", DynamicFactions[idfac][fBank], idfac);
							mysql_tquery(SQL,str23,"","");
							PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
							format(string, sizeof(string),"[Dispatch]: %s has been killed by %s and will be in jail for %d seconds, over.",streap,lastname,(PlayerInfo[playerid][pWantedLevel]*300));
							copkill = 1;
						}
					}
				}
				if(copkill == 1)
				{
					SendTeamMessage(1, COLOR_LIGHTBLUE, string);
					SendTeamMessage(2, COLOR_LIGHTBLUE, string);
					SendTeamMessage(3, COLOR_LIGHTBLUE, string);
					SendTeamMessage(8, COLOR_LIGHTBLUE, string);
					PlayerInfo[playerid][pJailTime] = (PlayerInfo[playerid][pWantedLevel])*(300);
					format(string, sizeof(string), "Because you got killed, you lost $%s and you will be taken to jail. You are no longer a criminal.", FormatNumber(price));
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					PlayerInfo[playerid][pJailed] = 1;
					PlayerInfo[playerid][pWantedLevel] = 0;
					PlayerInfo[playerid][pWantedDeaths] += 1;
				    StopFly(playerid);
					WantedPoints[playerid] = 0;
					GivePlayerCash(playerid, - price);
					Update(playerid,pWantedLevelx);
					Update(playerid,pJailedx);
					Update(playerid,pJailTimex);
					ClearCrime(playerid);
					TogglePlayerControllable(playerid, 0);
					SetTimerEx("UnFreezeStation", 1000, false, "i", playerid);
				}
			}
		}
     	DeadScris[playerid] = CreateDynamic3DTextLabel("{f03337}[dead]", COLOR_WHITE, 0, 0, -20, 20, playerid);
		Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL, DeadScris[playerid] , E_STREAMER_ATTACH_OFFSET_Z, 0.31);
		new name[MAX_PLAYER_NAME],
			string[500],
			Float:px,
			Float:py,
			Float:pz;
		gPlayerUsingLoopingAnim[playerid] = 0;
		gPlayerSpawned[playerid] = 0;
		GetPlayerName(playerid, name, sizeof(name));
		PlayerInfo[playerid][pLocal] = 255;
		GetPlayerPos(playerid, px, py, pz);
 	   	new currentveh = GetPlayerVehicleID(playerid);
		printf("DEATH: %s was killed by %s with gun %d",name,GetName(killerid),reason);
		playerdeath[playerid] = 0;
		curatj[playerid] = 0;
		PlayerEnterTime[playerid]+=221;
		if(GetPlayerState(killerid) == PLAYER_STATE_DRIVER && !IsAPlane(currentveh))
		{
		    GetPlayerName(playerid,name,sizeof(name));
		    new kill[25];
		    GetPlayerName(killerid,kill,sizeof(kill));
			format(string, sizeof(string), "[AdmWarn]: {FFFFFF}%s has been killed by %s by drive-by.",name, kill);
            ABroadCast(COLOR_AdminWarn,string,1);
		}
	    if(XDeaths[playerid] == 0)
	    {
	       LastDeath[playerid] = gettime();
	    }
	    XDeaths[playerid]++;
	    if(XDeaths[playerid] == 2)
	    {
	        if((gettime() - LastDeath[playerid]) <= 2)
	        {
	            Kick(playerid);
	            return 1;
	        }else
	        if((gettime() - LastDeath[playerid]) > 2)
	        {
	            XDeaths[playerid]=0;
	        }
	    }
 		if(killerid == playerid)
		{
            Kick(killerid);
            return 1;
		}
		if(PlayerCuffed2[playerid] == 1)
		{
		    PlayerCuffed2[playerid] = 0;
	    	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	    	RemovePlayerAttachedObject(playerid,1);
		}
		if(reason == 38 && GetPlayerState(killerid) != PLAYER_STATE_DRIVER)
		{
			new kickname[25];
			if(IsPlayerConnected(killerid))
			{
				if(PlayerInfo[killerid][pAdmin] == 0 && PlayerInfo[killerid][pHelper] == 0)
				{
					GetPlayerName(killerid, kickname, sizeof(kickname));
					format(string, sizeof(string), "[Cheating] %s (%d, level %d) killed a player using a minigun.",kickname,killerid,PlayerInfo[killerid][pLevel]);
					ABroadCast(COLOR_RED,string,1);
				}
			}
		}
		if(flymode[playerid] == 1)
		{
		    new string23[128],sendername[30];
		    GetPlayerName(playerid,sendername,sizeof(sendername));
		    flymode[playerid] = 0;
		    format(string23,sizeof(string23),"%s DeActivated /flymode", sendername);
		    ABroadCast(COLOR_YELLOW,string23,1);
			StopFly(playerid);
		}
		if(Hatss[playerid] > 0)
		{
		    Hatss[playerid] = 0;
		}
		if(Sunglasses[playerid] > 0)
		{
			Sunglasses[playerid] = 0;
		}
  	  	if(TakingLesson[playerid] == 1)
   		{
        	TakingLesson[playerid] = 0;
			DestroyVehicle(examcar[playerid]);
			DisableRemoteVehicleCollisions(playerid, 0);
			examcar[playerid] = -1;
	    	DisablePlayerRaceCheckpoint(playerid);
        	PlayerTextDrawHide(playerid, DMVexam[playerid]);
        	PlayerTextDrawHide(playerid, DMVcheck[playerid]);
    	}
		if(gPlayerUsingLoopingAnim[playerid])
		{
        	gPlayerUsingLoopingAnim[playerid] = 0;
		}
		if(PlayerInfo[playerid][pCarLicT] == 0 && PlayerInfo[playerid][pCarLic] == 1)
		{
            PlayerInfo[playerid][pCarLic] = 0;
			PlayerInfo[playerid][pCarLicT] = 0;
			new str[128];
			mysql_format(SQL,str,128,"UPDATE users SET `CarLic`='0',`CarLicT`='0' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
			mysql_tquery(SQL,str,"","");
			SCM(playerid,COLOR_GRAD1,"Your driving license has expired.");
		}
		if(PlayerInfo[playerid][pFlyLicT] == 0 && PlayerInfo[playerid][pFlyLic] == 1)
		{
		    PlayerInfo[playerid][pFlyLic] = 0;
		    PlayerInfo[playerid][pFlyLicT] = 0;
			new str[128];
			mysql_format(SQL,str,128,"UPDATE users SET `FlyLic`='0',`FlyLicT`='0' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
			mysql_tquery(SQL,str,"","");
			SCM(playerid,COLOR_GRAD1,"Your flying license has expired.");
		}
		if(PlayerInfo[playerid][pBoatLicT] == 0 && PlayerInfo[playerid][pBoatLic] == 1)
		{
		    PlayerInfo[playerid][pBoatLic] = 0;
		    PlayerInfo[playerid][pBoatLic] = 0;
			new str[128];
			mysql_format(SQL,str,128,"UPDATE users SET `BoatLic`='0',`BoatLicT`='0' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
			mysql_tquery(SQL,str,"","");
			SCM(playerid,COLOR_GRAD1,"Your boat license has expired.");
		}
		if(PlayerInfo[playerid][pGunLicT] == 0 && PlayerInfo[playerid][pGunLic] == 1)
		{
		    PlayerInfo[playerid][pGunLic] = 0;
		    PlayerInfo[playerid][pGunLicT] = 0;
			new str[128];
			mysql_format(SQL,str,128,"UPDATE users SET `GunLic`='0',`GunLicT`='0' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
			mysql_tquery(SQL,str,"","");
			SCM(playerid,COLOR_GRAD1,"Your gun license has expired.");
		}
	    new fpm,fkm;
    	fpm = PlayerInfo[playerid][pMember];
    	fkm = PlayerInfo[killerid][pMember];
    	for(new turf = 1; turf < sizeof(TurfInfo); turf++)
		{
         	if(IsPlayerInTurf(playerid, turf) && IsPlayerInTurf(killerid, turf))
         	{
                if(IsAMember(playerid) && IsAMember(killerid))
                {
	             	if(WarInfo[turf][wFaction] == fpm && WarInfo[turf][wAttacker] == fkm || WarInfo[turf][wFaction] == fkm && WarInfo[turf][wAttacker] == fpm)
	             	{
				     	if(fkm == WarInfo[turf][wAttacker] || fkm == WarInfo[turf][wFaction])
					 	{
					     	WarScoreF[fkm][turf] += 1;
					 	}
	                 	ucideri[killerid][turf] ++;
	                 	decese[playerid][turf] ++;
	                 	foreach(Player, i)
	                 	{
	                 	    new fpm2;
	                 	    fpm2 = PlayerInfo[i][pMember];
	                 	    if(IsAMember(i))
                			{
                			    if(WarInfo[turf][wFaction] == fpm2 || WarInfo[turf][wAttacker] == fpm2)
  								{
                			    	SendDeathMessageToPlayer(i, killerid, playerid, reason);
								}
							}
						}
	                 	if(PlayerInfo[killerid][pMember] == WarInfo[turf][wAttacker])
	                 	{
		                 	if((ucideri[killerid][turf]-decese[killerid][turf]) > WarBestScore[turf])
		                 	{
		                     	WarBestScore[turf] = (ucideri[killerid][turf]-decese[killerid][turf]);
		                     	bestmemberat[turf] = killerid;
		                 	}
	                 	}
	                 	if(PlayerInfo[killerid][pMember] == WarInfo[turf][wFaction])
	                 	{
		                 	if((ucideri[killerid][turf]-decese[killerid][turf]) > bestscoredf[turf])
		                 	{
		                     	bestscoredf[turf] = (ucideri[killerid][turf]-decese[killerid][turf]);
		                     	bestmemberdf[turf] = killerid;
		                 	}
	                 	}
	                 	if(PlayerInfo[playerid][pMember] == WarInfo[turf][wAttacker])
	                 	{
	                 		if((ucideri[playerid][turf]-decese[playerid][turf]) < worstscoreat[turf])
							{
								worstscoreat[turf] = (ucideri[playerid][turf]-decese[playerid][turf]);
								worstmemberat[turf] = playerid;
							}
						}
	                 	if(PlayerInfo[playerid][pMember] == WarInfo[turf][wFaction])
	                 	{
	                 		if((ucideri[playerid][turf]-decese[playerid][turf]) < worstscoredf[turf])
							{
								worstscoredf[turf] = (ucideri[playerid][turf]-decese[playerid][turf]);
								worstmemberdf[turf] = playerid;
							}
						}
	                 	format(string, sizeof(string), "{5FFF00}You Have Killed {FFFFFF}%s (%d)", GetName(playerid), playerid);
	                 	SCM(killerid, COLOR_GENANNOUNCE, string);
	                 	format(string, sizeof(string), "{FF3C00}You Have Been Killed By {FFFFFF}%s (%d).", GetName(killerid), killerid);
	                 	SCM(playerid, COLOR_GENANNOUNCE, string);
	                 	PlayerInfo[killerid][pWKills] += 1;
	                 	Update(killerid, pWKillsx);
	                 	PlayerInfo[playerid][pWDeaths] += 1;
						Update(playerid, pWDeathsx);
						if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 6)
						{
							SetPlayerVirtualWorld(playerid, 1);
						}
						else
						{
							SetPlayerVirtualWorld(playerid, 0);
						}
	                 	return 1;
					}
             	}
         	}
    	}
		if(InCoal[playerid] >= 1)
		{
	    	DisablePlayerCheckpoint(playerid);
	    	InCoal[playerid] = 0;
	    	CoalCar[playerid] = -1;
	    	SCM(playerid, COLOR_GREEN, "Mission failed.You died.");
		}
		if (gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
		{
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
		}
		new caller = Mobile[playerid];
		if(caller != -1)
		{
			SendClientMessage(caller,  COLOR_GRAD2, "The line just went dead....");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = -1;
			Mobile[playerid] = -1;
			CellTime[playerid] = 0;
		}
		if(PlayerInfo[playerid][pPaintBallG] > 0)
		{
		    foreach(Player, iddd)
		    {
		        if(PlayerInfo[iddd][pPaintBallG] == PlayerInfo[playerid][pPaintBallG])
		        {
					SendDeathMessageToPlayer(iddd, killerid, playerid, reason);
				}
			}
		    PlayerInfo[killerid][pPaintBallKills]++;
		    format(string,sizeof(string),"You have been killed by %s.", GetName(killerid));
		    SendClientMessage(playerid, COLOR_GENANNOUNCE, string);

		    format(string,sizeof(string),"You have killed %s. You now have %d kills.", GetName(playerid), PlayerInfo[killerid][pPaintBallKills]);
		    SendClientMessage(killerid, COLOR_GENANNOUNCE, string);

		    if(PlayerInfo[killerid][pPaintBallG] == 3)
			{
			    if(PlayerInfo[killerid][pPaintBallKills] == 2) { ResetPlayerWeaponsEx(killerid); ResetPlayerWeapons(killerid); GivePlayerWeaponEx(killerid, 29, 1000); }
				else if(PlayerInfo[killerid][pPaintBallKills] == 4) { ResetPlayerWeaponsEx(killerid); ResetPlayerWeapons(killerid); GivePlayerWeaponEx(killerid, 28, 1000); }
				else if(PlayerInfo[killerid][pPaintBallKills] == 6) { ResetPlayerWeaponsEx(killerid); ResetPlayerWeapons(killerid); GivePlayerWeaponEx(killerid, 33, 1000); }
				else if(PlayerInfo[killerid][pPaintBallKills] == 8) { ResetPlayerWeaponsEx(killerid); ResetPlayerWeapons(killerid); GivePlayerWeaponEx(killerid, 32, 1000); }
				else if(PlayerInfo[killerid][pPaintBallKills] == 10) { ResetPlayerWeaponsEx(killerid); ResetPlayerWeapons(killerid); GivePlayerWeaponEx(killerid, 25, 1000); }
				else if(PlayerInfo[killerid][pPaintBallKills] == 12) { ResetPlayerWeaponsEx(killerid); ResetPlayerWeapons(killerid); GivePlayerWeaponEx(killerid, 26, 1000); }
				else if(PlayerInfo[killerid][pPaintBallKills] == 14) { ResetPlayerWeaponsEx(killerid); ResetPlayerWeapons(killerid); GivePlayerWeaponEx(killerid, 34, 1000); }
				else if(PlayerInfo[killerid][pPaintBallKills] == 16) { ResetPlayerWeaponsEx(killerid); ResetPlayerWeapons(killerid); GivePlayerWeaponEx(killerid, 27, 1000); }
				else if(PlayerInfo[killerid][pPaintBallKills] == 18) { ResetPlayerWeaponsEx(killerid); ResetPlayerWeapons(killerid); GivePlayerWeaponEx(killerid, 31, 1000); }
				else if(PlayerInfo[killerid][pPaintBallKills] == 20) { ResetPlayerWeaponsEx(killerid); ResetPlayerWeapons(killerid); GivePlayerWeaponEx(killerid, 30, 1000); }
				else if(PlayerInfo[killerid][pPaintBallKills] == 22) { ResetPlayerWeaponsEx(killerid); ResetPlayerWeapons(killerid); GivePlayerWeaponEx(killerid, 23, 1000); }
				else if(PlayerInfo[killerid][pPaintBallKills] == 24) { ResetPlayerWeaponsEx(killerid); ResetPlayerWeapons(killerid); GivePlayerWeaponEx(killerid, 22, 1000); }
				else if(PlayerInfo[killerid][pPaintBallKills] == 26) { ResetPlayerWeaponsEx(killerid); ResetPlayerWeapons(killerid); GivePlayerWeaponEx(killerid, 9, 1); }
				else if(PlayerInfo[killerid][pPaintBallKills] == 28) { ResetPlayerWeaponsEx(killerid); ResetPlayerWeapons(killerid); GivePlayerWeaponEx(killerid, 4, 1); }
			}

		    if(PlayerInfo[killerid][pPaintBallKills] == 29 && PlayerInfo[killerid][pPaintBallG] == 3)
		    {
		        foreach(Player, i)
				{
  					if(PlayerInfo[i][pPaintBallG] == 3)
   					{
  						format(string,sizeof(string),"Round over! Winner: %s - 29 kills.",GetName(killerid));
						SendClientMessage(i, COLOR_YELLOW, string);
						SendClientMessage(i, COLOR_YELLOW, "Use /votemap to vote for a map.");
						ResetPlayerWeaponsEx(i);
		    			ResetPlayerWeapons(i);
		    			SetPlayerArmourEx(i, 0);
		    			PlayerInfo[i][pPaintBallKills] = 0;
		    			PlayerInfo[i][pPaintBallVoted] = 0;
		    			PlayerInfo[i][pPaintBallVoted2] = 0;
		    			for (new idd2 = 0; idd2 != 5; ++idd2) SendDeathMessageToPlayer(i, 1001, 1001, 1001);
					}
				}
				KillTimer(paintrun3);
				paintt[3] = 0;
				paintrs[3] = 31;
				preparepaint3 = SetTimer("PrepareRoundPaintBall3", 1000, 1);
				PaintWinner[3] = 999;
				PaintBallWinnerKills[3] = 0;
				paintvotem[3][0] = 0;
				paintvotem[3][1] = 0;
				paintvotem[3][2] = 0;
				paintvotem[3][3] = 0;
				paintvotem[3][4] = 0;
				mapvoted[3] = 0;
		    }
		    if(PlayerInfo[killerid][pPaintBallKills] > PaintBallWinnerKills[PlayerInfo[playerid][pPaintBallG]])
		    {
				PaintWinner[PlayerInfo[playerid][pPaintBallG]] = killerid;
				PaintBallWinnerKills[PlayerInfo[playerid][pPaintBallG]] = PlayerInfo[killerid][pPaintBallKills];
				foreach(Player, i)
				{
				    if(IsPlayerConnected(i))
				    {
				        if(PlayerInfo[i][pPaintBallG] == PlayerInfo[playerid][pPaintBallG])
				        {
				    		format(string,sizeof(string),"%s is in the lead with %d kills.",GetName(killerid),PaintBallWinnerKills[PlayerInfo[playerid][pPaintBallG]]);
				    		SendClientMessage(i, COLOR_YELLOW, string);
						}
					}
				}
			}
			return 1;
		}
		if(PlayerInfo[playerid][pHeadValue] > 0)
		{
	    	if(IsPlayerConnected(killerid))
	    	{
		    	if(PlayerInfo[killerid][pMember] == 11)
		    	{
		        	if(GoChase[killerid] == playerid)
		        	{
						new killer[MAX_PLAYER_NAME];
						GetPlayerName(killerid, killer, sizeof(killer));
						GivePlayerCash(killerid, PlayerInfo[playerid][pHeadValue]);
						if(Undercover[killerid] == 1 && PhoneOnline[killerid] == 1 && GetDistanceBetweenPlayers(killerid,playerid) >= 100)
						{
							format(string,256,"%s has succesfully completed the contract on %s for $%s, distance: %.0fm.",killer,name,FormatNumber(PlayerInfo[playerid][pHeadValue]),GetDistanceBetweenPlayers(killerid,playerid));
							PlayerInfo[killerid][pContracts] += 1;
                            Update(killerid, pContractsx);
						}
						if(Undercover[killerid] == 0)
						{
							format(string,256,"%s failed to complete the contract on %s for $%s, distance: %.0fm. Fail reason: not undercover.",killer,name,FormatNumber(PlayerInfo[playerid][pHeadValue]),GetDistanceBetweenPlayers(killerid,playerid));
						}
						if(PhoneOnline[killerid] == 0)
						{
							format(string,256,"%s failed to complete the contract on %s for $%s, distance: %.0fm. Fail reason: phone turned on.",killer,name,FormatNumber(PlayerInfo[playerid][pHeadValue]),GetDistanceBetweenPlayers(killerid,playerid));
						}
						if(GetDistanceBetweenPlayers(killerid,playerid) <= 99)
						{
							format(string,256,"%s failed to complete the contract on %s for $%s, distance: %.0fm. Fail reason: distance/weapon.",killer,name,FormatNumber(PlayerInfo[playerid][pHeadValue]),GetDistanceBetweenPlayers(killerid,playerid));
						}
						SendFamilyMessage(11, COLOR_TEAL, string);
						PlayerInfo[playerid][pHeadValue] = 0;
						GotHit[playerid] = 0;
						GetChased[playerid] = 999;
						GoChase[killerid] = 999;
						new str[256];
						mysql_format(SQL,str,sizeof(str),"UPDATE users SET `HeadValue`='0' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
						mysql_tquery(SQL,str,"","");
						Update(killerid, pCashx);
				        togfind[killerid] = 0;
			            PlayerInfo[killerid][pHitT] = 300;
				        mysql_format(SQL, string, sizeof(string), "UPDATE users SET `HitT`='%d' WHERE `name`='%s'", PlayerInfo[killerid][pHitT], PlayerInfo[killerid][pNormalName]);
				        mysql_tquery(SQL,string,"","");
					}
				}
			}
			return 1;
		}
		if(gTeam[playerid] == 3)
		{
 			if(IsPlayerConnected(killerid))
   			{
 	    		if(gTeam[killerid] == 3 || gTeam[killerid] == 4 || gTeam[killerid] == 5 || (gTeam[killerid] == 11 && GoChase[killerid] == 999))
   	    		{
 	        		new namekill[25];
   	        		GetPlayerName(killerid,namekill,sizeof(namekill));
					strmid(WantedName[playerid], namekill, 0, strlen(namekill), 255);
					WantedReason[playerid] = reason;
					format(string,sizeof(string),"{408080}You Were Attacked By %s | You Have 60 Seconds To Use /Call 110 !",GetName(killerid));
					SCM(playerid,COLOR_WHITE,string);
					WantedTimer[playerid] = SetTimerEx("ClearWanted",60000,false,"d",playerid);
	    		}
    		}
	    	return 1;
		}
		if(gTeam[playerid] == 2)
		{
 			if(IsPlayerConnected(killerid))
   			{
 	    		if(gTeam[killerid] == 3 || gTeam[killerid] == 4 || gTeam[killerid] == 5 || (gTeam[killerid] == 11 && GoChase[killerid] == 999))
   	    		{
 	        		new namekill[25];
   	        		GetPlayerName(killerid,namekill,sizeof(namekill));
					strmid(WantedName[playerid], namekill, 0, strlen(namekill), 255);
					WantedReason[playerid] = reason;
					format(string,sizeof(string),"{408080}You Were Attacked By %s | You Have 60 Seconds To Use /Call 110 !",GetName(killerid));
					SCM(playerid,COLOR_WHITE,string);
					WantedTimer[playerid] = SetTimerEx("ClearWanted",60000,false,"d",playerid);
	    		}
    		}
	    	return 1;
		}
		if(gTeam[playerid] == 4)
		{
 			if(IsPlayerConnected(killerid))
   			{
 	    		if(gTeam[killerid] == 3 || gTeam[killerid] == 4 || gTeam[killerid] == 5 || (gTeam[killerid] == 11 && GoChase[killerid] == 999))
   	    		{
 	        		new namekill[25];
   	        		GetPlayerName(killerid,namekill,sizeof(namekill));
					strmid(WantedName[playerid], namekill, 0, strlen(namekill), 255);
					WantedReason[playerid] = reason;
					format(string,sizeof(string),"{408080}You Were Attacked By %s | You Have 60 Seconds To Use /Call 110 !",GetName(killerid));
					SCM(playerid,COLOR_WHITE,string);
					WantedTimer[playerid] = SetTimerEx("ClearWanted",60000,false,"d",playerid);
	    		}
    		}
	    	return 1;
		}
		if(gTeam[playerid] == 5)
		{
 			if(IsPlayerConnected(killerid))
   			{
 	    		if(gTeam[killerid] == 3 || gTeam[killerid] == 4 || (gTeam[killerid] == 11 && GoChase[killerid] == 999))
   	    		{
 	        		new namekill[25];
   	        		GetPlayerName(killerid,namekill,sizeof(namekill));
					strmid(WantedName[playerid], namekill, 0, strlen(namekill), 255);
					WantedReason[playerid] = reason;
					format(string,sizeof(string),"{408080}You Were Attacked By %s | You Have 60 Seconds To Use /Call 110 !",GetName(killerid));
					SCM(playerid,COLOR_WHITE,string);
					WantedTimer[playerid] = SetTimerEx("ClearWanted",60000,false,"d",playerid);
	    		}
    		}
	    	return 1;
		}
		if(gTeam[playerid] == 11)
		{
 			if(IsPlayerConnected(killerid))
   			{
 	    		if(gTeam[killerid] == 3 || gTeam[killerid] == 4 || gTeam[killerid] == 5)
   	    		{
 	        		new namekill[25];
   	        		GetPlayerName(killerid,namekill,sizeof(namekill));
					strmid(WantedName[playerid], namekill, 0, strlen(namekill), 255);
					WantedReason[playerid] = reason;
					format(string,sizeof(string),"{408080}You Were Attacked By %s | You Have 60 Seconds To Use /Call 110 !",GetName(killerid));
					SCM(playerid,COLOR_WHITE,string);
					WantedTimer[playerid] = SetTimerEx("ClearWanted",60000,false,"d",playerid);
	    		}
    		}
	    	return 1;
		}
		killerid = INVALID_PLAYER_ID;
	}
	return 1;
}

new legalmods[48][22] = {
        {400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
        {404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
		{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
        {439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
        {477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
        {491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
        {492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
        {500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
        {517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
        {518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
        {527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
        {534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
        {535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
        {536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
        {540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
        {542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
        {547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
        {550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
        {551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
        {558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
        {559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
        {560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
        {561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
        {562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
        {565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
        {567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
        {575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
        {600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};

public OnVehicleMod(playerid, vehicleid, componentid)
{
    if(GetPlayerInterior(playerid) == 0 && PlayerInfo[playerid][pAdmin] < 1)
    {
		new name[25],string[256];
		GetPlayerName(playerid,name,sizeof(name));
		format(string, sizeof(string), "[Cheating] %s (%d, level %d) has tunned car %d with component %d.",name,playerid,PlayerInfo[playerid][pLevel],vehicleid,componentid);
        ABroadCast(COLOR_RED,string,1);
    }
    new vehicleide = GetVehicleModel(vehicleid),
    	modok = islegalcarmod(vehicleide, componentid),
    	Name[24];

    GetPlayerName(playerid, Name, 24);
    if (!modok)
	{
        BanEx(playerid, "Request");
    }
    if(OwnedVeh(vehicleid) != 0)
	{
		SaveComponent(vehicleid, componentid);
	}
    return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if(OwnedVeh(vehicleid) != 0)
	{
		CarInfo[OwnedVeh(vehicleid)][cPaintJ] = paintjobid;
		vUpdate(OwnedVeh(vehicleid), cPaintJx);
	}
	return 1;
}

stock iswheelmodel(modelid) {

    new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};

    for(new I = 0, b = sizeof(wheelmodels); I != b; ++I) {
        if (modelid == wheelmodels[I])
            return true;

    }

    return false;
}

stock IllegalCarNitroIde(carmodel) {

    new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };

    for(new I = 0, b = sizeof(illegalvehs); I != b; ++I) {

        if (carmodel == illegalvehs[I])
            return true;

    }

    return false;
}

stock illegal_nos_vehicle(PlayerID) {

    new carid = GetPlayerVehicleID(PlayerID);
    new playercarmodel = GetVehicleModel(carid);

    return IllegalCarNitroIde(playercarmodel);

}

stock islegalcarmod(vehicleide, componentid) {

    new modok = false;

    if ( (iswheelmodel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010))) {

        new nosblocker = IllegalCarNitroIde(vehicleide);

        if (!nosblocker)
            modok = true;

    } else {

        for(new I = 0, b = sizeof(legalmods); I != b; ++I) {

            if (legalmods[I][0] == vehicleide) {

                for(new J = 1; J < 22; J++) {
                    if (legalmods[I][J] == componentid)
                        modok = true;
                }

            }

        }

    }

    return modok;
}

public OnPlayerUpdate(playerid)
{
	new string[128],drunknew = GetPlayerDrunkLevel(playerid);
	if (drunknew < 100) {
		SetPlayerDrunkLevel(playerid, 2000);
	} else {

		if(PlayerInfo[playerid][pDrunkLevelLast] != drunknew) {

			new wfps = PlayerInfo[playerid][pDrunkLevelLast] - drunknew;

			if ((wfps > 0) && (wfps < 200))
				PlayerInfo[playerid][pFPS] = wfps;

			PlayerInfo[playerid][pDrunkLevelLast] = drunknew;
		}

	}
	if(PlayerInfo[playerid][pFlyMode] == 1)
	{
	    SetPlayerHealth(playerid, 10000000);
		SetPlayerArmour(playerid, 10000000);
		PlayerInfo[playerid][pFlyMode] = 1;
	}
	/*if(GetPlayerSurfingVehicleID(playerid) != INVALID_VEHICLE_ID && GetPlayerWeapon(playerid) != 0)
	{
	    new Float: slx, Float: sly, Float:slz;
	    GetPlayerPos(playerid, slx, sly, slz);
		SetPlayerPosEx(playerid, slx, sly, slz+5);
	    SetPlayerArmedWeapon(playerid,0);
		SendClientMessage(playerid, COLOR_RED, "You Have'nt Allowed To Use Weapon On The Car");
		SetTimerEx("DaiDrumu", 3000, false, "i", playerid);
	}*/
	if(GetPlayerState(playerid) == 2)
	{
		for(new v; v < MAX_SPIKES; v++)
		{
			if(SpikeInfo[v][sPos][0] != 0 && SpikeInfo[v][sPos][1] != 0 && SpikeInfo[v][sPos][2] != 0)
			{
				if(IsVehicleInRangeOfPoint(GetPlayerVehicleID(playerid), 2.0, SpikeInfo[v][sPos][0], SpikeInfo[v][sPos][1], SpikeInfo[v][sPos][2]))
				{
					new Damage[4];
					GetVehicleDamageStatus(GetPlayerVehicleID(playerid), Damage[0], Damage[1], Damage[2], Damage[3]);
					UpdateVehicleDamageStatus(GetPlayerVehicleID(playerid), Damage[0], Damage[1], Damage[2], 15);
				}
			}
		}
	}
	if(PlayerInfo[playerid][pHUD1] != 0)
	{
	    new Float:health;
	    GetPlayerHealth(playerid,health);
	    PlayerTextDrawShow(playerid, HUD[1][playerid]);
	    format(string,sizeof(string),"%.0f",health);
	    if(PlayerInfo[playerid][pHUD1] == 1)
	    {
			PlayerTextDrawColor(playerid, HUD[1][playerid], 0xC0C0C0FF);
		}
		else if(PlayerInfo[playerid][pHUD1] == 2)
	    {
			PlayerTextDrawColor(playerid, HUD[1][playerid], 0xFF0000FF);
		}
		else if(PlayerInfo[playerid][pHUD1] == 3)
	    {
			PlayerTextDrawColor(playerid, HUD[1][playerid], 0x00FF00FF);
		}
		else if(PlayerInfo[playerid][pHUD1] == 4)
	    {
			PlayerTextDrawColor(playerid, HUD[1][playerid], 0x0000FFFF);
		}
		else if(PlayerInfo[playerid][pHUD1] == 5)
	    {
	        PlayerTextDrawColor(playerid, HUD[1][playerid], 0xFFFF00FF);
		}
		PlayerTextDrawSetString(playerid, HUD[1][playerid], string);
		PlayerTextDrawShow(playerid, HUD[1][playerid]);
	}
	if(PlayerInfo[playerid][pHUD2] != 0)
	{
	    new Float:armour;
	    GetPlayerArmour(playerid,armour);
	    PlayerTextDrawShow(playerid, HUD[2][playerid]);
	    format(string,sizeof(string),"%.0f",armour);
	    if(PlayerInfo[playerid][pHUD2] == 1)
	    {
			PlayerTextDrawColor(playerid, HUD[2][playerid], 0xC0C0C0FF);
		}
		else if(PlayerInfo[playerid][pHUD2] == 2)
	    {
			PlayerTextDrawColor(playerid, HUD[2][playerid], 0xFF0000FF);
		}
		else if(PlayerInfo[playerid][pHUD2] == 3)
	    {
			PlayerTextDrawColor(playerid, HUD[2][playerid], 0x00FF00FF);
		}
		else if(PlayerInfo[playerid][pHUD2] == 4)
	    {
			PlayerTextDrawColor(playerid, HUD[2][playerid], 0x0000FFFF);
		}
		else if(PlayerInfo[playerid][pHUD2] == 5)
	    {
	        PlayerTextDrawColor(playerid, HUD[2][playerid], 0xFFFF00FF);
		}
		PlayerTextDrawSetString(playerid, HUD[2][playerid], string);
		PlayerTextDrawShow(playerid, HUD[2][playerid]);
		if(armour < 1)
	    {
	        PlayerTextDrawHide(playerid, HUD[2][playerid]);
		}
	}
	if(PlayerInfo[playerid][pHUD3] != 0)
	{
	    PlayerTextDrawShow(playerid, HUD[3][playerid]);
		format(string,sizeof(string),"%d",PlayerInfo[playerid][pFPS]);
		PlayerTextDrawSetString(playerid, HUD[3][playerid], string);
		PlayerTextDrawShow(playerid, HUD[3][playerid]);
	}
	return 1;
}

public Truckerr1(playerid)
{
	if(!IsATruck(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_WHITE, "Error! You are not the driver!");
    new string1[MAX_STRING],string2[MAX_STRING],string3[MAX_STRING],string4[MAX_STRING],string5[MAX_STRING],string6[MAX_STRING],allstrings[MAX_STRING];
    new Float: Position[3],
    	Float: Distance[19];
	GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[2][0], CHKTruck[2][1], CHKTruck[2][2]);
	Distance[2] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[4][0], CHKTruck[4][1], CHKTruck[4][2]);
	Distance[3] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[11][0], CHKTruck[11][1], CHKTruck[11][2]);
	Distance[4] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[10][0], CHKTruck[10][1], CHKTruck[10][2]);
	Distance[5] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[7][0], CHKTruck[7][1], CHKTruck[7][2]);
	Distance[6] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[6][0], CHKTruck[6][1], CHKTruck[6][2]);
	Distance[7] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[8][0], CHKTruck[8][1], CHKTruck[8][2]);
	Distance[8] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[9][0], CHKTruck[9][1], CHKTruck[9][2]);
	Distance[9] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[3][0], CHKTruck[3][1], CHKTruck[3][2]);
	Distance[10] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[5][0], CHKTruck[5][1], CHKTruck[5][2]);
	Distance[11] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[12][0], CHKTruck[12][1], CHKTruck[12][2]);
	Distance[12] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[13][0], CHKTruck[13][1], CHKTruck[13][2]);
	Distance[13] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[17][0], CHKTruck[17][1], CHKTruck[17][2]);
	Distance[14] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[15][0], CHKTruck[15][1], CHKTruck[15][2]);
	Distance[15] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[16][0], CHKTruck[16][1], CHKTruck[16][2]);
	Distance[16] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[14][0], CHKTruck[14][1], CHKTruck[14][2]);
 	format(string1,sizeof(string1),"{FFFFFF}LS Pizza Delivery (%.0fm) - {568203}legal\n{FFFFFF}LS Chop Shop (%.0fm) - {FF0000}illegal\n{FFFFFF}LV Chuckup (%.0fm) - {FF0000}illegal",Distance[1],Distance[2],Distance[3]);
 	format(string2,sizeof(string2),"{FFFFFF}LV Pirate Ship (%.0fm) - {FF0000}illegal\n{FFFFFF}LV Clothing Store (%.0fm) - {568203}legal\n{FFFFFF}LV Gas Station (%.0fm) - {FF0000}explosive",Distance[4],Distance[5],Distance[6]);
  	format(string3,sizeof(string3),"{FFFFFF}LV Burger Shot (%.0fm) - {568203}legal\n{FFFFFF}LV Pool (%.0fm) - {568203}legal\n{FFFFFF}LS 8 Track (%.0fm) - {568203}legal",Distance[7],Distance[8],Distance[9]);
  	format(string4,sizeof(string4),"{FFFFFF}LS Crack House (%.0fm) - {FF0000}illegal\n{FFFFFF}SF Ship (%.0fm) - {568203}legal\n{FFFFFF}SF Gas Station (%.0fm) - {FF0000}explosive",Distance[10],Distance[11],Distance[12]);
   	format(string5,sizeof(string5),"{FFFFFF}SF Homies Sharp (%.0fm) - {568203}legal\n{FFFFFF}SF Supa Save! (%.0fm) - {FF0000}illegal\n{FFFFFF}SF Restaurant (%.0fm) - {FF0000}illegal",Distance[13],Distance[14],Distance[15]);
    format(string6,sizeof(string6),"{FFFFFF}SF Pier 69 Pizza Place (%.0fm) - {568203}legal",Distance[16]);
    format(allstrings,sizeof(allstrings), "%s\n%s\n%s\n%s\n%s\n%s", string1, string2, string3, string4, string5, string6);
    ShowPlayerDialog(playerid, DIALOG_TRUCKER1, DIALOG_STYLE_LIST, "Choose destination", allstrings, "Ok", "Cancel");
    return 1;
}

public Truckerr2(playerid)
{
    if(!IsATruck(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_WHITE, "Error! You are not the driver!");
	new string1[MAX_STRING],string2[MAX_STRING],string3[MAX_STRING],string4[MAX_STRING],allstrings[MAX_STRING];
 	new Float: Position[3],
  		Float: Distance[19];
	GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[11][0], CHKTruck[11][1], CHKTruck[11][2]);
	Distance[2] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[10][0], CHKTruck[10][1], CHKTruck[10][2]);
	Distance[3] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[7][0], CHKTruck[7][1], CHKTruck[7][2]);
	Distance[4] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[6][0], CHKTruck[6][1], CHKTruck[6][2]);
	Distance[5] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[8][0], CHKTruck[8][1], CHKTruck[8][2]);
	Distance[6] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[9][0], CHKTruck[9][1], CHKTruck[9][2]);
	Distance[7] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[0][0], CHKTruck[0][1], CHKTruck[0][2]);
	Distance[8] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[12][0], CHKTruck[12][1], CHKTruck[12][2]);
	Distance[9] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[13][0], CHKTruck[13][1], CHKTruck[13][2]);
	Distance[10] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[17][0], CHKTruck[17][1], CHKTruck[17][2]);
	Distance[11] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[15][0], CHKTruck[15][1], CHKTruck[15][2]);
	Distance[12] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[16][0], CHKTruck[16][1], CHKTruck[16][2]);
 	format(string1,sizeof(string1),"{FFFFFF}LV Chuckup (%.0fm) - {FF0000}illegal\n{FFFFFF}LV Pirate Ship (%.0fm) - {FF0000}illegal\n{FFFFFF}LV Clothing Store (%.0fm) - {568203}legal",Distance[1],Distance[2],Distance[3]);
 	format(string2,sizeof(string2),"{FFFFFF}LV Gas Station (%.0fm) - {FF0000}explosive\n{FFFFFF}LV Burger Shot (%.0fm) - {568203}legal\n{FFFFFF}LV Pool (%.0fm) - {568203}legal",Distance[4],Distance[5],Distance[6]);
 	format(string3,sizeof(string3),"{FFFFFF}LS Gas Station (%.0fm) - {FF0000}explosive\n{FFFFFF}SF Ship (%.0fm) - {568203}legal\n{FFFFFF}SF Gas Station (%.0fm) - {FF0000}explosive",Distance[7],Distance[8],Distance[9]);
 	format(string4,sizeof(string4),"{FFFFFF}SF Homies Sharp (%.0fm) - {568203}legal\n{FFFFFF}SF Supa Save! (%.0fm) - {FF0000}illegal\n{FFFFFF}SF Restaurant (%.0fm) - {FF0000}illegal",Distance[10],Distance[11],Distance[12]);
 	format(allstrings,sizeof(allstrings), "%s\n%s\n%s\n%s", string1, string2, string3, string4);
 	ShowPlayerDialog(playerid, DIALOG_TRUCKER2, DIALOG_STYLE_LIST, "Choose destination", allstrings, "Ok", "Cancel");
 	return 1;
}

public Truckerr3(playerid)
{
    if(!IsATruck(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_WHITE, "Error! You are not the driver!");
    new string1[MAX_STRING],string2[MAX_STRING],string3[MAX_STRING],string4[MAX_STRING],allstrings[MAX_STRING];
    new Float: Position[3],
		Float: Distance[19];
	GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[2][0], CHKTruck[2][1], CHKTruck[2][2]);
	Distance[2] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[4][0], CHKTruck[4][1], CHKTruck[4][2]);
	Distance[3] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[3][0], CHKTruck[3][1], CHKTruck[3][2]);
	Distance[4] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[5][0], CHKTruck[5][1], CHKTruck[5][2]);
	Distance[5] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[1][0], CHKTruck[1][1], CHKTruck[1][2]);
	Distance[6] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[0][0], CHKTruck[0][1], CHKTruck[0][2]);
	Distance[7] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[12][0], CHKTruck[12][1], CHKTruck[12][2]);
	Distance[8] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[13][0], CHKTruck[13][1], CHKTruck[13][2]);
	Distance[9] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[17][0], CHKTruck[17][1], CHKTruck[17][2]);
	Distance[10] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[15][0], CHKTruck[15][1], CHKTruck[15][2]);
	Distance[11] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[16][0], CHKTruck[16][1], CHKTruck[16][2]);
	Distance[12] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[14][0], CHKTruck[14][1], CHKTruck[14][2]);
 	format(string1,sizeof(string1),"{FFFFFF}LS Pizza Delivery (%.0fm) - {568203}legal\n{FFFFFF}LS Chop Shop (%.0fm) - {FF0000}illegal\n{FFFFFF}LS 8 Track (%.0fm) - {568203}legal",Distance[1],Distance[2],Distance[3]);
 	format(string2,sizeof(string2),"{FFFFFF}LS Crack House (%.0fm) - {FF0000}illegal\n{FFFFFF}LS 24/7 Store (%.0fm) - {568203}legal\n{FFFFFF}LS Gas Station (%.0fm) - {FF0000}explosive",Distance[4],Distance[5],Distance[6]);
 	format(string3,sizeof(string3),"{FFFFFF}SF Ship (%.0fm) - {568203}legal\n{FFFFFF}SF Gas Station (%.0fm) - {FF0000}explosive\n{FFFFFF}SF Homies Sharp (%.0fm) - {568203}legal",Distance[7],Distance[8],Distance[9]);
 	format(string4,sizeof(string4),"{FFFFFF}SF Supa Save! (%.0fm) - {FF0000}illegal\n{FFFFFF}SF Restaurant (%.0fm) - {FF0000}illegal\n{FFFFFF}SF Pier 69 Pizza Place (%.0fm) - {568203}legal",Distance[10],Distance[11],Distance[12]);
    format(allstrings,sizeof(allstrings), "%s\n%s\n%s\n%s", string1, string2, string3, string4);
    ShowPlayerDialog(playerid, DIALOG_TRUCKER3, DIALOG_STYLE_LIST, "Choose destination", allstrings, "Ok", "Cancel");
	return 1;
}

public Truckerr4(playerid)
{
    if(!IsATruck(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_WHITE, "Error! You are not the driver!");
    new string1[MAX_STRING],string2[MAX_STRING],string3[MAX_STRING],string4[MAX_STRING],allstrings[MAX_STRING];
    new Float: Position[3],
    	Float: Distance[19];
	GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[2][0], CHKTruck[2][1], CHKTruck[2][2]);
	Distance[2] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[4][0], CHKTruck[4][1], CHKTruck[4][2]);
	Distance[3] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[11][0], CHKTruck[11][1], CHKTruck[11][2]);
	Distance[4] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[10][0], CHKTruck[10][1], CHKTruck[10][2]);
	Distance[5] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[7][0], CHKTruck[7][1], CHKTruck[7][2]);
	Distance[6] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[6][0], CHKTruck[6][1], CHKTruck[6][2]);
	Distance[7] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[8][0], CHKTruck[8][1], CHKTruck[8][2]);
	Distance[8] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[9][0], CHKTruck[9][1], CHKTruck[9][2]);
	Distance[9] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[3][0], CHKTruck[3][1], CHKTruck[3][2]);
	Distance[10] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[5][0], CHKTruck[5][1], CHKTruck[5][2]);
	Distance[11] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[1][0], CHKTruck[1][1], CHKTruck[1][2]);
	Distance[12] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], CHKTruck[0][0], CHKTruck[0][1], CHKTruck[0][2]);
	format(string1,sizeof(string1),"{FFFFFF}LS Pizza Delivery (%.0fm) - {568203}legal\n{FFFFFF}LS Chop Shop (%.0fm) - {FF0000}illegal\n{FFFFFF}LV Chuckup (%.0fm) - {FF0000}illegal",Distance[1],Distance[2],Distance[3]);
	format(string2,sizeof(string2),"{FFFFFF}LV Pirate Ship (%.0fm) - {FF0000}illegal\n{FFFFFF}LV Clothing Store (%.0fm) - {568203}legal\n{FFFFFF}LV Gas Station (%.0fm) - {FF0000}explosive",Distance[4],Distance[5],Distance[6]);
	format(string3,sizeof(string3),"{FFFFFF}LV Burger Shot (%.0fm) - {568203}legal\n{FFFFFF}LV Pool (%.0fm) - {568203}legal\n{FFFFFF}LS 8 Track (%.0fm) - {568203}legal",Distance[7],Distance[8],Distance[9]);
	format(string4,sizeof(string4),"{FFFFFF}LS Crack House (%.0fm) - {FF0000}illegal\n{FFFFFF}LS 24/7 Store (%.0fm) - {568203}legal\n{FFFFFF}LS Gas Station (%.0fm) - {FF0000}explosive",Distance[10],Distance[11],Distance[12]);
	format(allstrings,sizeof(allstrings), "%s\n%s\n%s\n%s", string1, string2, string3, string4);
	ShowPlayerDialog(playerid, DIALOG_TRUCKER4, DIALOG_STYLE_LIST, "Choose destination", allstrings, "Ok", "Cancel");
	return 1;
}

public AfterSpray(playerid)
{
	new carid = GetPlayerVehicleID(playerid),
		Float:health,
		string[MAX_STRING];
    if(IsPlayerInRangeOfPoint(playerid,15.0,1025.0671,-1023.7895,32.1016))
	{
	    GetVehicleHealth(carid, health);
	    if(health == 1000.0)
	    {
			Cash[playerid] -= BizzInfo[36][bEntranceCost];
			Update(playerid, pCashx);
			BizzInfo[36][bTill] += BizzInfo[36][bEntranceCost];
			new str[128];
			mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='36'",BizzInfo[36][bTill]);
			mysql_tquery(SQL,str,"","");
			format(string,sizeof(string),"~r~-%d$", BizzInfo[36][bEntranceCost]);
   			GameTextForPlayer(playerid, string, 5000, 1);
			return 1;
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,15.0,719.9537,-457.2771,16.3359))
	{
	    GetVehicleHealth(carid, health);
	    if(health == 1000.0)
	    {
			new str[128];
			Cash[playerid] -= BizzInfo[34][bEntranceCost];
			Update(playerid, pCashx);
			BizzInfo[34][bTill] += BizzInfo[34][bEntranceCost];
			mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='34'",BizzInfo[34][bTill]);
			mysql_tquery(SQL,str,"","");
			format(string,sizeof(string),"~r~-%d$", BizzInfo[34][bEntranceCost]);
   			GameTextForPlayer(playerid, string, 5000, 1);
			return 1;
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,15.0,487.4134,-1740.1738,11.1370))
	{
	    GetVehicleHealth(carid, health);
	    if(health == 1000.0)
	    {
			Cash[playerid] -= BizzInfo[37][bEntranceCost];
			Update(playerid, pCashx);
			BizzInfo[37][bTill] += BizzInfo[37][bEntranceCost];
			new str[128];
			mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='37'",BizzInfo[37][bTill]);
			mysql_tquery(SQL,str,"","");
			format(string,sizeof(string),"~r~-%d$", BizzInfo[37][bEntranceCost]);
   			GameTextForPlayer(playerid, string, 5000, 1);
			return 1;
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,15.0,2065.5911,-1831.4495,13.5469))
	{
	    GetVehicleHealth(carid, health);
	    if(health == 1000.0)
	    {
			new str[128];
			Cash[playerid] -= BizzInfo[35][bEntranceCost];
			Update(playerid, pCashx);
			BizzInfo[35][bTill] += BizzInfo[35][bEntranceCost];
			mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='35'",BizzInfo[35][bTill]);
			mysql_tquery(SQL,str,"","");
			format(string,sizeof(string),"~r~-%d$", BizzInfo[35][bEntranceCost]);
   			GameTextForPlayer(playerid, string, 5000, 1);
			return 1;
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,15.0,1974.3198,2162.7249,11.0703))
	{
	    GetVehicleHealth(carid, health);
	    if(health == 1000.0)
	    {
   			Cash[playerid] -= BizzInfo[40][bEntranceCost];
			Update(playerid, pCashx);
			BizzInfo[40][bTill] += BizzInfo[40][bEntranceCost];
			new str[128];
			mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='40'",BizzInfo[40][bTill]);
			mysql_tquery(SQL,str,"","");
			format(string,sizeof(string),"~r~-%d$", BizzInfo[40][bEntranceCost]);
   			GameTextForPlayer(playerid, string, 5000, 1);
			return 1;
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,15.0,-100.1086,1117.3312,19.7417))
	{
	    GetVehicleHealth(carid, health);
	    if(health == 1000.0)
	    {
			Cash[playerid] -= BizzInfo[41][bEntranceCost];
			Update(playerid, pCashx);
			BizzInfo[41][bTill] += BizzInfo[41][bEntranceCost];
			new str[128];
			mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='41'",BizzInfo[41][bTill]);
			mysql_tquery(SQL,str,"","");
			format(string,sizeof(string),"~r~-%d$", BizzInfo[41][bEntranceCost]);
   			GameTextForPlayer(playerid, string, 5000, 1);
			return 1;
		}
	}
	return 1;
}

public OnPlayerSpawn(playerid)
{
	TextDrawShowForPlayer(playerid, Logosv1);
	TextDrawShowForPlayer(playerid, Logosv2);
	arefreeze[playerid] = 0;
	PlayerTextDrawSetPreviewModel(playerid, SkinPreview[playerid], PlayerInfo[playerid][pModel]);
	PlayerTextDrawShow(playerid, SkinPreview[playerid]);
    StopAudioStreamForPlayer(playerid);
    SetPlayerHealthEx(playerid, 100);
    SetPlayerArmourEx(playerid, 0);
    TextDrawHideForPlayer(playerid, LoginBox);
    TextDrawHideForPlayer(playerid, LoginInfo);
	TextDrawShowForPlayer(playerid, Time);
	TextDrawShowForPlayer(playerid, Date);
    SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
    DestroyDynamic3DTextLabel(WantedScris[playerid]);
    if(PlayerInfo[playerid][pWantedLevel] > 0)
    {
        Tigaanel[playerid] = 1;
        DestroyDynamic3DTextLabel(WantedScris[playerid]);
    	new str2[256];
    	format(str2,sizeof(str2),"{FF00FF}Wanted Level: %d", PlayerInfo[playerid][pWantedLevel]);
    	WantedScris[playerid] = CreateDynamic3DTextLabel(str2, COLOR_WHITE, 0, 0, -20, 20, playerid);
		Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL, WantedScris[playerid] , E_STREAMER_ATTACH_OFFSET_Z, 0.48);
	}
    DestroyDynamic3DTextLabel(DeadScris[playerid]);
    if(PlayerInfo[playerid][pWantedLevel] >= 1)
    {
        new str1[256];
        PlayerTextDrawShow(playerid, WantedText[playerid]);
        format(str1,sizeof(str1),"Wanted Clear In : ~r~%d MINUTE",wantedlost[playerid]/60+1);
		PlayerTextDrawSetString(playerid, WantedText[playerid], str1);
    }
    else
    {
         PlayerTextDrawHide(playerid, WantedText[playerid]);
    }
    if(JCurier[playerid][0] > 0)
	{
		DestroyVehicle(JCurier[playerid][2]);
		for(new i = 0; i < 4; i++) JCurier[playerid][i] = -1;
		CP[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
    SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
    if(OnDuty[playerid] > 0)
	{
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			GivePlayerWeaponEx(playerid, 24, 500);
			GivePlayerWeaponEx(playerid, 3, 1);
			GivePlayerWeaponEx(playerid, 41, 500);
			GivePlayerWeaponEx(playerid, 29, 1000);
			GivePlayerWeaponEx(playerid, 31, 1000);
			SetPlayerArmourEx(playerid, 100);
			SetPlayerHealthEx(playerid, 100);
		}
		if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
 		{
			GivePlayerWeaponEx(playerid, 24, 500);
			GivePlayerWeaponEx(playerid, 3, 1);
			GivePlayerWeaponEx(playerid, 41, 500);
			GivePlayerWeaponEx(playerid, 29, 1000);
			GivePlayerWeaponEx(playerid, 31, 1000);
			SetPlayerArmourEx(playerid, 100);
			SetPlayerHealthEx(playerid, 100);
		}
		if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
 		{
			GivePlayerWeaponEx(playerid, 24, 500);
			GivePlayerWeaponEx(playerid, 41, 500);
			GivePlayerWeaponEx(playerid, 29, 1000);
			GivePlayerWeaponEx(playerid, 31, 1000);
			SetPlayerArmourEx(playerid, 100);
			SetPlayerHealthEx(playerid, 100);
		}
		if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
 		{
			GivePlayerWeaponEx(playerid, 24, 500);
			GivePlayerWeaponEx(playerid, 3, 1);
			GivePlayerWeaponEx(playerid, 41, 500);
			GivePlayerWeaponEx(playerid, 29, 1000);
			GivePlayerWeaponEx(playerid, 31, 1000);
			SetPlayerArmourEx(playerid, 100);
			SetPlayerHealthEx(playerid, 100);
		}
	}
	if(!gPlayerAnimLibsPreloaded[playerid])
	{
   		PreloadAnimLib(playerid,"BOMBER");
   		PreloadAnimLib(playerid,"RAPPING");
    	PreloadAnimLib(playerid,"SHOP");
   		PreloadAnimLib(playerid,"BEACH");
   		PreloadAnimLib(playerid,"SMOKING");
    	PreloadAnimLib(playerid,"FOOD");
    	PreloadAnimLib(playerid,"ON_LOOKERS");
    	PreloadAnimLib(playerid,"DEALER");
    	PreloadAnimLib(playerid,"MISC");
    	PreloadAnimLib(playerid,"SWEET");
    	PreloadAnimLib(playerid,"RIOT");
    	PreloadAnimLib(playerid,"PED");
    	PreloadAnimLib(playerid,"POLICE");
		PreloadAnimLib(playerid,"CRACK");
		PreloadAnimLib(playerid,"CARRY");
		PreloadAnimLib(playerid,"COP_AMBIENT");
		PreloadAnimLib(playerid,"PARK");
		PreloadAnimLib(playerid,"INT_HOUSE");
		PreloadAnimLib(playerid,"FOOD");
		gPlayerAnimLibsPreloaded[playerid] = 1;
	}
	gTeam[playerid] = PlayerInfo[playerid][pTeam];
	if(gTeam[playerid] == 4)
	{
		gTeam[playerid] = 4;
	}
	if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
	{
		gTeam[playerid] = 2;
		PlayerInfo[playerid][pTeam] = 2;
	}
	if(gPlayerLogged[playerid] == 0)
	{
    	SendClientMessage(playerid, COLOR_LIGHTRED, "** This server requires a Login BEFORE spawn (Kicked) **");
    	Kick(playerid);
		return 1;
 	}
 	ChosenSkin[playerid] = 1;
	SetPlayerSpawn(playerid);
	SetPlayerToTeamColor(playerid);
	playerdeath[playerid] = 0;
	Undercover[playerid] = 0;
	SetPlayerTeam(playerid,4);
	StopAudioStreamForPlayer(playerid);
	GodMode[playerid] = 0;
	return 1;
}

// LOGS
public Adminlog(string[])
{
	new query[500];
	mysql_format(SQL,query,500,"INSERT INTO log_admin (`log`) VALUES ('%s')",string);
	mysql_tquery(SQL,query,"","");
	return 1;
}

public Factionlog(factionid,psql,lsql,action[])
{
	new query[500];
	mysql_format(SQL,query,sizeof(query),"INSERT INTO factionlog (`factionid`,`player`,`leader`,`action`) VALUES ('%d','%d','%d','%s')",factionid,psql,lsql,action);
	mysql_tquery(SQL,query,"","");
	return 1;
}

public LogIP(string[],psql)
{
	new query[500];
	mysql_format(SQL,query,500,"INSERT INTO iplogs (`ip`,`playerid`) VALUES ('%s','%d')",string,psql);
	mysql_tquery(SQL,query,"","");
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	new ccar = IsPlayerInAnyVehicle(playerid);
    new tmpcar = GetPlayerVehicleID(playerid);
 	if(pizzaj[playerid] == 1 && PizzaCP[playerid] == 1)
	{
		new string[128];
		DisablePlayerRaceCheckpoint(playerid);
		PizzaCP[playerid] = 0;
		pizzaj[playerid] = 0;
		format(string,sizeof(string),"Pizza Delivered ! You Recieved %s$ | Use /Pizza To Another Mission",FormatNumber(pizzaprize[playerid]));
		SCM(playerid,COLOR_GREEN,string);
		GivePlayerCash(playerid,pizzaprize[playerid]);
		Update(playerid, pCashx);
		pizzaprize[playerid] = 0;
		PlayerInfo[playerid][pPizzaRem]--;
		PlayerInfo[playerid][pPizzaTimes]++;
		Update(playerid,pPizzaRemx);
		Update(playerid,pPizzaTimesx);
		if(PlayerInfo[playerid][pPizzaSkill] <= 5)
		{
			if(PlayerInfo[playerid][pPizzaRem] <= 0)
			{
			    PlayerInfo[playerid][pPizzaSkill]++;
   				if(PlayerInfo[playerid][pPizzaSkill] == 2)
				{
					PlayerInfo[playerid][pPizzaRem] = 34;
				}
				else if(PlayerInfo[playerid][pPizzaSkill] == 3)
				{
					PlayerInfo[playerid][pPizzaRem] = 49;
				}
				else if(PlayerInfo[playerid][pPizzaSkill] == 4)
				{
					PlayerInfo[playerid][pPizzaRem] = 89;
				}
				else if(PlayerInfo[playerid][pPizzaSkill] == 5)
				{
					PlayerInfo[playerid][pPizzaRem] = 99;
				}
		    	Update(playerid,pPizzaSkillx);
		    	Update(playerid,pPizzaRemx);
			    format(string,sizeof(string),"Cngrats ! Your Skill Is Now %d!",PlayerInfo[playerid][pPizzaSkill]);
			    SendClientMessage(playerid, COLOR_YELLOW, string);
			}
		}
	}
	if(CP[playerid] == 99)
	{
	   DisablePlayerRaceCheckpoint(playerid);
	   CP[playerid] = 0;
	}
	if(CheckBus[playerid] >= 1 && ccar && IsABus(tmpcar))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "Stop the bus in the red checkpoint.");
		timerbus[playerid] = SetTimerEx("BusDriverCheck", 3000, 1, "i", playerid);
	}
	new string[MAX_STRING];
	if(CP[playerid] == 100 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpoint(playerid, 0, 1045.2626,-1809.4169,13.2637,849.1470,-1767.0336,13.0397, 4.0);
		CP[playerid] = 101;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~1~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 101 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpoint(playerid,0, 849.1470,-1767.0336,13.0397,635.5740,-1712.8594,13.8757, 4.0);
		CP[playerid] = 102;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~2~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 102 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpoint(playerid,0, 635.5740,-1712.8594,13.8757,605.3907,-1672.5651,15.5764, 4.0);
		CP[playerid] = 103;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~3~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 103 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpoint(playerid,0, 605.3907,-1672.5651,15.5764,485.4009,-1658.0165,21.8713, 4.0);
		CP[playerid] = 104;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~4~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 104 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpoint(playerid,0, 485.4009,-1658.0165,21.8713,325.8313,-1640.2993,32.7597, 4.0);
		CP[playerid] = 105;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~5~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 105 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpoint(playerid,0, 325.8313,-1640.2993,32.7597,246.6969,-1561.6211,32.6957, 4.0);
		CP[playerid] = 106;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~6~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 106 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpoint(playerid,0, 246.6969,-1561.6211,32.6957,274.5565,-1478.2930,29.9500, 4.0);
		CP[playerid] = 107;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~7~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 107 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpoint(playerid,0, 274.5565,-1478.2930,29.9500,193.8137,-1506.6576,12.2538, 4.0);
		CP[playerid] = 108;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~8~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 108 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpoint(playerid, 0,193.8137,-1506.6576,12.2538,324.4604,-1400.7098,13.7601, 4.0);
		CP[playerid] = 109;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~9~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 109 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpoint(playerid,0, 324.4604,-1400.7098,13.7601,509.5384,-1282.4365,15.4881, 4.0);
		CP[playerid] = 110;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~10~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
    }
	else if(CP[playerid] == 110 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpoint(playerid,0, 509.5384,-1282.4365,15.4881,599.4775,-1228.8478,17.5563, 4.0);
		CP[playerid] = 111;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~11~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 111 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpoint(playerid, 0, 599.4775,-1228.8478,17.5563,623.2209,-1238.7283,17.5613, 4.0);
		CP[playerid] = 112;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~12~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 112 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
	    DisablePlayerRaceCheckpoint(playerid);
	    SetPlayerRaceCheckpoint(playerid,0, 623.2209,-1238.7283,17.5613,627.9891,-1319.5573,13.2599, 4.0);
		CP[playerid] = 113;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~13~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 113 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
	   	DisablePlayerRaceCheckpoint(playerid);
	    SetPlayerRaceCheckpoint(playerid,0, 627.9891,-1319.5573,13.2599,716.7220,-1322.1327,13.0510, 4.0);
		CP[playerid] = 114;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~14~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 114 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
	    DisablePlayerRaceCheckpoint(playerid);
	    SetPlayerRaceCheckpoint(playerid,0, 716.7220,-1322.1327,13.0510,864.1711,-1327.4478,13.1957, 4.0);
		CP[playerid] = 115;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~15~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 115 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
	    DisablePlayerRaceCheckpoint(playerid);
	    SetPlayerRaceCheckpoint(playerid,0, 864.1711,-1327.4478,13.1957,1046.0955,-1328.6143,13.0441, 4.0);
		CP[playerid] = 116;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~16~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 116 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
	    DisablePlayerRaceCheckpoint(playerid);
	    SetPlayerRaceCheckpoint(playerid,0, 1046.0955,-1328.6143,13.0441,1054.7998,-1383.8990,13.1580, 4.0);
		CP[playerid] = 117;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~17~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 117 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
	    DisablePlayerRaceCheckpoint(playerid);
	    SetPlayerRaceCheckpoint(playerid,0, 1054.7998,-1383.8990,13.1580,1055.3480,-1464.9629,13.0095, 4.0);
		CP[playerid] = 118;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~18~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 118 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
	    DisablePlayerRaceCheckpoint(playerid);
	    SetPlayerRaceCheckpoint(playerid, 0,1055.3480,-1464.9629,13.0095,1035.1870,-1557.0361,13.0122, 4.0);
		CP[playerid] = 119;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~19~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 119 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
	    DisablePlayerRaceCheckpoint(playerid);
	    SetPlayerRaceCheckpoint(playerid, 0, 1035.1870,-1557.0361,13.0122,1084.2502,-1574.0663,13.0356, 4.0);
		CP[playerid] = 120;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~20~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 120 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
	    DisablePlayerRaceCheckpoint(playerid);
	    SetPlayerRaceCheckpoint(playerid, 0, 1084.2502,-1574.0663,13.0356,1295.7023,-1582.3715,13.0348, 4.0);
		CP[playerid] = 121;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~21~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 121 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
	    DisablePlayerRaceCheckpoint(playerid);
	    SetPlayerRaceCheckpoint(playerid, 0, 1295.7023,-1582.3715,13.0348,1295.5782,-1832.5750,13.3828, 4.0);
		CP[playerid] = 122;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~22~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 122 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
	    DisablePlayerRaceCheckpoint(playerid);
	    SetPlayerRaceCheckpoint(playerid, 1, 1295.5782,-1832.5750,13.3828,0.0,0.0,0.0, 4.0);
		CP[playerid] = 123;
		format(string, sizeof(string), "~w~CHECKPOINTS: ~r~23~w~/~r~24");
		PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
	}
	else if(CP[playerid] == 123 && ccar && IsPlayerInVehicle(playerid, examcar[playerid]))
	{
        PlayerTextDrawHide(playerid, DMVexam[playerid]);
        PlayerTextDrawHide(playerid, DMVcheck[playerid]);
		DisablePlayerRaceCheckpoint(playerid);
		PlayerInfo[playerid][pCarLic] = 1;
		PlayerInfo[playerid][pCarLicT] = 100;
		TakingLesson[playerid] = 0;
		DestroyVehicle(examcar[playerid]);
		DisableRemoteVehicleCollisions(playerid, 0);
		examcar[playerid] = -1;
		new str1[128];
		mysql_format(SQL,str1,sizeof(str1),"UPDATE users SET `CarLic`='1',`CarLicT`='100' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
		mysql_tquery(SQL,str1,"","");
		SendClientMessage(playerid, COLOR_WHITE, "Cngrats ! You Recieved Driving License!");
		CP[playerid] = 0;
	}
    return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	new tmpcar = GetPlayerVehicleID(playerid),
		ccar = IsPlayerInAnyVehicle(playerid);
	if(CheckBus[playerid] >= 1 && ccar && IsABus(tmpcar))
	{
		KillTimer(timerbus[playerid]);
	}
	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
    new veh	= GetPlayerVehicleID(playerid);
    new engine,lights,alarm,doors,bonnet,boot,objective;
    if(XCheckpoints[playerid] == 0)
    {
       LastCheckpoint[playerid] = gettime();
    }
    XCheckpoints[playerid]++;
    if(XCheckpoints[playerid] == 2)
    {
        if((gettime() - LastCheckpoint[playerid]) <= 2)
        {
			if(UsedFind[playerid] == 0)
			{
				new string[256];
				new playername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playername, sizeof(playername));
				format(string, 256, "[Cheating] %s (%d, level %d) may be using teleport hack.", playername, playerid, PlayerInfo[playerid][pLevel]);
				ABroadCast(COLOR_RED,string,1);
				XCheckpoints[playerid] = 0;
				LastCheckpoint[playerid] = 0;
			}
			else
			{
				XCheckpoints[playerid]=0;
			}
        }else
        if((gettime() - LastCheckpoint[playerid]) > 2)
        {
            XCheckpoints[playerid]=0;
        }
	}
	new string[MAX_STRING];
	if(TaxiCallTime[playerid] > 0 && TaxiAccepted[playerid] < 999)
	{
	    TaxiAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~~h~Reached destination", 5000, 1);
		TaxiCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(GotoMats[playerid] == 1)
	{
	    DisablePlayerCheckpoint(playerid);
	    GotoMats[playerid] = 0;
	    SendClientMessage(playerid, COLOR_YELLOW, "Type /GetMats To Recieve Materials");
	}
	else if(MatsHolding[playerid] == 1 && CP[playerid] == 6901)
	{
	    DisablePlayerCheckpoint(playerid);
		MatsHolding[playerid] = 0;
		CP[playerid] = 0;
		new totalmats = 1000 + PlayerInfo[playerid][pArmsSkill]*300,strings[64];
		PlayerInfo[playerid][pMats] += totalmats;
		Update(playerid,pMatsx);
		format(strings,sizeof(strings),"You Recieved %s Materials",FormatNumber(totalmats));
		SendClientMessage(playerid, COLOR_WHITE, strings);
		PlayerInfo[playerid][pArmsRem]--;
		PlayerInfo[playerid][pArmsTimes]++;
		Update(playerid,pArmsRemx);
		Update(playerid,pArmsTimesx);
		if(PlayerInfo[playerid][pArmsSkill] <= 5)
		{
			if(PlayerInfo[playerid][pArmsRem] <= 0)
			{
			    PlayerInfo[playerid][pArmsSkill]++;
   				if(PlayerInfo[playerid][pArmsSkill] == 2)
				{
					PlayerInfo[playerid][pArmsRem] = 34;
				}
				else if(PlayerInfo[playerid][pArmsSkill] == 3)
				{
					PlayerInfo[playerid][pArmsRem] = 49;
				}
				else if(PlayerInfo[playerid][pArmsSkill] == 4)
				{
					PlayerInfo[playerid][pArmsRem] = 89;
				}
				else if(PlayerInfo[playerid][pArmsSkill] == 5)
				{
					PlayerInfo[playerid][pArmsRem] = 99;
				}
		    	Update(playerid,pArmsSkillx);
		    	Update(playerid,pArmsRemx);
			    format(string,sizeof(string),"Cngrats ! Your Skill Is Now %d!",PlayerInfo[playerid][pArmsSkill]);
			    SendClientMessage(playerid, COLOR_YELLOW, string);
			}
		}
	}
	
	if(IsWorkingCariera[playerid] == 1)
	{
		DisablePlayerCheckpoint(playerid);
		IsWorkingCariera[playerid] = 2;
		new carieararandc;
		carieararandc = random(sizeof(gRandomCariera));
		SetPlayerCheckpoint(playerid,gRandomCariera[carieararandc][0],gRandomCariera[carieararandc][1],gRandomCariera[carieararandc][2],4.0);
	}
	else if(IsWorkingCariera[playerid] == 2)
	{
		DisablePlayerCheckpoint(playerid);
		IsWorkingCariera[playerid] = 3;
		SetPlayerCheckpoint(playerid,833.0749,903.3457,13.3516,4.0);
	}
	else if(IsWorkingCariera[playerid] == 3)
	{
		new levelcariera /*= PlayerInfo[playerid][pCarieraSkill]*/,randcariera,string1[512];
		if(levelcariera >= 0 && levelcariera <= 29) // skill 1
		{
			randcariera = 40000 + random(30000);
		}
		else if(levelcariera == 30)
		{
			SendClientMessage(playerid,-1,"Cngrats! Your Skill Is Now 2");
			randcariera = 60000 + random(30000);
		}
		else if(levelcariera >= 31 && levelcariera <= 59) // skill 2
		{
			randcariera = 60000 + random(30000);
		}
		else if(levelcariera == 60)
		{
			SendClientMessage(playerid,-1,"Cngrats! Your Skill Is Now 3");
			randcariera = 70000 + random(30000);
		}
		else if(levelcariera >= 61 && levelcariera <= 89) // skill 3
		{
			randcariera = 70000 + random(30000);
		}
		else if(levelcariera == 90)
		{
			SendClientMessage(playerid,-1,"Cngrats! Your Skill Is Now 4");
			randcariera = 80000 + random(30000);
		}
		else if(levelcariera >= 91 && levelcariera <= 119) // skill 4
		{
			randcariera = 80000 + random(30000);
		}
		else if(levelcariera == 120)
		{
			SendClientMessage(playerid,-1,"Cngrats! Your Skill Is Now 5");
			randcariera = 90000 + random(30000);
		}
		else if(levelcariera >= 121) // skill 5
		{
			randcariera = 90000 + random(30000);
		}
		DisablePlayerCheckpoint(playerid);
		IsWorkingCariera[playerid] = 1;
		SetPlayerCheckpoint(playerid,833.0749,903.3457,13.3516,4.0);
		GivePlayerCash(playerid,randcariera); // GivePlayerCash daca aveti sistem anti money hack
		format(string1, sizeof(string1), "{00FF00}Earning From Job : {FFFFFF}$%d",randcariera);
		SendClientMessage(playerid, -1, string1);
		//PlayerInfo[playerid][pCarieraSkill] += 1;
		// Apoi trebuie sa salvati pCarieraSkill si Bani primiti. 
	}
	
	else if(InCoal[playerid] >= 1)
	{
	    new randmoney = random(50000);
	    new stringz[512];
		PlayerInfo[playerid][pRemainCoal] -= 1;
		Update(playerid,pRemainCoalx);
		PlayerInfo[playerid][pTransportateCoal] += 1;
		new skillmoney = PlayerInfo[playerid][pSkillCoal] * 10000;
		new totalmoney = randmoney + skillmoney;

		Update(playerid, pTransportateCoalx);
	    if(PlayerInfo[playerid][pSkillCoal] <= 5)
		{
			if(PlayerInfo[playerid][pRemainCoal] <= 0)
			{
   				if(PlayerInfo[playerid][pSkillCoal] == 2)
				{
					PlayerInfo[playerid][pRemainCoal] = 34;
				}
				else if(PlayerInfo[playerid][pSkillCoal] == 3)
				{
					PlayerInfo[playerid][pRemainCoal] = 49;
				}
				else if(PlayerInfo[playerid][pSkillCoal] == 4)
				{
					PlayerInfo[playerid][pRemainCoal] = 89;
				}
				else if(PlayerInfo[playerid][pSkillCoal] == 5)
				{
					PlayerInfo[playerid][pRemainCoal] = 99;
				}
		    	Update(playerid,pSkillCoalx);
		    	Update(playerid,pRemainCoalx);
			    format(stringz,sizeof(stringz),"Cngrats ! Your Skill Is Now %d!",PlayerInfo[playerid][pRemainCoal]);
			    SendClientMessage(playerid, COLOR_YELLOW, stringz);
			}
		}
		format(stringz,sizeof(stringz),"(+) You Recieved $%s For delivery of the goods.",FormatNumber(totalmoney));
		SendClientMessage(playerid, COLOR_GREEN, stringz);
		GivePlayerCash(playerid, totalmoney);
		PlayerInfo[playerid][pCash] += totalmoney;
		Update(playerid, pCashx);
		InCoal[playerid] = 0;
		if(InCoal[playerid] == 0)
        {
            InCoal[playerid] = 1;
            CoalCar[playerid] = GetPlayerVehicleID(playerid);
			new rand = random(5) + 1;
			if(rand == 1)
			{
			    DisablePlayerCheckpoint(playerid);
			    SetPlayerCheckpoint(playerid, -923.2286,2033.2859,61.5645, 5.0);
			    SCM(playerid, COLOR_WHITE, "{FEC3AC}Go To Checkpoints To Deliver The Coals");
			}
			else if(rand == 2)
			{
			    DisablePlayerCheckpoint(playerid);
			    SetPlayerCheckpoint(playerid, -2451.5813,2301.6731,4.7083, 5.0);
			    SCM(playerid, COLOR_WHITE, "{FEC3AC}Go To Checkpoints To Deliver The Coals");
			}
			else if(rand == 3)
			{
                DisablePlayerCheckpoint(playerid);
                SetPlayerCheckpoint(playerid, -2118.3369,-168.2051,35.0474, 5.0);
                SCM(playerid, COLOR_WHITE, "{FEC3AC}Go To Checkpoints To Deliver The Coals");
			}
			else if(rand == 4)
			{
                DisablePlayerCheckpoint(playerid);
                SetPlayerCheckpoint(playerid, 2195.2310,-1977.5913,13.2811, 5.0);
                SCM(playerid, COLOR_WHITE, "{FEC3AC}Go To Checkpoints To Deliver The Coals");
			}
			else if(rand == 5)
			{
                DisablePlayerCheckpoint(playerid);
                SetPlayerCheckpoint(playerid, 2748.8074,-2441.9888,13.3719, 5.0);
                SCM(playerid, COLOR_WHITE, "{FEC3AC}Go To Checkpoints To Deliver The Coals");
			}
			else if(rand == 6)
			{
			    DisablePlayerCheckpoint(playerid);
                SetPlayerCheckpoint(playerid, 2716.0535,853.1257,10.6243, 5.0);
                SCM(playerid, COLOR_WHITE, "{FEC3AC}Go To Checkpoints To Deliver The Coals");
			}
        }
	}
	else if(CarJacker[playerid] == 1)
	{
	    new str[MAX_STRING],
	    	money = 8000 + random(7000);
	    DisablePlayerCheckpoint(playerid);
	    CarJacker[playerid] = 0;
	    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    GivePlayerCash(playerid, money);
	    Update(playerid, pCashx);
	    format(str,sizeof(str),"You have dropped a vehicle at the crane and earned $%s!", FormatNumber(money));
	    SendClientMessage(playerid, COLOR_WHITE, str);
	    JackAcc[playerid] = 120;
	}
	if(CP[playerid] == 151515)
	{
		if(IsPlayerInVehicle(playerid, JCurier[playerid][2]))
		{
			JCurier[playerid][3]++;
			new money = 15000 + random(20000) * PlayerInfo[playerid][pCurierSkill] * 2;
			GivePlayerCash(playerid, money);
			format(string, sizeof(string), "~g~+$%s",FormatNumber(money));
			GameTextForPlayer(playerid, string, 3000, 3);
			PlayerInfo[playerid][pCurierRem]--;
			PlayerInfo[playerid][pCurierTimes]++;
			Update(playerid,pCurierRemx);
			Update(playerid,pCurierTimesx);
			if(PlayerInfo[playerid][pCurierSkill] <= 5)
			{
				if(PlayerInfo[playerid][pCurierRem] <= 0)
				{
					PlayerInfo[playerid][pCurierSkill]++;
					if(PlayerInfo[playerid][pCurierSkill] == 2)
					{
						PlayerInfo[playerid][pCurierRem] = 34;
					}
					else if(PlayerInfo[playerid][pCurierSkill] == 3)
					{
						PlayerInfo[playerid][pCurierRem] = 49;
					}
					else if(PlayerInfo[playerid][pCurierSkill] == 4)
					{
						PlayerInfo[playerid][pCurierRem] = 89;
					}
					else if(PlayerInfo[playerid][pCurierSkill] == 5)
					{
						PlayerInfo[playerid][pCurierRem] = 99;
					}
					Update(playerid,pCurierSkillx);
					Update(playerid,pCurierRemx);
					format(string,sizeof(string),"Cngrats ! Your Skill Is Now %d!",PlayerInfo[playerid][pCurierSkill]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				}
			}
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			JCurier[playerid][1] = 100 + random(5);
			if(JCurier[playerid][1] > 0) JCurier[playerid][1]--;
			if(JCurier[playerid][1] == 95)
			{
					ShowPlayerDialog(playerid, DIALOG_CURIER, DIALOG_STYLE_MSGBOX, "Curier", "A new parcel was ordered.\nDo you want to take over this order?", "Yeah", "No");
					JCurier[playerid][1] = -1;
			}
		}
		else return SCM(playerid, COLOR_ERROR, "You're not in the Curier vehicle!");
	}
	else if(Trucker[playerid] >= 1)
	{
    	new pertransport,skillmoney,totalmoney;
    	if(!IsPlayerInAnyVehicle(playerid)) return 1;
    	if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)) && IsATruck(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_WHITE, "You Have'nt Attached Trailer");
   		DisablePlayerCheckpoint(playerid);
    	DestroyVehicle(viddd[playerid]);
    	viddd[playerid] = 0;
    	if(Trucker[playerid] == 1)
    	{
     		pertransport = 10000 + random(10000);
    		Trucker2[playerid] = 2;
    		SetPlayerCheckpoint(playerid,CHKTruck2[2][0],CHKTruck2[2][1],CHKTruck2[2][2],5.0);
		}
		else if(Trucker[playerid] == 2)
		{
  			pertransport = 17000 + random(10000);
 			Trucker2[playerid] = 2;
 			SetPlayerCheckpoint(playerid,CHKTruck2[4][0],CHKTruck2[4][1],CHKTruck2[4][2],5.0);
		}
		else if(Trucker[playerid] == 3)
		{
		    pertransport = 17000 + random(10000);
	    	Trucker2[playerid] = 3;
	    	SetPlayerCheckpoint(playerid,CHKTruck2[11][0],CHKTruck2[11][1],CHKTruck2[11][2],5.0);
		}
		else if(Trucker[playerid] == 4)
		{
		    pertransport = 17000 + random(10000);
	    	Trucker2[playerid] = 3;
	    	SetPlayerCheckpoint(playerid,CHKTruck2[10][0],CHKTruck2[10][1],CHKTruck2[10][2],5.0);
		}
		else if(Trucker[playerid] == 5)
		{
		    pertransport = 10000 + random(10000);
	    	Trucker2[playerid] = 3;
	    	SetPlayerCheckpoint(playerid,CHKTruck2[7][0],CHKTruck2[7][1],CHKTruck2[7][2],5.0);
		}
		else if(Trucker[playerid] == 6)
		{
		    pertransport = 25000 + random(15000);
	    	Trucker2[playerid] = 3;
	    	SetPlayerCheckpoint(playerid,CHKTruck2[6][0],CHKTruck2[6][1],CHKTruck2[6][2],5.0);
		}
		else if(Trucker[playerid] == 7)
		{
		    pertransport = 10000 + random(10000);
	    	Trucker2[playerid] = 3;
	    	SetPlayerCheckpoint(playerid,CHKTruck2[8][0],CHKTruck2[8][1],CHKTruck2[8][2],5.0);
		}
		else if(Trucker[playerid] == 8)
		{
		    pertransport = 10000 + random(10000);
	    	Trucker2[playerid] = 3;
	    	SetPlayerCheckpoint(playerid,CHKTruck2[9][0],CHKTruck2[9][1],CHKTruck2[9][2],5.0);
		}
		else if(Trucker[playerid] == 9)
		{
		    pertransport = 10000 + random(10000);
	    	Trucker2[playerid] = 2;
	    	SetPlayerCheckpoint(playerid,CHKTruck2[3][0],CHKTruck2[3][1],CHKTruck2[3][2],5.0);
		}
		else if(Trucker[playerid] == 10)
		{
		    pertransport = 17000 + random(10000);
	    	Trucker2[playerid] = 2;
	    	SetPlayerCheckpoint(playerid,CHKTruck2[5][0],CHKTruck2[5][1],CHKTruck2[5][2],5.0);
		}
		else if(Trucker[playerid] == 11)
		{
		    pertransport = 10000 + random(10000);
	    	Trucker2[playerid] = 4;
	    	SetPlayerCheckpoint(playerid,CHKTruck2[12][0],CHKTruck2[12][1],CHKTruck2[12][2],5.0);
		}
		else if(Trucker[playerid] == 12)
		{
		    pertransport = 27000 + random(15000);
	    	Trucker2[playerid] = 4;
	    	SetPlayerCheckpoint(playerid,CHKTruck2[13][0],CHKTruck2[13][1],CHKTruck2[13][2],5.0);
		}
		else if(Trucker[playerid] == 13)
		{
		    pertransport = 10000 + random(10000);
	    	Trucker2[playerid] = 4;
	    	SetPlayerCheckpoint(playerid,CHKTruck2[17][0],CHKTruck2[17][1],CHKTruck2[17][2],5.0);
		}
		else if(Trucker[playerid] == 14)
		{
		    pertransport = 17000 + random(10000);
	    	Trucker2[playerid] = 4;
	    	SetPlayerCheckpoint(playerid,CHKTruck2[15][0],CHKTruck2[15][1],CHKTruck2[15][2],5.0);
		}
		else if(Trucker[playerid] == 15)
		{
		    pertransport = 17000 + random(10000);
	    	Trucker2[playerid] = 4;
	    	SetPlayerCheckpoint(playerid,CHKTruck2[16][0],CHKTruck2[16][1],CHKTruck2[16][2],5.0);
		}
		else if(Trucker[playerid] == 16)
		{
		    pertransport = 10000 + random(10000);
	    	Trucker2[playerid] = 4;
	    	SetPlayerCheckpoint(playerid,CHKTruck2[14][0],CHKTruck2[14][1],CHKTruck2[14][2],5.0);
		}
		else if(Trucker[playerid] == 17)
		{
		    pertransport = 27000 + random(15000);
	    	Trucker2[playerid] = 1;
	    	SetPlayerCheckpoint(playerid,CHKTruck2[0][0],CHKTruck2[0][1],CHKTruck2[0][2],5.0);
		}
		else if(Trucker[playerid] == 18)
		{
		    pertransport = 10000 + random(10000);
	    	Trucker2[playerid] = 2;
	    	SetPlayerCheckpoint(playerid,CHKTruck2[1][0],CHKTruck2[1][1],CHKTruck2[1][2],5.0);
		}
		skillmoney = PlayerInfo[playerid][pTruckSkill] * 3000;
		totalmoney = pertransport + skillmoney;
		PlayerInfo[playerid][pTruckRem]--;
		PlayerInfo[playerid][pTruckTimes]++;
		GivePlayerCash(playerid,totalmoney);
		Update(playerid,pCashx);
		Update(playerid,pTruckRemx);
		Update(playerid,pTruckTimesx);
		if(PlayerInfo[playerid][pTruckSkill] <= 5)
		{
			if(PlayerInfo[playerid][pTruckRem] <= 0)
			{
			    PlayerInfo[playerid][pTruckSkill]++;
   				if(PlayerInfo[playerid][pTruckSkill] == 2)
				{
					PlayerInfo[playerid][pTruckRem] = 34;
				}
				else if(PlayerInfo[playerid][pTruckSkill] == 3)
				{
					PlayerInfo[playerid][pTruckRem] = 49;
				}
				else if(PlayerInfo[playerid][pTruckSkill] == 4)
				{
					PlayerInfo[playerid][pTruckRem] = 89;
				}
				else if(PlayerInfo[playerid][pTruckSkill] == 5)
				{
					PlayerInfo[playerid][pTruckRem] = 99;
				}
		    	Update(playerid,pTruckSkillx);
		    	Update(playerid,pTruckRemx);
			    format(string,sizeof(string),"Cngrats ! Your Skill Is Now %d!",PlayerInfo[playerid][pTruckSkill]);
			    SendClientMessage(playerid, COLOR_YELLOW, string);
			}
		}
		Trucker[playerid] = 0;
		format(string,sizeof(string),"(+) You Recieved $%s For Deliver Goods",FormatNumber(totalmoney));
		SendClientMessage(playerid, COLOR_GREEN, string);
	}
	else if(Trucker2[playerid] == 1) //Langa Gas Station(primul)
	{
	    SetTimerEx("Truckerr1", 200, 0, "i",playerid);
	}
	else if(Trucker2[playerid] == 2)//IN LS
	{
	    SetTimerEx("Truckerr2", 200, 0, "i",playerid);
	}
	else if(Trucker2[playerid] == 3)//IN LV
	{
	    SetTimerEx("Truckerr3", 200, 0, "i",playerid);
	}
	else if(Trucker2[playerid] == 4)//IN SF
	{
	    SetTimerEx("Truckerr4", 200, 0, "i",playerid);
	}
	else if(MedicCallTime[playerid] > 0)
	{
		GameTextForPlayer(playerid, "~w~~h~Reached destination", 5000, 1);
		MedicCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(MechanicCallTime[playerid] > 0)
	{
		GameTextForPlayer(playerid, "~w~~h~Reached destination", 5000, 1);
		MechanicCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	new lol = GetPlayerVehicleID(playerid);
	if(CP[playerid] == 34) // tow car
	{
	    if(IsTrailerAttachedToVehicle(lol) == 0) return SCM(playerid, COLOR_WHITE, "{FFFF00}You Have'nt Car Attacked");
	    if(TowAcc[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "You can't tow a vehicle so fast. You can tow a car / 2 minute! Wait here.");
		DisablePlayerCheckpoint(playerid);
		CP[playerid] = 0;
		TowAcc[playerid] = 1;
		new towedcar;
		towedcar = GetVehicleTrailer(GetPlayerVehicleID(playerid));
		SetVehicleToRespawn(towedcar);
		GivePlayerCash(playerid, 15000);
		SCM(playerid,COLOR_WHITE,"Good job! You got $15000 for towing this car! You can tow another car in 2 minutes!");
		Update(playerid, pCashx);
		SetTimerEx("TowAgain", 120000, 0, "i", playerid);
	}
	else if(CP[playerid] == 43) // disable point
	{
		CP[playerid] = 0;
	    DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid, COLOR_WHITE, "You have reached your destination.");
	}
	else if(BusinessRob[playerid] == 2)//Robbing1
	{
	    new cashr,
	        str[128],
	        rand = 180000 + random(70000);
	    if(PlayerInfo[playerid][pRobSkill] < 25)
	    {
	        cashr = 180000;
		}
	    else if(PlayerInfo[playerid][pRobSkill] > 24)
	    {
        		cashr = (50000 + rand);
		}
		else if(PlayerInfo[playerid][pRobSkill] > 59)
	    {
        	cashr = (100000 + rand);
		}
		else if(PlayerInfo[playerid][pRobSkill] > 109)
	    {
        	cashr = (150000 + rand);
		}
		else if(PlayerInfo[playerid][pRobSkill] > 199)
	    {
        	cashr = (200000 + rand);
		}
		else if(PlayerInfo[playerid][pRobSkill] > 300)
	    {
        	cashr = (250000 + rand);
		}
	    DisablePlayerCheckpoint(playerid);
		GivePlayerCash(playerid, cashr);
    	format(str, 128,"[ROB] Money Earned From Rob : $%s | Rob Time: %d Seconds", FormatNumber(cashr), RobTime[playerid]);
    	SendClientMessage(playerid, COLOR_GREEN, str);
    	BusinessRob[playerid] = 1;
		Update(playerid, pCashx);
		new rando = random(sizeof(gRandomRob2));
		SetPlayerCheckpoint(playerid, gRandomRob2[rando][0],gRandomRob2[rando][1],gRandomRob2[rando][2], 4.0);
	}
	else if(BusinessRob[playerid] == 1)//Robbing2
	{
	    new cashr,
	        str[128],
	        rand = 180000 + random(70000);
	    if(PlayerInfo[playerid][pRobSkill] < 25)
	    {
	        cashr = 180000;
		}
	    else if(PlayerInfo[playerid][pRobSkill] > 24)
	    {
        		cashr = (50000 + rand);
		}
		else if(PlayerInfo[playerid][pRobSkill] > 59)
	    {
        	cashr = (100000 + rand);
		}
		else if(PlayerInfo[playerid][pRobSkill] > 109)
	    {
        	cashr = (150000 + rand);
		}
		else if(PlayerInfo[playerid][pRobSkill] > 199)
	    {
        	cashr = (200000 + rand);
		}
		else if(PlayerInfo[playerid][pRobSkill] > 300)
	    {
        	cashr = (250000 + rand);
		}
		PlayerInfo[playerid][pRobTimes]++;
		PlayerInfo[playerid][pRobRem]--;
		Update(playerid, pRobTimesx);
		Update(playerid, pRobRemx);
	    DisablePlayerCheckpoint(playerid);
		GivePlayerCash(playerid, cashr);
    	format(str, 128,"[ROB] Money Earned From The Rob : $%s | Rob Time : %d Seconds", FormatNumber(cashr), RobTime[playerid]);
    	SendClientMessage(playerid, COLOR_GREEN, str);
    	BusinessRob[playerid] = 0;
		RobTime[playerid] = -1;
		Update(playerid, pCashx);
		if(PlayerInfo[playerid][pRobSkill] <= 5)
		{
			if(PlayerInfo[playerid][pRobRem] <= 0)
			{
				PlayerInfo[playerid][pRobSkill]++;
				if(PlayerInfo[playerid][pRobSkill] == 2)
				{
					PlayerInfo[playerid][pRobRem] = 34;
				}
				else if(PlayerInfo[playerid][pRobSkill] == 3)
				{
					PlayerInfo[playerid][pRobRem] = 49;
				}
				else if(PlayerInfo[playerid][pRobSkill] == 4)
				{
					PlayerInfo[playerid][pRobRem] = 89;
				}
				else if(PlayerInfo[playerid][pRobSkill] == 5)
				{
					PlayerInfo[playerid][pRobRem] = 99;
				}
				Update(playerid,pRobSkillx);
				Update(playerid,pRobRemx);
				format(string,sizeof(string),"Cngrats ! Your Skill Is Now %d !",PlayerInfo[playerid][pRobSkill]);
				SendClientMessage(playerid, COLOR_YELLOW, string);
			}
		}
	}
	else if(IsCollectingRubbish[playerid] > 0)//garbagejob
	{
	    if(IsAGarbageTruck(veh))
	    {
			if(IsCollectingRubbish[playerid] == 1)
			{
			    GarbageTime[playerid] += 1;
				TogglePlayerControllable(playerid, 0);
	        	DisablePlayerCheckpoint(playerid);
	        	SetPlayerCheckpoint(playerid, 2006.3785,2296.4165,10.8203,4.0);
	        	IsCollectingRubbish[playerid] = 2;
	        	new str2[128];
				format(str2,sizeof(str2),"~y~Collected Garbages : ~r~1~y~/~r~10");
				PlayerTextDrawSetString(playerid, gunoierr[playerid], str2);
			}
			else if(IsCollectingRubbish[playerid] == 2)
			{
			    GarbageTime[playerid] += 1;
				TogglePlayerControllable(playerid, 0);
	        	DisablePlayerCheckpoint(playerid);
	        	SetPlayerCheckpoint(playerid, 2208.1367,2327.6045,10.3855,4.0);
	        	IsCollectingRubbish[playerid] = 3;
	        	new str2[128];
				format(str2,sizeof(str2),"~y~Collected Garbages : ~r~2~y~/~r~10");
				PlayerTextDrawSetString(playerid, gunoierr[playerid], str2);
			}
			else if(IsCollectingRubbish[playerid] == 3)
			{
			    GarbageTime[playerid] += 1;//1
				TogglePlayerControllable(playerid, 0);
	        	DisablePlayerCheckpoint(playerid);
	        	SetPlayerCheckpoint(playerid, 2233.1001,2156.7620,10.3858,4.0);
	        	IsCollectingRubbish[playerid] = 4;
	        	new str2[128];
				format(str2,sizeof(str2),"~y~Collected Garbages : ~r~3~y~/~r~10");
				PlayerTextDrawSetString(playerid, gunoierr[playerid], str2);
			}
			else if(IsCollectingRubbish[playerid] == 4)
			{
			    GarbageTime[playerid] += 1;//2
				TogglePlayerControllable(playerid, 0);
	        	DisablePlayerCheckpoint(playerid);
	        	SetPlayerCheckpoint(playerid, 2188.8110,1769.0968,10.2364,4.0);
	        	IsCollectingRubbish[playerid] = 5;
	        	new str2[128];
				format(str2,sizeof(str2),"~y~Collected Garbages : ~r~4~y~/~r~10");
				PlayerTextDrawSetString(playerid, gunoierr[playerid], str2);
			}
			else if(IsCollectingRubbish[playerid] == 5)
			{
			    GarbageTime[playerid] += 1;//3
				TogglePlayerControllable(playerid, 0);
	        	DisablePlayerCheckpoint(playerid);
	        	SetPlayerCheckpoint(playerid, 2629.8022,1681.6798,10.3865,4.0);
	        	IsCollectingRubbish[playerid] = 6;
	        	new str2[128];
				format(str2,sizeof(str2),"~y~Collected Garbages : ~r~5~y~/~r~10");
				PlayerTextDrawSetString(playerid, gunoierr[playerid], str2);
			}
			else if(IsCollectingRubbish[playerid] == 6)
			{
			    GarbageTime[playerid] += 1;//4
				TogglePlayerControllable(playerid, 0);
	        	DisablePlayerCheckpoint(playerid);
	        	SetPlayerCheckpoint(playerid, 2183.8679,1498.5260,10.3874,4.0);
	        	IsCollectingRubbish[playerid] = 7;
	        	new str2[128];
				format(str2,sizeof(str2),"~y~Collected Garbages : ~r~6~y~/~r~10");
				PlayerTextDrawSetString(playerid, gunoierr[playerid], str2);
			}
			else if(IsCollectingRubbish[playerid] == 7)
			{
                GarbageTime[playerid] += 1;//5
				TogglePlayerControllable(playerid, 0);
	        	DisablePlayerCheckpoint(playerid);
	        	SetPlayerCheckpoint(playerid, 1737.6616,1250.0906,10.2406,4.0);
	        	IsCollectingRubbish[playerid] = 8;
	        	new str2[128];
				format(str2,sizeof(str2),"~y~Collected Garbages : ~r~7~y~/~r~10");
				PlayerTextDrawSetString(playerid, gunoierr[playerid], str2);
			}
			else if(IsCollectingRubbish[playerid] == 8)
			{
			    GarbageTime[playerid] += 1;//6
				TogglePlayerControllable(playerid, 0);
	        	DisablePlayerCheckpoint(playerid);
	        	SetPlayerCheckpoint(playerid, 2101.1743,2649.2373,10.3865,4.0);
	        	IsCollectingRubbish[playerid] = 9;
	        	new str2[128];
				format(str2,sizeof(str2),"~y~Collected Garbages : ~r~8~y~/~r~10");
				PlayerTextDrawSetString(playerid, gunoierr[playerid], str2);
			}
			else if(IsCollectingRubbish[playerid] == 9)
			{
			    GarbageTime[playerid] += 1;//7
				TogglePlayerControllable(playerid, 0);
	        	DisablePlayerCheckpoint(playerid);
	        	SetPlayerCheckpoint(playerid, 2375.6013,2754.8406,10.3869,4.0);
	        	IsCollectingRubbish[playerid] = 10;
	        	new str2[128];
				format(str2,sizeof(str2),"~y~Collected Garbages : ~r~9~y~/~r~10");
				PlayerTextDrawSetString(playerid, gunoierr[playerid], str2);
			}
			else if(IsCollectingRubbish[playerid] == 10)
			{
   				GarbageTime[playerid] += 1;//1
				TogglePlayerControllable(playerid, 0);
	        	DisablePlayerCheckpoint(playerid);
	        	SetPlayerCheckpoint(playerid, 2523.8540,2818.3945,10.3907,4.0);
	        	IsCollectingRubbish[playerid] = 20;
	        	new str2[128];
				format(str2,sizeof(str2),"~y~Collected Garbages : ~r~10~y~/~r~10");
				PlayerTextDrawSetString(playerid, gunoierr[playerid], str2);
			}

			else if(IsCollectingRubbish[playerid] == 20)
	   		{
	        	DisablePlayerCheckpoint(playerid);
	        	PlayerTextDrawHide(playerid, gunoierr[playerid]);
				new randgarba = 70000 + random(10000);
				format(string,sizeof(string),"{FFFF00}You received %s$ for your work.",FormatNumber(randgarba));
				SCM(playerid,COLOR_WHITE,string);
				GivePlayerCash(playerid,randgarba);
	        	IsCollectingRubbish[playerid] = 0;
	        	PlayerInfo[playerid][pGarbageTime] = 0;
	        	Gas[veh] = GasMax;
	        	vehEngine[veh] = 0;
		    	GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
		    	SetVehicleParamsEx(veh,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
		    	SetPVarInt(playerid, "Engine", 0);
	        	SetVehicleToRespawn(veh);
				Update(playerid, pCashx);
			}
		}
	}
	else
	{
		switch (gPlayerCheckpointStatus[playerid])
		{
			case CHECKPOINT_LOCATE:
		    {
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
			}
		}
	}
	return 1;
}


public OnPlayerSelectedMenuRow(playerid, row)
{
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	new Menu:CurrentMenu = GetPlayerMenu(playerid);
	if(!IsValidMenu(CurrentMenu)) return 1;
	ShowMenuForPlayer(CurrentMenu, playerid);
	TogglePlayerControllable(playerid,1);
	return 1;
}

public SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerCheckpoint(i,allx,ally,allz, radi);
			if (num != 255)
			{
				gPlayerCheckpointStatus[i] = num;
			}
		}
	}
	return 1;
}

public SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(gTeam[i] == 2)
			{
				SetPlayerCheckpoint(i,allx,ally,allz, radi);
			}
		}
	}
	return 1;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{

}
new Float:LastPX[MAX_PLAYERS],
    Float:LastPY[MAX_PLAYERS],
    Float:LastPZ[MAX_PLAYERS];
forward AdaugaMasina(playerid);
public AdaugaMasina(playerid)
{
	AddStaticVehicle(573, LastPX[playerid], LastPY[playerid], LastPZ[playerid], 208.9064, -1, -1);
	return 1;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	new string[500],
		vehicleid = GetPlayerVehicleID(playerid);
	if( newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_PASSENGER)
	{
	    StopAudioStreamForPlayer(playerid);
	}
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		PlayerTextDrawHide(playerid, Fuell[playerid]);
		PlayerTextDrawHide(playerid, Speedd[playerid]);
		PlayerTextDrawHide(playerid, Odom[playerid]);
		PlayerTextDrawHide(playerid, carlocked[playerid]);
		if(JCurier[playerid][0] > 0)
		{
			if(JCurier[playerid][1] > 0)
			{
				DisableRemoteVehicleCollisions(playerid, 0);
			}
			DestroyVehicle(JCurier[playerid][2]);
			JCurier[playerid][0] = -1;
			JCurier[playerid][1] = -1;
			JCurier[playerid][2] = -1;
			JCurier[playerid][3] = 0;
			SCM(playerid, COLOR_ERROR, "Job Failed ! You Got Out From The Vehicle !");
			DisablePlayerCheckpoint(playerid);
		}
		if(IsCollectingRubbish[playerid] > 0)
		{
		    DisablePlayerCheckpoint(playerid);
		    PlayerInfo[playerid][pGarbageTime] = 0;
		    IsCollectingRubbish[playerid] = 0;
		   	PlayerTextDrawHide(playerid, gunoierr[playerid]);
		}
		if(IsWorkingCariera[playerid] >= 1)
		{
			DisablePlayerCheckpoint(playerid);
			DestroyVehicle(MasinaCariera[playerid]);
			IsWorkingCariera[playerid] = 0;
			SendClientMessage(playerid, -1, "Work Failed ! You Left The Vehicle");
		}
		if(pizzaj[playerid] == 1)
		{
			failpizza[playerid] = 120;
		}
		if(HireCar[playerid] != -1)
		{
		    timerrent[playerid] = 900;
		}
		if(RentVeh[playerid] != -1)
		{
			VehicleRent[RentVeh[playerid]] = -1;
			RentTime[playerid] = 0;
			TotalTimeRent[playerid] = 0;
			RentVeh[playerid] = -1;
			KillTimer(RentTimerr[playerid]);
			PlayerTextDrawHide(playerid, RentCar[playerid]);
		}
		if(farmerc[playerid] == 1)
		{
			farmerc[playerid] = 0;
			farmertime[playerid] = 1;
			PlayerTextDrawHide(playerid, farmjob[playerid]);
			PlayerTextDrawHide(playerid, farmbox[playerid]);
			PlayerTextDrawHide(playerid, farmtime[playerid]);
			PlayerTextDrawHide(playerid, farmspeed[playerid]);
			PlayerTextDrawHide(playerid, farmwanted[playerid]);
			KillTimer(timerfarmm[playerid]);
		}
		if(CarJacker[playerid] > 0)
		{
		    DisablePlayerCheckpoint(playerid);
		    CarJacker[playerid] = 0;
		    JackAcc[playerid] = 0;
		}
		if(Trucker2[playerid] == 1)
		{
			Trucker2[playerid] = 0;
 			DisablePlayerCheckpoint(playerid);
		}
		if(Trucker[playerid] >= 1)
		{
		   	RemovePlayerFromVehicle(playerid);
   			restruck[playerid] = SetTimerEx("RespawnTruck", 1, 0, "i",playerid);
  			RemovePlayerFromVehicle(playerid);
		   	Trucker[playerid] = 0;
	        Trucker2[playerid] = 0;
	        DestroyVehicle(viddd[playerid]);
      		viddd[playerid] = 0;
      		SetVehicleToRespawn(TruckID[playerid]);
      		TruckID[playerid] = 0;
      		DisablePlayerCheckpoint(playerid);
    		restruck[playerid] = SetTimerEx("RespawnTruck", 1, 0, "i",playerid);
		}
		if(CP[playerid] == 340 || CP[playerid] == 341 || CP[playerid] == 342 || CP[playerid] == 343 || CP[playerid] == 344 || CP[playerid] == 345 || CP[playerid] == 346 || CP[playerid] == 347)
		{
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
		}
		if(CP[playerid] == 34)
		{
		    TowAcc[playerid] = 1;
		    CP[playerid] = 0;
		    DisablePlayerCheckpoint(playerid);
		    SetTimerEx("TowAgain", 120000, 0, "i", playerid);
		}
	    if(TransportDuty[playerid] > 0)
		{
		    if(TransportDuty[playerid] == 1)
			{
		        TaxiDrivers -= 1;
			}
			TransportDuty[playerid] = 0;
			format(string, sizeof(string), "* You are now Off Duty and earned $%d.", TransportMoney[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, TransportMoney[playerid]);
			ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
		}
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
		    if(IsPlayerConnected(TransportDriver[playerid]))
			{
			    new sendername[30],giveplayer[30];
			    GetPlayerName(playerid,sendername,sizeof(sendername));
		    	GetPlayerName(TransportDriver[playerid],giveplayer,sizeof(giveplayer));
			    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
			    TransportTime[TransportDriver[playerid]] = 0;
			    TransportCost[TransportDriver[playerid]] = 0;
			    format(string, sizeof(string), "~w~The ride cost~n~~r~~h~$%d",TransportCost[playerid]);
			    GameTextForPlayer(playerid, string, 5000, 1);
			    format(string, sizeof(string), "~w~Passenger left the taxi~n~~g~Earned $%d",TransportCost[playerid]);
			    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
			    PlayerInfo[playerid][pCommands]++;
			    Update(playerid,pCommandsx);
			    new str[256];
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCommands],PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
			    format(string, sizeof(string), "# %s gets off the cab and pays $%s to %s.",sendername,FormatNumber(TransportCost[playerid]),giveplayer);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				GivePlayerCash(playerid, -TransportCost[playerid]);
				TransportCost[playerid] = 0;
				TransportTime[playerid] = 0;
				TransportDriver[playerid] = 999;
				Update(playerid, pCashx);
			}
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}
	if(newstate == PLAYER_STATE_WASTED)
	{
	    StopAudioStreamForPlayer(playerid);
	    if(PlayerInfo[playerid][pWantedLevel] >= 1)
		{
		    new copkill=0, price = PlayerInfo[playerid][pWantedLevel] * 1000, str23[MAX_STRING], totalprice = price / 2, string3[256], string4[256], lastname[30];
		    if((PlayerInfo[playerid][pMember] != 1 && PlayerInfo[playerid][pMember] != 2 && PlayerInfo[playerid][pMember] != 3 && PlayerInfo[playerid][pMember] != 8))
			{
			    for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
					{
					    if(IsACop(i) && CrimInRange(50.0, playerid,i) && OnDuty[i] == 1)
						{
							if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
							{
								new streap[MAX_PLAYER_NAME];
								GetPlayerName(playerid, streap, sizeof(streap));
								GetPlayerName(i, lastname, sizeof(lastname));
								format(string3, sizeof(string3), "You Recieved $%d For Arresting Suspect %s.", totalprice, streap);
								SendClientMessage(i, COLOR_DBLUE, string3);
								GameTextForPlayer(i, "Running Suspect bonus!", 5000, 1);
								ConsumingMoney[i] = 1;
								PlayerInfo[playerid][pCommands]++;
								Update(playerid,pCommandsx);
								new str[256];
				                mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCommands],PlayerInfo[playerid][pNormalName]);
				                mysql_tquery(SQL,str,"","");
								GivePlayerCash(i, price);
								Update(i, pCashx);
								new idfac = PlayerInfo[i][pMember];
								DynamicFactions[idfac][fBank] += totalprice;
								mysql_format(SQL,str23,sizeof(str23),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'", DynamicFactions[idfac][fBank], idfac);
								mysql_tquery(SQL,str23,"","");
								PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
								copkill = 1;
							}
						}
					}
				}
				if(copkill == 1)
				{
					PlayerInfo[playerid][pJailTime] = (PlayerInfo[playerid][pWantedLevel])*(300);
					format(string4, sizeof(string4), "Because you got killed, you lost $%s and you will be taken to jail. You are no longer a criminal.", FormatNumber(price));
					SendClientMessage(playerid, COLOR_LIGHTRED, string4);
					PlayerInfo[playerid][pJailed] = 1;
					PlayerInfo[playerid][pWantedLevel] = 0;
					PlayerInfo[playerid][pWantedDeaths] += 1;
					WantedPoints[playerid] = 0;
					GivePlayerCash(playerid, - price);
					new streap[30];
					GetPlayerName(playerid, streap, sizeof(streap));
					format(string3, sizeof(string3), "[Dispatch]: %s has been killed by No One and will be in jail for %d seconds, over.",streap,PlayerInfo[playerid][pJailTime]);
					SendTeamMessage(1, COLOR_LIGHTBLUE, string3);
					SendTeamMessage(2, COLOR_LIGHTBLUE, string3);
					SendTeamMessage(3, COLOR_LIGHTBLUE, string3);
					SendTeamMessage(8, COLOR_LIGHTBLUE, string3);
					Update(playerid,pWantedLevelx);
					Update(playerid,pJailedx);
					Update(playerid,pJailTimex);
					ClearCrime(playerid);
					TogglePlayerControllable(playerid, 0);
					SetTimerEx("UnFreezeStation", 1000, false, "i", playerid);
				}
			}
		}
	}
	if(newstate == PLAYER_STATE_PASSENGER) // TAXI & BUSSES
	{
	    new name[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, name, sizeof(name));
	    if(vehRadio[vehicleid] > 0)
	    {
	        if(vehRadio[vehicleid] == 1)
	    	{
	    		StopAudioStreamForPlayer(playerid);
                PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=151778");
			}
			else if(vehRadio[vehicleid] == 2)
			{
			    StopAudioStreamForPlayer(playerid);
                PlayAudioStreamForPlayer(playerid, "http://stream.profm.ro:8012/profm.mp3");
			}
			else if(vehRadio[vehicleid] == 3)
			{
			    StopAudioStreamForPlayer(playerid);
                PlayAudioStreamForPlayer(playerid, "http://radiotaraf.no-ip.biz:7100");
			}
			else if(vehRadio[vehicleid] == 4)
			{
			    StopAudioStreamForPlayer(playerid);
                PlayAudioStreamForPlayer(playerid, "http://radiobandit.mine.nu:8000");
			}
			else if(vehRadio[vehicleid] == 5)
			{
			    StopAudioStreamForPlayer(playerid);
                PlayAudioStreamForPlayer(playerid, "http://radiohotstyle.dyndns.biz:8000");
			}
			else if(vehRadio[vehicleid] == 6)
			{
			    StopAudioStreamForPlayer(playerid);
                PlayAudioStreamForPlayer(playerid, "http://www.radiodiz.com/livediz.m3u");
			}
			else if(vehRadio[vehicleid] == 7)
			{
			    StopAudioStreamForPlayer(playerid);
                PlayAudioStreamForPlayer(playerid, "http://necenzurat.radiotequila.ro:7000");
			}
			else if(vehRadio[vehicleid] > 7)
			{
			    StopAudioStreamForPlayer(playerid);
			}
		}
		foreach(Player,i)
	    {
            if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0)
            {
                if(GetPlayerCash(playerid) < TransportValue[i])
                {
                    format(string, sizeof(string), "* You need $%d To Enter .", TransportValue[i]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					RemovePlayerFromVehicle(playerid);
                }
                else
                {
                    if(TransportDuty[i] == 1)
                    {
                        format(string, sizeof(string), "* You paid $%d to the Taxi Driver.", TransportValue[i]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Passenger %s has entered your Taxi.", name);
						SendClientMessage(i, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pCommands]++;
						Update(playerid,pCommandsx);
						new str[256];
				        mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCommands],PlayerInfo[playerid][pNormalName]);
			            mysql_tquery(SQL,str,"","");
						TransportTime[i] = 1;
                    	TransportTime[playerid] = 1;
                    	TransportCost[playerid] = TransportValue[i];
                    	TransportCost[i] = TransportValue[i];
                    	TransportDriver[playerid] = i;
                    	PlayerInfo[i][pOrders] += 1;
                    	Update(i, pOrdersx);
                    }
                    else if(TransportDuty[i] == 2)
                    {
                        format(string, sizeof(string), "* You paid $%d to the Bus Driver.", TransportValue[i]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Passenger %s has entered your Bus.", name);
						SendClientMessage(i, COLOR_LIGHTBLUE, string);
                    }
					GivePlayerCash(playerid, - TransportValue[i]);
					TransportMoney[i] += TransportValue[i];
					Update(playerid, pCashx);
                }
			}
	    }
        new gun,tmp;
        GetPlayerWeaponData(playerid,5,gun,tmp);
        #pragma unused tmp
        if(gun)SetPlayerArmedWeapon(playerid,gun);
        else SetPlayerArmedWeapon(playerid,0);
	    return 1;
	}
    if(oldstate == PLAYER_STATE_DRIVER)
    {
        StopAudioStreamForPlayer(playerid);
		if((GetTickCount()-PlayerEnterTime[playerid]) < 220)
        {
			new anticar[300];
			format(anticar, sizeof(anticar), "[Cheating] %s (%d, level %d) May Be Using Vehicle Teleport (Car Circle, Floating Cars etc).",GetName(playerid),playerid,PlayerInfo[playerid][pLevel]);
        	ABroadCast(COLOR_RED,anticar,1);
		}
		return 1;
    }
	if(newstate == PLAYER_STATE_DRIVER)
	{
 		if(vehRadio[vehicleid] == 1)
   		{
   			StopAudioStreamForPlayer(playerid);
      		PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=151778");
		}
		else if(vehRadio[vehicleid] == 2)
		{
  			StopAudioStreamForPlayer(playerid);
     		PlayAudioStreamForPlayer(playerid, "http://stream.profm.ro:8012/profm.mp3");
		}
		else if(vehRadio[vehicleid] == 3)
		{
  			StopAudioStreamForPlayer(playerid);
     		PlayAudioStreamForPlayer(playerid, "http://radiotaraf.no-ip.biz:7100");
		}
		else if(vehRadio[vehicleid] == 4)
		{
  			StopAudioStreamForPlayer(playerid);
     		PlayAudioStreamForPlayer(playerid, "http://radiobandit.mine.nu:8000");
		}
		else if(vehRadio[vehicleid] == 5)
		{
			StopAudioStreamForPlayer(playerid);
   			PlayAudioStreamForPlayer(playerid, "http://radiohotstyle.dyndns.biz:8000");
		}
		else if(vehRadio[vehicleid] == 6)
		{
  			StopAudioStreamForPlayer(playerid);
     		PlayAudioStreamForPlayer(playerid, "http://www.radiodiz.com/livediz.m3u");
		}
		else if(vehRadio[vehicleid] == 7)
		{
  			StopAudioStreamForPlayer(playerid);
     		PlayAudioStreamForPlayer(playerid, "http://necenzurat.radiotequila.ro:7000");
		}
		else if(vehRadio[vehicleid] > 7)
		{
  			StopAudioStreamForPlayer(playerid);
		}
		new newcar = GetPlayerVehicleID(playerid);
	    if(!IsABoat(newcar))
	    {
			PlayerEnterTime[playerid] = GetTickCount();
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		new engine,lights,alarm,doors,bonnet,boot,objective;
	    if(vehEngine[newcar] == 0)
	    {
			GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
		    SetVehicleParamsEx(newcar,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
		}
		else if(vehEngine[newcar] == 1)
		{
			GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(newcar,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
		}
		if(Gas[newcar] == 0)
		{
	        TogglePlayerControllable(playerid, 0);
	        NoFuel[playerid] = 1;
		}
		if(Trucker[playerid] >= 1)
		{
		    KillTimer(restruck[playerid]);
		}
		if(IsABoat(newcar))
		{
		    if(PlayerInfo[playerid][pBoatLic] < 1)
			{
                if(TakingLesson[playerid] == 2) { }
                else {
			    SendClientMessage(playerid,COLOR_GREY, "You don't have a boat license.");
			    RemovePlayerFromVehicle(playerid);
			    TogglePlayerControllable(playerid, 1); }
			}
		}
		else if(IsAPlane(newcar))
		{
		    if(PlayerInfo[playerid][pFlyLic] < 1)
			{
			    if(TakingLesson[playerid] == 2) { }
			    else {
			    SendClientMessage(playerid, COLOR_GREY, "You don't have a flying license.");
			    RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1); }
			}
		}
		else
		{
			if(PlayerInfo[playerid][pCarLic] < 1)
			{
			    if(IsABike(newcar) || IsAPlane(newcar) || GetVehicleModel(newcar) == 462) { }
			    else
			    {
					if(TakingLesson[playerid] == 1) { }
					else {
				 	SendClientMessage(playerid,COLOR_GREY, "You don't have a driving license.");
                    RemovePlayerFromVehicle(playerid);
                    TogglePlayerControllable(playerid, 1);
					SetTimerEx("UnFreezeStation", 500, 0, "i", playerid);
				  }
				}
			}
		}//Done with car check
		if(IsABike(newcar))
		{
            TogglePlayerControllable(playerid, 1);
            vehEngine[vehicleid] = 1;
            GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		    SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
		}
		if(IsACopCar(newcar))
		{
		    if(IsACop(playerid) && OnDuty[playerid] == 1) { }
		    else { RemovePlayerFromVehicle(playerid); SendClientMessage(playerid,COLOR_WHITE, "{999999}You Are'nt A On-Duty COP"); }
		}
		if(newcar == Copcar[6] || newcar == Copcar[7] || newcar == Copcar[18] || newcar == Copcar[19])
		{
		    if(IsACop(playerid))
		    {
		        if(OnDuty[playerid] == 1)
		        {
		        	if(PlayerInfo[playerid][pRank] < 3)
		        	{
		        		RemovePlayerFromVehicle(playerid);
		        		SendClientMessage(playerid,COLOR_WHITE, "{999999}You don't have rank 3.");
		        	}
				}
				else
				{
				    SendClientMessage(playerid,COLOR_WHITE, "{999999}You Are'nt A On-Duty COP");
				}
			}
		}
		if(newcar == Copcar[1] || newcar == Copcar[2] || newcar == Copcar[3] || newcar == Copcar[14] || newcar == Copcar[29])
		{
		    if(IsACop(playerid))
		    {
		        if(OnDuty[playerid] == 1)
		        {
			        if(PlayerInfo[playerid][pRank] < 2)
			        {
			        	RemovePlayerFromVehicle(playerid);
			        	SendClientMessage(playerid,COLOR_WHITE, "{999999}You don't have rank 2.");
			        }
		        }
				else
				{
				    SendClientMessage(playerid,COLOR_WHITE, "{999999}You Are'nt A On-Duty COP");
				}
			}
		}
		if(newcar == Copcar[30] || newcar == Copcar[19])
		{
		    if(IsACop(playerid))
		    {
		        if(OnDuty[playerid] == 1)
		        {
			        if(PlayerInfo[playerid][pRank] < 4)
			        {
			        	RemovePlayerFromVehicle(playerid);
			        	SendClientMessage(playerid,COLOR_WHITE, "{999999}You don't have rank 4.");
			        }
		        }
				else
				{
				    SendClientMessage(playerid,COLOR_WHITE, "{999999}You Are'nt A On-Duty COP");
				}
			}
		}
		if(IsAFbiCar(newcar))
		{
		    if(IsACop(playerid)) { }
		    else { RemovePlayerFromVehicle(playerid); SendClientMessage(playerid,COLOR_WHITE, "{999999}You are not a Cop. !"); }
		}
		if(IsALVPDCar(newcar))
		{
		    if(IsACop(playerid)) { }
		    else { RemovePlayerFromVehicle(playerid); SendClientMessage(playerid,COLOR_WHITE, "{999999}You are not a Cop. !"); }
		}
		if(IsANgCar(newcar))
		{
		    if(IsACop(playerid)) { }
		    else { RemovePlayerFromVehicle(playerid); SendClientMessage(playerid,COLOR_WHITE, "{999999}You are not a Cop."); }
		}
		if(IsAGovCar(newcar))
		{
		    if(PlayerInfo[playerid][pMember] == 7) { }
		    else { RemovePlayerFromVehicle(playerid); SendClientMessage(playerid,COLOR_WHITE, "{999999}You Are'nt A Government Member"); }
		}
		else if(IsAnAmbulance(newcar))
		{
		    if(PlayerInfo[playerid][pMember] == 14) { }
		    else { RemovePlayerFromVehicle(playerid); SendClientMessage(playerid,COLOR_WHITE, "{999999}You are not a Paramedic.");}
		}
		if(IsAGarbageTruck(newcar))//garbagejob
		{
		    if(PlayerInfo[playerid][pJob] == 10)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "INFO: You can collect rubbish for a pay check.");
				SendClientMessage(playerid, COLOR_WHITE, "INFO: Type /collect to get started");
			}
			else
			{
   				SendClientMessage(playerid, COLOR_WHITE, "You are not a Garbage Collector.");
			    RemovePlayerFromVehicle(playerid);
			    TogglePlayerControllable(playerid, 1);
			}
		}

		/*if(IsACoal(playerid, newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 16)
		    {
		        if(InCoal[playerid] == 0)
		        {
		            InCoal[playerid] = 1;
		            CoalCar[playerid] = GetPlayerVehicleID(playerid);
					new rand = random(5) + 1;
					new Float:X, Float:Y, Float:Z;
     				GetVehiclePos(CoalCar[playerid], X, Y, Z);
					LastPZ[playerid] = Z;
					LastPY[playerid] = Y;
					LastPX[playerid] = X;
					SetTimerEx("AdaugaMasina", 3000, false, "i", playerid);
					if(rand == 1)
					{
					    DisablePlayerCheckpoint(playerid);
					    SetPlayerCheckpoint(playerid, -923.2286,2033.2859,61.5645, 5.0);
					    SCM(playerid, COLOR_WHITE, "{FEC3AC}Go To Checkpoints To Deliver The Coals");
					}
					else if(rand == 2)
					{
					    DisablePlayerCheckpoint(playerid);
					    SetPlayerCheckpoint(playerid, -2451.5813,2301.6731,4.7083, 5.0);
					    SCM(playerid, COLOR_WHITE, "{FEC3AC}Go To Checkpoints To Deliver The Coals");
					}
					else if(rand == 3)
					{
                        DisablePlayerCheckpoint(playerid);
                        SetPlayerCheckpoint(playerid, -2118.3369,-168.2051,35.0474, 5.0);
                        SCM(playerid, COLOR_WHITE, "{FEC3AC}Go To Checkpoints To Deliver The Coals");
					}
					else if(rand == 4)
					{
                        DisablePlayerCheckpoint(playerid);
                        SetPlayerCheckpoint(playerid, 2195.2310,-1977.5913,13.2811, 5.0);
                        SCM(playerid, COLOR_WHITE, "{FEC3AC}Go To Checkpoints To Deliver The Coals");
					}
					else if(rand == 5)
					{
                        DisablePlayerCheckpoint(playerid);
                        SetPlayerCheckpoint(playerid, 2748.8074,-2441.9888,13.3719, 5.0);
                        SCM(playerid, COLOR_WHITE, "{FEC3AC}Go To Checkpoints To Deliver The Coals");
					}
					else if(rand == 6)
					{
					    DisablePlayerCheckpoint(playerid);
                        SetPlayerCheckpoint(playerid, 2716.0535,853.1257,10.6243, 5.0);
                        SCM(playerid, COLOR_WHITE, "{FEC3AC}Go To Checkpoints To Deliver The Coals");
					}
		        }
		    }
		    else
		    {
		        SendClientMessage(playerid, COLOR_WHITE, "{999999}You are not a Coal Delivery Man.");
			    RemovePlayerFromVehicle(playerid);
			    TogglePlayerControllable(playerid, 1);
		    }
		}*/
		if(IsATruck(newcar))
		{
			if(PlayerInfo[playerid][pJob] == 14)
			{
			    if(Trucker2[playerid] == 0 && viddd[playerid] == 0)
		    	{
		    		Trucker2[playerid] = 1;
		    		SetPlayerCheckpoint(playerid,-54.6322,-1461.7084,6.8239,5.0);
		    		SendClientMessage(playerid, COLOR_WHITE, "{FEC3AC}Go to checkpoint to start work.");
		    		TruckID[playerid] = GetPlayerVehicleID(playerid);
				}
				return 1;
    		}
    		else
			{
   				SendClientMessage(playerid, COLOR_WHITE, "{999999}You are not a Trucker.");
			    RemovePlayerFromVehicle(playerid);
			    TogglePlayerControllable(playerid, 1);
			}
		}

		if(newcar == bus[1] || newcar == bus[2] || newcar == bus[3] || newcar == bus[4] || newcar == bus[5] || newcar == bus[6] || newcar == bus[7] || newcar == bus[8] || newcar == bus[9] || newcar == bus[10] || newcar == bus[11] || newcar == bus[12] || newcar == bus[13]
		|| newcar == bus[14] || newcar == bus[15] || newcar == bus[16])
		{
		    if(PlayerInfo[playerid][pJob] == 7)
			{
			    PlayerTextDrawShow(playerid, BusJob[playerid]);
			    format(string,sizeof(string),"~w~CHECKPOINTS: ~r~0~w~/~r~59");
				PlayerTextDrawSetString(playerid, BusCheck[playerid], string);
				PlayerTextDrawShow(playerid, BusCheck[playerid]);
				SendClientMessage(playerid, COLOR_WHITE, "Go To The CHeckpoint .");
				busc[playerid] = 1;
				CheckBus[playerid] = 1;
				SetPlayerRaceCheckpoint(playerid, 0, 1693.2972,-2197.6602,13.4714,1941.3706,-2169.2083,13.4851,4.0);
			}
		    else
			{
		        SendClientMessage(playerid,COLOR_WHITE,"{999999}You are not a Bus Driver.");
		        RemovePlayerFromVehicle(playerid);
		    }
		}
		if(newcar == pizza[1] || newcar == pizza[2] || newcar == pizza[3] || newcar == pizza[4] || newcar == pizza[5] || newcar == pizza[6] || newcar == pizza[7] || newcar == pizza[8] || newcar == pizza[9] || newcar == pizza[10] || newcar == pizza[11] || newcar == pizza[12] || newcar == pizza[13] || newcar == pizza[14])
		{
		    if(PlayerInfo[playerid][pJob] == 5) { failpizza[playerid] = -1; }
		    else
			{
		        SendClientMessage(playerid,COLOR_WHITE,"{999999}You are not a Pizza Boy.");
		        RemovePlayerFromVehicle(playerid);
		    }
		}
		if(newcar == towcar[1] || newcar == towcar[2] || newcar == towcar[3] || newcar == towcar[4] || newcar == towcar[5])
		{
		    if(PlayerInfo[playerid][pJob] == 8) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_WHITE,"{999999}You are not a mechanic.");
		        RemovePlayerFromVehicle(playerid);
		    }
		}
		if(newcar == taxic[1] || newcar == taxic[2] || newcar == taxic[3] || newcar == taxic[4] || newcar == taxic[5] || newcar == taxic[6] || newcar == taxic[7] || newcar == taxic[8] || newcar == taxic[9] || newcar == taxic[10])
		{
		    if(PlayerInfo[playerid][pMember] == 13||PlayerInfo[playerid][pLeader] == 13) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_WHITE,"{999999}You are not a Los Santos Taxi member.");
		        RemovePlayerFromVehicle(playerid);
		    }
		}
		if(newcar == taxic[6] || newcar == taxic[7])
		{
		    if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
		    {
				if(PlayerInfo[playerid][pRank] > 2) { }
			    else
				{
			        SendClientMessage(playerid,COLOR_WHITE,"{999999}You don't have rank 3.");
			        RemovePlayerFromVehicle(playerid);
			    }
			}
			else
			{
		        SendClientMessage(playerid,COLOR_WHITE,"{999999}You are not a Los Santos Taxi member or you don't have rank 3.");
		        RemovePlayerFromVehicle(playerid);
		    }
		}
		if(newcar == Aztecasc[1] || newcar == Aztecasc[2] || newcar == Aztecasc[3] || newcar == Aztecasc[4] || newcar == Aztecasc[5] || newcar == Aztecasc[6] || newcar == Aztecasc[7] || newcar == Aztecasc[8] || newcar == Aztecasc[9] || newcar == Aztecasc[10] || newcar == Aztecasc[11]
		|| newcar == Aztecasc[12] || newcar == Aztecasc[13] || newcar == Aztecasc[14])
		{
		    if(PlayerInfo[playerid][pMember] == 4||PlayerInfo[playerid][pLeader] == 4) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_WHITE,"{999999}You are not a Los Aztecas member.");
		        RemovePlayerFromVehicle(playerid);
		    }
		}
		if(newcar == Grovec[1] || newcar == Grovec[2] || newcar == Grovec[3] || newcar == Grovec[4] || newcar == Grovec[5] || newcar == Grovec[6] || newcar == Grovec[7] || newcar == Grovec[8] || newcar == Grovec[9] || newcar == Grovec[10] || newcar == Grovec[11] || newcar == Grovec[12])
		{
		    if(PlayerInfo[playerid][pMember] == 5||PlayerInfo[playerid][pLeader] == 5) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_WHITE,"{999999}You are not a Grove Street member.");
		        RemovePlayerFromVehicle(playerid);
		    }
		}
		if(newcar == Vagosc[1] || newcar == Vagosc[2] || newcar == Vagosc[3] || newcar == Vagosc[4] || newcar == Vagosc[5] || newcar == Vagosc[6]
		 || newcar == Vagosc[7] || newcar == Vagosc[8] || newcar == Vagosc[9] || newcar == Vagosc[10] || newcar == Vagosc[11])
		{
		    if(PlayerInfo[playerid][pMember] == 6||PlayerInfo[playerid][pLeader] == 6) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_WHITE,"{999999}You are not a Los Vagos member.");
		        RemovePlayerFromVehicle(playerid);
		    }
		}
		if(newcar == Ballasc[1] || newcar == Ballasc[2] || newcar == Ballasc[3] || newcar == Ballasc[4] || newcar == Ballasc[5] || newcar == Ballasc[6]
		 || newcar == Ballasc[7] || newcar == Ballasc[8] || newcar == Ballasc[9] || newcar == Ballasc[10] || newcar == Ballasc[11] || newcar == Ballasc[12] || newcar == Ballasc[13] || newcar == Ballasc[14])
		{
		    if(PlayerInfo[playerid][pMember] == 10||PlayerInfo[playerid][pLeader] == 10) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_WHITE,"{999999}You are not a Ballas member.");
		        RemovePlayerFromVehicle(playerid);
		    }
		}
		if(newcar == thea[1] || newcar == thea[2] || newcar == thea[3] || newcar == thea[4] || newcar == thea[5] || newcar == thea[6] || newcar == thea[7] || newcar == thea[8] || newcar == thea[9] || newcar == thea[10] || newcar == thea[11]
  		 || newcar == thea[12] || newcar == thea[13] || newcar == thea[14] || newcar == thea[15] || newcar == thea[16])
		{
		    if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) { }
		    else
			{
		        SendClientMessage(playerid, COLOR_WHITE,"{999999}You are not a Hitman.");
		        RemovePlayerFromVehicle(playerid);
		    }
		}
		if(newcar == helpercars[1] || newcar == helpercars[2] || newcar == helpercars[3] || newcar == helpercars[4] || newcar == helpercars[5])
		{
		    if(PlayerInfo[playerid][pHelper] >= 1) { }
		    else
			{
		        SendClientMessage(playerid, COLOR_WHITE,"{999999}You are not a Helper.");
		        RemovePlayerFromVehicle(playerid);
		    }
		}
		if(newcar == admincars[1] || newcar == admincars[2] || newcar == admincars[3] || newcar == admincars[4] || newcar == admincars[5])
		{
		    if(PlayerInfo[playerid][pAdmin] >= 1) { }
		    else
			{
		        SendClientMessage(playerid, COLOR_WHITE,"{999999}You are not a Admin.");
		        RemovePlayerFromVehicle(playerid);
		    }
		}
		if(newcar == si[1] || newcar == si[2] || newcar == si[3] || newcar == si[4] || newcar == si[5] || newcar == si[6] || newcar == si[7] || newcar == si[8] || newcar == si[9] || newcar == si[10] || newcar == si[11] || newcar == si[12] || newcar == si[13])
		{
		    if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12 || TakingLesson[playerid] == 2) { }
		    else
			{
		        SendClientMessage(playerid, COLOR_WHITE,"{999999}You are not a School Instructors or your don't have active leasson.");
		        RemovePlayerFromVehicle(playerid);
		    }
		}
		if(newcar == si[12] || newcar == si[13])
		{
		    if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
		    {
		        if(PlayerInfo[playerid][pRank] < 2)
		        {
		        	SendClientMessage(playerid, COLOR_WHITE,"{999999}You don't have rank 2.");
		        	RemovePlayerFromVehicle(playerid);
		        }
		    }
		}
		if(newcar == news[16] || newcar == news[17])
		{
		    if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		    {
		        if(PlayerInfo[playerid][pRank] < 4)
		        {
		        	SendClientMessage(playerid, COLOR_WHITE,"{999999}You don't have rank 4.");
		        	RemovePlayerFromVehicle(playerid);
		        }
		    }
		}
		if(newcar == farm[1] || newcar == farm[2] || newcar == farm[3] || newcar == farm[4] || newcar == farm[5] || newcar == farm[6] || newcar == farm[7] || newcar == farm[8] || newcar == farm[9] || newcar == farm[10]
		|| newcar == farm[11] || newcar == farm[12] || newcar == farm[13])
		{
		    KillTimer(timerfarmm[playerid]);
		    if(AreFaina[playerid] < 1)
		    {
				if(PlayerInfo[playerid][pJob] == 6)
				{
					farmerc[playerid] = 1;
					farmertime[playerid] = 120;
					timerfarmm[playerid] = SetTimerEx("SetFarmer", 1000, 1, "i", playerid);
					Gas[GetPlayerVehicleID(playerid)] = 100;
    			}
    			else
				{
   					SendClientMessage(playerid, COLOR_WHITE, "{999999}You are not a Farmer.");
			    	RemovePlayerFromVehicle(playerid);
			    	TogglePlayerControllable(playerid, 1);
			    	KillTimer(timerfarmm[playerid]);
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_YELLOW, "Sell the flour before you work again.");
			    RemovePlayerFromVehicle(playerid);
		    	TogglePlayerControllable(playerid, 1);
		    	KillTimer(timerfarmm[playerid]);
			}
		}
		if(newcar == news[1] || newcar == news[2] || newcar == news[3] || newcar == news[4] || newcar == news[5] || newcar == news[6] || newcar == news[7] || newcar == news[8] || newcar == news[9] || newcar == news[10]
		|| newcar == news[11 || newcar == news[12]] || newcar == news[13] || newcar == news[14] || newcar == news[15] || newcar == news[16] || newcar == news[17])
		{
			if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9){ }
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE,"{999999}You are not a News Reporter !");
			    RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar == rentls[1] || newcar == rentls[2] || newcar == rentls[3] || newcar == rentls[4] || newcar == rentlv[1] || newcar == rentlv[2] || newcar == rentlv[3] || newcar == rentlv[4] || newcar == rentlv[5] || newcar == rentlv[6] || newcar == rentlv[7] || newcar == rentlv[8] || newcar == rentlv[9] || newcar == rentlv[10] || newcar == rentlv[11] || newcar == rentlv[12]
		|| newcar == rentlv[13] || newcar == rentlv[14] || newcar == rentlv[15] || newcar == rentlv[16] || newcar == rentlv[17] || newcar == rentlv[18] || newcar == rentlv[19])
		{
			if(GetPlayerCash(playerid) < 20)
			{
				SendClientMessage(playerid, COLOR_WHITE,"You don't have enough money.");
			    RemovePlayerFromVehicle(playerid);
				return 1;
			}
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "This Is A Rent Vehicle | You Will Paid 20$ Every 10 Seconds");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Rent Vehicles Will Respawn Every 30 Minutes Without Use");
			VehicleRent[newcar] = playerid;
			RentVeh[playerid] = newcar;
			RentTime[playerid] = 0;
			TotalTimeRent[playerid] = 0;
			PlayerTextDrawSetString(playerid, RentCar[playerid], "Rentcar Cost: ~g~$0");
			PlayerTextDrawShow(playerid, RentCar[playerid]);
			RentTimerr[playerid] = SetTimerEx("RentTimer", 1000, true, "i", playerid);
        }
		if(IsAnOwnableCar(newcar))
		{
			if(CarInfo[OwnedVeh(newcar)][cInsurancecar] == 0)
			{
					if(personalcar[0][playerid] == newcar || personalcar[1][playerid] == newcar || personalcar[2][playerid] == newcar || personalcar[3][playerid] == newcar || personalcar[4][playerid] == newcar || personalcar[5][playerid] == newcar)
					{
			   			format(string, sizeof(string), "Your vehicle has suffered damage and beacause you don't have insurance you have to pay $%s to fix.", FormatNumber(CarInfo[OwnedVeh(newcar)][cInscarprice]));
			   			ShowPlayerDialog(playerid, DIALOG_CARDAMAGE, DIALOG_STYLE_MSGBOX, "\n", string, "Pay", "Cancel");
   			  		}
   			  		else
   			  		{
						RemovePlayerFromVehicle(playerid);
						SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Can't drive this car until the owner pay the repairs.");
   			  		}
			}
    	}
	    if(IsAnOwnableCar(newcar))
		{
		    if(CarInfo[OwnedVeh(newcar)][cOwned] == 1)
		    {
		        if(CarInfo[OwnedVeh(newcar)][cVIP] == 1)
		        {
					format(string,sizeof(string),"This %s (ID %d) Is Owned By %s | Age: %d days | Odometer: %.0f km | Insurance: $%d (%d Points){FFD700}[VIP]",CarInfo[OwnedVeh(newcar)][cDescription],CarInfo[OwnedVeh(newcar)][cID],CarInfo[OwnedVeh(newcar)][cOwner],CarInfo[OwnedVeh(newcar)][cDays],CarInfo[OwnedVeh(newcar)][cKM],CarInfo[OwnedVeh(newcar)][cInscarprice],CarInfo[OwnedVeh(newcar)][cInsurancecar]);
				}
				else
				{
				    format(string,sizeof(string),"This %s (ID %d) is owned by %s | Age: %d days | Odometer: %.0f km | Insurance: $%d (%d Points)",CarInfo[OwnedVeh(newcar)][cDescription],CarInfo[OwnedVeh(newcar)][cID],CarInfo[OwnedVeh(newcar)][cOwner],CarInfo[OwnedVeh(newcar)][cDays],CarInfo[OwnedVeh(newcar)][cKM],CarInfo[OwnedVeh(newcar)][cInscarprice],CarInfo[OwnedVeh(newcar)][cInsurancecar]);
				}
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
		if(IsAnOwnableCar(newcar))
		{
		    new stringtext[100];
		    format(stringtext,sizeof(stringtext),"~r~~h~~h~~h~~h~%s",aVehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
			GameTextForPlayer(playerid, stringtext, 5000, 1);
		}
		if(!IsAnOwnableCar(newcar))
		{
			if(rentls[1] == newcar || rentls[2] == newcar || rentls[3] == newcar || rentls[4] == newcar)
			{
				GameTextForPlayer(playerid, "~g~car rented", 5000, 1);
			}
			else
			{
				new stringtext[100];
				format(stringtext,sizeof(stringtext),"~g~~h~%s",aVehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
				GameTextForPlayer(playerid, stringtext, 5000, 1);
			}
		}
		gLastCar[playerid] = newcar;
		gLastDriver[newcar] = playerid;
	}
	new newcar = GetPlayerVehicleID(playerid);
	if(VehOwned[newcar] == 2 && EnterInModShop[playerid] == 0) 
	{
		if(VehOwner[newcar] == 9999) {SCM(playerid, COLOR_WHITE, "{FFFFFF}This is a admins vehicle.");}
		else 
		{
			new str[512];
			format(str, sizeof(str), "{FFFFFF}This Vehicle Is Created By Admin {00FF00}%s{FFFFFF}.", PlayerInfo[VehOwner[newcar]][pNormalName]);
			SCM(playerid, COLOR_WHITE, str);
		}
	}
	
	if(newstate == PLAYER_STATE_SPAWNED)
	{
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		if((lwz > 530.0 && PlayerInfo[playerid][pInt] == 0) || PlayerToPoint(1000.0, playerid, -1041.9,-1868.4,79.1))
		{
			SetPlayerSpawn(playerid);
		}
		if(WantedPoints[playerid] > 0)
		{
		    PlayerInfo[playerid][pWantedDeaths] += 1;
		}
		if(PlayerInfo[playerid][pPremiumAccount] == 1)
		{
		    SetPlayerHealthEx(playerid, 100.0);
		}
		if(PlayerInfo[playerid][pVIP] == 1)
		{
		    SetPlayerHealthEx(playerid, 100.0);
		}
		if(PlayerInfo[playerid][pYoutuber] == 1)
		{
		    SetPlayerHealthEx(playerid, 100.0);
		}
		if(PlayerInfo[playerid][pAcces] == 1)
		{
		    SetPlayerHealthEx(playerid, 100.0);
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		gPlayerSpawned[playerid] = 1;
		SafeTime[playerid] = 60;
	}
	return 1;
}

forward reloging(playerid);
public reloging(playerid) {
	new string[30];
	isRelogging[playerid] = false;
	format(string, sizeof(string), "unbanip %s", relogPlayerIP[playerid]);
	SendRconCommand(string);
	print(string);
}

public CarCheck()
{
	new string[256];
	foreach(Player,j)
	{
	    if(IsPlayerConnected(j))
	    {
		    new Float:health;
		    GetPlayerHealthEx(j, health);
			SetPlayerHealthEx(j, health - 1.0);
			if(GetPlayerCash(j) < 0)
			{
			    if(MoneyMessage[j]==0)
			    {
				    format(string, sizeof(string), "You are in debt, you have till next Time Check to get: $%d or you go to jail.", GetPlayerCash(j));
					SendClientMessage(j, COLOR_LIGHTRED, string);
					MoneyMessage[j] = 1;
				}
			}
			else
			{
			    MoneyMessage[j] = 0;
			}
		}
	}
	return 1;
}

public CarTow(carid)
{
	foreach(Player,i)
	{
		if(IsPlayerInVehicle(i, carid))
		{
			return 0;
		}
	}
	return 1;
}
forward ImpundCar(car, car2, playerid);
public ImpundCar(car, car2, playerid)
{
    if(gPlayerLogged[playerid] == 1)
	{
    	new engine,lights,alarm,doors,bonnet,boot,objective;
		RespawnPVeh(car,playerid);
		vehEngine[car] = 0;
		if(CarInfo[car2][cLock] == 1)
		{
			foreach(Player, i)
  		    {
				GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(car, engine, lights, alarm, 1, bonnet, boot, objective);
  		        SetVehicleParamsForPlayer(car, i, 0, 1);
  		    }
  		    SetVehicleParamsForPlayer(car, playerid, 0, 0);
		}
		if(CarInfo[car2][cLock] == 0)
		{
			foreach(Player, i)
  		    {
				GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(car, engine, lights, alarm, 0, bonnet, boot, objective);
  		        SetVehicleParamsForPlayer(car, i, 0, 0);
  		    }
  		    SetVehicleParamsForPlayer(car, playerid, 0, 0);
		}
	}
	return 1;
}

public TowCar(car,car2,playerid)
{
    if(gPlayerLogged[playerid] == 1)
	{
    	new engine,lights,alarm,doors,bonnet,boot,objective;
		if(GetPlayerCash(playerid) > 5000)
		{
			if(CarTow(car))
			{
				GameTextForPlayer(playerid, "~r~CAR TOWED~n~~w~$-5000", 5000, 1);
				GivePlayerCash(playerid,-5000);
				RespawnPVeh(car,playerid);
				vehEngine[car] = 0;
				GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(car,VEHICLE_PARAMS_OFF,lights,alarm,CarInfo[car2][cLock],bonnet,boot,objective);
				Update(playerid, pCashx);
			}
			else return SendClientMessage(playerid,COLOR_WHITE,"{FFB870}Car is in use.");
		}
		else return SendClientMessage(playerid, COLOR_WHITE,"{FFB870}You don't have enough money.");
	}
	return 1;
}

public LocateCar(car,playerid)
{
    new Float:x,Float:y,Float:z,Float:xx,Float:yy,Float:zz,Float: distance,string[256];
	GetVehiclePos(car, x, y, z);
	GetPlayerPos(playerid, xx, yy, zz);
	SetPlayerCheckpoint(playerid, x, y, z, 4);
	gPlayerCheckpointStatus[playerid] = CHECKPOINT_LOCATE;
	distance = GetDistanceBetweenPoints(xx,yy,zz,x,y,z);
	format(string,sizeof(string),"Go to the red point on the minimap to get to your car | Distance : %.0fm.",distance);
	SendClientMessage(playerid,COLOR_YELLOW,string);
	return 1;
}

/*public OnRconLoginAttempt(ip[], password[], success)
{
    new playerip[16];
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        GetPlayerIp(i, playerip, sizeof(playerip));
        if(!strcmp(ip, playerip, true))
        {
            Kick(i);
        }
    }
    return 1;
}*/

public OnPlayerExitVehicle(playerid, vehicleid)
{
    StopAudioStreamForPlayer(playerid);
	Speedlimit[playerid] = 0;
    if(TakingLesson[playerid] == 1)
    {
        PlayerTextDrawHide(playerid, DMVexam[playerid]);
        PlayerTextDrawHide(playerid, DMVcheck[playerid]);
        TakingLesson[playerid] = 0;
	    DisablePlayerRaceCheckpoint(playerid);
        DestroyVehicle(examcar[playerid]);
		DisableRemoteVehicleCollisions(playerid, 0);
		examcar[playerid] = -1;
		SendClientMessage(playerid, COLOR_WHITE, "You dropped the exam because you got out of the car.");
    }
    if(CP[playerid] == 34)
	{
	    TowAcc[playerid] = 1;
		new towedcar;
		towedcar = GetVehicleTrailer(GetPlayerVehicleID(playerid));
		SetVehicleToRespawn(towedcar);
		SetVehicleToRespawn(vehicleid);
		RemovePlayerFromVehicle(playerid);
   		CP[playerid] = 0;
	    DisablePlayerCheckpoint(playerid);
	    SetTimerEx("TowAgain", 120000, 0, "i", playerid);
	}
	if(busc[playerid] == 1)
	{
 		busc[playerid] = 0;
   		PlayerTextDrawHide(playerid, BusJob[playerid]);
   		PlayerTextDrawHide(playerid, BusCheck[playerid]);
   		SetVehicleToRespawn(vehicleid);
   		KillTimer(timerbus[playerid]);
   		DisablePlayerRaceCheckpoint(playerid);
		CheckBus[playerid] = 0;
		if(JobStep[playerid] >= 1)
  		{
    		JobStep[playerid] = 0;
	    	GivePlayerCash(playerid, -2000);
	    	SendClientMessage(playerid, COLOR_GREEN, "(-) You Paid $2.000 To Bus Company For Tax");
		}
	}
	if(IsAGarbageTruck(vehicleid) && IsCollectingRubbish[playerid] > 0)
	{
 		DisablePlayerCheckpoint(playerid);
 		PlayerInfo[playerid][pGarbageTime] = 0;
 		IsCollectingRubbish[playerid] = 0;
 		PlayerTextDrawHide(playerid, gunoierr[playerid]);
 		SetVehicleToRespawn(vehicleid);
	}
	if(InCoal[playerid] >= 1)
	{
	    InCoal[playerid] = 0;
	    DisablePlayerCheckpoint(playerid);
	    SCM(playerid, COLOR_GREEN, "Mission failed.");
	    DestroyVehicle(vehicleid);
	    CoalCar[playerid] = -1;
	}
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
	if(gPlayerLogged[playerid] == 1)
	{
		if(PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pLeader] == 0 && PlayerInfo[playerid][pJailed] == 0)
		{
			new query[184];
            mysql_format(SQL,query, sizeof(query), "UPDATE users SET `Model`='%d' WHERE `name`='%s'",GetPlayerSkin(playerid),PlayerInfo[playerid][pNormalName]);
			mysql_tquery(SQL,query,"","");
		}
    }
	else
	{
		SendClientMessage(playerid, COLOR_RED2, "You need to login .");
	}
    return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	if(gPlayerLogged[playerid] == 1)
	{
		if(ChosenSkin[playerid] == 1) return SpawnPlayer(playerid);

	}
	if (RegistrationStep[playerid] == 0 && gPlayerLogged[playerid] != 1)
	{
 		SetPlayerInterior(playerid,0);
		SetPlayerPosEx(playerid, 1022.1117,-1574.3024,82.9095);
		InterpolateCameraPos(playerid, 1022.1117,-1574.3024,82.9095, 1037.3715,-1732.7358,25.2859, 30000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid,1022.1117,-1574.3024,82.9095,1037.3715,-1732.7358,25.2859, 30000, CAMERA_MOVE);
		TogglePlayerControllable(playerid, 0);
		if (gPlayerAccount[playerid] != 0)
		{
			SendClientMessage(playerid, COLOR_GENANNOUNCE, "");
            SendClientMessage(playerid, 0x0080FFFF, "[New-Land]: {FFFFFF}You Have 50Seconds To Login Into Your Account");
			ShowPlayerDialog(playerid,DIALOG_LOGIN2,DIALOG_STYLE_PASSWORD,"SERVER: Register","{F0E68C}Welcome back.\n{F0E68C}This account is registered.\n{F0E68C}Enter the password to log in","Login","Cancel");
		}
		else
		{
			gPlayerAccount[playerid] = 0;
 			new loginname[158],
			stringgg[300];
			GetPlayerName(playerid,loginname,sizeof(loginname));
			for(new clanid; clanid < MAX_CLANS; clanid++)
			{
				if(strfind(loginname,ClanInfo[clanid][cClanTag],true) != -1)
				{
					format(stringgg,sizeof(stringgg),"Shoma Nemitavanid Az In NickName Estefade Konid -> '%s' | In NickName Tavasote Clan Sabt Shode Ast",ClanInfo[clanid][cClanTag]);
					SendClientMessage(playerid, COLOR_RED, stringgg);
					format(stringgg,sizeof(stringgg),"You can't use that username! '%s' is a registered clan tag. You can't use that word in your nickname.",ClanInfo[clanid][cClanTag]);
					SendClientMessage(playerid, COLOR_RED, stringgg);
					KickEx(playerid);
				}
			}
			SendClientMessage(playerid, COLOR_GENANNOUNCE, "SERVER: {FFFFFF}Welcome to New Land RP");
			SendClientMessage(playerid, COLOR_GENANNOUNCE, "SERVER: {FFFFFF}You aren't registered yet. Please enter your desired password in the dialog box to register.");
			ShowPlayerDialog(playerid,DIALOG_LOGIN1,DIALOG_STYLE_PASSWORD,"SERVER: Registration","Welcome to the New Land RP Server.\n\nPlease enter your desired password below!","Register","Cancel");
		}
		login[playerid] = SetTimerEx("Logink",50000,false,"d",playerid);
	}
	else if(IsPlayerNPC(playerid)) return 1;
	return 1;
}

public Logink(playerid)
{
	Kick(playerid);
	return 1;
}

public SetupPlayerForClassSelection(playerid)
{
	switch (gTeam[playerid])
	{
		case TEAM_BLUE:
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPosEx(playerid,323.4,305.6,999.1);
			SetPlayerFacingAngle(playerid, 90.0);
		    SetPlayerCameraPos(playerid, 1460.0, -1324.0, 287.2);
		    SetPlayerCameraLookAt(playerid,1374.5, -1291.1, 239.0);
		}
		case TEAM_ADMIN:
		{
		    SetPlayerInterior(playerid,0);
			SetPlayerPosEx(playerid,-2654.4,1424.2,912.4);
			SetPlayerFacingAngle(playerid, 90.0);
		    SetPlayerCameraPos(playerid, 1460.0, -1324.0, 287.2);
		    SetPlayerCameraLookAt(playerid,1374.5, -1291.1, 239.0);
		}
		default:
		{
            SetPlayerPosEx(playerid,358.0976,-1841.3488,5.1257);
		    SetPlayerInterior(playerid,0);
		    SetPlayerFacingAngle(playerid, 90.0);
		    SetPlayerCameraPos(playerid, 1460.0, -1324.0, 287.2);
		    SetPlayerCameraLookAt(playerid,1374.5, -1291.1, 239.0);
		}
	}
}

public SetPlayerTeamFromClass(playerid,classid)
{
 	if (classid >= 1 && classid <= 15)
	{
		gTeam[playerid] = 15;
		PlayerInfo[playerid][pTeam] = 15;
	}
	else
	{
	    gTeam[playerid] = 3;
	    PlayerInfo[playerid][pTeam] = 3;
	}
}

public SetPlayerCriminal(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid))
	{
	    PlayerInfo[playerid][pCrimes] += 1;
	    Update(playerid,pCrimesx);
	    new points = WantedPoints[playerid],
			turned[MAX_PLAYER_NAME],
			turner[MAX_PLAYER_NAME],
			turnmes[128],
			ini;
		ini = PlayerInfo[playerid][pWantedLevel];
		GetPlayerName(playerid, turned, sizeof(turned));
		if(declare == 255)
		{
			format(turner, sizeof(turner), "Unknown");
			strmid(PlayerInfo[playerid][pVictim], turner, 0, strlen(turner), 255);
			Update(playerid,pVictimx);
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerInfo[playerid][pVictim], turner, 0, strlen(turner), 255);
				Update(playerid,pVictimx);
			}
		}
		new string[184];
		new y,m,d,h,mi;
		getdate(y,m,d);
		gettime(h,mi);
		if(strcmp(PlayerInfo[playerid][pCrime1], "Fara Crima", true) == 0)
		{
			format(string,sizeof(string),"%s",reason);
			strmid(PlayerInfo[playerid][pCrime1], string, 0, strlen(string), 255);
			Update(playerid,pCrime1x);
		}
		else if(strcmp(PlayerInfo[playerid][pCrime2], "Fara Crima", true) == 0)
		{
			format(string,sizeof(string),"%s",reason);
			strmid(PlayerInfo[playerid][pCrime2], string, 0, strlen(string), 255);
			Update(playerid,pCrime2x);
		}
		else if(strcmp(PlayerInfo[playerid][pCrime3], "Fara Crima", true) == 0)
		{
			format(string,sizeof(string),"%s",reason);
		    strmid(PlayerInfo[playerid][pCrime3], string, 0, strlen(string), 255);
			Update(playerid,pCrime3x);
		}
		else if(strcmp(PlayerInfo[playerid][pCrime1],  "Fara Crima", true) == 0 && strcmp(PlayerInfo[playerid][pCrime2], "Fara Crima", true) == 0 && strcmp(PlayerInfo[playerid][pCrime3], "Fara Crima", true) == 0) { }
		else
		{
			format(string,sizeof(string),"%s",reason);
		    strmid(PlayerInfo[playerid][pCrime1], string, 0, strlen(string), 255);
			Update(playerid,pCrime1x);
			format(string, sizeof(string), "Fara Crima");
			strmid(PlayerInfo[playerid][pCrime2], string, 0, strlen(string), 255);
			strmid(PlayerInfo[playerid][pCrime3], string, 0, strlen(string), 255);
			Update(playerid,pCrime2x);
			Update(playerid,pCrime3x);
		}
		if(points > 0)
		{
		    new yesno;
			if(points >= 1 && points <= 3)
			{
				if(PlayerInfo[playerid][pWantedLevel] != 1)
				{
					PlayerInfo[playerid][pWantedLevel] = 1;
					yesno = 1;
				}
			}
			else if(points >= 4 && points <= 5)
			{
				if(PlayerInfo[playerid][pWantedLevel] != 2)
				{
					PlayerInfo[playerid][pWantedLevel] = 2;
					yesno = 1;
				}
			}
			else if(points >= 6 && points <= 7)
			{
				if(PlayerInfo[playerid][pWantedLevel] != 3)
				{
					PlayerInfo[playerid][pWantedLevel] = 3;
					yesno = 1;
				}
			}
			else if(points >= 8 && points <= 9)
			{
				if(PlayerInfo[playerid][pWantedLevel] != 4)
				{
					PlayerInfo[playerid][pWantedLevel] = 4;
					yesno = 1;
				}
			}
			else if(points >= 10 && points <= 11)
			{
				if(PlayerInfo[playerid][pWantedLevel] != 5)
				{
					PlayerInfo[playerid][pWantedLevel] = 5;
					yesno = 1;
				}
			}
			else if(points >= 12 && points <= 13)
			{
				if(PlayerInfo[playerid][pWantedLevel] != 6)
				{
					PlayerInfo[playerid][pWantedLevel] = 6;
					yesno = 1;
				}
			}
			if(PlayerInfo[playerid][pWantedLevel] >= 1)
			{
				if(gTeam[playerid] == 3)
				{
					gTeam[playerid] = 3;
				}
			}
			Update(playerid,pWantedLevelx);
			wantedlost[playerid] = 900;
			if(yesno)
			{
				ini = PlayerInfo[playerid][pWantedLevel]-ini;
				foreach(Player,i)
				{
					if(IsPlayerConnected(i))
					{
					    if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pMember] == 2 || PlayerInfo[i][pLeader] == 2 || PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] == 3 || PlayerInfo[i][pMember] == 8 || PlayerInfo[i][pLeader] == 8)
					    {
							format(cbjstore, sizeof(turnmes), "[Dispatch]: %s [%d] Has Commited A Crime: %s | Reporter: %s. W: +%d. New Wanted :evel: %d.",turned,playerid,reason,turner,ini,PlayerInfo[playerid][pWantedLevel]);
							SendClientMessage(i, COLOR_DBLUE, cbjstore);
						}
					}
				}
				format(turnmes, sizeof(turnmes), "You've Commited A Crime : %s | Reporter : %s. W: +%d | New Wanted Level %d.",reason,turner,ini,PlayerInfo[playerid][pWantedLevel]);
				SendClientMessage(playerid, COLOR_RED2, turnmes);
			}
		}
	}
	return 1;
}

public OtherTimer()
{
	new string[256];
    new year,month,day,hours,minutes,seconds;
    getdate(year, month, day), gettime(hours, minutes, seconds);
    format(string, sizeof string, "%s%d.%s%d.%s%d",((day < 10) ? ("0") : ("")), day, ((month < 10) ? ("0") : ("")), month, (year < 10) ? ("0") : (""), year);
    TextDrawSetString(Date, string);
    format(string, sizeof string, "%s%d:%s%d", (hours < 10) ? ("0") : (""), hours, (minutes < 10) ? ("0") : (""), minutes, (seconds < 10) ? ("0") : (""), seconds);
    TextDrawSetString(Time, string);
	if(eventon == 1)
	{
		if(giveexp == GetOnLinePlayers())
		{
			foreach(Player,i)
			{
			    if(gPlayerLogged[i] == 1)
	   			{
					PlayerInfo[i][pExp] += recivedexp;
		  			GivePlayerCash(i, recivedmoney);
		  			format(string,sizeof(string),"{FFB870}Server Reached %d Players Online",GetOnLinePlayers());
					SendClientMessage(i,COLOR_YELLOW,string);
				 	format(string,sizeof(string),"{FFB870}You Recieved %s Money And %d Respect Points",FormatNumber(recivedmoney),recivedexp);
					SendClientMessage(i,COLOR_LIGHTBLUE,string);
				}
	  		}
	  		eventon = 0;
	  		giveexp += 20;
		}
	}
	SetActorPos(actor1,1797.9309,-1847.8668,13.5781);
  	SetActorFacingAngle(actor1, 177.68);
   	SetActorPos(actor2,1803.2595,-1847.6948,13.5781);
    SetActorFacingAngle(actor2, 177.68);
	foreach(Player,k)
	{
		if(IsPlayerAFK[k] < 40)
		{
			PlayerInfo[k][pPayDay] += 1;
		}
	}
	if(DeelayWar[4] > 0)
	{
		DeelayWar[4]--;
	}
	if(DeelayWar[5] > 0)
	{
		DeelayWar[5]--;
	}
	if(DeelayWar[6] > 0)
	{
		DeelayWar[6]--;
	}
	if(DeelayWar[10] > 0)
	{
		DeelayWar[10]--;
	}
	return 1;
}
public SetSomate1(playerid)
{
    if(TimerFree[playerid] >=1)
 	{
 		TimerFree[playerid] = 0;
		FreeOffer[FreePlayer[playerid]] = -1;
		FreePrice[FreePlayer[playerid]] = 0;
		FreePlayer[playerid] = -1;
		SCM(playerid , COLOR_WHITE, "[FREE] Free Timer Has Expired !");
	}
	return 1;
}
public SetSomate(playerid)
{
	if(somatee[playerid] == 0)
	{
	    SomatePermission[playerid] = 1;
	    KillTimer(timersoo[playerid]);
	}
	return 1;
}

public SomateExpire(playerid)
{
	if(somated[playerid] != -1)
	{
		somated[playerid] = -1;
		somatename[playerid] = "NULL";
		KillTimer(soexpire[playerid]);
	}
	return 1;
}

public BusDriverCheck(playerid)
{
	if(CheckBus[playerid] >= 1)
	{
	    new money,
	    	totalmoney,
	    	string[MAX_STRING],
			string2[MAX_STRING];
		money = 1500 + random(1000);
		if(PlayerInfo[playerid][pBusSkill] == 1) totalmoney = money;
		if(PlayerInfo[playerid][pBusSkill] == 2) totalmoney = money + money*(10/100);
		if(PlayerInfo[playerid][pBusSkill] == 3) totalmoney = money + money*(20/100);
		if(PlayerInfo[playerid][pBusSkill] == 4) totalmoney = money + money*(30/100);
		if(PlayerInfo[playerid][pBusSkill] == 5) totalmoney = money + money*(40/100);
		if(PlayerInfo[playerid][pBusSkill] == 6) totalmoney = money + money*(50/100);
		GivePlayerCash(playerid, totalmoney);
		format(string2,sizeof(string2),"You Have Recieved $%s | Go To The Next Checkpoint", FormatNumber(totalmoney));
		SendClientMessage(playerid, COLOR_GREEN, string2);
		DisablePlayerRaceCheckpoint(playerid);
	    JobStep[playerid] ++;
		BusCheckk[playerid] ++;
		if(BusCheckk[playerid] >= 10)
		{
			BusCheckk[playerid] = 0;
			PlayerInfo[playerid][pBusRem]--;
			PlayerInfo[playerid][pBusTimes]++;
			Update(playerid,pBusRemx);
			Update(playerid,pBusTimesx);
			if(PlayerInfo[playerid][pBusSkill] <= 5)
			{
				if(PlayerInfo[playerid][pBusRem] <= 0)
				{
					PlayerInfo[playerid][pBusSkill]++;
					if(PlayerInfo[playerid][pBusSkill] == 2)
					{
						PlayerInfo[playerid][pBusRem] = 34;
					}
					else if(PlayerInfo[playerid][pBusSkill] == 3)
					{
						PlayerInfo[playerid][pBusRem] = 49;
					}
					else if(PlayerInfo[playerid][pBusSkill] == 4)
					{
						PlayerInfo[playerid][pBusRem] = 89;
					}
					else if(PlayerInfo[playerid][pBusSkill] == 5)
					{
						PlayerInfo[playerid][pBusRem] = 99;
					}
					Update(playerid,pBusSkillx);
					Update(playerid,pBusRemx);
					format(string,sizeof(string),"Cngrats ! Your Job Skill Is Now %d !",PlayerInfo[playerid][pBusSkill]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				}
			}
		}
	    KillTimer(timerbus[playerid]);
	    format(string,sizeof(string),"~w~CHECKPOINTS: ~r~%d~w~/~r~59", JobStep[playerid]);
	    PlayerTextDrawSetString(playerid, BusCheck[playerid], string);
		PlayerTextDrawShow(playerid, BusCheck[playerid]);
	    if(JobStep[playerid] == 1) SetPlayerRaceCheckpoint(playerid, 0, 1941.3706,-2169.2083,13.4851,1964.6262,-1899.2827,13.4838,4.0);
	    if(JobStep[playerid] == 2) SetPlayerRaceCheckpoint(playerid, 0, 1964.6262,-1899.2827,13.4838,1921.6910,-1749.1346,13.4828,4.0);
	    if(JobStep[playerid] == 3) SetPlayerRaceCheckpoint(playerid, 0, 1921.6910,-1749.1346,13.4828,1819.4100,-1814.2385,13.5056,4.0);
	    if(JobStep[playerid] == 4) SetPlayerRaceCheckpoint(playerid, 0, 1819.4100,-1814.2385,13.5056,1692.2909,-1764.9092,13.4875,4.0);
	    if(JobStep[playerid] == 5) SetPlayerRaceCheckpoint(playerid, 0, 1692.2909,-1764.9092,13.4875,1395.2542,-1729.2012,13.4901,4.0);
	    if(JobStep[playerid] == 6) SetPlayerRaceCheckpoint(playerid, 0, 1395.2542,-1729.2012,13.4901,1315.4188,-1631.5197,13.4827,4.0);
	    if(JobStep[playerid] == 7) SetPlayerRaceCheckpoint(playerid, 0, 1315.4188,-1631.5197,13.4827,1325.5859,-1392.4742,13.4741,4.0);
	    if(JobStep[playerid] == 8) SetPlayerRaceCheckpoint(playerid, 0, 1325.5859,-1392.4742,13.4741,1209.0767,-1324.8274,13.5002,4.0);
	    if(JobStep[playerid] == 9) SetPlayerRaceCheckpoint(playerid, 0, 1209.0767,-1324.8274,13.5002,1082.8730,-1277.8145,13.5019,4.0);
	    if(JobStep[playerid] == 10) SetPlayerRaceCheckpoint(playerid, 0, 1082.8730,-1277.8145,13.5019,966.0933,-1218.3807,16.8770,4.0);
	    if(JobStep[playerid] == 11) SetPlayerRaceCheckpoint(playerid, 0, 966.0933,-1218.3807,16.8770,818.9665,-1137.8669,23.8506,4.0);
	    if(JobStep[playerid] == 12) SetPlayerRaceCheckpoint(playerid, 0, 818.9665,-1137.8669,23.8506,794.1818,-1301.3213,13.4795,4.0);
	    if(JobStep[playerid] == 13) SetPlayerRaceCheckpoint(playerid, 0, 794.1818,-1301.3213,13.4795,678.5087,-1392.8485,13.5081,4.0);
	    if(JobStep[playerid] == 14) SetPlayerRaceCheckpoint(playerid, 0, 678.5087,-1392.8485,13.5081,380.8662,-1492.7212,32.2020,4.0);
	    if(JobStep[playerid] == 15) SetPlayerRaceCheckpoint(playerid, 0, 380.8662,-1492.7212,32.2020,258.5574,-1537.6969,32.3608,4.0);
	    if(JobStep[playerid] == 16) SetPlayerRaceCheckpoint(playerid, 0, 258.5574,-1537.6969,32.3608,484.7990,-1357.7792,17.9893,4.0);
	    if(JobStep[playerid] == 17) SetPlayerRaceCheckpoint(playerid, 0, 484.7990,-1357.7792,17.9893,588.3983,-1232.8560,17.8009,4.0);
	    if(JobStep[playerid] == 18) SetPlayerRaceCheckpoint(playerid, 0, 588.3983,-1232.8560,17.8009,774.5882,-1058.5305,24.5938,4.0);
	    if(JobStep[playerid] == 19) SetPlayerRaceCheckpoint(playerid, 0, 774.5882,-1058.5305,24.5938,1209.5120,-948.5093,42.8005,4.0);
	    if(JobStep[playerid] == 20) SetPlayerRaceCheckpoint(playerid, 0, 1209.5120,-948.5093,42.8005,1566.5400,-997.7548,45.7116,4.0);
	    if(JobStep[playerid] == 21) SetPlayerRaceCheckpoint(playerid, 0, 1566.5400,-997.7548,45.7116,1709.9061,-733.8804,50.0985,4.0);
	    if(JobStep[playerid] == 22) SetPlayerRaceCheckpoint(playerid, 0, 1709.9061,-733.8804,50.0985,1658.8318,-43.4300,36.4876,4.0);
	    if(JobStep[playerid] == 23) SetPlayerRaceCheckpoint(playerid, 0, 1658.8318,-43.4300,36.4876,1772.3663,581.9141,23.7034,4.0);
	    if(JobStep[playerid] == 24) SetPlayerRaceCheckpoint(playerid, 0, 1772.3663,581.9141,23.7034,1841.4648,829.6874,9.9861,4.0);
	    if(JobStep[playerid] == 25) SetPlayerRaceCheckpoint(playerid, 0, 1841.4648,829.6874,9.9861,2187.5762,806.9039,7.2061,4.0);
	    if(JobStep[playerid] == 26) SetPlayerRaceCheckpoint(playerid, 0, 2187.5762,806.9039,7.2061,2290.9165,841.0883,13.9592,4.0);
	    if(JobStep[playerid] == 27) SetPlayerRaceCheckpoint(playerid, 0, 2290.9165,841.0883,13.9592,2350.4082,1025.8792,10.7723,4.0);
	    if(JobStep[playerid] == 28) SetPlayerRaceCheckpoint(playerid, 0, 2350.4082,1025.8792,10.7723,2570.7004,1070.5811,10.7773,4.0);
	    if(JobStep[playerid] == 29) SetPlayerRaceCheckpoint(playerid, 0, 2570.7004,1070.5811,10.7773,2613.5254,1315.6500,10.7696,4.0);
	    if(JobStep[playerid] == 30) SetPlayerRaceCheckpoint(playerid, 0, 2613.5254,1315.6500,10.7696,2476.1697,1476.3761,10.7715,4.0);
	    if(JobStep[playerid] == 31) SetPlayerRaceCheckpoint(playerid, 0, 2476.1697,1476.3761,10.7715,2401.2478,1616.5609,10.7727,4.0);
	    if(JobStep[playerid] == 32) SetPlayerRaceCheckpoint(playerid, 0, 2401.2478,1616.5609,10.7727,2291.8828,1775.9521,10.7812,4.0);
	    if(JobStep[playerid] == 33) SetPlayerRaceCheckpoint(playerid, 0, 2291.8828,1775.9521,10.7812,2154.7061,1996.3882,10.7744,4.0);
	    if(JobStep[playerid] == 34) SetPlayerRaceCheckpoint(playerid, 0, 2154.7061,1996.3882,10.7744,2228.1877,2386.0630,10.7777,4.0);
	    if(JobStep[playerid] == 35) SetPlayerRaceCheckpoint(playerid, 0, 2228.1877,2386.0630,10.7777,2086.0520,2456.9954,10.8048,4.0);
	    if(JobStep[playerid] == 36) SetPlayerRaceCheckpoint(playerid, 0, 2086.0520,2456.9954,10.8048,1948.1777,2396.3440,10.7688,4.0);
	    if(JobStep[playerid] == 37) SetPlayerRaceCheckpoint(playerid, 0, 1948.1777,2396.3440,10.7688,1922.7677,2317.8069,10.8393,4.0);
	    if(JobStep[playerid] == 38) SetPlayerRaceCheckpoint(playerid, 0, 1922.7677,2317.8069,10.8393,1922.8735,2117.9375,10.8652,4.0);
	    if(JobStep[playerid] == 39) SetPlayerRaceCheckpoint(playerid, 0, 1922.8735,2117.9375,10.8652,2093.9612,2017.9711,10.8407,4.0);
	    if(JobStep[playerid] == 40) SetPlayerRaceCheckpoint(playerid, 0, 2093.9612,2017.9711,10.8407,2039.7142,1522.0779,10.7595,4.0);
	    if(JobStep[playerid] == 41) SetPlayerRaceCheckpoint(playerid, 0, 2039.7142,1522.0779,10.7595,2040.6129,1169.0469,10.7807,4.0);
	    if(JobStep[playerid] == 42) SetPlayerRaceCheckpoint(playerid, 0, 2040.6129,1169.0469,10.7807,2038.9994,878.8145,7.1755,4.0);
	    if(JobStep[playerid] == 43) SetPlayerRaceCheckpoint(playerid, 0, 2038.9994,878.8145,7.1755,1755.5402,619.8901,21.3552,4.0);
	    if(JobStep[playerid] == 44) SetPlayerRaceCheckpoint(playerid, 0, 1755.5402,619.8901,21.3552,1619.3414,186.8276,33.5024,4.0);
	    if(JobStep[playerid] == 45) SetPlayerRaceCheckpoint(playerid, 0, 1619.3414,186.8276,33.5024,1659.4628,-329.5979,40.4135,4.0);
	    if(JobStep[playerid] == 46) SetPlayerRaceCheckpoint(playerid, 0, 1659.4628,-329.5979,40.4135,1688.2992,-728.0701,49.8404,4.0);
	    if(JobStep[playerid] == 47) SetPlayerRaceCheckpoint(playerid, 0, 1688.2992,-728.0701,49.8404,1412.3439,-937.3050,35.6120,4.0);
	    if(JobStep[playerid] == 48) SetPlayerRaceCheckpoint(playerid, 0, 1412.3439,-937.3050,35.6120,1432.5333,-1037.7094,23.7933,4.0);
	    if(JobStep[playerid] == 49) SetPlayerRaceCheckpoint(playerid, 0, 1432.5333,-1037.7094,23.7933,1574.0338,-1138.6904,23.6757,4.0);
	    if(JobStep[playerid] == 50) SetPlayerRaceCheckpoint(playerid, 0, 1574.0338,-1138.6904,23.6757,1711.5553,-1263.2328,13.4910,4.0);
	    if(JobStep[playerid] == 51) SetPlayerRaceCheckpoint(playerid, 0, 1711.5553,-1263.2328,13.4910,1590.8885,-1437.7626,13.4817,4.0);
	    if(JobStep[playerid] == 52) SetPlayerRaceCheckpoint(playerid, 0, 1590.8885,-1437.7626,13.4817,1428.2323,-1567.3893,13.4529,4.0);
	    if(JobStep[playerid] == 53) SetPlayerRaceCheckpoint(playerid, 0, 1428.2323,-1567.3893,13.4529,1446.8442,-1735.5527,13.4789,4.0);
	    if(JobStep[playerid] == 54) SetPlayerRaceCheckpoint(playerid, 0, 1446.8442,-1735.5527,13.4789,1580.1357,-1874.8420,13.4791,4.0);
	    if(JobStep[playerid] == 55) SetPlayerRaceCheckpoint(playerid, 0, 1580.1357,-1874.8420,13.4791,1818.1030,-1904.3914,13.5025,4.0);
	    if(JobStep[playerid] == 56) SetPlayerRaceCheckpoint(playerid, 0, 1818.1030,-1904.3914,13.5025,1958.2472,-1999.3572,13.4949,4.0);
	    if(JobStep[playerid] == 57) SetPlayerRaceCheckpoint(playerid, 0, 1958.2472,-1999.3572,13.4949,1936.2253,-2163.5068,13.4765,4.0);
	    if(JobStep[playerid] == 58)
		{
		    JobStep[playerid] = 0;
	 		SetPlayerRaceCheckpoint(playerid, 0, 1693.2972,-2197.6602,13.4714,1941.3706,-2169.2083,13.4851,4.0);
		}
	}
	return 1;
}
public SetFarmer(playerid)
{
	if(farmerc[playerid] == 1)
	{
		PlayerTextDrawShow(playerid, farmtime[playerid]);
	    PlayerTextDrawShow(playerid, farmjob[playerid]);
		PlayerTextDrawShow(playerid, farmbox[playerid]);
		PlayerTextDrawShow(playerid, farmtime[playerid]);
	    if(IsPlayerInRangeOfPoint(playerid,270.0,-388.4804,-1395.7417,23.4229))
	    {
			new tmpcar = GetPlayerVehicleID(playerid),
				ccar = IsPlayerInAnyVehicle(playerid),
				spe = Carspeed(playerid);
			GetPlayerPos(playerid, PlayerPos[playerid][0], PlayerPos[playerid][1], PlayerPos[playerid][2]);
			if(PlayerPos[playerid][0] == PlayerPos[playerid][3] && PlayerPos[playerid][1] == PlayerPos[playerid][4] && PlayerPos[playerid][2] == PlayerPos[playerid][5]) return PlayerTextDrawShow(playerid, farmspeed[playerid]);
			PlayerPos[playerid][3] = PlayerPos[playerid][0];
			PlayerPos[playerid][4] = PlayerPos[playerid][1];
			PlayerPos[playerid][5] = PlayerPos[playerid][2];
			if(ccar && IsAFarmer(tmpcar) && spe > 24)
			{
			    PlayerTextDrawHide(playerid, farmspeed[playerid]);
			    PlayerTextDrawHide(playerid, farmwanted[playerid]);
				if(farmertime[playerid] >= 1)
				{
					farmertime[playerid]--;
					new str2[128];
					format(str2,sizeof(str2),"It works for yet ~r~%d ~w~Seconds to be paid.",farmertime[playerid]);
					PlayerTextDrawSetString(playerid, farmtime[playerid], str2);
					PlayerTextDrawShow(playerid, farmtime[playerid]);
				}
				else if(farmertime[playerid] == 0)
				{
				    new str3[128];
				    farmertime[playerid] = 1;
					farmerc[playerid] = 0;
					SetVehicleToRespawn(tmpcar);
					new randomtransport = random(10);
					if(randomtransport > 8)
					{
						new randfarmer = 30000 + random(30000);
						format(str3,sizeof(str3),"{FFFF00}Farmers were very pleased with the quality of the work they did. You Recieved $%s.",FormatNumber(randfarmer));
						SCM(playerid,COLOR_WHITE,str3);
						GivePlayerCash(playerid,randfarmer);
						Update(playerid, pCashx);
					}
					else if(randomtransport >= 0 && randomtransport <= 8)
					{
					    new faina = 5 + random(30);
					    AreFaina[playerid] = faina;
					    SendClientMessage(playerid, COLOR_GREEN, "Farmers do not have money to pay for you, but I can give you a flour bag as a reward.");
						format(str3,sizeof(str3),"You Recieved A Flour With %d KG", faina);
						SendClientMessage(playerid, COLOR_GREEN, str3);
					    new randsms = random(4);
					    if(randsms == 0)
					    {
					    	SendClientMessage(playerid, COLOR_YELLOW, "SMS From Aurel (5554443): You can go to the fast food in the area to sell the flour.");
						}
						else if(randsms == 1)
					    {
					    	SendClientMessage(playerid, COLOR_YELLOW, "SMS From Marian (5554443): You can go to the fast food in the area to sell the flour.");
						}
						else if(randsms == 2)
					    {
					    	SendClientMessage(playerid, COLOR_YELLOW, "SMS From Mariana (5554443): You can go to the fast food in the area to sell the flour.");
						}
                        else if(randsms == 3)
					    {
					    	SendClientMessage(playerid, COLOR_YELLOW, "SMS From Gigel (5554443): You can go to the fast food in the area to sell the flour.");
						}
					}
					PlayerTextDrawHide(playerid, farmtime[playerid]);
					PlayerTextDrawHide(playerid, farmjob[playerid]);
					PlayerTextDrawHide(playerid, farmbox[playerid]);
					PlayerTextDrawHide(playerid, farmspeed[playerid]);
					PlayerTextDrawHide(playerid, farmwanted[playerid]);
					KillTimer(timerfarmm[playerid]);
				}
			}
			else
			{
			    PlayerTextDrawShow(playerid, farmspeed[playerid]);
			}
		}
		else
		{
		    PlayerTextDrawHide(playerid, farmspeed[playerid]);
			PlayerTextDrawShow(playerid, farmwanted[playerid]);
		}
	}
	return 1;
}
public FiveSecondsTimer()
{
	foreach(Player, i)
	{
	    if(PlayerInfo[i][pWantedLevel] == 0 && Tigaanel[i] < 1)
		{
			SetPlayerWantedLevel(i,0);
			PlayerTextDrawHide(i, WantedText[i]);
   			DestroyDynamic3DTextLabel(WantedScris[i]);
		}
	    else if(PlayerInfo[i][pWantedLevel] == 1)
		{
  			SetPlayerWantedLevel(i,1);
	    	new str1[256];
		    PlayerTextDrawShow(i, WantedText[i]);
   			format(str1,sizeof(str1),"Wanted Clear In : ~r~%d Minutes",wantedlost[i]/60+1);
			PlayerTextDrawSetString(i, WantedText[i], str1);
			if(GetPlayerWantedLevel(i) == 1)
			{
				new str2[256];
				format(str2,sizeof(str2),"{FF00FF}Wanted Level: %d",PlayerInfo[i][pWantedLevel]);
				UpdateDynamic3DTextLabelText(WantedScris[i], COLOR_WHITE, str2);
			}
		}
		else if(PlayerInfo[i][pWantedLevel] == 2)
		{
  			SetPlayerWantedLevel(i,2);
	    	new str1[256];
		    PlayerTextDrawShow(i, WantedText[i]);
    		format(str1,sizeof(str1),"Wanted Clear In : ~r~%d Minutes",wantedlost[i]/60+1);
			PlayerTextDrawSetString(i, WantedText[i], str1);
			if(GetPlayerWantedLevel(i) == 2)
			{
				new str2[256];
				format(str2,sizeof(str2),"{FF00FF}Wanted Level: %d",PlayerInfo[i][pWantedLevel]);
				UpdateDynamic3DTextLabelText(WantedScris[i], COLOR_WHITE, str2);
			}
		}
		else if(PlayerInfo[i][pWantedLevel] == 3)
		{
  			SetPlayerWantedLevel(i,3);
	    	new str1[256];
		   	PlayerTextDrawShow(i, WantedText[i]);
    		format(str1,sizeof(str1),"Wanted Clear In : ~r~%d Minutes",wantedlost[i]/60+1);
			PlayerTextDrawSetString(i, WantedText[i], str1);
			if(GetPlayerWantedLevel(i) == 3)
			{
				new str2[256];
				format(str2,sizeof(str2),"{FF00FF}Wanted Level: %d",PlayerInfo[i][pWantedLevel]);
				UpdateDynamic3DTextLabelText(WantedScris[i], COLOR_WHITE, str2);
			}
		}
		else if(PlayerInfo[i][pWantedLevel] == 4)
		{
  			SetPlayerWantedLevel(i,4);
	    	new str1[256];
		    PlayerTextDrawShow(i, WantedText[i]);
    		format(str1,sizeof(str1),"Wanted Clear In : ~r~%d Minutes",wantedlost[i]/60+1);
			PlayerTextDrawSetString(i, WantedText[i], str1);
			if(GetPlayerWantedLevel(i) == 4)
			{
				new str2[256];
				format(str2,sizeof(str2),"{FF00FF}Wanted Level: %d",PlayerInfo[i][pWantedLevel]);
				UpdateDynamic3DTextLabelText(WantedScris[i], COLOR_WHITE, str2);
			}
		}
		else if(PlayerInfo[i][pWantedLevel] == 5)
		{
  			SetPlayerWantedLevel(i,5);
	    	new str1[256];
	    	PlayerTextDrawShow(i, WantedText[i]);
   			format(str1,sizeof(str1),"Wanted Clear In : ~r~%d Minutes",wantedlost[i]/60+1);
			PlayerTextDrawSetString(i, WantedText[i], str1);
			if(GetPlayerWantedLevel(i) == 5)
			{
				new str2[256];
				format(str2,sizeof(str2),"{FF00FF}Wanted Level: %d",PlayerInfo[i][pWantedLevel]);
				UpdateDynamic3DTextLabelText(WantedScris[i], COLOR_WHITE, str2);
			}
		}
		else if(PlayerInfo[i][pWantedLevel] >= 6)
		{
  			SetPlayerWantedLevel(i,6);
		   	new str1[256];
		    PlayerTextDrawShow(i, WantedText[i]);
    		format(str1,sizeof(str1),"Wanted Clear In : ~r~%d Minutes",wantedlost[i]/60+1);
			PlayerTextDrawSetString(i, WantedText[i], str1);
			if(GetPlayerWantedLevel(i) == 6)
			{
				new str2[256];
				format(str2,sizeof(str2),"{FF00FF}Wanted Level: %d",PlayerInfo[i][pWantedLevel]);
				UpdateDynamic3DTextLabelText(WantedScris[i], COLOR_WHITE, str2);
			}
		}
		if(PlayerInfo[i][pPaintBallG] > 0)
		{
			PlayerMapIconPaint(i);
		}
	}
	new query[300],playerid,giverid,actionid,actiontime,complaint,reason[64],stringg[256],playername[30],givername[30],var100[300],dm,reason2[64];
	//Check panel
	format(query, sizeof(query), "SELECT * FROM `panelactions`");
	new Cache: stringresult = mysql_query(SQL, query);
	if(cache_get_row_count() > 0)
	{
		for(new i, j = cache_get_row_count (); i != j; ++i)
		{
		    playerid                    = cache_get_field_content_int(i, "playerid");
		    giverid                     = cache_get_field_content_int(i, "giverid");
   			actionid                    = cache_get_field_content_int(i, "actionid");
   			actiontime                  = cache_get_field_content_int(i, "actiontime");
   			complaint                 	= cache_get_field_content_int(i, "complaintid");
			dm							= cache_get_field_content_int(i, "dm");
   			cache_get_field_content(i, "playername", playername, SQL, sizeof(playername));
   			cache_get_field_content(i, "givername", givername, SQL, sizeof(givername));
   			cache_get_field_content(i, "reason", reason, SQL, sizeof(reason));
            if(actionid == 1)
   			{
      			if(complaint > 0)
         		{
        			format(stringg,sizeof(stringg),"[AdmPanel]: %s Has Been Banned By %s For %d Days | Reason: %s [complaint:%d].",playername,givername,actiontime,reason,complaint);
   					SendClientMessageToAll(COLOR_LIGHTRED, stringg);
					format(reason2,sizeof(reason2),"%s [complaint:%d]",reason,complaint);
				}
				else
				{
    				format(stringg,sizeof(stringg),"[AdmPanel]: %s Has Been Banned By %s For %d Days | Reason: %s.",playername,givername,actiontime,reason);
	    			SendClientMessageToAll(COLOR_LIGHTRED, stringg);
					format(reason2,sizeof(reason2),"%s",reason);
				}
				mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`actiontime`,`reason`,`playername`,`givername`) VALUES ('%d','%d','1','%d','%s','%s','%s')",playerid,giverid,actiontime,reason2,playername,givername);
				mysql_tquery(SQL,var100,"","");
				foreach(Player, idd)
				{
					if(PlayerInfo[idd][pSQLID] == playerid)
					{
						KickEx(idd);
					}
				}
			}
			else if(actionid == 2)
   			{
      			if(complaint > 0)
         		{
        			format(stringg,sizeof(stringg),"[AdmPanel]: %s Has Been Permanent Banned By %s | Reason: %s [complaint:%d].",playername,givername,reason,complaint);
 					SendClientMessageToAll(COLOR_LIGHTRED, stringg);
					format(reason2,sizeof(reason2),"%s [complaint:%d]",reason,complaint);
				}
				else
				{
    				format(stringg,sizeof(stringg),"[AdmPanel]: %s Has Been Permanent Banned by %s | Reason: %s.",playername,givername,reason);
   					SendClientMessageToAll(COLOR_LIGHTRED, stringg);
					format(reason2,sizeof(reason2),"%s",reason);
				}
				mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`actiontime`,`reason`,`playername`,`givername`) VALUES ('%d','%d','2','0','%s','%s','%s')",playerid,giverid,reason2,playername,givername);
				mysql_tquery(SQL,var100,"","");
				foreach(Player, idd)
				{
					if(PlayerInfo[idd][pSQLID] == playerid)
					{
						KickEx(idd);
					}
				}
			}
			else if(actionid == 3)
   			{
      			if(complaint > 0)
         		{
        			format(stringg, sizeof(stringg), "[AdmPanel]: %s was jailed by %s for %d minutes, reason: %s [complaint:%d]",playername,givername,actiontime,reason,complaint);
					SendClientMessageToAll(COLOR_LIGHTRED, stringg);
					format(reason2,sizeof(reason2),"%s [complaint:%d]",reason,complaint);
				}
				else
				{
    				format(stringg, sizeof(stringg), "[AdmPanel]: %s was jailed by %s for %d minutes, reason: %s",playername,givername,actiontime,reason);
					SendClientMessageToAll(COLOR_LIGHTRED, stringg);
					format(reason2,sizeof(reason2),"%s",reason);
				}
				mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`actiontime`,`reason`,`playername`,`givername`) VALUES ('%d','%d','6','%d','%s','%s','%s')",playerid,giverid,actiontime,reason2,playername,givername);
				mysql_tquery(SQL,var100,"","");
				foreach(Player, idd)
				{
					if(PlayerInfo[idd][pSQLID] == playerid)
					{
						ResetPlayerWeaponsEx(idd);
						ResetPlayerWeapons(idd);
						WantedPoints[idd] = 0;
						PlayerInfo[idd][pJailed] = 2;
						PlayerInfo[idd][pJailTime] = actiontime*60;
						JailPrice[idd] = 0;
						SetPlayerInterior(idd, 10);
						new rand;
						rand = random(sizeof(gRandomAJailSpawns));
						SetPlayerPosEx(idd,gRandomAJailSpawns[rand][0],gRandomAJailSpawns[rand][1],gRandomAJailSpawns[rand][2]);
						if(dm > 0)
						{
							PlayerInfo[idd][pGunLic] = 0;
							PlayerInfo[idd][pGunLicT] = 0;
							PlayerInfo[idd][pGunLicSuspend] = dm + 1;
						}
					}
				}
			}
			else if(actionid == 4)
   			{
      			if(complaint > 0)
         		{
        			format(stringg, sizeof(stringg), "[AdmPanel]: %s received a warn from admin %s, reason: %s [complaint:%d].",playername,givername,reason,complaint);
					SendClientMessageToAll(COLOR_LIGHTRED, stringg);
					format(reason2,sizeof(reason2),"%s [complaint:%d]",reason,complaint);
				}
				else
				{
    				format(stringg, sizeof(stringg), "[AdmPanel]: %s received a warn from admin %s, reason: %s.",playername,givername,reason);
					SendClientMessageToAll(COLOR_LIGHTRED, stringg);
					format(reason2,sizeof(reason2),"%s",reason);
				}
				mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`actiontime`,`reason`,`playername`,`givername`) VALUES ('%d','%d','5','%d','%s','%s','%s')",playerid,giverid,actiontime,reason2,playername,givername);
				mysql_tquery(SQL,var100,"","");
				foreach(Player, idd)
				{
					if(PlayerInfo[idd][pSQLID] == playerid)
					{
						PlayerInfo[idd][pWarns] += 1;
					}
				}
				format(query, sizeof(query), "SELECT * FROM `users` WHERE `id`='%d' ORDER BY `id`",playerid);
				new Cache: stringresultt = mysql_query(SQL, query);
				if(cache_get_row_count() > 0)
				{
					new warns,str[256],time;
					for(new is, js = cache_get_row_count (); is != js; ++is)
					{
						warns                    = cache_get_field_content_int(is, "Warnings");
					}
					if(warns > 2)
					{
						format(stringg, sizeof(stringg), "[AdmPanel]: %s has been banned by AdmBot for 3 days, reason: 3/3 warns.",playername);
						time = gettime() + (3*86400);
						mysql_format(SQL,str,sizeof(str),"INSERT INTO bans (PlayerName, AdminName, Reason, IP, Days, IPBan, Permanent, Active, Time) VALUES('%s', 'AdmBot', '3/3 warns', '0', 3, 0, 0, 1, %d)",
						playername,time);
						mysql_tquery(SQL,str,"","");
						mysql_format(SQL,str,sizeof(str),"UPDATE `users` SET `Warnings`='0' WHERE `name`='%s'",playername);
						mysql_tquery(SQL,str,"","");
						mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`actiontime`,`reason`,`playername`,`givername`) VALUES ('%d','0','1','3','3/3 warns','%s','AdmBot')",playerid,playername);
						mysql_tquery(SQL,var100,"","");
						SendClientMessageToAll(COLOR_LIGHTRED, stringg);
						foreach(Player, idd)
						{
							if(PlayerInfo[idd][pSQLID] == playerid)
							{
								KickEx(idd);
							}
						}
					}
				}
				cache_delete(stringresultt);
			}
			else if(actionid == 5)
   			{
      			if(complaint > 0)
         		{
        			format(stringg, sizeof(stringg), "[AdmPanel]: %s has been muted by %s for %d minutes, reason: %s [complaint:%d].",playername,givername,actiontime,reason,complaint);
					SendClientMessageToAll(COLOR_LIGHTRED, stringg);
					format(reason2,sizeof(reason2),"%s [complaint:%d]",reason,complaint);
				}
				else
				{
    				format(stringg, sizeof(stringg), "[AdmPanel]: %s has been muted by %s for %d minutes, reason: %s.",playername,givername,actiontime,reason);
					SendClientMessageToAll(COLOR_LIGHTRED, stringg);
					format(reason2,sizeof(reason2),"%s",reason);
				}
				mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`actiontime`,`reason`,`playername`,`givername`) VALUES ('%d','%d','7','%d','%s','%s','%s')",playerid,giverid,actiontime,reason2,playername,givername);
				mysql_tquery(SQL,var100,"","");
				foreach(Player, idd)
				{
					if(PlayerInfo[idd][pSQLID] == playerid)
					{
						PlayerInfo[idd][pMuted] = 1;
						PlayerInfo[idd][pMuteTime] = actiontime*60;
					}
				}
			}
			else if(actionid == 6)
   			{
      			if(complaint > 0)
         		{
        			format(stringg, sizeof(stringg), "[AdmPanel]: %s has been kicked by %s, reason: %s [complaint:%d].",playername,givername,reason,complaint);
					SendClientMessageToAll(COLOR_LIGHTRED, stringg);
					format(reason2,sizeof(reason2),"%s [complaint:%d]",reason,complaint);
				}
				else
				{
    				format(stringg, sizeof(stringg), "[AdmPanel]: %s has been kicked by %s, reason: %s.",playername,givername,reason);
					SendClientMessageToAll(COLOR_LIGHTRED, stringg);
					format(reason2,sizeof(reason2),"%s",reason);
				}
				mysql_format(SQL, var100, sizeof(var100), "INSERT INTO kicklogs (`playerid`,`giverid`,`playername`,`givername`,`reason`) VALUES ('%d','%d','%s','%s','%s')", playerid,giverid,playername,givername,reason2);
				mysql_tquery(SQL,var100,"","");
				foreach(Player, idd)
				{
					if(PlayerInfo[idd][pSQLID] == playerid)
					{
						KickEx(idd);
					}
				}
			}
		}
		mysql_query(SQL,"DELETE FROM `panelactions`");
	}
	cache_delete(stringresult);
	// Check emails
	format(query, sizeof(query), "SELECT * FROM `emails` WHERE `EmailRead` = '1' ORDER BY `ID`");
	new Cache: stringresult2 = mysql_query(SQL, query);
	if(cache_get_row_count() > 0)
	{
		for(new i, j = cache_get_row_count (); i != j; ++i)
		{
   			playerid                    = cache_get_field_content_int(i, "playerid");
   			giverid                     = cache_get_field_content_int(i, "giverid");
   			foreach(Player, idd)
   			{
   			    if(PlayerInfo[idd][pSQLID] == playerid && PlayerInfo[idd][pNextNotification] < 1 && gPlayerLogged[idd] == 1 || PlayerInfo[idd][pSQLID] == giverid && PlayerInfo[idd][pNextNotification] < 1 && gPlayerLogged[idd] == 1)
   			    {
   			        SendClientMessage(idd, COLOR_YELLOW, "{FF6200}** {FFFF00}You Recieved An Email | Use /Emails To See That {FF6200}**");
   			        PlayerInfo[idd][pNextNotification] = 3600;
				}
			}
		}
	}
	cache_delete(stringresult2);
	// Auto Delete Server Logs
	foreach(Player, id)
	{
	    //Delete Player Logs
		format(query, sizeof(query), "SELECT * FROM `playerlogs` WHERE `playerid` = '%d' ORDER BY `ID`",PlayerInfo[id][pSQLID]);
		new Cache: stringresult3 = mysql_query(SQL, query);
		if(cache_get_row_count() > 10)
		{
			new limit = cache_get_row_count() - 10;
   			mysql_format(SQL, var100, sizeof(var100), "DELETE FROM `playerlogs` WHERE `playerid`='%d' ORDER BY `ID` ASC limit %d", PlayerInfo[id][pSQLID],limit);
    		mysql_tquery(SQL,var100,"","");
		}
		cache_delete(stringresult3);
		//Delete IP Logs
		format(query, sizeof(query), "SELECT * FROM `iplogs` WHERE `playerid` = '%d' ORDER BY `ID`",PlayerInfo[id][pSQLID]);
		new Cache: stringresult4 = mysql_query(SQL, query);
		if(cache_get_row_count() > 20)
		{
			new limit = cache_get_row_count() - 20;
   			mysql_format(SQL, var100, sizeof(var100), "DELETE FROM `iplogs` WHERE `playerid`='%d' ORDER BY `ID` ASC limit %d", PlayerInfo[id][pSQLID],limit);
   			mysql_tquery(SQL,var100,"","");
		}
		cache_delete(stringresult4);
		//Delete Kill Logs
		format(query, sizeof(query), "SELECT * FROM `kill_logs` WHERE `playerid` = '%d' ORDER BY `ID`",PlayerInfo[id][pSQLID]);
		new Cache: stringresult5 = mysql_query(SQL, query);
		if(cache_get_row_count() > 10)
		{
			new limit = cache_get_row_count() - 10;
   			mysql_format(SQL, var100, sizeof(var100), "DELETE FROM `kill_logs` WHERE `playerid`='%d' ORDER BY `ID` ASC limit %d", PlayerInfo[id][pSQLID],limit);
    		mysql_tquery(SQL,var100,"","");
		}
		cache_delete(stringresult5);
		//Delete Suspect Logs
		format(query, sizeof(query), "SELECT * FROM `su_logs` WHERE `playerid` = '%d' ORDER BY `ID`",PlayerInfo[id][pSQLID]);
		new Cache: stringresult6 = mysql_query(SQL, query);
		if(cache_get_row_count() > 10)
		{
			new limit = cache_get_row_count() - 10;
   			mysql_format(SQL, var100, sizeof(var100), "DELETE FROM `su_logs` WHERE `playerid`='%d' ORDER BY `ID` ASC limit %d", PlayerInfo[id][pSQLID],limit);
    		mysql_tquery(SQL,var100,"","");
		}
		cache_delete(stringresult6);
	}
	//Auto Expire Clan
	format(query, sizeof(query), "SELECT * FROM `clans` WHERE `clanExpire` < '%d' AND `clanActive`='1' ORDER BY `clanID`",gettime());
	new Cache: stringresult8 = mysql_query(SQL, query);
	if(cache_get_row_count() > 0)
	{
		new pid,clanid;
		clanid = cache_get_field_content_int(0, "clanID");
		foreach(Player, id)
		{
			if(PlayerInfo[id][pClan] == clanid)
			{
				if(PlayerInfo[id][pCRank] < 7)
				{
					new stringname[128];
					SetPlayerName(id, PlayerInfo[id][pNormalName]);
					format(stringname,sizeof(stringname),"%s / New Land",PlayerInfo[id][pNormalName]);
					PlayerInfo[id][pClan] = 0;
					PlayerInfo[id][pCRank] = 0;
					PlayerInfo[id][pCWarns] = 0;
					PlayerInfo[id][pClanTag] = 0;
				}
			}
		}
		format(query, sizeof(query), "SELECT * FROM `users` WHERE `Clan` = '%d'",clanid);
		new Cache: stringresult9 = mysql_query(SQL, query);
		for(new id, jd = cache_get_row_count (); id != jd; ++id)
		{
			pid = cache_get_field_content_int(id, "id");
			mysql_format(SQL, var100, sizeof(var100), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','Since the clan has expired, all members have been kicked out, except for the leader.')",pid);
			mysql_tquery(SQL,var100,"","");
		}
		cache_delete(stringresult9);
		mysql_format(SQL, var100, sizeof(var100), "UPDATE `users` SET `Clan`='0',`CRank`='0',`ClanTag`='0',`CWarns`='0' WHERE `Clan`='%d' AND `CRank` < '7'",clanid);
		mysql_tquery(SQL,var100,"","");
		mysql_format(SQL, var100, sizeof(var100), "UPDATE `clans` SET `clanActive`='0' WHERE `clanID`='%d'",clanid);
		mysql_tquery(SQL,var100,"","");
	}
	cache_delete(stringresult8);
	return 1;
}
public SetPlayerPNS()
{
	foreach(Player, x)
	{
	    new carid = GetPlayerVehicleID(x),
			Float:health,
			string[256];
    	if(IsPlayerInRangeOfPoint(x,15.0,1025.0671,-1023.7895,32.1016))
		{
	    	GetVehicleHealth(carid, health);
	    	if(health < 950.0)
	    	{
	    		if(GetPlayerState(x) == 2)
	    		{
	    	    	pnsmoney[x] = GetPlayerMoney(x);
					SetTimerEx("AfterSpray", 3000, false, "i", x);
					return 1;
				}
			}
		}
		if(IsPlayerInRangeOfPoint(x,15.0,719.9537,-457.2771,16.3359))
		{
	    	GetVehicleHealth(carid, health);
	    	if(health < 950.0)
	    	{
	    		if(GetPlayerState(x) == 2)
	    		{
	    	    	pnsmoney[x] = GetPlayerMoney(x);
                	SetTimerEx("AfterSpray", 3000, false, "i", x);
					return 1;
				}
			}
		}
		if(IsPlayerInRangeOfPoint(x,15.0,487.4134,-1740.1738,11.1370))
		{
	    	GetVehicleHealth(carid, health);
	   	 	if(health < 950.0)
	    	{
	    		if(GetPlayerState(x) == 2)
	    		{
	    	    	pnsmoney[x] = GetPlayerMoney(x);
                	SetTimerEx("AfterSpray", 3000, false, "i", x);
					return 1;
				}
			}
		}
		if(IsPlayerInRangeOfPoint(x,15.0,2065.5911,-1831.4495,13.5469))
		{
	    	GetVehicleHealth(carid, health);
	    	if(health < 950.0)
	    	{
	    		if(GetPlayerState(x) == 2)
	    		{
	    	    	pnsmoney[x] = GetPlayerMoney(x);
            		SetTimerEx("AfterSpray", 3000, false, "i", x);
					return 1;
				}
			}
		}
		if(IsPlayerInRangeOfPoint(x,15.0,1974.3198,2162.7249,11.0703))
		{
	    	GetVehicleHealth(carid, health);
	    	if(health < 950.0)
	    	{
	    		if(GetPlayerState(x) == 2)
	    		{
	    	    	pnsmoney[x] = GetPlayerMoney(x);
                	SetTimerEx("AfterSpray", 3000, false, "i", x);
					return 1;
				}
			}
		}
		if(IsPlayerInRangeOfPoint(x,15.0,-100.1086,1117.3312,19.7417))
		{
	    	GetVehicleHealth(carid, health);
	    	if(health < 950.0)
	    	{
	    		if(GetPlayerState(x) == 2)
	    		{
	    	    	pnsmoney[x] = GetPlayerMoney(x);
                	SetTimerEx("AfterSpray", 3000, false, "i", x);
					return 1;
				}
			}
		}
		if(IsPlayerInRangeOfPoint(x,15.0,BizzInfo[51][bEntranceX],BizzInfo[51][bEntranceY],BizzInfo[51][bEntranceZ]))
		{
	    	if(EnterInModShop[x] > 0)
	    	{
	        	GivePlayerCash(x, -BizzInfo[51][bEntranceCost]);
				BizzInfo[51][bTill] += BizzInfo[51][bEntranceCost];
				new str[128];
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='51'",BizzInfo[51][bTill]);
				mysql_tquery(SQL,str,"","");
				format(string,sizeof(string),"~r~-%d$", BizzInfo[51][bEntranceCost]);
   				GameTextForPlayer(x, string, 5000, 1);
   				EnterInModShop[x] = 0;
				return 1;
			}
		}
		if(IsPlayerInRangeOfPoint(x,15.0,BizzInfo[38][bEntranceX],BizzInfo[38][bEntranceY],BizzInfo[38][bEntranceZ]))
		{
	    	if(EnterInModShop[x] > 0)
	    	{
	        	GivePlayerCash(x, -BizzInfo[38][bEntranceCost]);
				BizzInfo[38][bTill] += BizzInfo[38][bEntranceCost];
				new str[128];
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='38'",BizzInfo[38][bTill]);
				mysql_tquery(SQL,str,"","");
				format(string,sizeof(string),"~r~-%d$", BizzInfo[38][bEntranceCost]);
   				GameTextForPlayer(x, string, 5000, 1);
   				EnterInModShop[x] = 0;
				return 1;
			}
		}
		if(IsPlayerInRangeOfPoint(x,15.0,BizzInfo[39][bEntranceX],BizzInfo[39][bEntranceY],BizzInfo[39][bEntranceZ]))
		{
	    	if(EnterInModShop[x] > 0)
	    	{
	        	GivePlayerCash(x, -BizzInfo[39][bEntranceCost]);
				BizzInfo[39][bTill] += BizzInfo[39][bEntranceCost];
				new str[128];
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='39'",BizzInfo[39][bTill]);
				mysql_tquery(SQL,str,"","");
				format(string,sizeof(string),"~r~-%d$", BizzInfo[39][bEntranceCost]);
   				GameTextForPlayer(x, string, 5000, 1);
   				EnterInModShop[x] = 0;
				return 1;
			}
		}
	}
	return 1;
}
public SavePlayerData()
{
	foreach(Player, i)
	{
    	OnPlayerDateUpdateX2(i);
		Update(i, pPayDayx);
		Update(i, pPayCheckx);
		Update(i, pFpunishx);
		Update(i, pHTokenx);
		Update(i, pConnectTimex);
		Update(i, pLawyerx);
		Update(i, pBank);
		Update(i, pCashx);
		Update(i, pRP);
		Update(i, pJailTimex);
		Update(i, pLevelx);
	}
	printf("SavePlayerData: All player data saved(5 minutes).");
	return 1;
}
public PlayerMapIconPaint(playerid)
{
	foreach(Player,iss)
	{
		if(PlayerInfo[iss][pPaintBallG] == PlayerInfo[playerid][pPaintBallG])
		{
			if(playerid != iss)
			{
				SetPlayerMarkerForPlayer( playerid, iss, GetPlayerColor( iss ) );
				SetPlayerMarkerForPlayer( iss, playerid, GetPlayerColor( playerid ) );
			}
		}
	}
	return 1;
}
public PrepareRoundPaintBall1()
{
	if(paintp[1] > 1)
 	{
  		new string[128];
    	if(paintrs[1] >= 1)
     	{
      		paintrs[1]--;
			foreach(Player, i)
			{
			    if(PlayerInfo[i][pPaintBallG] == 1)
	    		{
	    		    PlayerTextDrawShow(i, PaintBallText[i]);
	                if(paintrs[1] > 9) format(string,sizeof(string),"PAINTBALL ROUND STARTS IN ~y~00:%d",paintrs[1]);
	                else format(string,sizeof(string),"PAINTBALL ROUND STARTS IN ~y~00:0%d",paintrs[1]);
	                PlayerTextDrawSetString(i, PaintBallText[i], string);
				}
			}
		}
		if(paintrs[1] == 2)
		{
		    paintrs[1] = 0;
			paintt[1] = 301;
			KillTimer(preparepaint1);
			paintrun1 = SetTimer("PaintBallRun1", 1000, 1);
		}
  	}
   	else if(paintp[1] < 2)
	{
		paintt[1] = 0;
  		paintrs[1] = 0;
  		PaintWinner[1] = 999;
		PaintBallWinnerKills[1] = 0;
		paintvoteg[1][0] = 0;
		paintvoteg[1][1] = 0;
		paintvoteg[1][2] = 0;
		paintvotem[1][0] = 0;
		paintvotem[1][1] = 0;
		paintvotem[1][2] = 0;
		paintvotem[1][3] = 0;
		paintvotem[1][4] = 0;
		mapvoted[1] = 0;
		gunvoted[1] = 0;
		KillTimer(preparepaint1);
		KillTimer(paintrun1);
  		foreach(Player, i)
		{
			if(PlayerInfo[i][pPaintBallG] == 1)
			{
			    curatj[i] = 0;
			    for (new idd2 = 0; idd2 != 5; ++idd2) SendDeathMessageToPlayer(i, 1001, 1001, 1001);
			    PlayerInfo[i][pPaintBallKills] = 0;
			    PlayerInfo[i][pPaintBallVoted] = 0;
			    PlayerInfo[i][pPaintBallVoted2] = 0;
			    ResetPlayerWeaponsEx(i);
		    	ResetPlayerWeapons(i);
		    	SetPlayerArmourEx(i, 0);
			    PlayerTextDrawShow(i, PaintBallText[i]);
				PlayerTextDrawSetString(i, PaintBallText[i], "~g~WAITING FOR MORE PLAYERS TO JOIN...");
   				GameTextForPlayer(i, "~y~NOT ENOUGH PLAYERS TO START...", 5000, 5);
			}
		}
	}
	return 1;
}
public PrepareRoundPaintBall2()
{
	if(paintp[2] > 1)
 	{
  		new string[128];
    	if(paintrs[2] >= 1)
     	{
      		paintrs[2]--;
			foreach(Player, i)
			{
			    if(PlayerInfo[i][pPaintBallG] == 2)
	    		{
	    		    PlayerTextDrawShow(i, PaintBallText[i]);
	                if(paintrs[2] > 9) format(string,sizeof(string),"PAINTBALL ROUND STARTS IN ~y~00:%d",paintrs[2]);
	                else format(string,sizeof(string),"PAINTBALL ROUND STARTS IN ~y~00:0%d",paintrs[2]);
	                PlayerTextDrawSetString(i, PaintBallText[i], string);
				}
			}
		}
		if(paintrs[2] == 2)
		{
		    paintrs[2] = 0;
			paintt[2] = 301;
			KillTimer(preparepaint2);
			paintrun2 = SetTimer("PaintBallRun2", 1000, 1);
		}
  	}
   	else if(paintp[2] < 2)
	{
		paintt[2] = 0;
  		paintrs[2] = 0;
  		PaintWinner[2] = 999;
		PaintBallWinnerKills[2] = 0;
		paintvoteg[2][0] = 0;
		paintvoteg[2][1] = 0;
		paintvoteg[2][2] = 0;
		paintvotem[2][0] = 0;
		paintvotem[2][1] = 0;
		paintvotem[2][2] = 0;
		paintvotem[2][3] = 0;
		paintvotem[2][4] = 0;
		mapvoted[2] = 0;
		gunvoted[2] = 0;
		KillTimer(preparepaint2);
		KillTimer(paintrun2);
  		foreach(Player, i)
		{
			if(PlayerInfo[i][pPaintBallG] == 2)
			{
			    curatj[i] = 0;
			    for (new idd2 = 0; idd2 != 5; ++idd2) SendDeathMessageToPlayer(i, 1001, 1001, 1001);
			    PlayerInfo[i][pPaintBallKills] = 0;
			    PlayerInfo[i][pPaintBallVoted] = 0;
			    PlayerInfo[i][pPaintBallVoted2] = 0;
			    ResetPlayerWeaponsEx(i);
		    	ResetPlayerWeapons(i);
		    	SetPlayerArmourEx(i, 0);
			    PlayerTextDrawShow(i, PaintBallText[i]);
				PlayerTextDrawSetString(i, PaintBallText[i], "~g~WAITING FOR MORE PLAYERS TO JOIN...");
   				GameTextForPlayer(i, "~y~NOT ENOUGH PLAYERS TO START...", 5000, 5);
			}
		}
	}
	return 1;
}
public PrepareRoundPaintBall3()
{
    if(paintp[3] > 1)
 	{
  		new string[128];
    	if(paintrs[3] >= 1)
     	{
      		paintrs[3]--;
			foreach(Player, i)
			{
			    if(PlayerInfo[i][pPaintBallG] == 3)
	    		{
	    		    PlayerTextDrawShow(i, PaintBallText[i]);
	                if(paintrs[3] > 9) format(string,sizeof(string),"PAINTBALL ROUND STARTS IN ~y~00:%d",paintrs[3]);
	                else format(string,sizeof(string),"PAINTBALL ROUND STARTS IN ~y~00:0%d",paintrs[3]);
	                PlayerTextDrawSetString(i, PaintBallText[i], string);
				}
			}
		}
		if(paintrs[3] == 2)
		{
		    paintrs[3] = 0;
			paintt[3] = 601;
			KillTimer(preparepaint3);
			paintrun3 = SetTimer("PaintBallRun3", 1000, 1);
		}
  	}
   	else if(paintp[3] < 2)
	{
		paintt[3] = 0;
  		paintrs[3] = 0;
  		PaintWinner[3] = 999;
		PaintBallWinnerKills[3] = 0;
		paintvotem[3][0] = 0;
		paintvotem[3][1] = 0;
		paintvotem[3][2] = 0;
		paintvotem[3][3] = 0;
		paintvotem[3][4] = 0;
		mapvoted[3] = 0;
		KillTimer(preparepaint3);
		KillTimer(paintrun3);
  		foreach(Player, i)
		{
			if(PlayerInfo[i][pPaintBallG] == 3)
			{
			    curatj[i] = 0;
			    for (new idd2 = 0; idd2 != 5; ++idd2) SendDeathMessageToPlayer(i, 1001, 1001, 1001);
			    PlayerInfo[i][pPaintBallKills] = 0;
			    PlayerInfo[i][pPaintBallVoted] = 0;
			    PlayerInfo[i][pPaintBallVoted2] = 0;
			    ResetPlayerWeaponsEx(i);
		    	ResetPlayerWeapons(i);
		    	SetPlayerArmourEx(i, 0);
			    PlayerTextDrawShow(i, PaintBallText[i]);
				PlayerTextDrawSetString(i, PaintBallText[i], "~g~WAITING FOR MORE PLAYERS TO JOIN...");
   				GameTextForPlayer(i, "~y~NOT ENOUGH PLAYERS TO START...", 5000, 5);
			}
		}
	}
	return 1;
}
public PrepareRoundPaintBall4()
{
    if(paintp[4] > 1)
 	{
  		new string[128];
    	if(paintrs[4] >= 1)
     	{
      		paintrs[4]--;
			foreach(Player, i)
			{
			    if(PlayerInfo[i][pPaintBallG] == 4)
	    		{
	    		    PlayerTextDrawShow(i, PaintBallText[i]);
	                if(paintrs[4] > 9) format(string,sizeof(string),"PAINTBALL ROUND STARTS IN ~y~00:%d",paintrs[4]);
	                else format(string,sizeof(string),"PAINTBALL ROUND STARTS IN ~y~00:0%d",paintrs[4]);
	                PlayerTextDrawSetString(i, PaintBallText[i], string);
				}
			}
		}
		if(paintrs[4] == 2)
		{
		    paintrs[4] = 0;
			paintt[4] = 301;
			KillTimer(preparepaint4);
			paintrun4 = SetTimer("PaintBallRun4", 1000, 1);
		}
  	}
   	else if(paintp[4] < 2)
	{
		paintt[4] = 0;
  		paintrs[4] = 0;
  		PaintWinner[4] = 999;
		PaintBallWinnerKills[4] = 0;
		paintvotem[4][0] = 0;
		paintvotem[4][1] = 0;
		paintvotem[4][2] = 0;
		paintvotem[4][3] = 0;
		paintvotem[4][4] = 0;
		mapvoted[4] = 0;
		KillTimer(preparepaint4);
		KillTimer(paintrun4);
  		foreach(Player, i)
		{
			if(PlayerInfo[i][pPaintBallG] == 4)
			{
			    curatj[i] = 0;
			    for (new idd2 = 0; idd2 != 5; ++idd2) SendDeathMessageToPlayer(i, 1001, 1001, 1001);
			    PlayerInfo[i][pPaintBallKills] = 0;
			    PlayerInfo[i][pPaintBallVoted] = 0;
			    PlayerInfo[i][pPaintBallVoted2] = 0;
			    ResetPlayerWeaponsEx(i);
		    	ResetPlayerWeapons(i);
		    	SetPlayerArmourEx(i, 0);
			    PlayerTextDrawShow(i, PaintBallText[i]);
				PlayerTextDrawSetString(i, PaintBallText[i], "~g~WAITING FOR MORE PLAYERS TO JOIN...");
   				GameTextForPlayer(i, "~y~NOT ENOUGH PLAYERS TO START...", 5000, 5);
			}
		}
	}
	return 1;
}
public PaintBallRun1()
{
    paintt[1]--;
    if(paintp[1] > 1)
 	{
  		new string[128];
  		if(paintt[1] >= 1)
		{
		    if(paintt[1] == 300)
		    {
		        new maxim,weapon,maximm,map;
		        for(new g = 0; g < 3; g++) if(paintvoteg[1][g] > maxim) { maxim = paintvoteg[1][g]; weapon = g;}
		        if(gunvoted[1] > 0)
		        {
					if(weapon == 0) paintg[1] = 1;
					if(weapon == 1) paintg[1] = 2;
					if(weapon == 2) paintg[1] = 3;
				}
				for(new m = 0; m < 5; m++) if(paintvotem[1][m] > maximm) { maximm = paintvotem[1][m]; map = m;}
				if(mapvoted[1] > 0)
				{
					if(map == 0) paintm[1] = 1;
					if(map == 1) paintm[1] = 2;
					if(map == 2) paintm[1] = 3;
					if(map == 3) paintm[1] = 4;
					if(map == 4) paintm[1] = 5;
				}
		        foreach(Player, i)
				{
 					if(PlayerInfo[i][pPaintBallG] == 1)
 					{
						SetPlayerSpawn(i);
					}
				}
			}
			foreach(Player, i)
			{
 				if(PlayerInfo[i][pPaintBallG] == 1)
 				{
   					new stringg[64];
   					PlayerTextDrawShow(i, PaintBallText[i]);
        			new minutes = floatround(paintt[1]/60),
  			    		seconds = floatround(paintt[1] - minutes*60);
       				if(seconds>9)format(stringg,sizeof(stringg),"0%d:%d",minutes,seconds);
   					else format(stringg,sizeof(stringg),"0%d:0%d",minutes,seconds);
   					format(string,sizeof(string),"PAINTBALL ROUND ENDS IN ~b~%s",stringg);
    				PlayerTextDrawSetString(i, PaintBallText[i], string);
				}
			}
		}
		if(paintt[1] == 2)
		{
		    if(PaintWinner[1] != 0)
	    	{
 	    		foreach(Player, i)
				{
  					if(PlayerInfo[i][pPaintBallG] == 1)
   					{
  						format(string,sizeof(string),"Round over! Winner: %s - %d kills.",GetName(PaintWinner[1]),PaintBallWinnerKills[1]);
						SendClientMessage(i, COLOR_YELLOW, string);
						SendClientMessage(i, COLOR_YELLOW, "Use /votegun to vote for a gun. Use /votemap to vote for a map.");
						ResetPlayerWeaponsEx(i);
		    			ResetPlayerWeapons(i);
		    			SetPlayerArmourEx(i, 0);
		    			PlayerInfo[i][pPaintBallKills] = 0;
		    			PlayerInfo[i][pPaintBallVoted] = 0;
		    			PlayerInfo[i][pPaintBallVoted2] = 0;
		    			for (new idd2 = 0; idd2 != 5; ++idd2) SendDeathMessageToPlayer(i, 1001, 1001, 1001);
		    			curatj[i] = 0;
					}
				}
				KillTimer(paintrun1);
				paintt[1] = 0;
				paintrs[1] = 31;
				preparepaint1 = SetTimer("PrepareRoundPaintBall1", 1000, 1);
				paintg[1] = 1;
				PaintWinner[1] = 999;
				PaintBallWinnerKills[1] = 0;
				paintvoteg[1][0] = 0;
				paintvoteg[1][1] = 0;
				paintvoteg[1][2] = 0;
				paintvotem[1][0] = 0;
				paintvotem[1][1] = 0;
				paintvotem[1][2] = 0;
				paintvotem[1][3] = 0;
				paintvotem[1][4] = 0;
				mapvoted[1] = 0;
				gunvoted[1] = 0;
			}
		}
	}
    else if(paintp[1] < 2)
	{
		paintt[1] = 0;
  		paintrs[1] = 0;
  		PaintWinner[1] = 999;
		PaintBallWinnerKills[1] = 0;
		paintvoteg[1][0] = 0;
		paintvoteg[1][1] = 0;
		paintvoteg[1][2] = 0;
		paintvotem[1][0] = 0;
		paintvotem[1][1] = 0;
		paintvotem[1][2] = 0;
		paintvotem[1][3] = 0;
		paintvotem[1][4] = 0;
		mapvoted[1] = 0;
		gunvoted[1] = 0;
		KillTimer(preparepaint1);
		KillTimer(paintrun1);
  		foreach(Player, i)
		{
			if(PlayerInfo[i][pPaintBallG] == 1)
			{
			    for (new idd2 = 0; idd2 != 5; ++idd2) SendDeathMessageToPlayer(i, 1001, 1001, 1001);
			    ResetPlayerWeaponsEx(i);
		    	ResetPlayerWeapons(i);
		    	SetPlayerArmourEx(i, 0);
			    PlayerInfo[i][pPaintBallKills] = 0;
			    PlayerInfo[i][pPaintBallVoted] = 0;
			    PlayerInfo[i][pPaintBallVoted2] = 0;
			    curatj[i] = 0;
			    PlayerTextDrawShow(i, PaintBallText[i]);
				PlayerTextDrawSetString(i, PaintBallText[i], "~g~WAITING FOR MORE PLAYERS TO JOIN...");
   				GameTextForPlayer(i, "~y~NOT ENOUGH PLAYERS TO START...", 5000, 5);
			}
		}
	}
	return 1;
}
public PaintBallRun2()
{
    paintt[2]--;
    if(paintp[2] > 1)
 	{
  		new string[128];
  		if(paintt[2] >= 1)
		{
		    if(paintt[2] == 300)
		    {
		        new maxim,weapon,maximm,map;
		        for(new g = 0; g < 3; g++) if(paintvoteg[2][g] > maxim) { maxim = paintvoteg[2][g]; weapon = g;}
		        if(gunvoted[2] > 0)
		        {
					if(weapon == 0) paintg[2] = 1;
					if(weapon == 1) paintg[2] = 2;
					if(weapon == 2) paintg[2] = 3;
				}
				for(new m = 0; m < 5; m++) if(paintvotem[2][m] > maximm) { maximm = paintvotem[2][m]; map = m;}
				if(mapvoted[2] > 0)
				{
					if(map == 0) paintm[2] = 1;
					if(map == 1) paintm[2] = 2;
					if(map == 2) paintm[2] = 3;
					if(map == 3) paintm[2] = 4;
					if(map == 4) paintm[2] = 5;
				}
		        foreach(Player, i)
				{
 					if(PlayerInfo[i][pPaintBallG] == 2)
 					{
						SetPlayerSpawn(i);
					}
				}
			}
			foreach(Player, i)
			{
 				if(PlayerInfo[i][pPaintBallG] == 2)
 				{
   					new stringg[64];
   					PlayerTextDrawShow(i, PaintBallText[i]);
        			new minutes = floatround(paintt[2]/60),
  			    		seconds = floatround(paintt[2] - minutes*60);
       				if(seconds>9)format(stringg,sizeof(stringg),"0%d:%d",minutes,seconds);
   					else format(stringg,sizeof(stringg),"0%d:0%d",minutes,seconds);
   					format(string,sizeof(string),"PAINTBALL ROUND ENDS IN ~b~%s",stringg);
    				PlayerTextDrawSetString(i, PaintBallText[i], string);
				}
			}
		}
		if(paintt[2] == 2)
		{
		    if(PaintWinner[2] != 0)
	    	{
 	    		foreach(Player, i)
				{
  					if(PlayerInfo[i][pPaintBallG] == 2)
   					{
  						format(string,sizeof(string),"Round over! Winner: %s - %d kills.",GetName(PaintWinner[2]),PaintBallWinnerKills[2]);
						SendClientMessage(i, COLOR_YELLOW, string);
						SendClientMessage(i, COLOR_YELLOW, "Use /votegun to vote for a gun. Use /votemap to vote for a map.");
						ResetPlayerWeaponsEx(i);
		    			ResetPlayerWeapons(i);
		    			SetPlayerArmourEx(i, 0);
		    			PlayerInfo[i][pPaintBallKills] = 0;
		    			PlayerInfo[i][pPaintBallVoted] = 0;
		    			PlayerInfo[i][pPaintBallVoted2] = 0;
		    			for (new idd2 = 0; idd2 != 5; ++idd2) SendDeathMessageToPlayer(i, 1001, 1001, 1001);
		    			curatj[i] = 0;
					}
				}
				KillTimer(paintrun2);
				paintt[2] = 0;
				paintrs[2] = 31;
				preparepaint2 = SetTimer("PrepareRoundPaintBall2", 1000, 1);
				paintg[2] = 1;
				PaintWinner[2] = 999;
				PaintBallWinnerKills[2] = 0;
				paintvoteg[2][0] = 0;
				paintvoteg[2][1] = 0;
				paintvoteg[2][2] = 0;
				paintvotem[2][0] = 0;
				paintvotem[2][1] = 0;
				paintvotem[2][2] = 0;
				paintvotem[2][3] = 0;
				paintvotem[2][4] = 0;
				mapvoted[2] = 0;
				gunvoted[2] = 0;
			}
		}
	}
    else if(paintp[2] < 2)
	{
		paintt[2] = 0;
  		paintrs[2] = 0;
  		PaintWinner[2] = 999;
		PaintBallWinnerKills[2] = 0;
		paintvoteg[2][0] = 0;
		paintvoteg[2][1] = 0;
		paintvoteg[2][2] = 0;
		paintvotem[2][0] = 0;
		paintvotem[2][1] = 0;
		paintvotem[2][2] = 0;
		paintvotem[2][3] = 0;
		paintvotem[2][4] = 0;
		mapvoted[2] = 0;
		gunvoted[2] = 0;
		KillTimer(paintrun2);
		KillTimer(preparepaint2);
  		foreach(Player, i)
		{
			if(PlayerInfo[i][pPaintBallG] == 2)
			{
			    for (new idd2 = 0; idd2 != 5; ++idd2) SendDeathMessageToPlayer(i, 1001, 1001, 1001);
			    ResetPlayerWeaponsEx(i);
		    	ResetPlayerWeapons(i);
		    	SetPlayerArmourEx(i, 0);
			    PlayerInfo[i][pPaintBallKills] = 0;
			    PlayerInfo[i][pPaintBallVoted] = 0;
			    PlayerInfo[i][pPaintBallVoted2] = 0;
			    curatj[i] = 0;
			    PlayerTextDrawShow(i, PaintBallText[i]);
				PlayerTextDrawSetString(i, PaintBallText[i], "~g~WAITING FOR MORE PLAYERS TO JOIN...");
   				GameTextForPlayer(i, "~y~NOT ENOUGH PLAYERS TO START...", 5000, 5);
			}
		}
	}
	return 1;
}
public PaintBallRun3()
{
    paintt[3]--;
    if(paintp[3] > 1)
 	{
  		new string[128];
  		if(paintt[3] >= 1)
		{
		    if(paintt[3] == 600)
		    {
		        new maximm,map;
				for(new m = 0; m < 5; m++) if(paintvotem[3][m] > maximm) { maximm = paintvotem[3][m]; map = m;}
				if(mapvoted[3] > 0)
				{
					if(map == 0) paintm[3] = 1;
					if(map == 1) paintm[3] = 2;
					if(map == 2) paintm[3] = 3;
					if(map == 3) paintm[3] = 4;
					if(map == 4) paintm[3] = 5;
				}
		        foreach(Player, i)
				{
 					if(PlayerInfo[i][pPaintBallG] == 3)
 					{
						SetPlayerSpawn(i);
					}
				}
			}
			foreach(Player, i)
			{
 				if(PlayerInfo[i][pPaintBallG] == 3)
 				{
   					new stringg[64];
   					PlayerTextDrawShow(i, PaintBallText[i]);
        			new minutes = floatround(paintt[3]/60),
  			    		seconds = floatround(paintt[3] - minutes*60);
       				if(seconds>9)format(stringg,sizeof(stringg),"0%d:%d",minutes,seconds);
   					else format(stringg,sizeof(stringg),"0%d:0%d",minutes,seconds);
   					format(string,sizeof(string),"PAINTBALL ROUND ENDS IN ~b~%s",stringg);
    				PlayerTextDrawSetString(i, PaintBallText[i], string);
				}
			}
		}
		if(paintt[3] == 2)
		{
		    if(PaintWinner[3] != 0)
	    	{
 	    		foreach(Player, i)
				{
  					if(PlayerInfo[i][pPaintBallG] == 3)
   					{
  						format(string,sizeof(string),"Round over! Winner: %s - %d kills.",GetName(PaintWinner[3]),PaintBallWinnerKills[3]);
						SendClientMessage(i, COLOR_YELLOW, string);
						SendClientMessage(i, COLOR_YELLOW, "Use /votemap to vote for a map.");
						ResetPlayerWeaponsEx(i);
		    			ResetPlayerWeapons(i);
		    			SetPlayerArmourEx(i, 0);
		    			PlayerInfo[i][pPaintBallKills] = 0;
		    			PlayerInfo[i][pPaintBallVoted] = 0;
		    			PlayerInfo[i][pPaintBallVoted2] = 0;
		    			for (new idd2 = 0; idd2 != 5; ++idd2) SendDeathMessageToPlayer(i, 1001, 1001, 1001);
		    			curatj[i] = 0;
					}
				}
				KillTimer(paintrun3);
				paintt[3] = 0;
				paintrs[3] = 31;
				preparepaint3 = SetTimer("PrepareRoundPaintBall3", 1000, 1);
				PaintWinner[3] = 999;
				PaintBallWinnerKills[3] = 0;
				paintvotem[3][0] = 0;
				paintvotem[3][1] = 0;
				paintvotem[3][2] = 0;
				paintvotem[3][3] = 0;
				paintvotem[3][4] = 0;
				mapvoted[3] = 0;
			}
		}
	}
    else if(paintp[3] < 2)
	{
		paintt[3] = 0;
  		paintrs[3] = 0;
  		PaintWinner[3] = 999;
		PaintBallWinnerKills[3] = 0;
		paintvotem[3][0] = 0;
		paintvotem[3][1] = 0;
		paintvotem[3][2] = 0;
		paintvotem[3][3] = 0;
		paintvotem[3][4] = 0;
		mapvoted[3] = 0;
		KillTimer(preparepaint3);
		KillTimer(paintrun3);
  		foreach(Player, i)
		{
			if(PlayerInfo[i][pPaintBallG] == 3)
			{
			    for (new idd2 = 0; idd2 != 5; ++idd2) SendDeathMessageToPlayer(i, 1001, 1001, 1001);
			    ResetPlayerWeaponsEx(i);
		    	ResetPlayerWeapons(i);
		    	SetPlayerArmourEx(i, 0);
			    PlayerInfo[i][pPaintBallKills] = 0;
			    PlayerInfo[i][pPaintBallVoted] = 0;
			    PlayerInfo[i][pPaintBallVoted2] = 0;
			    curatj[i] = 0;
			    PlayerTextDrawShow(i, PaintBallText[i]);
				PlayerTextDrawSetString(i, PaintBallText[i], "~g~WAITING FOR MORE PLAYERS TO JOIN...");
   				GameTextForPlayer(i, "~y~NOT ENOUGH PLAYERS TO START...", 5000, 5);
			}
		}
	}
	return 1;
}
public PaintBallRun4()
{
    paintt[4]--;
    if(paintp[4] > 1)
 	{
  		new string[128];
  		if(paintt[4] >= 1)
		{
		    if(paintt[4] == 300)
		    {
		        new maximm,map;
				for(new m = 0; m < 5; m++) if(paintvotem[4][m] > maximm) { maximm = paintvotem[4][m]; map = m;}
				if(mapvoted[4] > 0)
				{
					if(map == 0) paintm[4] = 1;
					if(map == 1) paintm[4] = 2;
					if(map == 2) paintm[4] = 3;
					if(map == 3) paintm[4] = 4;
					if(map == 4) paintm[4] = 5;
				}
		        foreach(Player, i)
				{
 					if(PlayerInfo[i][pPaintBallG] == 4)
 					{
						SetPlayerSpawn(i);
					}
				}
			}
			foreach(Player, i)
			{
 				if(PlayerInfo[i][pPaintBallG] == 4)
 				{
   					new stringg[64];
   					PlayerTextDrawShow(i, PaintBallText[i]);
        			new minutes = floatround(paintt[4]/60),
  			    		seconds = floatround(paintt[4] - minutes*60);
       				if(seconds>9)format(stringg,sizeof(stringg),"0%d:%d",minutes,seconds);
   					else format(stringg,sizeof(stringg),"0%d:0%d",minutes,seconds);
   					format(string,sizeof(string),"PAINTBALL ROUND ENDS IN ~b~%s",stringg);
    				PlayerTextDrawSetString(i, PaintBallText[i], string);
				}
			}
		}
		if(paintt[4] == 2)
		{
		    if(PaintWinner[4] != 0)
	    	{
 	    		foreach(Player, i)
				{
  					if(PlayerInfo[i][pPaintBallG] == 4)
   					{
  						format(string,sizeof(string),"Round over! Winner: %s - %d kills.",GetName(PaintWinner[4]),PaintBallWinnerKills[4]);
						SendClientMessage(i, COLOR_YELLOW, string);
						SendClientMessage(i, COLOR_YELLOW, "Use /votemap to vote for a map.");
						ResetPlayerWeaponsEx(i);
		    			ResetPlayerWeapons(i);
		    			SetPlayerArmourEx(i, 0);
		    			PlayerInfo[i][pPaintBallKills] = 0;
		    			PlayerInfo[i][pPaintBallVoted] = 0;
		    			PlayerInfo[i][pPaintBallVoted2] = 0;
		    			for (new idd2 = 0; idd2 != 5; ++idd2) SendDeathMessageToPlayer(i, 1001, 1001, 1001);
		    			curatj[i] = 0;
					}
				}
				KillTimer(paintrun4);
				paintt[4] = 0;
				paintrs[4] = 31;
				preparepaint4 = SetTimer("PrepareRoundPaintBall4", 1000, 1);
				PaintWinner[4] = 999;
				PaintBallWinnerKills[4] = 0;
				paintvotem[4][0] = 0;
				paintvotem[4][1] = 0;
				paintvotem[4][2] = 0;
				paintvotem[4][3] = 0;
				paintvotem[4][4] = 0;
				mapvoted[4] = 0;
			}
		}
	}
    else if(paintp[4] < 2)
	{
		paintt[4] = 0;
  		paintrs[4] = 0;
  		PaintWinner[4] = 999;
		PaintBallWinnerKills[4] = 0;
		paintvotem[4][0] = 0;
		paintvotem[4][1] = 0;
		paintvotem[4][2] = 0;
		paintvotem[4][3] = 0;
		paintvotem[4][4] = 0;
		mapvoted[4] = 0;
		KillTimer(preparepaint4);
		KillTimer(paintrun4);
  		foreach(Player, i)
		{
			if(PlayerInfo[i][pPaintBallG] == 4)
			{
			    for (new idd2 = 0; idd2 != 5; ++idd2) SendDeathMessageToPlayer(i, 1001, 1001, 1001);
			    ResetPlayerWeaponsEx(i);
		    	ResetPlayerWeapons(i);
		    	SetPlayerArmourEx(i, 0);
			    PlayerInfo[i][pPaintBallKills] = 0;
			    PlayerInfo[i][pPaintBallVoted] = 0;
			    PlayerInfo[i][pPaintBallVoted2] = 0;
			    curatj[i] = 0;
			    PlayerTextDrawShow(i, PaintBallText[i]);
				PlayerTextDrawSetString(i, PaintBallText[i], "~g~WAITING FOR MORE PLAYERS TO JOIN...");
   				GameTextForPlayer(i, "~y~NOT ENOUGH PLAYERS TO START...", 5000, 5);
			}
		}
	}
	return 1;
}
public DeleteDeathMessage(playerid)
{
	if(InWar[PlayerInfo[playerid][pMember]] != 1)
	{
		for (new i = 0; i != 5; ++i) SendDeathMessageToPlayer(playerid, 1001, 1001, 1001);
		KillTimer(deathdeletetime[playerid]);
	}
	else
	{
		KillTimer(deathdeletetime[playerid]);
	}
	return 1;
}
public SetPlayerUnjail()
{
    if(serverrestart2 > 0)
    {
		serverrestart2 = serverrestart2-1;
		new stringers[256];
		format(stringers, sizeof(stringers), "SERVER WILL RESTART IN %d SECONDS", serverrestart2);
		TextDrawSetString(textile, stringers);
		foreach(Player,i)
		{
			TextDrawShowForPlayer(i, textile);
		}
		if(serverrestart2 < 1)
		{
		    foreach(Player,i)
			{
				OnPlayerDateUpdateX2(i);
				Update(i, pPayDayx);
				Update(i, pPayCheckx);
				Update(i, pFpunishx);
				Update(i, pConnectTimex);
				Update(i, pLawyerx);
				Update(i, pBank);
				Update(i, pCashx);
				Update(i, pRP);
				Update(i, pJailTimex);
				Update(i, pLevelx);
			}
   			serverrestart2 = -1;
   			SendRconCommand("GameMode by MaWReZ");
		}
	}
	if(painttime > 0)
	{
	    painttime--;
	}
	new string[256],stringg[256];
	for(new i = 1; i < sizeof(Turfs); i++)
	{
		new attackers = WarInfo[i][wAttacker],
			defenders = WarInfo[i][wFaction],
			count=0,
			warid,
			var100[500];
		if(WarInfo[i][wTime] > 0)
		{
			WarInfo[i][wTime]--;
			foreach(Player,j)
			{
				if(PlayerInfo[j][pMember] == attackers)
				{				
					PlayerTextDrawShow(j, WarBox[j]);
					format(string,sizeof(string),"~w~Turf Timer:~h~~y~ %s",CalculateTime2(WarInfo[i][wTime]));
					PlayerTextDrawSetString(j, TimeLeftWar1[j], string);
					PlayerTextDrawShow(j, TimeLeftWar1[j]);
					new stringatt[512];
					format(stringatt,sizeof(stringatt),"~w~Your Team Score:~h~~y~ %d",WarScoreF[attackers][i]);
					PlayerTextDrawSetString(j, AttackerScore[j], stringatt);
					PlayerTextDrawShow(j, AttackerScore[j]);
					new stringdef[512];
					format(stringdef,sizeof(stringdef),"~w~Defender Score:~h~~y~ %d",WarScoreF[defenders][i]);
					PlayerTextDrawSetString(j, DefenderScore[j], stringdef);
					PlayerTextDrawShow(j, DefenderScore[j]);
				}
				if(PlayerInfo[j][pMember] == defenders)
				{
					PlayerTextDrawShow(j, WarBox[j]);
					format(string,sizeof(string),"~w~Turf Timer:~h~~y~ %s",CalculateTime2(WarInfo[i][wTime]));
					PlayerTextDrawSetString(j, TimeLeftWar1[j], string);
					PlayerTextDrawShow(j, TimeLeftWar1[j]);
					new stringatt[512];
					format(stringatt,sizeof(stringatt),"~w~Your Team Score:~h~~y~ %d",WarScoreF[defenders][i]);
					PlayerTextDrawSetString(j, DefenderScore[j], stringatt);
					PlayerTextDrawShow(j, DefenderScore[j]);
					new stringdef[512];
					format(stringdef,sizeof(stringdef),"~w~Attacker Score:~h~~y~ %d",WarScoreF[attackers][i]);
					PlayerTextDrawSetString(j, AttackerScore[j], stringdef);
					PlayerTextDrawShow(j, AttackerScore[j]);
				}
			}
			if(WarInfo[i][wTime] == 1)
			{
				new atscore = 0,
					defscore = 0,
					winner;
				atscore = WarScoreF[attackers][i];
				defscore = WarScoreF[defenders][i];
				foreach(Player,j)
				{
					if(PlayerInfo[j][pMember] == attackers)
					{
						GangZoneStopFlashForPlayer(j,Turfs[i]);
					}
					if(PlayerInfo[j][pMember] == defenders)
					{
						GangZoneStopFlashForPlayer(j,Turfs[i]);
					}
				}
				if(atscore > defscore)
				{
					winner = 1;
				}
				else
				{
					winner = 2;
				}
				if(atscore == defscore)
				{
					winner = 2;
				}
				if(winner == 1)
				{
					new str[128],stringyy[MAX_STRING];
					format(var100, sizeof(var100),"INSERT INTO `wars` (`Attacker`,`Defender`,`Atscore`,`Defscore`,`Result`) VALUES ('%d','%d','%d','%d','1')",attackers,defenders,atscore,defscore);
					mysql_query(SQL,var100);
					warid = mysql_insert_id();
					TurfInfo[i][zOwned] = WarInfo[i][wAttacker];
					mysql_format(SQL,str,128,"UPDATE `turfs` SET `Owned`='%d' WHERE `ID`='%d'",TurfInfo[i][zOwned],i);
					mysql_tquery(SQL,str,"","");
					format(stringyy, sizeof(stringyy), "NR AdmBot: Mafia %s Won Turf #%d From The Mafia %s.",NameOfFactions(WarInfo[i][wAttacker]),i,NameOfFactions(WarInfo[i][wFaction]));
					OOCNews(COLOR_ORANGE,stringyy);
				}
				if(winner == 2)
				{
					new stringyy[MAX_STRING];
					format(var100, sizeof(var100),"INSERT INTO `wars` (`Attacker`,`Defender`,`Atscore`,`Defscore`,`Result`) VALUES ('%d','%d','%d','%d','2')",attackers,defenders,atscore,defscore);
					mysql_query(SQL,var100);
					warid = mysql_insert_id();
				    format(stringyy, sizeof(stringyy), "NR AdmBot: Mafia %s Defend From Turf #%d From %s.",NameOfFactions(WarInfo[i][wFaction]),i,NameOfFactions(WarInfo[i][wAttacker]));
				    OOCNews(COLOR_ORANGE,stringyy);
				}
				format(stringg,sizeof(stringg),"------------ [ War Overview #%d ] ------------", warid);
				SendFamilyMessage(attackers, COLOR_GREEN, stringg);
				SendFamilyMessage(defenders, COLOR_GREEN, stringg);
				if(winner == 1)
				{
					format(stringg,sizeof(stringg),"Score: %s %d - %d %s.",NameOfFactions(WarInfo[i][wAttacker]),atscore,defscore,NameOfFactions(WarInfo[i][wFaction]));
					SendFamilyMessage(attackers, COLOR_GREEN, stringg);
					SendFamilyMessage(defenders, COLOR_GREEN, stringg);
				}
				if(winner == 2)
				{
					format(stringg,sizeof(stringg),"Score: %s %d - %d %s.",NameOfFactions(WarInfo[i][wFaction]),defscore,atscore,NameOfFactions(WarInfo[i][wAttacker]));
					SendFamilyMessage(attackers, COLOR_GREEN, stringg);
					SendFamilyMessage(defenders, COLOR_GREEN, stringg);
				}
				new id = CalculateBestScore(i),
					id2 = CalculateWorstScore(i),
					bestnamee[30],
					worstnamee[30];
				GetPlayerName(id, bestnamee, sizeof(bestnamee));
				GetPlayerName(id2, worstnamee, sizeof(worstnamee));
				format(stringg,sizeof(stringg),"Best score: %s with a score of %d (%d kills, %d deaths). Worst score: %s with a score of %d (%d kills, %d deaths).", bestnamee, ucideri[id][i]-decese[id][i], ucideri[id][i], decese[id][i], worstnamee, ucideri[id2][i]-decese[id2][i], ucideri[id2][i], decese[id2][i]);
				SendFamilyMessage(attackers, COLOR_GREEN, stringg);
				SendFamilyMessage(defenders, COLOR_GREEN, stringg);
				foreach(Player, j)
				{
					if((PlayerInfo[j][pMember] == attackers) || (PlayerInfo[j][pMember] == defenders))
					{
						format(stringg,sizeof(stringg),"Your personal score: %d (%d kills, %d deaths).",ucideri[j][i]-decese[j][i],ucideri[j][i], decese[j][i]);
						SendClientMessage(j, COLOR_GREEN,stringg);
						PlayerTextDrawHide(j, TimeLeftWar1[j]);
						PlayerTextDrawHide(j, DefenderScore[j]);
						PlayerTextDrawHide(j, AttackerScore[j]);
						PlayerTextDrawHide(j, WarBox[j]);
						for (new sss = 0; sss != 5; ++sss) SendDeathMessageToPlayer(j, 1001, 1001, 1001);
					}
				}
				SendFamilyMessage(attackers, COLOR_GREEN,"------------------------------------");
				SendFamilyMessage(defenders, COLOR_GREEN,"------------------------------------");
				WarScoreF[defenders][i] = 0;
				WarScoreF[attackers][i] = 0;
				InWar[attackers] = 0;
				InWar[defenders] = 0;
				waitwar[attackers] = 60;
				waitwar[defenders] = 60;
				foreach(Player, j)
				{
					if((PlayerInfo[j][pMember] == attackers) || (PlayerInfo[j][pMember] == defenders))
					{
						SendClientMessage(j, COLOR_YELLOW, "You've Teleported To Normal World !");
						if(GetPlayerInterior(j) < 1)
						{
							SetPlayerVirtualWorld(j, 0);
						}
						if(attackers == 4 || defenders == 4)
						{
							for(new veh; veh < sizeof(Aztecasc); veh++)
							{
								SetVehicleVirtualWorld(Aztecasc[veh], 0);
							}
						}
						if(attackers == 5 || defenders == 5)
						{
							for(new veh; veh < sizeof(Grovec); veh++)
							{
								SetVehicleVirtualWorld(Grovec[veh], 0);
							}
						}
						if(attackers == 6 || defenders == 6)
						{
							for(new veh; veh < sizeof(Vagosc); veh++)
							{
								SetVehicleVirtualWorld(Vagosc[veh], 0);
							}
						}
						if(attackers == 10 || defenders == 10)
						{
							for(new veh; veh < sizeof(Ballasc); veh++)
							{
								SetVehicleVirtualWorld(Ballasc[veh], 0);
							}
						}
						mysql_format(SQL, var100, sizeof(var100),"INSERT INTO `warlogs` (`PlayerID`,`WarID`,`Kills`,`Deaths`,`Faction`) VALUES ('%d','%d','%d','%d','%d')",PlayerInfo[j][pSQLID],warid,ucideri[j][i],decese[j][i],PlayerInfo[j][pMember]);
						mysql_tquery(SQL,var100,"","");
						ucideri[j][i] = 0;
						decese[j][i] = 0;
					}
				}
				if(winner == 1)
				{
					foreach(Player, j)
					{
						if(TurfsDisp[j] == 1)
						{
							GangZoneHideForPlayerEx(j,Turfs[i]);
							if(attackers == 4)
							{
								GangZoneShowForPlayerEx(j,Turfs[i],0xCC000099);
							}
							if(attackers == 5)
							{
								GangZoneShowForPlayerEx(j,Turfs[i],0x40863CAA);
							}
							if(attackers == 6)
							{
								GangZoneShowForPlayerEx(j,Turfs[i],0x2F2F2F99);
							}
							if(attackers == 10)
							{
								GangZoneShowForPlayerEx(j,Turfs[i],0x88572499);
							}
						}
					}
					DeelayWar[WarInfo[i][wFaction]] = 600;
					DeelayWar[WarInfo[i][wAttacker]] = 1800;
				}
				if(winner == 2)
				{
					DeelayWar[WarInfo[i][wFaction]] = 600;
					DeelayWar[WarInfo[i][wAttacker]] = 1800;
				}
				WarInfo[i][wTime] = 0;
				WarInfo[i][wFaction] = 0;
				WarInfo[i][wAttacker] = 0;
				worstscoreat[i] = 0;
				worstmemberat[i] = 999;
				WarBestScore[i] = 0;
				bestmemberat[i] = 999;
				worstscoredf[i] = 0;
				worstmemberdf[i] = 999;
				bestscoredf[i] = 0;
				bestmemberdf[i] = 999;
			}
			if(WarInfo[i][wTime] > 2)
			{
				foreach(Player,j)
				{
					if(IsPlayerInTurf(j, i))
					{
						if(IsPlayerInAnyVehicle(j))
						{
							if(PlayerInfo[j][pMember] == attackers || PlayerInfo[j][pMember] == defenders)
							{
								SendClientMessage(j, COLOR_WHITE, "You Can't Use Vehicles In War Area");
								SetVehicleToRespawn(GetPlayerVehicleID(j));
								SetVehicleVirtualWorld(GetPlayerVehicleID(j), 1024);
							}
						}
					}
					if(PlayerInfo[j][pMember] == attackers || PlayerInfo[j][pMember] == defenders)
					{
						if(WarInfo[i][wAttacker] == 4)
						{
							GangZoneFlashForPlayer(j,Turfs[i], 0xCC000099);
						}
						else if(WarInfo[i][wAttacker] == 5)
						{
							GangZoneFlashForPlayer(j,Turfs[i], 0x66857399);
						}
						else if(WarInfo[i][wAttacker] == 6)
						{
							GangZoneFlashForPlayer(j,Turfs[i], 0x2F2F2F99);
						}
						else if(WarInfo[i][wAttacker] == 10)
						{
							GangZoneFlashForPlayer(j,Turfs[i], 0x88572499);
						}
					}
					if(IsPlayerInTurf(j, i))
					{
						if(PlayerInfo[j][pMember] == attackers)
						{
							count++;
						}
					}
				}
				if(count < 1)
				{
					if(waitwar[attackers] > 0)
					{
						waitwar[attackers]--;
					}
					if(waitwar[attackers] == 0)
					{
						waitwar[attackers] = 0;
						new atscore = 0,
							defscore = 0,
							winner;
						atscore = WarScoreF[attackers][i];
						defscore = WarScoreF[defenders][i];
						foreach(Player,j)
						{
							if(PlayerInfo[j][pMember] == attackers)
							{
								GangZoneStopFlashForPlayer(j,Turfs[i]);
							}
							if(PlayerInfo[j][pMember] == defenders)
							{
								GangZoneStopFlashForPlayer(j,Turfs[i]);
							}
						}
						if(atscore > defscore)
						{
							winner = 1;
						}
						else
						{
							winner = 2;
						}
						if(atscore == defscore)
						{
							winner = 2;
						}
						format(var100, sizeof(var100),"INSERT INTO `wars` (`Attacker`,`Defender`,`Atscore`,`Defscore`,`Result`) VALUES ('%d','%d','%d','%d','3')",attackers,defenders,atscore,defscore);
						mysql_query(SQL,var100);
						warid = mysql_insert_id();
						format(stringg,sizeof(stringg),"[WAR] %s failed to win turf %d owned by %s because they left the turf.",NameOfFactions(WarInfo[i][wAttacker]),i,NameOfFactions(WarInfo[i][wFaction]));
						SendFamilyMessage(attackers, COLOR_GREEN, stringg);
						SendFamilyMessage(defenders, COLOR_GREEN, stringg);
						format(stringg,sizeof(stringg),"------------ [ War Overview #%d ] ------------", warid);
						SendFamilyMessage(attackers, COLOR_GREEN, stringg);
						SendFamilyMessage(defenders, COLOR_GREEN, stringg);
						if(winner == 1)
						{
							format(stringg,sizeof(stringg),"Score: %s %d - %d %s.",NameOfFactions(WarInfo[i][wAttacker]),atscore,defscore,NameOfFactions(WarInfo[i][wFaction]));
							SendFamilyMessage(attackers, COLOR_GREEN, stringg);
							SendFamilyMessage(defenders, COLOR_GREEN, stringg);
						}
						if(winner == 2)
						{
							format(stringg,sizeof(stringg),"Score: %s %d - %d %s.",NameOfFactions(WarInfo[i][wFaction]),defscore,atscore,NameOfFactions(WarInfo[i][wAttacker]));
							SendFamilyMessage(attackers, COLOR_GREEN, stringg);
							SendFamilyMessage(defenders, COLOR_GREEN, stringg);
						}
						new id = CalculateBestScore(i),
							id2 = CalculateWorstScore(i),
							bestnamee[30],
							worstnamee[30];
						GetPlayerName(id, bestnamee, sizeof(bestnamee));
						GetPlayerName(id2, worstnamee, sizeof(worstnamee));
						format(stringg,sizeof(stringg),"Best score: %s with a score of %d (%d kills, %d deaths). Worst score: %s with a score of %d (%d kills, %d deaths).", bestnamee, ucideri[id][i]-decese[id][i], ucideri[id][i], decese[id][i], worstnamee, ucideri[id2][i]-decese[id2][i], ucideri[id2][i], decese[id2][i]);
						SendFamilyMessage(attackers, COLOR_GREEN, stringg);
						SendFamilyMessage(defenders, COLOR_GREEN, stringg);
						foreach(Player, j)
						{
							if((PlayerInfo[j][pMember] == attackers) || (PlayerInfo[j][pMember] == defenders))
							{
								format(stringg,sizeof(stringg),"Your personal score: %d (%d kills, %d deaths).",ucideri[j][i]-decese[j][i],ucideri[j][i], decese[j][i]);
								SendClientMessage(j, COLOR_GREEN,stringg);
								PlayerTextDrawHide(j, TimeLeftWar1[j]);
								PlayerTextDrawHide(j, DefenderScore[j]);
								PlayerTextDrawHide(j, AttackerScore[j]);
								PlayerTextDrawHide(j, WarBox[j]);
								for (new sss = 0; sss != 5; ++sss) SendDeathMessageToPlayer(j, 1001, 1001, 1001);
							}
						}
						SendFamilyMessage(attackers, COLOR_GREEN,"------------------------------------");
						SendFamilyMessage(defenders, COLOR_GREEN,"------------------------------------");
						WarScoreF[defenders][i] = 0;
						WarScoreF[attackers][i] = 0;
						InWar[attackers] = 0;
						InWar[defenders] = 0;
						foreach(Player, j)
						{
							if((PlayerInfo[j][pMember] == attackers) || (PlayerInfo[j][pMember] == defenders))
							{
								SendClientMessage(j, COLOR_YELLOW, "You've Been Teleported To Normal World !");
								if(GetPlayerInterior(j) < 1)
								{
									SetPlayerVirtualWorld(j, 0);
								}
								if(attackers == 4 || defenders == 4)
								{
									for(new veh; veh < sizeof(Aztecasc); veh++)
									{
										SetVehicleVirtualWorld(Aztecasc[veh], 0);
									}
								}
								if(attackers == 5 || defenders == 5)
								{
									for(new veh; veh < sizeof(Grovec); veh++)
									{
										SetVehicleVirtualWorld(Grovec[veh], 0);
									}
								}
								if(attackers == 6 || defenders == 6)
								{
									for(new veh; veh < sizeof(Vagosc); veh++)
									{
										SetVehicleVirtualWorld(Vagosc[veh], 0);
									}
								}
								if(attackers == 10 || defenders == 10)
								{
									for(new veh; veh < sizeof(Ballasc); veh++)
									{
										SetVehicleVirtualWorld(Ballasc[veh], 0);
									}
								}
								mysql_format(SQL, var100, sizeof(var100),"INSERT INTO `warlogs` (`PlayerID`,`WarID`,`Kills`,`Deaths`,`Faction`) VALUES ('%d','%d','%d','%d','%d')",PlayerInfo[j][pSQLID],warid,ucideri[j][i],decese[j][i],PlayerInfo[j][pMember]);
								mysql_tquery(SQL,var100,"","");
								ucideri[j][i] = 0;
								decese[j][i] = 0;
							}
						}
						DeelayWar[WarInfo[i][wFaction]] = 600;
						DeelayWar[WarInfo[i][wAttacker]] = 1800;
						WarInfo[i][wTime] = 0;
						WarInfo[i][wFaction] = 0;
						WarInfo[i][wAttacker] = 0;
						worstscoreat[i] = 0;
						worstmemberat[i] = 999;
						WarBestScore[i] = 0;
						bestmemberat[i] = 999;
						worstscoredf[i] = 0;
						worstmemberdf[i] = 999;
						bestscoredf[i] = 0;
						bestmemberdf[i] = 999;
					}
				}
				else
				{
					waitwar[attackers] = 720;
				}
			}
		}
	}
	foreach(Player,i)
	{
	    if(IsPlayerConnected(i))
	    {
		    if(SafeTime[i] > 0)
			{
				SafeTime[i]--;
			}
			if(SafeTime[i] == 1)
			{
				if(gPlayerAccount[i] == 1 && gPlayerLogged[i] == 0)
				{
					ShowPlayerDialog(i,DIALOG_LOGIN2,DIALOG_STYLE_PASSWORD,"SERVER: Login","Welcome to the New Land RP Server.\n\nPlease enter your password below!","Login","Cancel");
				}
			}
			new newcar = GetPlayerVehicleID(i),
				level = PlayerInfo[i][pLevel];
			if(level >= 0 && level <= 2) { PlayerInfo[i][pPayCheck] += 2; }
			else if(level >= 3 && level <= 4) { PlayerInfo[i][pPayCheck] += 3; }
			else if(level >= 5 && level <= 6) { PlayerInfo[i][pPayCheck] += 4; }
			else if(level >= 7 && level <= 8) { PlayerInfo[i][pPayCheck] += 5; }
			else if(level >= 9 && level <= 10) { PlayerInfo[i][pPayCheck] += 6; }
			else if(level >= 11 && level <= 12) { PlayerInfo[i][pPayCheck] += 7; }
			else if(level >= 13 && level <= 14) { PlayerInfo[i][pPayCheck] += 8; }
			else if(level >= 15 && level <= 16) { PlayerInfo[i][pPayCheck] += 9; }
			else if(level >= 17 && level <= 18) { PlayerInfo[i][pPayCheck] += 10; }
			else if(level >= 19 && level <= 20) { PlayerInfo[i][pPayCheck] += 11; }
			else if(level >= 21) { PlayerInfo[i][pPayCheck] += 12; }
		    if(PlayerInfo[i][pJailed] > 0)
		    {
				if(PlayerInfo[i][pJailTime] > 0)
				{
				    if(gPlayerLogged[i] == 1)
				    {
						PlayerInfo[i][pJailTime]--;
						PlayerTextDrawShow(i, Jailtime[i]);
						new string3[60];
						format(string3,sizeof(string3),"Unjail In : ~r~%d Minutes", PlayerInfo[i][pJailTime]/60+1);
						PlayerTextDrawSetString(i, Jailtime[i], string3);
					}
				}
				if(PlayerInfo[i][pJailTime] <= 0)
				{
				    PlayerInfo[i][pJailTime] = 0;
					if(PlayerInfo[i][pJailed] == 1)
					{
				    	SetPlayerInterior(i, 6);
		    			SetPlayerPosEx(i, 268.7461,76.8184,1001.0391);
					}
					if(PlayerInfo[i][pJailed] == 2)
					{
						SetPlayerInterior(i, 0);
						SetPlayerVirtualWorld(i, 0);
						SetPlayerPosEx(i, 1153.8662,-1772.2810,16.6249 );
					}
					PlayerInfo[i][pJailed] = 0;
					SendClientMessage(i, COLOR_WHITE, "Your Time Is Up! You Have Been Relased From Jail|Prison.");
					SetPlayerSpecialAction(i,SPECIAL_ACTION_NONE);
			    	RemovePlayerAttachedObject(i,1);
					PlayerTextDrawHide(i, Jailtime[i]);
    				SetPlayerSkin(i, PlayerInfo[i][pModel]);
					ClearCrime(i);
					SetPlayerToTeamColor(i);
					TogglePlayerControllable(i, 1);
				}
			}
			if(RobTime[i] >= 0)
			{
				RobTime[i]++;
			}
			if(QuestWait[i] > 0)
			{
				QuestWait[i]--;
			}
			if(PlayerInfo[i][pNextNotification] > 0)
			{
			    PlayerInfo[i][pNextNotification]--;
			}
			if(pizzatime[i] > 0)
			{
			    pizzatime[i]--;
			    if(pizzatime[i] == 0)
			    {
			        SendClientMessage(i, COLOR_GREY, "Job reload time ended.");
			        pizzatime[i] = 0;
				}
			}
			if(failpizza[i] > 0)
			{
				failpizza[i]--;
				if(failpizza[i] == 0)
				{
					DisablePlayerRaceCheckpoint(i);
					pizzaj[i] = 0;
					pizzatime[i] = 0;
					failpizza[i] = -1;
					PizzaCP[i] = 0;
					pizzaprize[i] = 0;
				}
			}
			if(timerrent[i] > 0)
			{
                timerrent[i]--;
                if(timerrent[i] == 0)
                {
                    new engine,lights,alarm,doors,bonnet,boot,objective;
                    gCarLock[HireCar[i]] = 0;
                    GetVehicleParamsEx(HireCar[i],engine,lights,alarm,doors,bonnet,boot,objective);
                    SetVehicleParamsEx(HireCar[i],engine,lights,alarm,0,bonnet,boot,objective);
                    vehEngine[HireCar[i]] = 0;
                    GetVehicleParamsEx(HireCar[i],engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(HireCar[i],VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
					HireCar[i] = -1;
					GameTextForPlayer(i, "~w~You no longer rent a car.", 5000, 3);
                    SetVehicleToRespawn(HireCar[i]);
                    timerrent[i] = 0;
				}
			}
			if(PlayerInfo[i][pSleeping] == 1)
			{
				SetPlayerHealthEx(i, 100);
			}
			if(JackAcc[i] > 0)
			{
				JackAcc[i]--;
				if(JackAcc[i] == 0) SCM(i,COLOR_WHITE,"You can now drop vehicles again at the crane.");
			}
			if(PlayerInfo[i][pAdmin] >= 1)
			{
				new reports=0,cheaters=0,strr[128];
				foreach(Player,id)
				{
					if(strcmp(reporttext[id], "NULL", true))
					{
						reports++;
					}
					if(strcmp(cheattext[id], "NULL", true))
					{
						cheaters++;
					}
					if(reportcheater[id] != -1)
					{
						cheaters++;
					}
				}
				if(reports > 0)
				{
					PlayerTextDrawShow(i, Reportss[i]);
					format(strr,sizeof(strr),"|| REPORTS: ~r~%d~w~ - CHEATERS: ~r~%d ||",reports,cheaters);
					PlayerTextDrawSetString(i, Reportss[i], strr);
				}
			}
			else
			{
				PlayerTextDrawHide(i, Reportss[i]);
			}
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER && Speedlimit[i])
			{
				new a, b, c;
				GetPlayerKeys(i, a, b ,c);
				if(a == 8 && GetVehicleSpeed(GetPlayerVehicleID(i), 0) > Speedlimit[i])
				{
					new newspeed = GetVehicleSpeed(GetPlayerVehicleID(i), 0) - Speedlimit[i];
					ModifyVehicleSpeed(GetPlayerVehicleID(i), -newspeed);
				}
			}
		    if(CellTime[i] > 0)
			{
				CellTime[i] = CellTime[i] +1;
				if(PlayerInfo[i][pCredits] > 0)
				{
					CallCost[i] = CallCost[i] +1;
				}
				else
				{
					new caller = Mobile[i];
				    CellTime[i] = 0;
				    CellTime[caller] = 0;
					CellTime[i] = 0;
					SendClientMessage(i,COLOR_WHITE,"{B8FFDB}You hung up because you don't have enough credits.");
					Mobile[caller] = -1;
				}
			}
			if(CellTime[i] == 0 && CallCost[i] > 0)
			{
				format(string, sizeof(string), "~w~The call cost~n~~r~~h~%d credits",CallCost[i]);
				PlayerInfo[i][pCredits] = PlayerInfo[i][pCredits] - CallCost[i];
				GameTextForPlayer(i, string, 5000, 1);
				Update(i, pCreditsx);
				CallCost[i] = 0;
			}
			if(PlayerInfo[i][pNewbieTimeout] > 0)
			{
	            PlayerInfo[i][pNewbieTimeout]--;
	            if(PlayerInfo[i][pNewbieTimeout] == 0)
				{
	                PlayerInfo[i][pNMessage2] = 0;
	                PlayerInfo[i][pNMessage] = 0;
	                PlayerInfo[i][pFirstAnswer] = 0;
					SendClientMessage(i, COLOR_WHITE, "You may now speak in the newbie chat channel again.");
				}
	        }

	        if(PlayerInfo[i][pNMuted] > 0)
			{
	            PlayerInfo[i][pNMuted]--;
	            Update(i,pNMutedx);
	            if(PlayerInfo[i][pNMuted] == 0) SendClientMessage(i, COLOR_WHITE, "You may now speak in the newbie chat channel again.");
			}
			if(TransportTime[i] > 0)
			{
			    if(TransportTime[i] >= 16)
				{
					TransportTime[i] = 1;
					if(TransportDriver[i] < 999)
					{
						if(IsPlayerConnected(TransportDriver[i]))
						{
	      					TransportCost[i] += TransportValue[TransportDriver[i]];
						    TransportCost[TransportDriver[i]] = TransportCost[i];
						}
					}
				}
			    TransportTime[i] += 1;
			    format(string, sizeof(string), "~r~~h~%d ~w~: ~g~$%d",TransportTime[i],TransportCost[i]);
			    GameTextForPlayer(i, string, 15000, 6);
			}
			new idcar = GetPlayerVehicleID(i);
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER && !IsAPlane(idcar))
			{
				new speed = Carspeed(i),
					antispeed[300],
					sendername[25];
				GetPlayerName(i,sendername,sizeof(sendername));
				if(speed > 225)
				{
				    SendClientMessage(i,COLOR_LIGHTBLUE,"You Were Trapped 225 Speed ! You Got Kick|Warn|Ban Next Time");
				    format(antispeed, sizeof(antispeed), "[Cheating] %s [ID: %d] Maybe Using A SpeedHack | Speed : %.0d",sendername,i,speed);
        			ABroadCast(COLOR_RED,antispeed,1);
				}
				else if(!IsPlayerInRangeOfPoint(i, 200.0,-2168.6172,-1809.7922,414.9702))
				{
				    if(speed > 340)
					{
				    	SendClientMessage(i,COLOR_LIGHTBLUE,"You Were Trapped 340 Speed ! You Got Kick|Warn|Ban Next Time");
				    	format(antispeed, sizeof(antispeed), "[Cheating] %s [ID: %d] Maybe Using A SpeedHack | Speed : %.0d",sendername,i,speed);
        				ABroadCast(COLOR_RED,antispeed,1);
					}
				}
			}
			if(PlayerInfo[i][pWantedLevel] > 0)
			{
			    wantedlost[i]--;
			    if(wantedlost[i] <= 0)
			    {
			        PlayerInfo[i][pWantedLevel] -= 1;
			        DestroyDynamic3DTextLabel(WantedScris[i]);
			        if(GetPlayerWantedLevel(i) > 0)
					{
					    Tigaanel[i] = 1;
						new str2[256];
    					format(str2,sizeof(str2),"{FF00FF}Wanted Level: %d",PlayerInfo[i][pWantedLevel]);
    					UpdateDynamic3DTextLabelText(WantedScris[i], COLOR_WHITE, str2);
					}
			        new name[25];
			        GetPlayerName(i,name,sizeof(name));
			        SCM(i,COLOR_LIGHTBLUE,"Your Wanted Level Decreased Because You Ran 15Minutes From Polices !");
			        Update(i,pWantedLevelx);
					format(string,sizeof(string),"%s(%d) Lost 1 Wanted Level Because He/She Ran 15Minutes From Polices !",name,i);
					SendTeamMessage(3, COLOR_DBLUE, string);
					SendTeamMessage(2, COLOR_DBLUE, string);
					SendTeamMessage(1, COLOR_DBLUE, string);
					SendTeamMessage(8, COLOR_DBLUE, string);
					wantedlost[i] = 900;
					if(PlayerInfo[i][pWantedLevel] <= 0)
					{
					    ClearCrime(i);
					}
				}
			}
			if(PlayerInfo[i][pHitT] > 0)
			{
				PlayerInfo[i][pHitT] -= 1;
			}
		    if(RepairTime[i] > 0)
		    {
		        RepairTime[i] = RepairTime[i] - 1;
			}
			if(PlayerInfo[i][pMuted] > 0)
		    {
				if(PlayerInfo[i][pMuteTime] > 0)
				{
					PlayerInfo[i][pMuteTime]--;
				}
				if(PlayerInfo[i][pMuteTime] <= 0)
				{
				    PlayerInfo[i][pMuteTime] = 0;
                    SendClientMessage(i, COLOR_LIGHTRED, "* Your time of silence has ended.");
					PlayerInfo[i][pMuted] = 0;
				}
			}
			if(targetfind[i] >= 0 && UsedFind[i] == 1)
   			{
   			    new target;
   			    target = targetfind[i];
   			    if(InBussines[target] > -1)
   			    {
					new j;
					j = InBussines[target];
					SetPlayerCheckpoint(i,BizzInfo[j][bEntranceX], BizzInfo[j][bEntranceY], BizzInfo[j][bEntranceZ],4);
				}
				else if(InHouse[target] > -1)
				{
					new j;
					j = InHouse[target];
					SetPlayerCheckpoint(i,HouseInfo[j][hEntrancex],HouseInfo[j][hEntrancey],HouseInfo[j][hEntrancez],4);
				}
				else if(InHQ[target] > -1)
				{
					SetPlayerCheckpoint(i,xhq[InHQ[target]],yhq[InHQ[target]],zhq[InHQ[target]],4);
				}
				else
				{
   			    	new Float: x, Float: y, Float: z;
   			    	GetPlayerPos(target,x,y,z);
   			    	SetPlayerCheckpoint(i,x,y,z,4);
   			    }
   			}
		    if(IsABoat(newcar))
			{
			    if(PlayerInfo[i][pBoatLic] < 1 && GetPlayerState(i) == 2 && TakingLesson[i] != 2)
				{
				    RemovePlayerFromVehicleEx(i);
				}
			}
			else if(IsAPlane(newcar))
			{
			    if(PlayerInfo[i][pFlyLic] < 1 && GetPlayerState(i) == 2)
				{
				    if(TakingLesson[i] == 1  || TakingLesson[i] == 2) { }
				    else { RemovePlayerFromVehicleEx(i); }
				}
			}
			else
			{
				if(PlayerInfo[i][pCarLic] < 1 && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == 2)
				{
					if(TakingLesson[i] == 1) { }
				}
			}
			if(PlayerTazeTime[i] >= 1)
			{
			    PlayerTazeTime[i] += 1;
			    if(PlayerTazeTime[i] == 15)
			    {
                    PlayerTazeTime[i] = 0;
			    }
			    else
			    {
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					SetPlayerFacingAngle(i, angle + 90);
			    }
			}
			if(PlayerDrunk[i] >= 5)
			{
			    PlayerDrunkTime[i] += 1;
			    if(PlayerDrunkTime[i] == 8)
			    {
			        PlayerDrunkTime[i] = 0;
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i))
					{
					    if(GetPlayerState(i) == 2)
					    {
					    	SetVehicleZAngle(GetPlayerVehicleID(i), angle + 15);
					    	SetPlayerDrunkLevel (i, 5000);
						}
					}
					else
					{
					    LoopingAnim(i,"PED","WALK_DRUNK",4.0,1,1,1,1,0);
					    SetPlayerDrunkLevel (i, 5000);
					}
			    }
			}
			if(GarbageEndTime[i] >= 1)//garbagejob
			{
			    GarbageEndTime[i] += 1;
			    if(GarbageEndTime[i] == 5)
			    {
				  	SendClientMessage(i, COLOR_WHITE, "{3385FF}Garbage Collected");
				  	SendClientMessage(i, COLOR_LIGHTBLUE, "Return to the depot for your Pay Check.");
				  	GarbageEndTime[i] = 0;
					TogglePlayerControllable(i, 1);
			    }
			}
			if(GarbageTime[i] >= 1)//garbagejob
			{
			    GarbageTime[i] += 1;
			    if(GarbageTime[i] == 5)
			    {
				  	SendClientMessage(i, COLOR_WHITE, "{3385FF}Garbage Collected");
				  	GarbageTime[i] = 0;
					TogglePlayerControllable(i, 1);
			    }
			}
			if(BinTime[i] >= 1)//garbagejob
			{
			    BinTime[i] += 1;
			    if(BinTime[i] == 5)
			    {
				  	SendClientMessage(i, COLOR_WHITE, "{3385FF}The bin has been emptied");
				  	BinTime[i] = 0;
					TogglePlayerControllable(i, 1);
			    }
			}
			if(PlayerInfo[i][pGarbageTime] > 0)
			{
			    if(PlayerInfo[i][pGarbageTime] == 1)
			    {
			        if(PlayerInfo[i][pJob] == 10)
			        {
				        SendClientMessage(i, COLOR_WHITE, "{999999}You can do another Garbage run now.");
				        PlayerInfo[i][pGarbageTime] -= 1;
					}
			        else
			        {
				        PlayerInfo[i][pGarbageTime] -= 1;
					}
			    }
			    else if(PlayerInfo[i][pGarbageTime] <= 0)
			    {
			        PlayerInfo[i][pGarbageTime] = 0;
			    }
			    else
			    {
			        PlayerInfo[i][pGarbageTime] -= 1;
			    }
			}
			if(PlayerStoned[i] >= 2)
			{
			    new Float:angle;
				GetPlayerFacingAngle(i, angle);
				if(IsPlayerInAnyVehicle(i))
				{
					if(GetPlayerState(i) == 2)
					{
					    SetVehicleZAngle(GetPlayerVehicleID(i), angle + 15);
					    SetPlayerDrunkLevel (i, 5000);
					}
				}
				else
				{
					SetPlayerDrunkLevel (i, 5000);
				}
			}
			if(TaxiCallTime[i] > 0)
			{
			    if(TaxiAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(TaxiAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(TaxiAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(MedicCallTime[i] > 0)
			{
			    if(MedicCallTime[i] == 300)
				{
					MedicCallTime[i] = 0;
					DisablePlayerCheckpoint(i);
					GameTextForPlayer(i, "~r~~h~RedMarker gone", 2500, 1);
				}
			    else
				{
				    format(string, sizeof(string), "%d", 300 - MedicCallTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					MedicCallTime[i] += 1;
				}
			}
			if(MechanicCallTime[i] > 0)
			{
			    if(MechanicCallTime[i] == 300)
				{
					MechanicCallTime[i] = 0;
					DisablePlayerCheckpoint(i);
					GameTextForPlayer(i, "~r~~h~RedMarker gone", 2500, 1);
				}
			    else
				{
				    format(string, sizeof(string), "%d", 300 - MechanicCallTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					MechanicCallTime[i] += 1;
				}
			}
			if(PlayerCuffed[i] == 1)
			{
			    if(PlayerCuffedTime[i] <= 0)
			    {
			        TogglePlayerControllable(i, 1);
			        PlayerCuffed[i] = 0;
			        PlayerCuffedTime[i] = 0;
			        PlayerTazeTime[i] = 1;
			    }
			    else
			    {
			        PlayerCuffedTime[i] -= 1;
			    }
			}
			if(PlayerCuffed[i] == 2)
			{
			    if(PlayerCuffedTime[i] <= 0)
			    {
			        GameTextForPlayer(i, "~r~~h~You broke the Cuffs, you are free!", 2500, 3);
			        TogglePlayerControllable(i, 1);
			        PlayerCuffed[i] = 0;
			        PlayerCuffedTime[i] = 0;
			    }
			    else
			    {
			        PlayerCuffedTime[i] -= 1;
			    }
			}
			if(Cash[i] != GetPlayerMoney(i))
    		{
    		    new hack = GetPlayerMoney(i) - Cash[i];
				if(hack != 0)
				{
					ResetPlayerMoney(i);
					GivePlayerMoney(i, Cash[i]);
				}
    		}
    		if(Undercover[i] == 1)
			{
			    PlayerTextDrawShow(i, UndercoverText[i]);
			}
			else
			{
			    PlayerTextDrawHide(i, UndercoverText[i]);
			}
		}
	}
	return 1;
}
/*
forward unmutecommand(playerid);
public unmutecommand(playerid)
{
	if(UseCmdTimer[playerid] == 0)
	{
	    UseCmdTimer[playerid] = 1;
	    SCM(playerid, -1, "Now You Can Use That Command Again");
	}
    return 1;
}

public EstiFondator(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new nume[512];
        GetPlayerName(playerid, nume, sizeof(nume));
        if((strcmp(nume, SCRIPTER, true) == 0) || (strcmp(nume, FONDATOR, true) == 0) || (strcmp(nume, SCRIPTERNR2, true) == 0) || (strcmp(nume, FONDATORNR2, true) == 0))
        {
		    return 1;
		}
	}
	return 0;
}*/

public Checkvehinfo()
{
	foreach(Player,i)
	{
    	if(IsPlayerConnected(i))
       	{
       	    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
       	    {
	       		new vehicle = GetPlayerVehicleID(i),
                	spe = Carspeed(i);
                new str1[128],str2[128],str3[128],str4[128],str5[128];
				PlayerTextDrawShow(i, Speedd[i]);
				format(str1,sizeof(str1)," Speed: ~y~%d Km/h",spe);
				PlayerTextDrawSetString(i, Speedd[i], str1);
				if(!IsABike(vehicle))
				{
					PlayerTextDrawShow(i, Fuell[i]);
					format(str2,sizeof(str2),"Fuel: ~y~%d", Gas[vehicle]);
					PlayerTextDrawSetString(i, Fuell[i], str2);
				}
				if(OwnedVeh(vehicle) != 0 && !IsAPlane(vehicle))
				{
				    PlayerTextDrawShow(i, Odom[i]);
					format(str3,sizeof(str3),"Odometer: ~y~%.0fKM",CarInfo[OwnedVeh(vehicle)][cKM]);
					PlayerTextDrawSetString(i, Odom[i], str3);
				}
				if(OwnedVeh(vehicle) != 0 && CarInfo[OwnedVeh(vehicle)][cLock] == 0)
				{
				    PlayerTextDrawShow(i, carlocked[i]);
				    format(str4,sizeof(str4),"UNLOCKED");
					PlayerTextDrawSetString(i, carlocked[i], str4);
				}
				else if(OwnedVeh(vehicle) != 0 && CarInfo[OwnedVeh(vehicle)][cLock] == 1)
				{
				    PlayerTextDrawShow(i, carlocked[i]);
				    format(str5,sizeof(str5),"~y~LOCKED");
					PlayerTextDrawSetString(i, carlocked[i], str5);
				}
			}
			else if(GetPlayerState(i) == PLAYER_STATE_PASSENGER)
       	    {
       	        new count;
       	        foreach(Player, x)
				{
				    if(GetPlayerState(x) == PLAYER_STATE_DRIVER)
       	    		{
       	    		    if(GetPlayerVehicleID(x) == GetPlayerVehicleID(i))
       	    		    {
       	    		        count ++;
						}
					}
					if(count >= 1)
					{
					    new vehicle = GetPlayerVehicleID(i),
                			spe = Carspeed(i);
               		 	new str1[128],str2[128],str3[128],str4[128],str5[128];
						PlayerTextDrawShow(i, Speedd[i]);
						format(str1,sizeof(str1)," Speed: ~y~%d Km/h",spe);
						PlayerTextDrawSetString(i, Speedd[i], str1);
					    if(!IsABike(vehicle))
						{
							PlayerTextDrawShow(i, Fuell[i]);
							format(str2,sizeof(str2),"Fuel: ~y~%d", Gas[vehicle]);
							PlayerTextDrawSetString(i, Fuell[i], str2);
						}
						if(OwnedVeh(vehicle) != 0 && !IsAPlane(vehicle))
						{
				    		PlayerTextDrawShow(i, Odom[i]);
							format(str3,sizeof(str3),"Odometer: ~y~%.0fKM",CarInfo[OwnedVeh(vehicle)][cKM]);
							PlayerTextDrawSetString(i, Odom[i], str3);
						}
						if(OwnedVeh(vehicle) != 0 && CarInfo[OwnedVeh(vehicle)][cLock] == 0)
						{
				    		PlayerTextDrawShow(i, carlocked[i]);
				    		format(str4,sizeof(str4),"UNLOCKED");
							PlayerTextDrawSetString(i, carlocked[i], str4);
						}
						else if(OwnedVeh(vehicle) != 0 && CarInfo[OwnedVeh(vehicle)][cLock] == 1)
						{
				    		PlayerTextDrawShow(i, carlocked[i]);
				    		format(str5,sizeof(str5),"~y~LOCKED");
							PlayerTextDrawSetString(i, carlocked[i], str5);
						}
					}
					else if(count < 1)
					{
	    				PlayerTextDrawHide(i, Fuell[i]);
		   				PlayerTextDrawHide(i, Speedd[i]);
		   				PlayerTextDrawHide(i, carlocked[i]);
		   				PlayerTextDrawHide(i, Odom[i]);
					}
				}
			}
    	}
	}
	return 1;
}

public CheckGas()
{
	new engine,lights,alarm,doors,bonnet,boot,objective;
	foreach(Player,i)
	{
   	    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
   	    {
       		new vehicle = GetPlayerVehicleID(i);
			if(Gas[vehicle] >= 1)
			{
	   		    if(vehEngine[vehicle] == 1)
	   		    {
					if(IsAPlane(vehicle) || IsABoat(vehicle) || IsABike(vehicle) || IsAGarbageTruck(vehicle) || IsABus(vehicle) || IsAPizza(vehicle)
					|| IsATruck(vehicle)) { Gas[vehicle]++; }
	              	Gas[vehicle]--;
	                if(IsAnOwnableCar(vehicle))
	                {
			            if(CarInfo[OwnedVeh(vehicle)][cOwned] == 1)
						{
	                        new spe = Carspeed(i),Float:carhealth;
							if(spe > 5 && GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == vehicle)
							{
							    if(!IsABoat(vehicle) && !IsAPlane(vehicle))
							    {
								    CarInfo[OwnedVeh(vehicle)][cKM] += 0.4;
								    vUpdate(OwnedVeh(vehicle), cKMx);
								}
							}
							if(GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == vehicle)
							{
								GetVehicleHealth(vehicle, carhealth);
								GetVehicleDamageStatus(vehicle, CarInfo[OwnedVeh(vehicle)][cDamage1], CarInfo[OwnedVeh(vehicle)][cDamage2], CarInfo[OwnedVeh(vehicle)][cDamage3], CarInfo[OwnedVeh(vehicle)][cDamage4]);
								CarInfo[OwnedVeh(vehicle)][cHP] = carhealth;
								CarInfo[OwnedVeh(vehicle)][cGas] = Gas[vehicle];
								vUpdate(OwnedVeh(vehicle), cHPx);
								vUpdate(OwnedVeh(vehicle), cDamage1x);
								vUpdate(OwnedVeh(vehicle), cDamage2x);
								vUpdate(OwnedVeh(vehicle), cDamage3x);
								vUpdate(OwnedVeh(vehicle), cDamage4x);
								vUpdate(OwnedVeh(vehicle), cGasx);
							}
						}
					}
				}
	   		}
   			else
           	{
              	NoFuel[i] = 1;
              	TogglePlayerControllable(i, 0);
	        	GameTextForPlayer(i,"~w~~n~~n~~n~~n~~n~~n~~n~~n~No fuel in vehicle.",1500,3);
	        	vehEngine[vehicle] = 0;
    			GetVehicleParamsEx(vehicle,engine,lights,alarm,doors,bonnet,boot,objective);
      	    	SetVehicleParamsEx(vehicle,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
      	    	SetPVarInt(i, "Engine", 0);
			}
		}
	}
	return 1;
}

public OnEnterExitModShop(playerid, enterexit, interiorid)
{
    if(enterexit == 0)
    {
		if(IsPlayerInRangeOfPoint(playerid,10.0,617.5360,-1.9900,1000.6647))
		{
			if(GetPlayerCash(playerid) >= BizzInfo[38][bEntranceCost])
			{
				EnterInModShop[playerid] = 1;
				return 1;
			}
		}
		if(IsPlayerInRangeOfPoint(playerid,10.0,616.7844,-74.8150,997.7675))
		{
			if(GetPlayerCash(playerid) >= BizzInfo[39][bEntranceCost])
			{
				EnterInModShop[playerid] = 1;
				return 1;
			}
		}
    }
    return 1;
}

public Fillup(playerid)
{
   	if(IsPlayerConnected(playerid))
   	{
	    new VID,
	    	FillUp,
	    	string[256];
	    VID = GetPlayerVehicleID(playerid);
	    FillUp = GasMax - Gas[VID];
	    new Incarcare = GasMax - Gas[VID];
	    FillUp = FillUp * 20;
		if(Refueling[playerid] == 1)
	    {
			if(GetPlayerCash(playerid) >= FillUp)
			{
			    if(Gas[VID] <= 99)
			    {
					Gas[VID] += Incarcare;
				}
				else
				{
				    Gas[VID] = 100;
				}
			    format(string,sizeof(string),"You Paid $%s To Refill Your Car",FormatNumber(FillUp));
			    SendClientMessage(playerid,COLOR_GREEN,string);
                TogglePlayerControllable(playerid, 1);
				GivePlayerCash(playerid, - FillUp);
				Refueling[playerid] = 0;
                new str[184];
				Update(playerid, pCashx);
				if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[33][bEntranceX],BizzInfo[33][bEntranceY],BizzInfo[33][bEntranceZ]))
				{
					BizzInfo[33][bTill] += FillUp;
		    		mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='33'",BizzInfo[33][bTill]);
					mysql_tquery(SQL,str,"","");
				}
				else if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[42][bEntranceX],BizzInfo[42][bEntranceY],BizzInfo[42][bEntranceZ]))
				{
					BizzInfo[42][bTill] += FillUp;
		    		mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='42'",BizzInfo[42][bTill]);
					mysql_tquery(SQL,str,"","");
				}
				else if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[43][bEntranceX],BizzInfo[43][bEntranceY],BizzInfo[43][bEntranceZ]))
				{
					BizzInfo[43][bTill] += FillUp;
		    		mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='43'",BizzInfo[43][bTill]);
					mysql_tquery(SQL,str,"","");
				}
				else if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[44][bEntranceX],BizzInfo[44][bEntranceY],BizzInfo[44][bEntranceZ]))
				{
					BizzInfo[44][bTill] += FillUp;
		    		mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='44'",BizzInfo[44][bTill]);
					mysql_tquery(SQL,str,"","");
				}
				else if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[45][bEntranceX],BizzInfo[45][bEntranceY],BizzInfo[45][bEntranceZ]))
				{
					BizzInfo[45][bTill] += FillUp;
		    		mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='45'",BizzInfo[45][bTill]);
					mysql_tquery(SQL,str,"","");
				}
				else if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[46][bEntranceX],BizzInfo[46][bEntranceY],BizzInfo[46][bEntranceZ]))
				{
					BizzInfo[46][bTill] += FillUp;
		    		mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='46'",BizzInfo[46][bTill]);
					mysql_tquery(SQL,str,"","");
				}
				else if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[47][bEntranceX],BizzInfo[47][bEntranceY],BizzInfo[47][bEntranceZ]))
				{
					BizzInfo[47][bTill] += FillUp;
		    		mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='47'",BizzInfo[47][bTill]);
					mysql_tquery(SQL,str,"","");
				}
				else if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[48][bEntranceX],BizzInfo[48][bEntranceY],BizzInfo[48][bEntranceZ]))
				{
					BizzInfo[48][bTill] += FillUp;
		    		mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='48'",BizzInfo[48][bTill]);
					mysql_tquery(SQL,str,"","");
				}
				else if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[49][bEntranceX],BizzInfo[49][bEntranceY],BizzInfo[49][bEntranceZ]))
				{
					BizzInfo[49][bTill] += FillUp;
		    		mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='49'",BizzInfo[49][bTill]);
					mysql_tquery(SQL,str,"","");
				}
				else if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[50][bEntranceX],BizzInfo[50][bEntranceY],BizzInfo[50][bEntranceZ]))
				{
					BizzInfo[50][bTill] += FillUp;
		    		mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='50'",BizzInfo[50][bTill]);
					mysql_tquery(SQL,str,"","");
				}
			}
		   	else
		   	{
		   	    format(string,sizeof(string),"* Not enough Money to refill, it costs $%d to fill your Vehicle.",FillUp);
			    SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		   	}
	 	}
	}
	return 1;
}

public PrintBizInfo(playerid,targetid)
{
    if(IsPlayerConnected(playerid))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring),"*** %s ***",BizzInfo[targetid][bMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Locked: %d Entry Fee: $%s Till: $%s.", BizzInfo[targetid][bLocked], FormatNumber(BizzInfo[targetid][bEntranceCost]), FormatNumber(BizzInfo[targetid][bTill]));
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	}
}

public ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new cash =  GetPlayerMoney(targetid);
		new atext[20];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "Male"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "Female"; }
  		new otext[20];
		if(PlayerInfo[targetid][pOrigin] == 1) { otext = "Los Santos"; }
		else if(PlayerInfo[targetid][pOrigin] == 2) { otext = "San Fiero"; }
		new ttext[50];
		if(PlayerInfo[targetid][pMember] == 0 && PlayerInfo[targetid][pLeader] == 0) { ttext = "Civilian"; }
		else if(PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1) { ttext = "Los Santos Police Department"; }
		else if(PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2) { ttext = "F.B.I"; }
		else if(PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3) { ttext = "National Guard"; }
		else if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4) { ttext = "Los Aztecas"; }
		else if(PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5) { ttext = "Grove Street"; }
		else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6) { ttext = "Los Vagos"; }
		else if(PlayerInfo[targetid][pMember] == 7 || PlayerInfo[targetid][pLeader] == 7) { ttext = "Government"; }
		else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8) { ttext = "L.V Police Dep"; }
		else if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9) { ttext = "N.R.E"; }
		else if(PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10) { ttext = "Ballas"; }
		else if(PlayerInfo[targetid][pMember] == 11 || PlayerInfo[targetid][pLeader] == 11) { ttext = "Hitman Agency"; }
		else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12) { ttext = "School Instructors"; }
		else if(PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13) { ttext = "Taxi LS"; }
		else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14) { ttext = "Paramedic Department LV"; }
	    new rtext[64];
		if(PlayerInfo[targetid][pRank] == 1) format(rtext,sizeof(rtext),"%s",DynamicFactions[PlayerInfo[targetid][pMember]][fRankName1]);
		else if(PlayerInfo[targetid][pRank] == 2) format(rtext,sizeof(rtext),"%s",DynamicFactions[PlayerInfo[targetid][pMember]][fRankName2]);
		else if(PlayerInfo[targetid][pRank] == 3) format(rtext,sizeof(rtext),"%s",DynamicFactions[PlayerInfo[targetid][pMember]][fRankName3]);
		else if(PlayerInfo[targetid][pRank] == 4) format(rtext,sizeof(rtext),"%s",DynamicFactions[PlayerInfo[targetid][pMember]][fRankName4]);
		else if(PlayerInfo[targetid][pRank] == 5) format(rtext,sizeof(rtext),"%s",DynamicFactions[PlayerInfo[targetid][pMember]][fRankName5]);
		else if(PlayerInfo[targetid][pRank] == 6) format(rtext,sizeof(rtext),"%s",DynamicFactions[PlayerInfo[targetid][pMember]][fRankName6]);
		else if(PlayerInfo[targetid][pRank] == 7) format(rtext,sizeof(rtext),"%s",DynamicFactions[PlayerInfo[targetid][pMember]][fRankName7]);
		else { rtext = "None"; }
        new jtext[20];
        if(PlayerInfo[targetid][pJob] == 1) { jtext = "Detective"; }
        else if(PlayerInfo[targetid][pJob] == 2) { jtext = "Car Jacker"; }
        else if(PlayerInfo[targetid][pJob] == 4) { jtext = "Drugs Dealer"; }
        else if(PlayerInfo[targetid][pJob] == 5) { jtext = "Pizza Boy"; }
        else if(PlayerInfo[targetid][pJob] == 7) { jtext = "Bus Driver"; }
        else if(PlayerInfo[targetid][pJob] == 8) { jtext = "Mechanic"; }
        else if(PlayerInfo[targetid][pJob] == 9) { jtext = "Arms Dealer"; }
        else if(PlayerInfo[targetid][pJob] == 10) { jtext = "Garbage Man"; }
        else if(PlayerInfo[targetid][pJob] == 13) { jtext = "Fisherman"; }
        else if(PlayerInfo[targetid][pJob] == 14) { jtext = "Trucker"; }
        else if(PlayerInfo[targetid][pJob] == 15) { jtext = "Curier"; }
        else if(PlayerInfo[targetid][pJob] == 16) { jtext = "Coal Delivery"; }
		else if(PlayerInfo[targetid][pJob] == 17) { jtext = "Quarry"; }
	    else { jtext = "None"; }
		new drank[20];
		if(PlayerInfo[targetid][pPremiumAccount] == 0) { drank = "No"; }
		else if(PlayerInfo[targetid][pPremiumAccount] == 1) { drank = "Yes"; }
		else { drank = "None"; }
		if(PlayerInfo[targetid][pVIP] == 1) { drank = "VIP"; }
		if(PlayerInfo[targetid][pAcces] == 1) { drank = "Acces"; }
		if(PlayerInfo[targetid][pYoutuber] == 1) { drank = "Aparater"; }

	 	new clanuuu[32];
		new clanrankk[32];
	 	if(PlayerInfo[targetid][pClan] < 1)
		{
			clanuuu = "None";
			clanrankk = "None";
		}
		else
		{
			format(clanuuu, sizeof(clanuuu), "%s", ClanInfo[PlayerInfo[targetid][pClan]][cClanName]);
			switch(PlayerInfo[targetid][pCRank])
			{
				case 1: format(clanrankk, sizeof(clanrankk), "%s", ClanInfo[PlayerInfo[targetid][pClan]][cClanRankName1]);
				case 2: format(clanrankk, sizeof(clanrankk), "%s", ClanInfo[PlayerInfo[targetid][pClan]][cClanRankName2]);
				case 3: format(clanrankk, sizeof(clanrankk), "%s", ClanInfo[PlayerInfo[targetid][pClan]][cClanRankName3]);
				case 4: format(clanrankk, sizeof(clanrankk), "%s", ClanInfo[PlayerInfo[targetid][pClan]][cClanRankName4]);
				case 5: format(clanrankk, sizeof(clanrankk), "%s", ClanInfo[PlayerInfo[targetid][pClan]][cClanRankName5]);
				case 6: format(clanrankk, sizeof(clanrankk), "%s", ClanInfo[PlayerInfo[targetid][pClan]][cClanRankName6]);
				case 7: format(clanrankk, sizeof(clanrankk), "%s", ClanInfo[PlayerInfo[targetid][pClan]][cClanRankName7]);
			}
		}
		new mutedt[50];
  		if(PlayerInfo[targetid][pMuteTime] == 0)
		{
			mutedt = "No";
		}
  		else if(PlayerInfo[targetid][pMuteTime] >= 1)
		{
			new mutetim = PlayerInfo[targetid][pMuteTime],
				mutetim2[10];
			format(mutetim2,sizeof(mutetim2),"%d",mutetim);
			mutedt = mutetim2;
	 	}
		new adminl = PlayerInfo[targetid][pAdmin];
		new helperl = PlayerInfo[targetid][pHelper];
		new ptime = PlayerInfo[targetid][pConnectTime];
		new crimes = PlayerInfo[targetid][pCrimes];
		new arrests = PlayerInfo[targetid][pArrested];
		new drugs = PlayerInfo[targetid][pDrugs];
		new warnings = PlayerInfo[targetid][pWarns];
		new mats = PlayerInfo[targetid][pMats];
		new plevel = PlayerInfo[targetid][pLevel];
		new exp = PlayerInfo[targetid][pExp];
		new pnumber = PlayerInfo[targetid][pPnumber];
		new account = PlayerInfo[targetid][pAccount];
		new nxtlevel = PlayerInfo[targetid][pLevel];
		new expamount;
		if(PlayerInfo[targetid][pLevel] == 1 || PlayerInfo[targetid][pLevel] == 2 || PlayerInfo[targetid][pLevel] == 3 || PlayerInfo[targetid][pLevel] == 4)
		{
		    expamount = nxtlevel*2;
		}
		else if(PlayerInfo[targetid][pLevel] >= 5)
		{
		    expamount = nxtlevel*levelexp;
		}
		new pretlevel = nxtlevel*levelcost;
		new housekey = PlayerInfo[targetid][pPhousekey];
		new bizkey = PlayerInfo[targetid][pPbiskey];
		new bltime = PlayerInfo[targetid][pFpunish];
		new premiumpoints = PlayerInfo[targetid][pPremiumPoints];
		new fireworks = PlayerInfo[targetid][pFWorks];
		new commands = PlayerInfo[targetid][pCommands];
		new puncte = PlayerInfo[targetid][pRob];
		new vw = GetPlayerVirtualWorld(targetid);
		new hiddenss = PlayerInfo[targetid][pHiddenColor];
		new Float:health;
		new name[MAX_PLAYER_NAME];
		new ipplayer[16];
		new Float:armour;
		GetPlayerName(targetid, name, sizeof(name));
		GetPlayerHealth(targetid,health);
		GetPlayerArmour(targetid,armour);
        GetPlayerIp(targetid, ipplayer, sizeof(ipplayer));
		new Float:px,Float:py,Float:pz;
		GetPlayerPos(targetid, px, py, pz);
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "{0739D0}=> {FFFFFF}(%d) %s | Playing hours: %d | Phone no: %d | Job: %s | Warns: %d/3",targetid,name,ptime,pnumber,jtext,warnings);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "{0739D0}=> {FFFFFF}Level: %d | Respect Points: %d/%d | Next level price: %s | Money: %s | Bank money: %s",plevel,exp,expamount,FormatNumber(pretlevel),FormatNumber(cash),FormatNumber(account));
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "{0739D0}=> {FFFFFF}Group: %s | Faction Punish: %d/20 | Faction Raport: %d/15 | Premium: %s (%d points) | Faction Paydays: %d",ttext,bltime,commands,drank,premiumpoints,PlayerInfo[targetid][pPaydayuri]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		if(PlayerInfo[targetid][pClan] >= 1)
		{
			format(coordsstring, sizeof(coordsstring), "{0739D0}=> {FFFFFF}Clan: %s(%s) | Rank: %d (%s)",clanuuu,ClanInfo[PlayerInfo[targetid][pClan]][cClanTag],PlayerInfo[targetid][pCRank],clanrankk);
			SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		}
		format(coordsstring, sizeof(coordsstring), "{0739D0}=> {FFFFFF}Rob Points: %d/20 | Arrests: %d | Crimes: %d | Credit: %d$",puncte,arrests,crimes,PlayerInfo[targetid][pCredits]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "{0739D0}=> Materials: %s | Drugs: %d | Fireworks: %d | Hiddens: %d | House: %d | Business: %d",FormatNumber(mats),drugs,fireworks,hiddenss,housekey,bizkey);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		if (PlayerInfo[playerid][pHelper] >= 1)
		{
		format(coordsstring, sizeof(coordsstring), "{0739D0}=> {FFFFFF}Health: %.1f | Armour: %.1f | VirtualWorld: %d | HelperLevel: %d | HelpedPlayers: %d | Tokens: %d", health,armour,vw,helperl,PlayerInfo[targetid][pHelpedPlayers],PlayerInfo[targetid][pHToken]);
		SendClientMessage(playerid, COLOR_SERVER,coordsstring);
		}
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
		format(coordsstring, sizeof(coordsstring), "{0739D0}=> {FFFFFF}Health: %.1f | Armour: %.1f | VirtualWorld: %d | HelperLevel: %d | AdminLevel: %d | HelpedPlayers: %d", health,armour,vw,helperl,adminl,PlayerInfo[targetid][pHelpedPlayers]);
		SendClientMessage(playerid, COLOR_SERVER,coordsstring);
	  	}
	}
}


public SetPlayerToTeamColor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	  	SetPlayerColor(playerid,COLOR_WHITE); // Civilian
      	if(PlayerInfo[playerid][pMember] == 1) { SetPlayerColor(playerid, 0x0000FFFF); } // LSPD
      	if(PlayerInfo[playerid][pLeader] == 1) { SetPlayerColor(playerid, 0x0000FFFF); } // LSPD
      	if(PlayerInfo[playerid][pMember] == 2) { SetPlayerColor(playerid, 0x0000FFFF); } // FBI
      	if(PlayerInfo[playerid][pLeader] == 2) { SetPlayerColor(playerid, 0x0000FFFF); } // FBI
      	if(PlayerInfo[playerid][pLeader] == 3) { SetPlayerColor(playerid, 0x00006AFF); } // National Guard
      	if(PlayerInfo[playerid][pMember] == 3) { SetPlayerColor(playerid, 0x00006AFF); } // National Guard
      	if(PlayerInfo[playerid][pMember] == 4) { SetPlayerColor(playerid, 0x18EBD6C8); } // Los Aztecas
      	if(PlayerInfo[playerid][pLeader] == 4) { SetPlayerColor(playerid, 0x18EBD6C8); } // Los Aztecas
      	if(PlayerInfo[playerid][pMember] == 5) { SetPlayerColor(playerid, 0x40863CAA); } // Grove Street
      	if(PlayerInfo[playerid][pLeader] == 5) { SetPlayerColor(playerid, 0x40863CAA); } // Grove Street
      	if(PlayerInfo[playerid][pMember] == 6) { SetPlayerColor(playerid, 0xFFAE00C8); } // Los Vagos
      	if(PlayerInfo[playerid][pLeader] == 6) { SetPlayerColor(playerid, 0xFFAE00C8); } // Los Vagos
		if(PlayerInfo[playerid][pMember] == 7) { SetPlayerColor(playerid, 0xB3F856FF); } // Government
      	if(PlayerInfo[playerid][pLeader] == 7) { SetPlayerColor(playerid, 0xB3F856FF); } // Government
      	if(PlayerInfo[playerid][pMember] == 8) { SetPlayerColor(playerid, 0x3754C8C8); } // LVPD
      	if(PlayerInfo[playerid][pLeader] == 8) { SetPlayerColor(playerid, 0x3754C8C8); } // LVPD
      	if(PlayerInfo[playerid][pMember] == 9) { SetPlayerColor(playerid, 0xEFC6FFFF); } // News Reporter
      	if(PlayerInfo[playerid][pLeader] == 9) { SetPlayerColor(playerid, 0xEFC6FFFF); } // News Reporter
      	if(PlayerInfo[playerid][pMember] == 10) { SetPlayerColor(playerid, 0xBD1CDEC8); } // Ballas
      	if(PlayerInfo[playerid][pLeader] == 10) { SetPlayerColor(playerid, 0xBD1CDEC8); } // Ballas
      	if(PlayerInfo[playerid][pMember] == 11) { SetPlayerColor(playerid, 0x7E3937FF); } // Hitman
      	if(PlayerInfo[playerid][pLeader] == 11) { SetPlayerColor(playerid, 0x7E3937FF); } // Hitman
      	if(PlayerInfo[playerid][pMember] == 12) { SetPlayerColor(playerid, 0x00D179FF); } // SI
      	if(PlayerInfo[playerid][pLeader] == 12) { SetPlayerColor(playerid, 0x00D179FF); } // SI
      	if(PlayerInfo[playerid][pMember] == 13) { SetPlayerColor(playerid, COLOR_YELLOW); } // TAXI
      	if(PlayerInfo[playerid][pLeader] == 13) { SetPlayerColor(playerid, COLOR_YELLOW); } // TAXI
      	if(PlayerInfo[playerid][pMember] == 14) { SetPlayerColor(playerid, 0xf86448FF); } // fireman
      	if(PlayerInfo[playerid][pLeader] == 14) { SetPlayerColor(playerid, 0xf86448FF); } // fireman
      	if(PlayerInfo[playerid][pPaintBallG] > 0) { SetPlayerColor(playerid, 0xff6464FF); } //Paintball
    }
    return 1;
}

public GameModeInitExitFunc()
{
	foreach(Player,i)
	{
		if(IsPlayerConnected(i))
		{
			DisablePlayerCheckpoint(i);
			gPlayerCheckpointStatus[i] = CHECKPOINT_NONE;
		    SetPlayerCameraPos(i, 1460.0, -1324.0, 287.2);
		    SetPlayerCameraLookAt(i,1374.5, -1291.1, 239.0);
			gPlayerLogged[i] = 0;
		}
	}
	SetTimer("GameModeExitFunc", 4000, 0);
	return 1;
}

public GameModeExitFunc()
{
	KillTimer(synctimer);
	KillTimer(unjailtimer);
	KillTimer(othtimer);
	KillTimer(checkafktimer);
	KillTimer(cartimer);
	KillTimer(checkgastimer);
	KillTimer(checkvehinfotimer);
	KillTimer(productiontimer);
	KillTimer(spectatetimer);
	KillTimer(stoppedvehtimer);
	KillTimer(idletimer);
	KillTimer(pnstimer);
	KillTimer(wantedicatimer);
	KillTimer(savedatatimer);
	KillTimer(preparepaint1);
	KillTimer(preparepaint2);
	KillTimer(preparepaint3);
	KillTimer(preparepaint4);
	KillTimer(paintrun1);
	KillTimer(paintrun2);
	KillTimer(paintrun3);
	KillTimer(paintrun4);
	GameModeExit();
}

public OnGameModeExit()
{
    new qqerry[128];
	mysql_format(SQL,qqerry, sizeof(qqerry), "UPDATE `users` SET `Status` = '0'");
    mysql_tquery(SQL,qqerry,"","");
	mysql_format(SQL,qqerry, sizeof(qqerry), "UPDATE `friends` SET `Status` = '0'");
    mysql_tquery(SQL,qqerry,"","");
    mysql_close(SQL);
    esteanunt = 0;
    return 1;
}

forward LoadCharity();
public LoadCharity()
{
	new string[256];
	format(string, sizeof(string), "SELECT * FROM `charity`");
	mysql_query(SQL,string);
	mysql_store_result();
	while(mysql_retrieve_row())
	{
	    mysql_fetch_field_row(string, "CharityMoney"); CharityMoney = strval(string);
	}
	mysql_free_result();
	print("[MYSQL] Charity Loaded");
	return 1;
}

public LoadBizz()
{
    new PropertyString[256];
	bussines = cache_num_rows();
	for(new i = 1; i <= bussines; i++)
	{
        new b = i - 1;
		BizzInfo[i][bID]                            = cache_get_field_content_int(b, "ID");
        BizzInfo[i][bOwned]							= cache_get_field_content_int(b, "Owned");
        cache_get_field_content(b, "Owner", BizzInfo[i][bOwner], SQL, 130);
        cache_get_field_content(b, "Message", BizzInfo[i][bMessage], SQL, 130);
   	    BizzInfo[i][bEntranceX]                     = cache_get_field_content_float(b, "EntranceX");
    	BizzInfo[i][bEntranceY]                     = cache_get_field_content_float(b, "EntranceY");
        BizzInfo[i][bEntranceZ]                     = cache_get_field_content_float(b, "EntranceZ");
        BizzInfo[i][bExitX]                         = cache_get_field_content_float(b, "ExitX");
        BizzInfo[i][bExitY]                         = cache_get_field_content_float(b, "ExitY");
        BizzInfo[i][bExitZ]                         = cache_get_field_content_float(b, "ExitZ");
        BizzInfo[i][bLevelNeeded]                   = cache_get_field_content_int(b, "LevelNeeded");
        BizzInfo[i][bBuyPrice]                      = cache_get_field_content_int(b, "BuyPrice");
        BizzInfo[i][bEntranceCost]                  = cache_get_field_content_int(b, "EntranceCost");
        BizzInfo[i][bTill]                          = cache_get_field_content_int(b, "Till");
        BizzInfo[i][bLocked]                        = cache_get_field_content_int(b, "Locked");
        BizzInfo[i][bInterior]                      = cache_get_field_content_int(b, "Interior");
        BizzInfo[i][bVirtual]                       = cache_get_field_content_int(b, "Virtual");
		BizzInfo[i][bSbiz]							= cache_get_field_content_int(b, "Sbiz");
		BizzInfo[i][bType]							= cache_get_field_content_int(b, "Type");
		if(BizzInfo[i][bOwned] == 0)
		{
			DestroyDynamic3DTextLabel(BizzLabel[i]);
			format(PropertyString, sizeof(PropertyString),"{FFFFFF}%s \n{00AFFF}[Business {FFFFFF}%d{00AFFF}] \n{FFFFFF}This Business Is For Sale [/BuyBiz] ! \n{00AFFF}Owner: {FFFFFF}AdmBot \n {00AFFF}Price: {FFFFFF}%s \n{00AFFF}Level: {FFFFFF}%d",BizzInfo[i][bMessage],i,FormatNumber(BizzInfo[i][bBuyPrice]),BizzInfo[i][bLevelNeeded]);
			BizzLabel[i] = CreateDynamic3DTextLabel(PropertyString ,0x0066FFCC,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ],25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
			CreateDynamicPickup(1239, 1, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]);
			pickups++;
		}
		else if(BizzInfo[i][bOwned] == 1)
		{
			DestroyDynamic3DTextLabel(BizzLabel[i]);
			format(PropertyString, sizeof(PropertyString),"{FFFFFF}%s \n{00AFFF}[Business {FFFFFF}%d{00AFFF}] \n{00AFFF}Owner: {FFFFFF}%s \n{00AFFF}Fee: {FFFFFF}$%s",BizzInfo[i][bMessage],i,BizzInfo[i][bOwner],FormatNumber(BizzInfo[i][bEntranceCost]));
			BizzLabel[i] = CreateDynamic3DTextLabel(PropertyString ,0x0066FFCC,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ],25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
			CreateDynamicPickup(1239, 1, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]);
			pickups++;
		}
		if(BizzInfo[i][bType] == 1) CreateDynamicMapIcon(BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ],52,0,-1,-1,-1,750.0); //Bank
		if(BizzInfo[i][bType] == 2) CreateDynamicMapIcon(BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ],18,0,-1,-1,-1,750.0); //GunShop
		if(BizzInfo[i][bType] == 3) CreateDynamicMapIcon(BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ],49,0,-1,-1,-1,750.0); //Bars
		if(BizzInfo[i][bType] == 4) CreateDynamicMapIcon(BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ],38,0,-1,-1,-1,750.0); //Sex Shop
		if(BizzInfo[i][bType] == 5) CreateDynamicMapIcon(BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ],25,0,-1,-1,-1,750.0); //Casino
		if(BizzInfo[i][bType] == 6) CreateDynamicMapIcon(BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ],17,0,-1,-1,-1,750.0); //24/7
		if(BizzInfo[i][bType] == 7) CreateDynamicMapIcon(BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ],10,0,-1,-1,-1,750.0); //Burger Shot
		if(BizzInfo[i][bType] == 8) CreateDynamicMapIcon(BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ],54,0,-1,-1,-1,750.0); //Gym
		if(BizzInfo[i][bType] == 9) CreateDynamicMapIcon(BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ],29,0,-1,-1,-1,750.0); //Pizza
		if(BizzInfo[i][bType] == 10) CreateDynamicMapIcon(BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ],51,0,-1,-1,-1,750.0); //Rent Car
		if(BizzInfo[i][bType] == 11) CreateDynamicMapIcon(BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ],45,0,-1,-1,-1,750.0); //Clothes
		if(BizzInfo[i][bType] == 12) CreateDynamicMapIcon(BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ],27,0,-1,-1,-1,750.0); //Gas Station
		if(BizzInfo[i][bType] == 13) CreateDynamicMapIcon(BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ],63,0,-1,-1,-1,750.0); //PNS
		if(BizzInfo[i][bType] == 14) CreateDynamicMapIcon(BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ],14,0,-1,-1,-1,750.0); //Cluckin Bell
	}
	printf("[MYSQL] Loaded Bussineses : %d", bussines);
}

public LoadTurfs()
{
	new string[256],idx;
	format(string, sizeof(string), "SELECT * FROM `turfs`");
	mysql_query(SQL, string);
	mysql_store_result();
	while(mysql_retrieve_row())
	{
	    idx++;
	    mysql_fetch_field_row(string, "ID"); TurfInfo[idx][zID] = strval(string);
	 	mysql_fetch_field_row(string, "Owned"); TurfInfo[idx][zOwned] = strval(string);
	 	mysql_fetch_field_row(string, "MinX"); TurfInfo[idx][zMinX] = floatstr(string);
	 	mysql_fetch_field_row(string, "MinY"); TurfInfo[idx][zMinY] = floatstr(string);
	 	mysql_fetch_field_row(string, "MaxX"); TurfInfo[idx][zMaxX] = floatstr(string);
	 	mysql_fetch_field_row(string, "MaxY"); TurfInfo[idx][zMaxY] = floatstr(string);
		turfsss++;
	}
	mysql_free_result();
	printf("[MYSQL] Loaded Turfs : %d", turfsss);
	return 1;
}

public LoadDynamicFactions()
{
	factionss = cache_num_rows();
    for(new i = 1; i <= factionss; i++)
    {
		new f = i - 1;
		DynamicFactions[i][fID]                 = cache_get_field_content_int(f, "ID");
        cache_get_field_content(f, "Name", DynamicFactions[i][fName], SQL, 130);
		DynamicFactions[i][fcX]                 = cache_get_field_content_float(f, "X");
   	    DynamicFactions[i][fcY]                 = cache_get_field_content_float(f, "Y");
    	DynamicFactions[i][fcZ]                 = cache_get_field_content_float(f, "Z");
    	DynamicFactions[i][fMats]               = cache_get_field_content_int(f, "Mats");
    	DynamicFactions[i][fDrugs]              = cache_get_field_content_int(f, "Drugs");
    	DynamicFactions[i][fBank]               = cache_get_field_content_int(f, "Bank");
    	DynamicFactions[i][fPaydayMoney]        = cache_get_field_content_int(f, "PaydayMoney");
        cache_get_field_content(f, "Anunt", DynamicFactions[i][fAnn], SQL, 130);
    	DynamicFactions[i][fWin]                = cache_get_field_content_int(f, "Win");
    	DynamicFactions[i][fLost]               = cache_get_field_content_int(f, "Lost");
    	DynamicFactions[i][fMaxMembers]         = cache_get_field_content_int(f, "MaxMembers");
		DynamicFactions[i][fMinLevel]         	= cache_get_field_content_int(f, "MinLevel");
    	DynamicFactions[i][fApplication]        = cache_get_field_content_int(f, "Application");
		cache_get_field_content(f, "Rank1", DynamicFactions[i][fRankName1], SQL, 130);
		cache_get_field_content(f, "Rank2", DynamicFactions[i][fRankName2], SQL, 130);
		cache_get_field_content(f, "Rank3", DynamicFactions[i][fRankName3], SQL, 130);
		cache_get_field_content(f, "Rank4", DynamicFactions[i][fRankName4], SQL, 130);
		cache_get_field_content(f, "Rank5", DynamicFactions[i][fRankName5], SQL, 130);
		cache_get_field_content(f, "Rank6", DynamicFactions[i][fRankName6], SQL, 130);
		cache_get_field_content(f, "Rank7", DynamicFactions[i][fRankName7], SQL, 130);
	}
	printf("[MYSQL] Loaded Dynamic Factions: %d", factionss);
	return 1;
}

public LoadClanInfo()
{
    clanss = cache_num_rows();
    for(new i = 1; i <= clanss; i++)
    {
		new x = i - 1;
		ClanInfo[i][cClanID]              		= cache_get_field_content_int(x, "clanID");
		ClanInfo[i][cClanExpire]              	= cache_get_field_content_int(x, "clanExpire");
		ClanInfo[i][cClanActive]              	= cache_get_field_content_int(x, "clanActive");
		ClanInfo[i][cClanSlots]              	= cache_get_field_content_int(x, "clanSlots");
        cache_get_field_content(x, "clanName", ClanInfo[i][cClanName], SQL, 130);
		cache_get_field_content(x, "clanColor", ClanInfo[i][cClanColor], SQL, 130);
		cache_get_field_content(x, "clanMOTD", ClanInfo[i][cClanMOTD], SQL, 130);
   	    cache_get_field_content(x, "clanTag", ClanInfo[i][cClanTag], SQL, 130);
    	cache_get_field_content(x, "clanRankName7", ClanInfo[i][cClanRankName7], SQL, 130);
    	cache_get_field_content(x, "clanRankName6", ClanInfo[i][cClanRankName6], SQL, 130);
    	cache_get_field_content(x, "clanRankName5", ClanInfo[i][cClanRankName5], SQL, 130);
    	cache_get_field_content(x, "clanRankName4", ClanInfo[i][cClanRankName4], SQL, 130);
    	cache_get_field_content(x, "clanRankName3", ClanInfo[i][cClanRankName3], SQL, 130);
    	cache_get_field_content(x, "clanRankName2", ClanInfo[i][cClanRankName2], SQL, 130);
    	cache_get_field_content(x, "clanRankName1", ClanInfo[i][cClanRankName1], SQL, 130);
	}
	printf("[MYSQL] Loaded Clans: %d", clanss);
}

public LoadStock()
{
	stockss = cache_num_rows();
    for(new i = 1; i <= stockss; i++)
    {
		new s = i - 1;
		Stock[i][vID]                               = cache_get_field_content_int(s, "ID");
		Stock[i][vStock]                            = cache_get_field_content_int(s, "Stock");
		Stock[i][vPrice]                            = cache_get_field_content_int(s, "Price");
		Stock[i][vModel]                            = cache_get_field_content_int(s, "vid");
		Stock[i][vSpeed]                            = cache_get_field_content_int(s, "speed");
		cache_get_field_content(s, "Car", Stock[i][vName], SQL, 130);
	}
	printf("[MYSQL] Loaded Stocks: %d", stockss);
}

public LoadCar()
{
	masini = cache_num_rows();
    for(new i = 1; i <= masini; i++)
    {
		new c = i - 1;
		CarInfo[i][cID]                             = cache_get_field_content_int(c, "ID");
		CarInfo[i][cModel]                          = cache_get_field_content_int(c, "Model");
   	    CarInfo[i][cLocationx]                      = cache_get_field_content_float(c, "Locationx");
    	CarInfo[i][cLocationy]                      = cache_get_field_content_float(c, "Locationy");
        CarInfo[i][cLocationz]                      = cache_get_field_content_float(c, "Locationz");
        CarInfo[i][cAngle]                          = cache_get_field_content_float(c, "Angle");
        CarInfo[i][cColorOne]                       = cache_get_field_content_int(c, "ColorOne");
        CarInfo[i][cColorTwo]                       = cache_get_field_content_int(c, "ColorTwo");
        cache_get_field_content(c, "Owner", CarInfo[i][cOwner], SQL, 130);
        CarInfo[i][cValue]                          = cache_get_field_content_int(c, "Value");
        cache_get_field_content(c, "License", CarInfo[i][cLicense], SQL, 130);
        cache_get_field_content(c, "Description", CarInfo[i][cDescription], SQL, 130);
        CarInfo[i][cLock]                          	= cache_get_field_content_int(c, "Lockk");
        CarInfo[i][cTimed]                          = cache_get_field_content_int(c, "Timed");
        CarInfo[i][cInscarprice]                    = cache_get_field_content_int(c, "Inscarprice");
        CarInfo[i][cInsurancecar]                   = cache_get_field_content_int(c, "Insurancecar");
        CarInfo[i][cKM]                             = cache_get_field_content_float(c, "KM");
		CarInfo[i][cHP]                             = cache_get_field_content_float(c, "HP");
		CarInfo[i][cDamage1]                        = cache_get_field_content_int(c, "Damage1");
		CarInfo[i][cDamage2]                        = cache_get_field_content_int(c, "Damage2");
		CarInfo[i][cDamage3]                        = cache_get_field_content_int(c, "Damage3");
		CarInfo[i][cDamage4]                        = cache_get_field_content_int(c, "Damage4");
		CarInfo[i][cGas]                        	= cache_get_field_content_int(c, "Gas");
        CarInfo[i][cOwned]                          = cache_get_field_content_int(c, "Owned");
        CarInfo[i][cSell]                           = cache_get_field_content_int(c, "Sell");
        CarInfo[i][mod1]                            = cache_get_field_content_int(c, "mod1");
        CarInfo[i][mod2]                            = cache_get_field_content_int(c, "mod2");
        CarInfo[i][mod3]                            = cache_get_field_content_int(c, "mod3");
        CarInfo[i][mod4]                            = cache_get_field_content_int(c, "mod4");
        CarInfo[i][mod5]                            = cache_get_field_content_int(c, "mod5");
        CarInfo[i][mod6]                            = cache_get_field_content_int(c, "mod6");
        CarInfo[i][mod7]                            = cache_get_field_content_int(c, "mod7");
        CarInfo[i][mod8]                            = cache_get_field_content_int(c, "mod8");
        CarInfo[i][mod9]                            = cache_get_field_content_int(c, "mod9");
        CarInfo[i][mod10]                           = cache_get_field_content_int(c, "mod10");
        CarInfo[i][mod11]                           = cache_get_field_content_int(c, "mod11");
        CarInfo[i][mod12]                           = cache_get_field_content_int(c, "mod12");
        CarInfo[i][mod13]                           = cache_get_field_content_int(c, "mod13");
        CarInfo[i][mod14]                           = cache_get_field_content_int(c, "mod14");
        CarInfo[i][mod15]                           = cache_get_field_content_int(c, "mod15");
        CarInfo[i][mod16]                           = cache_get_field_content_int(c, "mod16");
        CarInfo[i][mod17]                           = cache_get_field_content_int(c, "mod17");
        CarInfo[i][cDays]                           = cache_get_field_content_int(c, "days");
        CarInfo[i][cPaintJ]                         = cache_get_field_content_int(c, "PaintJ");
        CarInfo[i][cVIP]                         = cache_get_field_content_int(c, "VipCar");
        cache_get_field_content(c, "VipText", CarInfo[i][cVipText], SQL, 130);
        CarInfo[i][cNeon]                         = cache_get_field_content_int(c, "Neon");
	}
	printf("[MYSQL] Loaded Cars: %d", masini);
}

public LoadProperty()
{
	housess = cache_num_rows();
	for(new i=0 ;i<housess;i++)
    {
		new h = i - 1;
		HouseInfo[i][hID]                           = cache_get_field_content_int(h, "ID");
   	    HouseInfo[i][hEntrancex]                    = cache_get_field_content_float(h, "Entrancex");
    	HouseInfo[i][hEntrancey]                    = cache_get_field_content_float(h, "Entrancey");
        HouseInfo[i][hEntrancez]                    = cache_get_field_content_float(h, "Entrancez");
        HouseInfo[i][hExitx]                        = cache_get_field_content_float(h, "Exitx");
        HouseInfo[i][hExity]                        = cache_get_field_content_float(h, "Exity");
        HouseInfo[i][hExitz]                        = cache_get_field_content_float(h, "Exitz");
        cache_get_field_content(h, "Owner", HouseInfo[i][hOwner], SQL, 130);
        cache_get_field_content(h, "Discription", HouseInfo[i][hDiscription], SQL, 130);
        HouseInfo[i][hValue]						= cache_get_field_content_int(h, "Value");
        HouseInfo[i][hHel]                          = cache_get_field_content_int(h, "Hel");
        HouseInfo[i][hArm]                          = cache_get_field_content_int(h, "Arm");
        HouseInfo[i][hInterior]                     = cache_get_field_content_int(h, "Interior");
        HouseInfo[i][hLock]                         = cache_get_field_content_int(h, "Lockk");
        HouseInfo[i][hOwned]                        = cache_get_field_content_int(h, "Owned");
        HouseInfo[i][hRent]                         = cache_get_field_content_int(h, "Rent");
        HouseInfo[i][hRentabil]                     = cache_get_field_content_int(h, "Rentabil");
        HouseInfo[i][hTakings]                      = cache_get_field_content_int(h, "Takings");
        HouseInfo[i][hLevel]                        = cache_get_field_content_int(h, "Level");
        HouseInfo[i][hVirtual]                      = cache_get_field_content_int(h, "Virtual");
	}
	for(new i=0 ;i<housess;i++)
	{
		OnPropTextdrawUpdate(0, i);
	}
	printf("[MYSQL] Loaded Houses: %d", housess);
}

public LoadSystems()
{
    new query[128];
    mysql_format(SQL, query, sizeof(query), "SELECT * FROM `houses`");
	mysql_tquery(SQL, query, "LoadProperty", "");

	mysql_format(SQL, query, sizeof(query), "SELECT * FROM `bizz`");
	mysql_tquery(SQL, query, "LoadBizz", "");

	LoadTurfs();
	for(new i = 0; i < sizeof(TurfInfo); i++)
	{
     	Turfs[i] = GangZoneCreateEx(TurfInfo[i][zMinX],TurfInfo[i][zMinY],TurfInfo[i][zMaxX],TurfInfo[i][zMaxY],TurfInfo[i][zID],1.0);
	}

	mysql_format(SQL, query, sizeof(query), "SELECT * FROM `factions`");
	mysql_tquery(SQL, query, "LoadDynamicFactions", "");

	mysql_format(SQL, query, sizeof(query), "SELECT * FROM `clans`");
	mysql_tquery(SQL, query, "LoadClanInfo", "");

	mysql_format(SQL, query, sizeof(query), "SELECT * FROM `cars`");
	mysql_tquery(SQL, query, "LoadCar", "");

	mysql_format(SQL, query, sizeof(query), "SELECT * FROM `stock`");
	mysql_tquery(SQL, query, "LoadStock", "");
}

stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
	    new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
	    GetPlayerPos(playerid,PX,PY,PZ);
	    GetVehiclePos(vehicleid, X,Y,Z);
	    new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
	    if(Distance <= radi*radi)
	    {
	        return 1;
	    }
	}
	return 0;
}

public OnGameModeInit()
{
	mysql_log(LOG_ERROR | LOG_WARNING, LOG_TYPE_HTML);
	SQL = mysql_connect("localhost", "root", "gm", "");

	new rezultat[256];
    new Cache: cacheverificare = mysql_query(SQL, "SELECT * FROM `users` WHERE `id` > '0'");
	sumaconturi = cache_get_row_count();
	cache_delete(cacheverificare);
	new Cache: cacheverificare2 = mysql_query(SQL, "SELECT * FROM `users` ORDER BY `id` DESC LIMIT 1");
	for(new i, cache = cache_get_row_count(); i != cache; i++)
	{
		cache_get_field_content(i, "name", rezultat); format(celmainoucont, 40, rezultat);
	}
	cache_delete(cacheverificare2);
	new Cache: cacheverificare3 = mysql_query(SQL, "SELECT * FROM `recordjucatori` ORDER BY `id` DESC LIMIT 1");
	for(new i, cache = cache_get_row_count(); i != cache; i++)
	{
		cache_get_field_content(i, "record", rezultat); format(recordjucatori, 128, rezultat);
	}
	cache_delete(cacheverificare3);
	printf("Info : Accounts = %s / Newest Account: %s / Record: %s",FormatNumber(sumaconturi),celmainoucont,recordjucatori);
	SetNameTagDrawDistance(30);
	EnableStuntBonusForAll(0);
	LimitPlayerMarkerRadius(5.0);
    ShowPlayerMarkers(2);

    countdown = 0;
    esteanunt = 0;

	voteoption = "NONE";
	voteoption2 = "NONE";
	voteoption3 = "NONE";


	SafeTD[0] = TextDrawCreate(269.853546, 4.500005, "[Safe-Zone]");
	TextDrawLetterSize(SafeTD[0], 0.573821, 1.844999);
	TextDrawAlignment(SafeTD[0], 1);
	TextDrawColor(SafeTD[0], 1509249535);
	TextDrawSetShadow(SafeTD[0], 0);
	TextDrawSetOutline(SafeTD[0], 1);
	TextDrawBackgroundColor(SafeTD[0], 255);
	TextDrawFont(SafeTD[0], 3);
	TextDrawSetProportional(SafeTD[0], 1);
	TextDrawSetShadow(SafeTD[0], 0);

	LoginInfo = TextDrawCreate(314.500000, 433.562500, "Accounts: ~y~100,000~w~ / Newest Account: ~y~BOS12345678901234567 ~w~/ Most Players Online: 200(30.06.2016 20:00)");
	TextDrawLetterSize(LoginInfo, 0.307496, 0.991874);
	TextDrawAlignment(LoginInfo, 2);
	TextDrawColor(LoginInfo, -1);
	TextDrawSetShadow(LoginInfo, 0);
	TextDrawSetOutline(LoginInfo, 1);
	TextDrawBackgroundColor(LoginInfo, 51);
	TextDrawFont(LoginInfo, 1);
	TextDrawSetProportional(LoginInfo, 1);
	
    textile = TextDrawCreate(102.000000, 193.000000, " ");
    TextDrawBackgroundColor(textile, 255);
	TextDrawFont(textile, 2);
	TextDrawLetterSize(textile, 0.500000, 2.399999);
	TextDrawColor(textile, -6749953);
	TextDrawSetOutline(textile, 0);
	TextDrawSetProportional(textile, 1);
	TextDrawSetShadow(textile, 1);
	TextDrawSetSelectable(textile, 0);
	
	for(new c=0;c<CAR_AMOUNT;c++)
	{
		Gas[c] = GasMax;
	}

	LoadTextdraws();
	LoadSystems();
 	LoadSafeZones();
	OnLoadAllCars();
	LoadAllDynamicObjects();
	LoadAllObjects();
	skinlist = LoadModelSelectionMenu("skins.txt");
	skinlist1 = LoadModelSelectionMenu("skins1.txt");
	skinlist2 = LoadModelSelectionMenu("skins2.txt");
	skinlist3 = LoadModelSelectionMenu("skins3.txt");
	skinlist4 = LoadModelSelectionMenu("skins4.txt");
	skinlist5 = LoadModelSelectionMenu("skins5.txt");
	skinlist6 = LoadModelSelectionMenu("skins6.txt");
	skinlist8 = LoadModelSelectionMenu("skins8.txt");
	skinlist9 = LoadModelSelectionMenu("skins9.txt");
	skinlist10 = LoadModelSelectionMenu("skins10.txt");
	skinlist11 = LoadModelSelectionMenu("skins11.txt");
	skinlist12 = LoadModelSelectionMenu("skins12.txt");
	skinlist13 = LoadModelSelectionMenu("skins13.txt");
	skinlist14 = LoadModelSelectionMenu("skins14.txt");
//	skinlist15 = LoadModelSelectionMenu("skins15.txt");
//	skinlist16 = LoadModelSelectionMenu("skins16.txt");
//	skinlist17 = LoadModelSelectionMenu("skins17.txt");
//	skinlist18 = LoadModelSelectionMenu("skins18.txt");
	SetGameModeText(SERVER_VERSION);
	SendRconCommand("mapname LS - LV");
	format(objstore, sizeof(objstore), "MOLE: I got nothing, check back with me later.");
	format(cbjstore, sizeof(cbjstore), "HQ: There is nothing in your Vicinity, Out.");
	
	xhq[1] = 1568.6251;  	yhq[1] = -1690.5358; 	 	zhq[1] = 5.8906;
	xhq[2] = 328.8737;   	yhq[2] = -1513.1195; 	 	zhq[2] = 36.0391;
	xhq[3] = 627.6160;   	yhq[3] = -571.7920;  	 	zhq[3] = 17.6242;
	xhq[4] = 1456.7423;  	yhq[4] = 2773.3423;	 		zhq[4] = 10.8203;
	xhq[5] = 2495.3271;   	yhq[5] = -1690.6740;	 	zhq[5] = 14.7656;
	xhq[6] = 725.6769;  	yhq[6] = -1440.4506;	 	zhq[6] = 13.5391;
	xhq[7] = 689.9420;   	yhq[7] = -1275.9573;  	 	zhq[7] = 13.5595;
	xhq[8] = 2287.1047;   	yhq[8] = 2431.7996;  	 	zhq[8] = 10.8203;
	xhq[9] = -329.5258;  	yhq[9] = 1536.7759;  		zhq[9] = 76.6117;
	xhq[10] = 1455.2687; 	yhq[10] = 750.8684; 	 	zhq[10] = 11.0234;
	xhq[11] = 1081.1794;  	yhq[11] = -345.3979;  	 	zhq[11] = 73.9825;
	xhq[12] = 2435.3064; 	yhq[12] = 1671.0139; 	 	zhq[12] = 10.8203;
	xhq[13] = 2475.7747; 	yhq[13] = -1750.5632;   	zhq[13] = 13.5469;
	xhq[14] = 1173.2563; 	yhq[14] = -1323.3102;   	zhq[14] = 15.3943;

    /*Create3DTextLabel("Updates\nType /Updates to learn new information",0xFFFFFFFF,1452.6433,-1900.0250,13.8604,5.0, 0, 1);
    Create3DTextLabel("Bonus\nType /bonus to receive a gift",0xFFFFFFFF,1452.4817,-1901.3661,13.8604,5.0, 0, 1);*/
	Create3DTextLabel("Parachute Cost: 10,000$\nType /buyparachute to buy Parachute",0xFFFFFFFF,-2231.2058,-1736.1578,480.8620,20.0, 0, 1);
    Create3DTextLabel("Gate 1\nType /opengate 1 to open",0xFFFFFFFF,1767.5348,-1581.2784,1742.5024,5.0, 0, 1);
	Create3DTextLabel("{FFFF6B}Driving School!\n \nType /exam\nto start the test!",0xFFFFFFFF,1205.1598,-1824.0554,13.5907,20.0, 0, 1);
	CreateStreamed3DTextLabel("DealerShip Los Santos\n\nType /buycar to buy a car\nor /sellcar to sell an existing car!",COLOR_LIGHTGREEN2,1310.3213,-1369.3365,13.5612,20.0,0);
    Create3DTextLabel("Get Drugs\nType /getdrugs to get drugs",0xFFFFFFFF,322.9745,1119.4409,1083.8828,20.0, 0, 1);
    Create3DTextLabel("National Guard Armoury\nPress enter to enter",0xFFFFFFFF,157.3923,1903.2848,18.6660,20.0, 0, 1);
    Create3DTextLabel("LSPD\nPress enter to enter",0xFFFFFFFF,1554.7621,-1675.5870,16.1953,20.0, 0, 1);
    Create3DTextLabel("LVPD\nPress enter to enter",0xFFFFFFFF,2287.1047,2431.7996,10.8203,20.0, 0, 1);
    Create3DTextLabel("F.B.I\nPress enter to enter",0xFFFFFFFF,627.6160,-571.7920,17.6242,20.0, 0, 1);
    Create3DTextLabel("Drugs House\nPress enter to enter",0xFFFFFFFF,2166.4771,-1671.7883,15.0743,20.0, 0, 1);
    Create3DTextLabel("{FFFF99}Los Santos Police Department\nGroup Safe",0x33CCFFFF,256.9322,64.7314,1003.6406,20.0, 0, 1);
    Create3DTextLabel("{FFFF99}L.V Police Dep\nGroup Safe",0x33CCFFFF,256.9322,64.7314,1003.6406,20.0, 3, 1);
	Create3DTextLabel("{00FF00}Arms Dealer\n{FFFFFF}Type /getjob to get arms dealer job",0x33CCFFFF,1365.8931,-1289.0779,13.5469,20.0, 0, 1);
	//Create3DTextLabel("{c2e8f5}Curier\nTasteaza /getjob pentru a lua jobul Curier",0x33CCFFFF,1154.3644,-1181.1787,32.8187,20.0, 0, 1);
	Create3DTextLabel("{00FF00}Drugs Dealer\n{FFFFFF}Type /getjob to get Drugs Dealer job",0x33CCFFFF,2165.5444,-1674.6372,15.0822,20.0, 0, 1);
	Create3DTextLabel("{00FF00}Farmer\n{FFFFFF}Type /getjob to get Farmer job",0x33CCFFFF,-382.8534,-1426.2845,26.2880,20.0, 0, 1);
	Create3DTextLabel("{00FF00}Bus Driver\n{FFFFFF}Type /getjob to get Bus Driver job",0x33CCFFFF,1450.3951,-2286.9661,13.5469,20.0, 0, 1);
	Create3DTextLabel("{00FF00}Garbage\n{FFFFFF}Type /getjob to get Garbage job",0x33CCFFFF,2503.0581,2778.7229,10.8203,20.0, 0, 1);
	Create3DTextLabel("{00FF00}Quarry\n{FFFFFF}Type /getjob to get Quarry job",0x33CCFFFF,816.7682,856.4895,12.7891,20.0, 0, 1); //GetJob QUARRY
	Create3DTextLabel("{00FF00}Detective\n{FFFFFF}Type /getjob to get Detective job",0x33CCFFFF,607.8375,-1438.1827,14.0654,20.0, 0, 1);
	Create3DTextLabel("{00FF00}Mechanic\n{FFFFFF}Type /getjob to get Mechanic job",0x33CCFFFF,910.8003,-1231.9697,16.9766,20.0, 0, 1);
	Create3DTextLabel("{00FF00}Pizza Boy\n{FFFFFF}Type /getjob to get Pizza Boy job",0x33CCFFFF,2123.0237,-1788.8237,13.5547,20.0, 0, 1);
	Create3DTextLabel("{00FF00}Fisherman\n{FFFFFF}Type /getjob to get Fisherman job",0x33CCFFFF,391.8376,-2064.3474,7.8359,20.0, 0, 1);
	Create3DTextLabel("{00FF00}Trucker\n{FFFFFF}Type /getjob to get Trucker job",0x33CCFFFF,-76.8129,-1136.6630,1.0781,20.0, 0, 1);
	Create3DTextLabel("{00FF00}Car Jacker\n{FFFFFF}Type /getjob to get Car Jacker job",0x33CCFFFF,2850.9663,891.8728,10.7500,20.0, 0, 1);
	Create3DTextLabel("{FFFFFF}ID:{C00A13}15\n{FFFFFF}Job:{C00A13} Coal Delivery Man\n{FFFFFF}Use {C00A13}/getjob {FFFFFF}to get job.",0x33CCFFFF,710.4517,1207.7200,13.8481,20.0, 0, 1);
 	Create3DTextLabel("{0E7BE9}Materials Pickup!\n\nType /getmats as an Arms Dealer\nto collect materials",COLOR_WHITE,597.5396,-1246.9562,18.2512,20.0, 0, 1);
	Create3DTextLabel("{26C4EC}Door ID: 11\nPD Garage | /garage",COLOR_WHITE,1594.7660,-1619.7109,13.4093,20.0, 0, 1);
	Create3DTextLabel("{26C4EC}Door ID: 37\nRestricted to faction(Los Santos Police Department)\nLSPD Staff HQ",COLOR_WHITE,242.4025,66.4760,1003.6406,20.0, 0, 1);
	Create3DTextLabel("{26C4EC}Door ID: 38\nRestricted to faction(L.V Police Dep)\nLVPD Staff HQ",COLOR_WHITE,242.4025,66.4760,1003.6406,20.0, 3, 1);
	Create3DTextLabel("{26C4EC}/garage",COLOR_WHITE,1292.7828,6.8377,1001.0078,20.0, 0, 1);
	Create3DTextLabel("{26C4EC}/exitgaragehitman",COLOR_WHITE,1292.7828,6.8377,1001.0078,20.0, 676, 1);
	Create3DTextLabel("Press enter to exit from LSPD Staff",COLOR_WHITE,238.5806,138.9213,1003.0234,20.0, 333, 1);
	Create3DTextLabel("Press enter to exit from LVPD Staff",COLOR_WHITE,238.5806,138.9213,1003.0234,20.0, 343, 1);
	Create3DTextLabel("{26C4EC}Door ID: 12\nRestricted to faction(Hitman Agency)\nHitman Garage | /garage",COLOR_WHITE,1059.6315,-344.6857,73.9922,20.0, 0, 1);
	Create3DTextLabel("Hitman Agency HQ",COLOR_WHITE,1081.1794,-345.3979,73.9825,20.0, 0, 1);
	Create3DTextLabel("Taxi LS HQ",COLOR_WHITE,1754.2861,-1894.0259,13.5570,20.0, 0, 1);
	areap = Create3DTextLabel("{00FF00}MaWReZ Event Area{FFFFFF}\n{FF0000}Event Area Is Closed\n{FFFFFF}Please Wait...",0xFFFFFFFF,1510.3986,-1059.5723,25.0625,5.0, 0, 1);
    Create3DTextLabel("{26C4EC}LSPD | /elevator",0xFFFFFFFF,1564.8662,-1666.4962,28.3956,20.0, 0, 1);
    Create3DTextLabel("{26C4EC}LVPD Roof | /elevator",0xFFFFFFFF,2339.3237,2461.2197,38.6837,20.0, 0, 1);
    Create3DTextLabel("{26C4EC}Door ID: 30\nRestricted to faction(Los Santos Police Department)\nLSPD Roof | /elevator",0xFFFFFFFF,1568.5891,-1690.3262,5.8906,20.0, 0, 1);
    Create3DTextLabel("{26C4EC}Door ID: 24\nRestricted to faction(L.V Police Dep)\nLVPD Roof | /elevator",0xFFFFFFFF,2340.2810,2456.5625,14.9688,20.0, 0, 1);
    Create3DTextLabel("{26C4EC}Los Santos Police Department\nProcessing Entrance\n \n(/arrest)",0xFFFFFFFF,1526.3739,-1678.0635,5.8906,20.0, 0, 1);
    Create3DTextLabel("{26C4EC}L.V Police Dep\nProcessing Entrance\n \n(/arrest)",0xFFFFFFFF,2282.1289,2425.7620,3.4692,20.0, 0, 1);
    Create3DTextLabel("Paintball !\n\nType /paint\nto enter the paintball arena!",0xFFFF00CC,1154.4122,-1440.0548,15.7969,10.0, 0, 1);
    Create3DTextLabel("Vama Los Santos & Las Venturas\n\nType /vama\nTo Transfer",0xFFFF00CC,1743.5736,511.6779,28.4445,10.0, 0, 1);
    Create3DTextLabel("Vama Los Santos & Las Venturas\n\nType /vama\nTo Transfer",0xFFFF00CC,1729.7786,522.9461,28.0893,10.0, 0, 1);
    Create3DTextLabel("Vama San Fierro & Los Santos\n\nType /vama\nTo Transfer",0xFFFF00CC,70.0381,-1541.2605,5.0899,10.0, 0, 1);
    Create3DTextLabel("Vama San Fierro & Los Santos\n\nType /vama\nTo Transfer",0xFFFF00CC,76.3156,-1527.6310,5.1632,10.0, 0, 1);
    Create3DTextLabel("Gym Ls\nClick enter to enter",0xFFFFFFFF,2229.3289,-1722.0793,13.5625,20.0, 0, 1);
    //Create3DTextLabel("ATM\nType /withdraw To WithDraw Money From The Bank",0xFFFFFFFF,1158.4275,-1771.8380,16.6256,20.0, 0, 1);

	gettime(ghour, gminute, gsecond);
	FixHour(ghour);
	ghour = shifthour;
	if(!realtime)
	{
		SetWorldTime(wotime);
	}
    DisableInteriorEnterExits();
	AllowInteriorWeapons(1);
	UsePlayerPedAnims();
	paintm[1] = 1;
	paintm[2] = 1;
	paintm[3] = 1;
	paintm[4] = 1;
	paintg[1] = 1;
	paintg[2] = 1;
	PaintBallWinnerKills[1] = 0;
	PaintBallWinnerKills[2] = 0;
	PaintBallWinnerKills[3] = 0;
	PaintBallWinnerKills[4] = 0;
	PaintWinner[1] = 0;
	PaintWinner[2] = 0;
	PaintWinner[3] = 0;
	PaintWinner[4] = 0;
	paintrs[1] = 0;
	paintrs[2] = 0;
	paintrs[3] = 0;
	paintrs[4] = 0;
	paintt[1] = 0;
	paintt[2] = 0;
	paintt[3] = 0;
	paintt[4] = 0;
	mapvoted[1] = 0;
	mapvoted[2] = 0;
	mapvoted[3] = 0;
	mapvoted[4] = 0;
	gunvoted[1] = 0;
	gunvoted[2] = 0;

	for(new i = 0; i <= sizeof(Peds)-1; i++)
	{
		AddPlayerClass(Peds[i][0],1153.8662,-1772.2810,16.6249 ,1.1746,0,0,0,0,0,0);
	}

    ManualVehicleEngineAndLights();

	for(new i = 1; i < sizeof(CarInfo); i++)
	{
        if(CarInfo[i][cSell] == 2)
        {
        	CarInfo[i][cID] = -2;
        }
	}

	new nrinmatric[128];
	for(new i = 0; i < sizeof(Copcar); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "POLICE - 0%d", i);
	    SetVehicleNumberPlate(Copcar[i], nrinmatric);
	    SetVehicleToRespawn(Copcar[i]);
	}
	for(new i = 0; i < sizeof(Fbicar); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "FBI - 0%d", i);
	    SetVehicleNumberPlate(Fbicar[i], nrinmatric);
	    SetVehicleToRespawn(Fbicar[i]);
	}
	for(new i = 0; i < sizeof(LVpdcar); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "POLICE - 0%d", i);
	    SetVehicleNumberPlate(LVpdcar[i], nrinmatric);
	    SetVehicleToRespawn(LVpdcar[i]);
	}
	for(new i = 0; i < sizeof(Ngcar); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "GUARD - 0%d", i);
	    SetVehicleNumberPlate(Ngcar[i], nrinmatric);
	    SetVehicleToRespawn(Ngcar[i]);
	}
	for(new i = 0; i < sizeof(Aztecasc); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "AZTECAS - 0%d", i);
	    SetVehicleNumberPlate(Aztecasc[i], nrinmatric);
	    SetVehicleToRespawn(Aztecasc[i]);
	}
	for(new i = 0; i < sizeof(Govc); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "GOVERNMENT - 0%d", i);
	    SetVehicleNumberPlate(Govc[i], nrinmatric);
	    SetVehicleToRespawn(Govc[i]);
	}
	for(new i = 0; i < sizeof(Grovec); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "GROVE - 0%d", i);
	    SetVehicleNumberPlate(Grovec[i], nrinmatric);
	    SetVehicleToRespawn(Grovec[i]);
	}
	for(new i = 0; i < sizeof(Vagosc); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "VAGOS - 0%d", i);
	    SetVehicleNumberPlate(Vagosc[i], nrinmatric);
	    SetVehicleToRespawn(Vagosc[i]);
	}
	for(new i = 0; i < sizeof(Ballasc); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "BALLAS - 0%d", i);
	    SetVehicleNumberPlate(Ballasc[i], nrinmatric);
	    SetVehicleToRespawn(Ballasc[i]);
	}
	for(new i = 0; i < sizeof(news); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "NEWS - 0%d", i);
	    SetVehicleNumberPlate(news[i], nrinmatric);
	    SetVehicleToRespawn(news[i]);
	}
	for(new i = 0; i < sizeof(towcar); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "TOWCAR - 0%d", i);
	    SetVehicleNumberPlate(towcar[i], nrinmatric);
	    SetVehicleToRespawn(towcar[i]);
	}
	for(new i = 0; i < sizeof(taxic); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "TAXI - 0%d", i);
	    SetVehicleNumberPlate(taxic[i], nrinmatric);
	    SetVehicleToRespawn(taxic[i]);
	}
	for(new i = 0; i < sizeof(si); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "SCHOOL - 0%d", i);
	    SetVehicleNumberPlate(si[i], nrinmatric);
	    SetVehicleToRespawn(si[i]);
	}
	for(new i = 0; i < sizeof(ambcars); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "AMB - 0%d", i);
	    SetVehicleNumberPlate(ambcars[i], nrinmatric);
	    SetVehicleToRespawn(ambcars[i]);
	}
	for(new i = 0; i < sizeof(bus); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "BUS - 0%d", i);
	    SetVehicleNumberPlate(bus[i], nrinmatric);
	    SetVehicleToRespawn(bus[i]);
	}
	for(new i = 0; i < sizeof(bus); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "BUS - 0%d", i);
	    SetVehicleNumberPlate(bus[i], nrinmatric);
	    SetVehicleToRespawn(bus[i]);
	}
	for(new i = 0; i < sizeof(rentls); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "RENT - 0%d", i);
	    SetVehicleNumberPlate(rentls[i], nrinmatric);
	    SetVehicleToRespawn(rentls[i]);
	}
	for(new i = 0; i < sizeof(masinils); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "NL - %d", i);
	    SetVehicleNumberPlate(masinils[i], nrinmatric);
	    SetVehicleToRespawn(masinils[i]);
	}
	for(new i = 0; i < sizeof(masinilv); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "NL - %d", i);
	    SetVehicleNumberPlate(masinilv[i], nrinmatric);
	    SetVehicleToRespawn(masinilv[i]);
	}
	for(new i = 0; i < sizeof(thea); i++)
	{
	    format(nrinmatric, sizeof(nrinmatric), "F11 - 0%d", i);
	    SetVehicleNumberPlate(thea[i], nrinmatric);
	    SetVehicleToRespawn(thea[i]);
    }
    /*AddStaticPickup(1239, 23, 1452.6433,-1900.0250,13.8604);		// /updates spawn
    AddStaticPickup(1239, 23, 1452.4817,-1901.3661,13.8604);		// /bonus spawn
    AddStaticPickup(1239, 23, 1158.4275,-1771.8380,16.6256);		// ATM Spawn Civil*/
	g_Pickup[0] = CreatePickup(1239, 1, 1205.0941, -1824.0997, 12.9591, -1); //DMV Pickup
	AddStaticPickup(1239, 23, 76.3156,-1527.6310,5.1632); 		// /vama Los Santos & San Fierro
	AddStaticPickup(1239, 23, 70.0381,-1541.2605,5.0899); 		// /vama Los Santos & San Fierro
	AddStaticPickup(1239, 23, 1729.7786,522.9461,28.0893); 		// /vama Los Santos & Las Venturas
	AddStaticPickup(1239, 23, 1743.5736,511.6779,28.4445); 		// /vama Los Santos & Las Venturas
	pickuph = CreatePickup(1316, 23, 1059.6315,-344.6857,73.9922); 		// Order pickup Hitman Garage
	AddStaticPickup(1240, 23, 1614.92480, 1816.09631, 10.91310); 		// Hospital 1 near Ammu
	AddStaticPickup(1239, 23, 2029.5945,-1404.6426,17.2512); 			// Hospital 2 near speedway
	AddStaticPickup(1242, 23, 1527.5,-12.1,1002.0); 					// binco armor
	AddStaticPickup(1239, 23, 1496.5491,-1858.8317,13.8753); 			// Driving License
	porp = CreatePickup(1254, 23, 2495.3271,-1690.6740,14.7656); 		// Grove Street Hq
	trdp = CreatePickup(1254, 23, 1456.7423,2773.3423,10.8203); 		// Los Aztecas Hq
	sicp = CreatePickup(1254, 23, 725.6769,-1440.4506,13.5391); 		// Los Vagos HQ
	rusp = CreatePickup(1254, 23, 1455.2687,750.8684,11.0234); 		    // Ballas HQ
	govp = CreatePickup(1239, 23, 1481.0206,-1771.1138,18.7958,0);
	gslsenter1 = CreatePickup(1318, 23, 305.9341,-141.7895,1004.0547, -1);
	gslsenter2 = CreatePickup(1318, 23, 300.1486,-141.8312,1004.0625, -1);
	gslsenter3 = CreatePickup(1318, 23, 304.0917,-141.7523,1004.0625, -1);
	gslsenter4 = CreatePickup(1318, 23, 298.9318,-141.8459,1004.0547, -1);
	AddStaticPickup(1275, 23, -76.8129,-1136.6630,1.0781);              // Trucker [/getjob]
	AddStaticPickup(1275, 23, 710.4517,1207.7200,13.8481);            // Coal Job [/getjob]
    AddStaticPickup(1247, 23, 1554.7621,-1675.5870,16.1953);			// Lspd
    AddStaticPickup(1247, 23, 2287.1047,2431.7996,10.8203);				// Lvpd
    AddStaticPickup(1314, 23, 2282.1289,2425.7620,3.4692);				// Lvpd arrest
    AddStaticPickup(1314, 23, 1526.3739,-1678.0635,5.8906);				// Lspd arrest
    AddStaticPickup(1247, 23, 627.6160,-571.7920,17.6242);				// Fbi
	AddStaticPickup(1239, 23, 1756.4181,-1577.8954,1742.5309);			// exit jail
	AddStaticPickup(1239, 23, 1762.0028,-1584.4185,1742.5264);			// mdc jail
	AddStaticPickup(1275, 23, 1365.8931,-1289.0779,13.5469);			// GETJOB ARMS DEALER
	AddStaticPickup(1275, 23, 816.7682,856.4895,12.7891);				// GETJOB QUARRY
    AddStaticPickup(1275, 23, 2165.5444,-1674.6372,15.0822);			// GETJOB DRUGS DEALER
	AddStaticPickup(1275, 23, 2503.0581,2778.7229,10.8203);			    // GETJOB GARBAGE MAN
	AddStaticPickup(1275, 23, 607.8375,-1438.1827,14.0654);				// GETJOB DETECTIVE
	AddStaticPickup(1275, 23, 910.8003,-1231.9697,16.9766); 			// GETJOB MECHANIC
	AddStaticPickup(1275, 23, 2850.9663,891.8728,10.7500); 			    // GETJOB CAR JACKER
	AddStaticPickup(1239, 23, 2770.4629,-1628.3237,12.1775); 			// MATSCOLLECT
	AddStaticPickup(1239, 23, 2065.4844,-1584.0730,13.4821); 			// BUYIRON
	AddStaticPickup(1239, 23, 5.7771,-3989.8794,1003.5266); 			// STATION LS BUY
	sip = CreatePickup(1239, 23, 2435.3064,1671.0139,10.8203); 			// SI
	AddStaticPickup(1239, 23, 157.3923,1903.2848,18.6660); 				// NG ARMOURY
	taxip = CreatePickup(1239, 23, 1754.4260,-1894.0844,13.5569); 		// TAXI HQ
	AddStaticPickup(1275, 23, 2123.0237,-1788.8237,13.5547); 			// PIZZA BOY
	//AddStaticPickup(1275, 23, 1154.3644,-1181.1787,32.8187); 			// CURIER GETJOB
	AddStaticPickup(1275, 23, 391.8376,-2064.3474,7.8359); 				// FISH GETJOB
	AddStaticPickup(1275, 23, -44.8344,-1560.9879,2.6009); 				// GETJOB TRUCKER
	AddStaticPickup(1275, 23, 1450.3951,-2286.9661,13.5469); 			// GETJOB BUS DRIVER
	hitmanep = CreatePickup(1239, 23, 1081.1794,-345.3979,73.9825); 	// HITMAN ENTER
	AddStaticPickup(1239, 23, 2166.4771,-1671.7883,15.0743); 			// DRUGS HOUSE
	AddStaticPickup(1316, 23, 1594.7660,-1619.7109,13.4093);            // GARAGE ENTER PD
	AddStaticPickup(1316, 23, 1292.7828,6.8377,1001.0078);       		// GARAGE EXIT PD
	AddStaticPickup(1277, 23, 893.71094, -1636.59204, 14.72620);       	// HQ STAFF
	AddStaticPickup(1254, 23, 1154.4122,-1440.0548,15.7969);       	    // PAINTBALL LS

	CreateDynamicPickup(1247, 23, 242.4025,66.4760,1003.6406,-1,-1,-1,100.0); // LSPD STAFF HQ
	CreateDynamicPickup(1316, 23, 1292.7828,6.8377,1001.0078,676,18,-1,100.0); // GARAGE EXIT HITMAN
	CreateDynamicPickup(1279, 23, 322.9745,1119.4409,1083.8828,-1,-1,-1,100.0);
	CreateDynamicPickup(1275, 23, -382.8534,-1426.2845,26.2880,-1,-1,-1,100.0);
	CreateDynamicPickup(1239, 23, 918.6766,-1252.2185,16.2109,-1,-1,-1,100.0);
	CreateDynamicPickup(19893, 23, 1310.3213,-1369.3365,13.5612,-1,-1,-1,100.0);  // DealerShip [/buycar]
	CreateDynamicPickup(1239, 23, 1564.8662,-1666.4962,28.3956,-1,-1,-1,100.0); // LSPD Roff(sus)
	CreateDynamicPickup(1239, 23, 1568.5825,-1690.2802,5.8906,-1,-1,-1,100.0); // LSPD Roff(jos)
	CreateDynamicPickup(1239, 23, 2340.2810,2456.5625,14.9688,-1,-1,-1,100.0); // LVPD Roff(jos)
	CreateDynamicPickup(1239, 23, 2339.3237,2461.2197,38.6837,-1,-1,-1,100.0); // LVPD Roff(sus)
	CreateDynamicPickup(1239, 23, 229.4171,167.4609,1003.0234,-1,-1,-1,100.0); 	// clear fbi
	CreateDynamicPickup(1239, 23,187.8352,1931.4265,17.6874,-1,-1,-1,100.0); 	// clear ng
	CreateDynamicPickup(1239, 23,-329.5258,1536.7759,76.6117,-1,-1,-1,100.0); 	// nr
	CreateDynamicPickup(371, 23,-2231.2058,-1736.1578,480.8620,-1,-1,-1,100.0); // parachute
	CreateDynamicPickup(1239, 23,1510.3986,-1059.5723,25.0625,-1,-1,-1,100.0); 	// event area enter
	CreateDynamicPickup(1239, 23,-1423.5153,935.8321,1036.4756,-1,-1,-1,100.0); // event area exit
	CreateDynamicPickup(1274, 23, 256.9322,64.7314,1003.6406, -1, -1,-1,100.0);
	
	// Spawn Civil & DMV
	g_Object[0] = CreateObject(19148, 1746.1544, -1849.5817, 14.7855, 0.0000, 0.0000, 90.0000); //PinSpotLight6
	g_Object[1] = CreateObject(19148, 1739.8544, -1849.5817, 14.7855, 0.0000, 0.0000, 270.0000); //PinSpotLight6
	g_Object[2] = CreateObject(19149, 1746.1455, -1848.6666, 14.7884, 0.0000, 0.0000, 90.0000); //PinSpotLight7
	g_Object[3] = CreateObject(19149, 1739.8651, -1848.6666, 14.7884, 0.0000, 0.0000, 270.0000); //PinSpotLight7
	g_Object[4] = CreateObject(19145, 1746.1701, -1847.6416, 14.7928, 0.0000, 0.0000, 90.0000); //PinSpotLight3
	g_Object[5] = CreateObject(19145, 1739.9001, -1847.6416, 14.7928, 0.0000, 0.0000, 270.0000); //PinSpotLight3
	g_Object[6] = CreateObject(19425, 1732.5825, -1857.4166, 12.3987, 0.0000, 0.0000, 90.0000); //speed_bump01
	g_Object[7] = CreateObject(19425, 1732.5825, -1852.5460, 12.3987, 0.0000, 0.0000, 90.0000); //speed_bump01
	g_Object[8] = CreateObject(19425, 1753.3930, -1852.5460, 12.3987, 0.0000, 0.0000, 90.0000); //speed_bump01
	g_Object[9] = CreateObject(19425, 1753.3930, -1857.2864, 12.3987, 0.0000, 0.0000, 90.0000); //speed_bump01
	g_Object[10] = CreateObject(5837, 1203.8796, -1821.6982, 14.0727, 0.0000, 0.0000, 180.0000); //ci_guardhouse1
	g_Object[11] = CreateObject(19425, 1752.6923, -1852.5761, 12.3987, 0.0000, 0.0000, 90.0000); //speed_bump01
	g_Object[12] = CreateObject(19425, 1752.6923, -1857.2864, 12.3987, 0.0000, 0.0000, 90.0000); //speed_bump01
	g_Object[13] = CreateObject(19425, 1733.3833, -1857.4166, 12.3987, 0.0000, 0.0000, 90.0000); //speed_bump01
	g_Object[14] = CreateObject(19425, 1733.3833, -1852.5260, 12.3987, 0.0000, 0.0000, 90.0000); //speed_bump01
	g_Object[15] = CreateObject(19128, 1745.3044, -1847.9625, 12.5413, 0.0000, 0.0000, 0.0000); //DanceFloor1
	g_Object[16] = CreateObject(3439, 1747.3861, -1835.1422, 16.5126, 0.0000, 0.0000, 0.0000); //aprtree01_lvs
	g_Object[17] = CreateObject(19128, 1741.3446, -1844.0017, 12.5413, 0.0000, 0.0000, 0.0000); //DanceFloor1
	g_Object[18] = CreateObject(19128, 1741.3446, -1847.9625, 12.5413, 0.0000, 0.0000, 0.0000); //DanceFloor1
	g_Object[19] = CreateObject(19128, 1745.3044, -1843.9920, 12.5413, 0.0000, 0.0000, 0.0000); //DanceFloor1
	g_Object[20] = CreateObject(19128, 1745.3044, -1840.0217, 12.5413, 0.0000, 0.0000, 0.0000); //DanceFloor1
	g_Object[21] = CreateObject(3439, 1747.3861, -1843.6625, 16.5126, 0.0000, 0.0000, 0.0000); //aprtree01_lvs
	g_Object[22] = CreateObject(19128, 1745.3044, -1836.1019, 12.5413, 0.0000, 0.0000, 0.0000); //DanceFloor1
	g_Object[23] = CreateObject(19128, 1741.3446, -1840.0111, 12.5413, 0.0000, 0.0000, 0.0000); //DanceFloor1
	g_Object[24] = CreateObject(19128, 1741.3446, -1836.0993, 12.5413, 0.0000, 0.0000, 0.0000); //DanceFloor1
	g_Object[25] = CreateObject(3439, 1738.5457, -1843.6721, 16.5126, 0.0000, 0.0000, 0.0000); //aprtree01_lvs
	g_Object[26] = CreateObject(1237, 1738.1815, -1835.2330, 12.2830, 0.0000, 0.0000, 0.0000); //strtbarrier01
	g_Object[27] = CreateObject(1237, 1738.1815, -1836.2130, 12.2830, 0.0000, 0.0000, 0.0000); //strtbarrier01
	g_Object[28] = CreateObject(1237, 1738.1815, -1837.2232, 12.2830, 0.0000, 0.0000, 0.0000); //strtbarrier01
	g_Object[29] = CreateObject(1237, 1738.1815, -1838.1431, 12.2830, 0.0000, 0.0000, 0.0000); //strtbarrier01
	g_Object[30] = CreateObject(1237, 1738.1815, -1839.0736, 12.2830, 0.0000, 0.0000, 0.0000); //strtbarrier01
	g_Object[31] = CreateObject(1237, 1738.1815, -1839.9938, 12.2830, 0.0000, 0.0000, 0.0000); //strtbarrier01
	g_Object[32] = CreateObject(1237, 1738.1815, -1840.9239, 12.2830, 0.0000, 0.0000, 0.0000); //strtbarrier01
	g_Object[33] = CreateObject(1237, 1738.1815, -1841.8441, 12.2830, 0.0000, 0.0000, 0.0000); //strtbarrier01
	
	// New DealerShip (CarShop)
	o_CarShop[1] = CreateObject(983, 1312.7982, -1369.6074, 13.2255, 0.0000, 0.0000, 0.0000); //fenceshit3
	o_CarShop[2] = CreateObject(983, 1307.5179, -1369.6074, 13.2255, 0.0000, 0.0000, 0.0000); //fenceshit3
	o_CarShop[3] = CreateObject(983, 1307.5179, -1375.9580, 13.2255, 0.0000, 0.0000, 0.0000); //fenceshit3
	o_CarShop[4] = CreateObject(983, 1312.7681, -1375.9580, 13.2255, 0.0000, 0.0000, 0.0000); //fenceshit3
	o_CarShop[5] = CreateObject(983, 1312.7681, -1381.9078, 13.2255, 0.0000, 0.0000, 0.0000); //fenceshit3
	o_CarShop[6] = CreateObject(983, 1307.5084, -1381.9078, 13.2255, 0.0000, 0.0000, 0.0000); //fenceshit3
	o_CarShop[7] = CreateObject(2727, 1310.5625, -1363.4827, 24.1174, 90.0000, 0.6999, 0.0000); //DS_SIGN
	o_CarShop[8] = CreateObject(3439, 1306.9543, -1384.4948, 16.8545, 0.0000, 0.0000, 0.0000); //aprtree01_lvs
	o_CarShop[9] = CreateObject(19880, 1287.1646, -1362.7232, 17.1605, 0.0000, 0.0000, 90.0000); //WellsFargoGrgDoor1
	o_CarShop[10] = CreateObject(19880, 1287.1646, -1330.2547, 17.1605, 0.0000, 0.0000, 90.0000); //WellsFargoGrgDoor1
	o_CarShop[11] = CreateObject(19880, 1287.1646, -1354.6837, 17.1605, 0.0000, 0.0000, 90.0000); //WellsFargoGrgDoor1
	o_CarShop[12] = CreateObject(19880, 1287.1646, -1346.5537, 17.1605, 0.0000, 0.0000, 90.0000); //WellsFargoGrgDoor1
	o_CarShop[13] = CreateObject(19880, 1287.1646, -1338.3642, 17.1605, 0.0000, 0.0000, 90.0000); //WellsFargoGrgDoor1
	o_CarShop[14] = CreateObject(19880, 1287.1646, -1322.2148, 17.1605, 0.0000, 0.0000, 90.0000); //WellsFargoGrgDoor1
	o_CarShop[15] = CreateObject(19880, 1287.1646, -1314.1654, 17.1605, 0.0000, 0.0000, 90.0000); //WellsFargoGrgDoor1
	o_CarShop[16] = CreateObject(19880, 1287.1646, -1306.1456, 17.1605, 0.0000, 0.0000, 90.0000); //WellsFargoGrgDoor1
	o_CarShop[17] = CreateObject(19880, 1287.1646, -1298.1956, 17.1605, 0.0000, 0.0000, 90.0000); //WellsFargoGrgDoor1
	o_CarShop[18] = CreateObject(8659, 1287.3244, -1293.0898, 2.1899, 0.0000, 90.0000, 90.0000); //shbbyhswall11_lvs
	o_CarShop[19] = CreateObject(8659, 1287.3244, -1293.0898, 2.1899, 0.0000, 90.0000, 90.0000); //shbbyhswall11_lvs
	o_CarShop[20] = CreateObject(8659, 1287.3344, -1292.0091, 2.1899, 0.0000, 90.0000, 90.0000); //shbbyhswall11_lvs
	o_CarShop[21] = CreateObject(3439, 1313.2944, -1384.4948, 16.8545, 0.0000, 0.0000, 0.0000); //aprtree01_lvs
	o_CarShop[22] = CreateObject(18688, 1308.9489, -1369.5900, 16.5019, 0.0000, 0.0000, 0.0000); //fire
	o_CarShop[23] = CreateObject(968, 1269.2995, -1344.8571, 13.1489, -1.8999, -34.7999, -92.6999); //barrierturn
	o_CarShop[24] = CreateObject(18688, 1311.5699, -1369.5900, 16.5019, 0.0000, 0.0000, 0.0000); //fire
	o_CarShop[25] = CreateObject(18688, 1310.3596, -1369.5900, 16.5019, 0.0000, 0.0000, 0.0000); //fire
	o_CarShop[26] = CreateObject(984, 1287.2031, -1373.5773, 13.0307, 0.0000, 0.0000, 0.0000); //fenceshit2
	o_CarShop[27] = CreateObject(984, 1287.2031, -1378.3773, 13.0307, 0.0000, 0.0000, 0.0000); //fenceshit2
	o_CarShop[28] = CreateObject(984, 1280.8039, -1384.9276, 13.0307, 0.0000, 0.0000, 91.1999); //fenceshit2
	o_CarShop[29] = CreateObject(984, 1277.2843, -1385.0015, 13.0307, 0.0000, 0.0000, 91.1999); //fenceshit2
	o_CarShop[30] = CreateObject(984, 1280.7486, -1290.8895, 13.1565, 0.0000, 0.0000, 88.7000); //fenceshit2
	o_CarShop[31] = CreateObject(984, 1277.2891, -1290.8105, 13.1565, 0.0000, 0.0000, 88.7000); //fenceshit2
	o_CarShop[32] = CreateObject(4638, 1269.1386, -1349.5368, 14.0022, 0.0000, 0.0000, 180.0000); //paypark_lan01
	o_CarShop[33] = CreateObject(4638, 1269.1386, -1326.0659, 14.0022, 0.0000, 0.0000, 360.0000); //paypark_lan01
	o_CarShop[34] = CreateObject(966, 1269.2960, -1330.3726, 12.3329, 0.0000, 0.0000, 90.0000); //bar_gatebar01
	o_CarShop[35] = CreateObject(966, 1269.2960, -1344.8333, 12.3329, 0.0000, 0.0000, 270.0000); //bar_gatebar01
	o_CarShop[36] = CreateObject(968, 1269.2893, -1330.2811, 13.1853, 6.0999, 36.3000, -88.6999); //barrierturn
	o_CarShop[37] = CreateObject(970, 1269.2219, -1346.9335, 12.7260, 0.0000, 0.0000, 90.0000); //fencesmallb
	o_CarShop[38] = CreateObject(970, 1269.2219, -1328.3238, 12.7260, 0.0000, 0.0000, 90.0000); //fencesmallb
	

	//QUESTEVENT
	QuestP[0] = CreatePickup(1240, 23, 1728.5636,-1788.9183,3.9844); //LS
	QuestP[1] = CreatePickup(1240, 23, 1115.5435,-2037.2319,78.2109);
	QuestP[2] = CreatePickup(1240, 23, 1020.8390,-1916.7148,12.6586);
	QuestP[3] = CreatePickup(1240, 23, 674.8215,-1874.0317,5.4609);
	QuestP[4] = CreatePickup(1240, 23, 568.1980,-1763.5367,5.8171);
	QuestP[5] = CreatePickup(1240, 23, 386.6157,-1749.4797,9.0647);
	QuestP[6] = CreatePickup(1240, 23, 353.4161,-2032.3364,7.8359);
	QuestP[7] = CreatePickup(1240, 23, 367.5906,-1555.7925,32.9371);
	QuestP[8] = CreatePickup(1240, 23, 315.4170,-1421.4706,23.6719);
	QuestP[9] = CreatePickup(1240, 23, 445.0802,-1353.7988,14.8263);
	QuestP[10] = CreatePickup(1240, 23, 726.6733,-1278.7864,13.6484);
	QuestP[11] = CreatePickup(1240, 23, 874.5269,-1017.3561,32.3800);
	QuestP[12] = CreatePickup(1240, 23, 811.1966,-1098.3439,25.9063);
	QuestP[13] = CreatePickup(1240, 23, 1143.7087,-853.2827,43.4288);
	QuestP[14] = CreatePickup(1240, 23, 1432.2605,-1095.6021,17.5816);
	QuestP[15] = CreatePickup(1240, 23, 1823.8629,-1025.6740,24.4069);
	QuestP[16] = CreatePickup(1240, 23, 2232.5867,-1154.5403,25.8906);
	QuestP[17] = CreatePickup(1240, 23, 2275.8140,-929.9103,28.0421);
	QuestP[18] = CreatePickup(1240, 23, 2591.8728,-1325.2335,39.0907);
	QuestP[19] = CreatePickup(1240, 23, 2467.2212,-1753.5592,13.5469);
	QuestP[20] = CreatePickup(1240, 23, 2763.8604,-1823.5750,11.8478);
	QuestP[21] = CreatePickup(1240, 23, 1803.9902,-2141.5591,13.5469);
	QuestP[22] = CreatePickup(1240, 23, 2086.2131,-2364.8008,18.4061);
	QuestP[23] = CreatePickup(1240, 23, 1831.6080,-2692.1672,13.5469);
	QuestP[24] = CreatePickup(1240, 23, 2230.6057,-2286.0576,14.3751);
	QuestP[25] = CreatePickup(1240, 23, 1600.8949,1060.8597,10.8203); //LV
	QuestP[26] = CreatePickup(1240, 23, 1675.0802,1436.4150,10.7779);
	QuestP[27] = CreatePickup(1240, 23, 1319.0743,1254.8890,14.2731);
	QuestP[28] = CreatePickup(1240, 23, 1863.7559,1426.3014,16.9223);
	QuestP[29] = CreatePickup(1240, 23, 2000.6570,1522.5079,17.0682);
	QuestP[30] = CreatePickup(1240, 23, 2284.3582,1711.8986,11.0469);
	QuestP[31] = CreatePickup(1240, 23, 2435.2141,1662.8995,15.6457);
	QuestP[32] = CreatePickup(1240, 23, 2529.8450,1516.3772,10.8150);
	QuestP[33] = CreatePickup(1240, 23, 2857.8503,1283.9421,11.3906);
	QuestP[34] = CreatePickup(1240, 23, 2929.6311,2102.1277,17.8955);
	QuestP[35] = CreatePickup(1240, 23, 2803.9001,2306.7454,10.8203);
	QuestP[36] = CreatePickup(1240, 23, 2576.2644,2334.8816,17.8145);
	QuestP[37] = CreatePickup(1240, 23, 2413.5190,2545.7854,10.8203);
	QuestP[38] = CreatePickup(1240, 23, 2163.2266,2472.7617,10.8203);
	QuestP[39] = CreatePickup(1240, 23, 1846.4901,2337.4331,10.9799);
	QuestP[40] = CreatePickup(1240, 23, 1642.7734,2340.2678,9.8685);
	QuestP[41] = CreatePickup(1240, 23, 2177.4160,1294.5276,10.8203);
	QuestP[42] = CreatePickup(1240, 23, 1952.6266,1342.8512,15.3672);
	QuestP[43] = CreatePickup(1240, 23, 1981.2355,1653.0946,12.2422);
	QuestP[44] = CreatePickup(1240, 23, 2007.6135,1152.7927,10.8203);
	QuestP[45] = CreatePickup(1240, 23, 1022.8823,1043.7617,11.0000);
	QuestP[46] = CreatePickup(1240, 23, 2609.5229,2848.7825,10.8203);
	QuestP[47] = CreatePickup(1240, 23, 1731.8245,2775.8269,11.3509);
	QuestP[48] = CreatePickup(1240, 23, 945.5764,2017.5770,11.3486);
	QuestP[49] = CreatePickup(1240, 23, 2242.8765,1131.8381,10.8203);

    // MAPICON
    CreateDynamicMapIcon(328.3534,-1513.1687,36.0391,55,0,-1,-1,-1,750.0);	// BuyCar Los Santos
    CreateDynamicMapIcon(1614.92480, 1816.09631, 10.91310,22,0,-1,-1,-1,750.0);	// Hospital LV
	CreateDynamicMapIcon(1172.3258,-1323.4644,15.4033,22,0,-1,-1,-1,750.0);	// Hospital LS
    CreateDynamicMapIcon(1528.779,-1678.113,5.890625,30,0,-1,-1,-1,750.0); // Pd LS
    CreateDynamicMapIcon(2286.9417,2431.7651,10.8203,30,0,-1,-1,-1,750.0);	// Pd LV
	CreateDynamicMapIcon(627.6160,-571.7920,17.6242,30,0,-1,-1,-1,750.0);	// FBI
	CreateDynamicMapIcon(213.8154,1866.6807,13.1406,30,0,-1,-1,-1,750.0);	// NG
	CreateDynamicMapIcon(1510.3986,-1059.5723,25.0625,35,0,-1,-1,-1,750.0);	// Event Arena

	printf("[LOADED] %d - Objects.",CountDynamicObjects());
	printf("[LOADED] %d - Pickups.",CountDynamicPickups());

	//Timer
	if (realtime)
	{
		new tmphour,
			tmpminute,
			tmpsecond;
		gettime(tmphour, tmpminute, tmpsecond);
		FixHour(tmphour);
		tmphour = shifthour;
		new worldt = tmphour;
		SetWorldTime(worldt);
	}
	synctimer = SetTimer("SyncUp", 60000, 1);
	unjailtimer = SetTimer("SetPlayerUnjail", 1000, 1);
	othtimer = SetTimer("OtherTimer", 1000, 1);
	checkafktimer = SetTimer("CheckAFK", 1000, 1);
	cartimer = SetTimer("CarCheck", 30000, 1);
    idletimer = SetTimer("IdleKick", idletime, 1);
	spectatetimer = SetTimer("Spectator", 2000, 1);
	productiontimer = SetTimer("Production", 300000, 1); //5 mins (300000)
	checkgastimer = SetTimer("CheckGas", RunOutTime, 1);
    stoppedvehtimer = SetTimer("StoppedVehicle", RunOutTime, 1);
    checkvehinfotimer = SetTimer("Checkvehinfo",1000, 1);
    pnstimer = SetTimer("SetPlayerPNS", 2000, 1);
    wantedicatimer = SetTimer("FiveSecondsTimer", 5000, 1);
    savedatatimer = SetTimer("SavePlayerData", 300000, 1);
    SetTimer("Hacks", 1000, true);
	SetTimer("SendMSG", 200000, 1);
	SetTimer("WeatherChange",1800000,1); // 30 min

	printf("[LOADED] ===== OnGameModeInit Loaded SuccessFully =====");
	return 1;
}

public LoadAllObjects()
{

	//gratii pd
    new gratie1, gratie2, gratie3, gratie4, gratie5, gratie6;
	gratie1 = CreateObject(19302, 266.32431, 85.70610, 1001.28571,   0.00000, 0.00000, 90.30000);
	gratie2 = CreateObject(19302, 266.31870, 87.46790, 1001.28571,   0.02000, 0.00000, -89.82000);
	gratie3 = CreateObject(19302, 266.32031, 82.94890, 1001.28571,   0.02000, 0.00000, -89.82000);
	gratie4 = CreateObject(19302, 266.33569, 81.20160, 1001.28571,   0.02000, 0.00000, 90.36000);
	gratie5 = CreateObject(19302, 266.29480, 76.71580, 1001.28571,   0.02000, 0.00000, 90.36000);
	gratie6 = CreateObject(19302, 266.29480, 78.45580, 1001.28571,   0.02000, 0.00000, -90.60000);
	SetObjectMaterial(gratie1, 0, 19302, "gratie1", "gratie1", 0xFFFFFFFF);
	SetObjectMaterial(gratie2, 0, 19302, "gratie2", "gratie2", 0xFFFFFFFF);
	SetObjectMaterial(gratie3, 0, 19302, "gratie3", "gratie3", 0xFFFFFFFF);
	SetObjectMaterial(gratie4, 0, 19302, "gratie4", "gratie4", 0xFFFFFFFF);
	SetObjectMaterial(gratie5, 0, 19302, "gratie5", "gratie5", 0xFFFFFFFF);
	SetObjectMaterial(gratie6, 0, 19302, "gratie6", "gratie6", 0xFFFFFFFF);

	//gratii ajail
	new gratia1, gratia2, gratia3, gratia4, gratia5, gratia6, gratia7, gratia8;
	gratia1 = CreateObject(19302, 228.28619, 112.66590, 999.23529,   0.00000, 0.00000, 180.48010);
	gratia2 = CreateObject(19302, 226.50360, 112.64810, 999.23529,   0.00000, 0.00000, 0.90020);
	gratia3 = CreateObject(19302, 222.62360, 112.64810, 999.23529,   0.00000, 0.00000, 359.64001);
	gratia4 = CreateObject(19302, 224.36360, 112.64810, 999.23529,   0.00000, 0.00000, 538.79919);
	gratia5 = CreateObject(19302, 220.38361, 112.64810, 999.23529,   0.00000, 0.00000, 539.69940);
	gratia6 = CreateObject(19302, 218.66360, 112.64810, 999.23529,   0.00000, 0.00000, 359.33963);
	gratia7 = CreateObject(19302, 216.44360, 112.64810, 999.23529,   0.00000, 0.00000, 538.73865);
	gratia8 = CreateObject(19302, 214.72360, 112.64810, 999.23529,   0.00000, 0.00000, 359.45889);
	SetObjectMaterial(gratia1, 0, 19302, "gratia1", "gratia1", 0xFFFFFFFF);
	SetObjectMaterial(gratia2, 0, 19302, "gratia2", "gratia2", 0xFFFFFFFF);
	SetObjectMaterial(gratia3, 0, 19302, "gratia3", "gratia3", 0xFFFFFFFF);
	SetObjectMaterial(gratia4, 0, 19302, "gratia4", "gratia4", 0xFFFFFFFF);
	SetObjectMaterial(gratia5, 0, 19302, "gratia5", "gratia5", 0xFFFFFFFF);
	SetObjectMaterial(gratia6, 0, 19302, "gratia6", "gratia6", 0xFFFFFFFF);
	SetObjectMaterial(gratia7, 0, 19302, "gratia7", "gratia7", 0xFFFFFFFF);
	SetObjectMaterial(gratia8, 0, 19302, "gratia8", "gratia8", 0xFFFFFFFF);

	//hq admin
	CreateObject(966, 907.46259, -1666.35645, 12.54427,   0.00000, 0.00000, -90.41999);
	CreateObject(983, 907.44513, -1669.84729, 13.12170,   0.00000, 0.00000, -0.42000);
	CreateObject(983, 907.40863, -1676.22632, 13.14170,   0.00000, 0.00000, 0.06000);
	CreateObject(983, 907.43280, -1681.25488, 13.12170,   0.00000, 0.00000, 0.06000);
	CreateObject(983, 904.22852, -1684.49426, 13.12170,   0.00000, 0.00000, -89.52000);
	CreateObject(983, 897.83258, -1684.53479, 13.10170,   0.00000, 0.00000, -89.88000);
	CreateObject(983, 891.44519, -1684.54102, 13.08170,   0.00000, 0.00000, -89.88000);
	CreateObject(983, 885.02777, -1684.55176, 13.10170,   0.00000, 0.00000, -89.88000);
	CreateObject(983, 878.57898, -1684.55298, 13.12170,   0.00000, 0.00000, -89.88000);
	CreateObject(983, 872.15442, -1684.55994, 13.12170,   0.00000, 0.00000, -89.88000);
	CreateObject(983, 865.73578, -1684.55994, 13.12170,   0.00000, 0.00000, -89.88000);
	CreateObject(983, 859.32013, -1684.58044, 13.14170,   0.00000, 0.00000, -89.88000);
	CreateObject(983, 852.92010, -1684.61353, 13.14170,   0.00000, 0.00000, -89.88000);
	CreateObject(983, 907.44409, -1656.23047, 13.14170,   0.00000, 0.00000, -0.12000);
	CreateObject(983, 907.47040, -1649.81274, 13.14170,   0.00000, 0.00000, -0.18000);
	CreateObject(983, 907.47382, -1643.41797, 13.14170,   0.00000, -0.30000, 0.00000);
	gatehqa = CreateObject(968, 907.50238, -1666.58813, 13.40640,   0.00000, -91.00000, -90.00000);
	
	
	//--------------- Sistem de VAMA by MaWReZ --------------------------------------------------------
	CreateDynamicObject(7033, 67.08083, -1533.69910, 8.68193,   0.00000, 0.00000, 81.78003);
	CreateDynamicObject(19121, 70.76111, -1535.94922, 4.72825,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 71.92736, -1536.16504, 4.72825,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 72.38696, -1532.94580, 4.72825,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 71.09688, -1532.74561, 4.72825,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 63.35453, -1531.42700, 4.72825,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 62.88684, -1534.88953, 4.72825,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 62.10159, -1531.16443, 4.72825,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 61.55799, -1534.64551, 4.72825,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3749, 95.91793, -1281.74182, 18.62871,   0.00000, 0.00000, -50.94001);
	CreateDynamicObject(3749, 79.96290, -1260.87537, 18.62871,   0.00000, 0.00000, -54.96001);
	CreateDynamicObject(19121, 81.66608, -1266.72449, 13.95097,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 75.05425, -1257.39978, 13.95097,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 78.31624, -1255.17053, 13.95097,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 84.81445, -1264.41174, 13.95097,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 90.81923, -1278.57019, 13.63360,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 93.87034, -1276.18433, 13.63360,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 97.97005, -1287.42041, 13.63360,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 100.98069, -1284.87939, 13.63360,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3749, 1729.50281, 520.96771, 32.99458,   0.00000, 0.00000, -19.44000);
	CreateDynamicObject(3749, 1744.77051, 515.60168, 32.97126,   0.00000, 0.00000, -19.32000);
	CreateDynamicObject(19121, 1738.78003, 515.54669, 27.91676,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1740.06641, 519.31079, 27.62684,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1750.81592, 515.47607, 27.62684,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1735.50378, 520.83160, 27.62684,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1724.73706, 524.64075, 27.62684,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1723.51587, 521.01904, 27.62684,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1749.48303, 511.88513, 27.91676,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3749, -1492.54199, 716.78479, 49.18597,   0.00000, 0.00000, -43.56002);
	CreateDynamicObject(19121, -1498.61133, 725.21936, 45.36366,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, -1501.32556, 722.46521, 45.36366,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, -1506.77075, 732.86469, 45.36366,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, -1509.43726, 730.13000, 45.36366,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3749, -1504.00488, 727.71893, 49.18597,   0.00000, 0.00000, -43.80003);
	CreateDynamicObject(19121, -1498.02148, 719.20026, 45.36366,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, -1495.25745, 722.09332, 45.36366,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, -1489.82764, 711.58972, 45.34085,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, -1487.15344, 714.33630, 45.34085,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 62.06760, -1545.31482, 4.67880,   0.00000, 0.00000, -7.44000);
	CreateDynamicObject(970, 66.13778, -1545.81042, 4.67880,   0.00000, 0.00000, -6.60000);
	CreateDynamicObject(970, 70.23087, -1546.29004, 4.67880,   0.00000, 0.00000, -6.60000);
	CreateDynamicObject(970, 70.23087, -1546.29004, 5.67251,   0.00000, 0.00000, -6.60000);
	CreateDynamicObject(970, 66.13780, -1545.81042, 5.67250,   0.00000, 0.00000, -6.60000);
	CreateDynamicObject(970, 62.06760, -1545.31482, 5.67250,   0.00000, 0.00000, -7.44000);
	CreateDynamicObject(970, 70.27182, -1535.72400, 4.67880,   0.00000, 0.00000, -7.44000);
	CreateDynamicObject(970, 70.66689, -1532.67273, 4.67880,   0.00000, 0.00000, -7.44000);
	CreateDynamicObject(1569, 70.52391, -1534.94250, 4.05534,   0.00000, 0.00000, 81.48011);
	CreateDynamicObject(970, 70.66689, -1532.67273, 5.73734,   0.00000, 0.00000, -7.44000);
	CreateDynamicObject(970, 70.27182, -1535.72400, 5.72901,   0.00000, 0.00000, -7.44000);
	CreateDynamicObject(970, 72.09153, -1522.21399, 4.42085,   0.00000, 0.00000, -8.52000);
	CreateDynamicObject(970, 67.99007, -1521.65515, 4.42085,   0.00000, 0.00000, -6.95999);
	CreateDynamicObject(970, 63.89300, -1521.15918, 4.42085,   0.00000, 0.00000, -6.95999);
	CreateDynamicObject(970, 63.89300, -1521.15918, 5.52151,   0.00000, 0.00000, -6.95999);
	CreateDynamicObject(970, 67.99010, -1521.65515, 5.52150,   0.00000, 0.00000, -6.96000);
	CreateDynamicObject(7033, 67.08083, -1533.69910, 8.68193,   0.00000, 0.00000, 81.78003);
	CreateDynamicObject(970, 72.09150, -1522.21399, 5.52150,   0.00000, 0.00000, -8.52000);
	CreateDynamicObject(970, 1719.79126, 522.64258, 27.83184,   0.00000, 0.00000, -18.96000);
	CreateDynamicObject(970, 1719.79126, 522.64258, 28.82878,   0.00000, 0.00000, -18.96000);
	CreateDynamicObject(970, 1753.60925, 511.07892, 27.82523,   0.00000, 0.00000, -18.96000);
	CreateDynamicObject(970, 1753.60925, 511.07892, 28.90394,   0.00000, 0.00000, -18.96000);
	CreateDynamicObject(970, -1485.77588, 709.61627, 45.51381,   0.00000, 0.00000, -43.68004);
	CreateDynamicObject(970, -1485.77588, 709.61627, 46.59353,   0.00000, 0.00000, -43.68004);
	CreateDynamicObject(970, -1511.70581, 734.33331, 45.62690,   0.00000, 0.00000, -43.68004);
	CreateDynamicObject(970, -1511.70581, 734.33331, 46.69762,   0.00000, 0.00000, -43.68004);
	CreateDynamicObject(19324, 1111.92542, -1788.61206, 16.11460,   0.00000, 0.00000, -89.79999);
	CreateDynamicObject(19324, 1497.61133, -1749.92053, 15.14270,   0.00000, 0.00000, 180.41995);
	CreateDynamicObject(19324, 1304.65479, -1367.92566, 13.09244,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19324, 846.73840, -1804.62891, 13.09820,   0.00000, 0.00000, 8901.38184);
	CreateDynamicObject(19324, -517.67480, -562.36212, 25.17078,   0.00000, 0.00000, 179.63991);

	//------------------------------------------ teamviewer ---------------------------//
	CreateObject(8661, 2962.69238, 2043.05237, 2000.05237,   0.00000, 0.00000, 0.00000);
	CreateObject(18766, 2977.62158, 2052.56934, 2002.48315,   0.00000, 0.00000, 0.00000);
	CreateObject(18766, 2967.76660, 2052.56934, 2002.48315,   0.00000, 0.00000, 0.00000);
	CreateObject(18766, 2957.85156, 2052.56177, 2002.48315,   0.00000, 0.00000, 0.00000);
	CreateObject(18766, 2947.90771, 2052.56934, 2002.48315,   0.00000, 0.00000, 0.00000);
	CreateObject(18766, 2982.27881, 2037.77795, 2002.48315,   0.00000, 0.00000, 89.50000);
	CreateObject(18766, 2982.34277, 2047.70276, 2002.48315,   0.00000, 0.00000, 89.50000);
	CreateObject(18766, 2943.46484, 2038.03125, 2002.48315,   0.00000, 0.00000, 89.50000);
	CreateObject(18766, 2943.52808, 2047.78052, 2002.48315,   0.00000, 0.00000, 89.50000);
	CreateObject(3265, 2963.28687, 2050.97949, 1999.85876,   0.00000, 0.00000, 0.00000);
	CreateObject(3524, 2965.40991, 2051.07935, 2000.99207,   0.00000, 0.00000, 0.00000);
	CreateObject(3524, 2961.41211, 2050.95996, 2000.99207,   0.00000, 0.00000, 0.00000);
	CreateObject(18766, 2977.23901, 2033.37317, 2002.48315,   0.00000, 0.00000, 0.00000);
	CreateObject(18766, 2967.41821, 2033.35120, 2002.48315,   0.00000, 0.00000, 0.00000);
	CreateObject(18766, 2957.49902, 2033.38965, 2002.48315,   0.00000, 0.00000, 0.00000);
	CreateObject(18766, 2948.11914, 2033.38257, 2002.48315,   0.00000, 0.00000, 0.00000);
	CreateObject(18766, 2948.37500, 2035.78088, 2004.41504,   90.00000, 0.00000, 0.00000);
	CreateObject(18766, 2948.37207, 2040.41760, 2004.41504,   90.00000, 0.00000, 0.00000);
	CreateObject(18766, 2948.35303, 2044.73816, 2004.41504,   90.00000, 0.00000, 0.00000);
	CreateObject(18766, 2957.23657, 2050.39893, 2004.41504,   90.00000, 0.00000, 0.00000);
	CreateObject(18766, 2948.24170, 2050.11108, 2004.41504,   90.00000, 0.00000, 0.00000);
	CreateObject(18766, 2947.93286, 2049.70337, 2004.41504,   90.00000, 0.00000, 0.00000);
	CreateObject(18766, 2957.54639, 2045.75378, 2004.41504,   90.00000, 0.00000, 0.00000);
	CreateObject(18766, 2957.25684, 2041.00281, 2004.41504,   90.00000, 0.00000, 0.00000);
	CreateObject(18766, 2957.41284, 2036.15759, 2004.41504,   90.00000, 0.00000, 0.00000);
	CreateObject(18766, 2967.09814, 2036.25732, 2004.41504,   90.00000, 0.00000, 0.00000);
	CreateObject(18766, 2967.23877, 2040.64404, 2004.41504,   90.00000, 0.00000, 0.00000);
	CreateObject(18766, 2967.35864, 2045.55286, 2004.41504,   90.00000, 0.00000, 0.00000);
	CreateObject(18766, 2967.10693, 2049.71655, 2004.41504,   90.00000, 0.00000, 0.00000);
	CreateObject(18766, 2976.64893, 2050.34277, 2004.41504,   90.00000, 0.00000, 0.00000);
	CreateObject(18766, 2977.21777, 2045.52466, 2004.41504,   90.00000, 0.00000, -0.18000);
	CreateObject(18766, 2976.64893, 2050.34277, 2004.41504,   90.00000, 0.00000, 0.00000);
	CreateObject(18766, 2977.04590, 2041.03638, 2004.41504,   90.00000, 0.00000, -0.18000);
	CreateObject(18766, 2976.85669, 2036.67297, 2004.41504,   90.00000, 0.00000, -0.18000);
	CreateObject(1215, 2960.49805, 2050.61060, 2000.60889,   0.00000, 0.00000, 0.00000);
	CreateObject(1215, 2966.59326, 2050.57983, 2000.60889,   0.00000, 0.00000, 0.00000);
	CreateObject(1704, 2949.59839, 2043.03357, 2000.02869,   0.00000, 0.00000, 1.98000);
	CreateObject(1704, 2950.80884, 2038.61560, 2000.02869,   0.00000, 0.00000, 183.71989);
	CreateObject(1826, 2950.25610, 2041.48560, 2000.05237,   0.00000, 0.00000, -85.80000);
	CreateObject(1703, 2948.65259, 2039.79944, 2000.05127,   0.00000, 0.00000, 93.65999);
	CreateObject(3524, 2948.01733, 2043.03247, 2000.99207,   0.00000, 0.00000, 52.14001);
	CreateObject(3524, 2948.89233, 2038.69336, 2000.99207,   0.00000, 0.00000, -220.92001);
	CreateObject(19835, 2949.89331, 2041.38989, 2000.97400,   0.00000, 0.00000, 0.00000);
	CreateObject(19835, 2950.32471, 2041.80786, 2000.97400,   0.00000, 0.00000, 0.00000);
	CreateObject(19835, 2949.95508, 2040.50366, 2000.97400,   0.00000, 0.00000, 0.00000);
	CreateObject(19835, 2950.15112, 2039.97888, 2000.97400,   0.00000, 0.00000, 0.00000);
	CreateObject(18766, 2973.20190, 2047.48682, 2002.48315,   0.00000, 0.00000, 89.50000);
	CreateObject(18766, 2973.20190, 2034.98877, 2002.48315,   0.00000, 0.00000, 89.50000);
	CreateObject(1254, 2972.62817, 2039.30078, 2001.65015,   0.00000, 0.00000, -94.67999);
	CreateObject(1254, 2972.58350, 2042.74194, 2001.65015,   0.00000, 0.00000, -94.67999);
	CreateObject(18766, 2973.14990, 2040.32410, 2005.62622,   0.00000, 0.00000, 89.50000);
	CreateObject(3524, 2974.75098, 2049.47607, 2000.99207,   0.00000, 0.00000, 0.00000);
	CreateObject(3524, 2976.70264, 2049.28540, 2000.99207,   0.00000, 0.00000, 0.00000);
	CreateObject(3524, 2978.52002, 2049.16650, 2000.99207,   0.00000, 0.00000, 0.00000);
	CreateObject(3524, 2979.95142, 2048.99561, 2000.99207,   0.00000, 0.00000, 0.00000);
	CreateObject(3524, 2980.90991, 2047.21448, 2000.99207,   0.00000, 0.00000, -81.53999);
	CreateObject(3524, 2980.86719, 2044.55151, 2000.99207,   0.00000, 0.00000, -81.53999);
	CreateObject(3524, 2980.83081, 2041.74255, 2000.99207,   0.00000, 0.00000, -81.53999);
	CreateObject(3524, 2980.95972, 2038.56067, 2000.99207,   0.00000, 0.00000, -81.53999);
	CreateObject(3524, 2980.86719, 2036.17468, 2000.99207,   0.00000, 0.00000, -81.53999);
	CreateObject(3524, 2979.63208, 2034.74146, 2000.99207,   0.00000, 0.00000, -171.41997);
	CreateObject(3524, 2977.82300, 2034.71960, 2000.99207,   0.00000, 0.00000, -171.41997);
	CreateObject(3524, 2976.06323, 2034.82361, 2000.99207,   0.00000, 0.00000, -171.41997);
	CreateObject(3524, 2974.42114, 2034.95007, 2000.99207,   0.00000, 0.00000, -171.41997);
	CreateObject(3524, 2974.36304, 2036.12805, 2000.99207,   0.00000, 0.00000, -258.00000);
	CreateObject(3524, 2974.24585, 2039.52295, 2000.99207,   0.00000, 0.00000, -258.00000);
	CreateObject(3524, 2974.16968, 2043.04163, 2000.99207,   0.00000, 0.00000, -258.00000);
	CreateObject(3524, 2974.07837, 2045.70581, 2000.99207,   0.00000, 0.00000, -258.00000);
	CreateObject(3524, 2974.37842, 2048.25854, 2000.99207,   0.00000, 0.00000, -258.00000);
	CreateObject(3524, 2974.21509, 2037.80676, 2000.99207,   0.00000, 0.00000, -258.00000);
	CreateObject(19164, 2976.97168, 2040.99658, 2000.12769,   0.00000, 0.00000, 0.00000);

	//Hq FBI
    CreateObject(19377, 666.93982, -557.02802, 15.13310,   0.00000, 91.00000, 0.00000);
	CreateObject(19377, 666.94043, -566.58160, 15.19310,   0.00000, 91.00000, 0.00000);
	CreateObject(19377, 666.94293, -572.95233, 15.17310,   0.00000, 91.00000, 0.00000);
	CreateObject(11326, 668.95013, -573.81860, 17.74650,   0.00000, 0.00000, 90.18000);
	CreateObject(9623, 701.65344, -562.83527, 18.03950,   0.00000, 0.00000, 89.81999);
	CreateObject(19377, 696.48126, -585.44824, 15.14340,   0.00000, 91.00000, -1.20000);
	CreateObject(19377, 696.35419, -575.87994, 15.14340,   0.00000, 91.00000, -1.20000);
	CreateObject(19377, 695.51837, -566.07990, 15.14340,   0.00000, 91.00000, -1.20000);
	CreateObject(19377, 694.07977, -566.14966, 15.14340,   0.00000, 91.00000, -1.20000);
	CreateObject(19377, 696.21149, -556.47168, 15.14340,   0.00000, 91.00000, -1.20000);
	CreateObject(19377, 696.22986, -547.10999, 15.14340,   0.00000, 91.00000, -1.20000);
	CreateObject(19377, 696.77716, -540.30585, 15.14340,   0.00000, 91.00000, -1.20000);
	CreateObject(19377, 707.81512, -540.46393, 14.98340,   0.00000, 91.00000, -1.20000);
	CreateObject(19377, 706.99896, -550.04419, 15.00340,   0.00000, 91.00000, -1.20000);
	CreateObject(19377, 707.70587, -559.03546, 15.00340,   0.00000, 91.00000, -1.20000);
	CreateObject(19377, 704.81384, -566.50623, 15.00340,   0.00000, 91.00000, -1.20000);
	CreateObject(19377, 706.92303, -577.68646, 15.00340,   0.00000, 91.00000, -1.20000);
	CreateObject(19377, 706.95959, -587.18536, 15.00340,   0.00000, 91.00000, -1.20000);
	CreateObject(19377, 707.95074, -566.54077, 15.00340,   0.00000, 91.00000, 11.46000);
	CreateObject(19377, 701.13971, -549.74371, 15.00340,   0.00000, 91.00000, -1.20000);
	CreateObject(19377, 707.91034, -568.86755, 15.00340,   0.00000, 91.00000, 11.46000);
	CreateObject(1676, 695.69348, -563.09631, 17.08250,   0.00000, 0.00000, 0.00000);
	CreateObject(1676, 695.69348, -563.09631, 17.08250,   0.00000, 0.00000, 0.00000);
	CreateObject(1676, 695.70410, -571.70740, 17.08250,   0.00000, 0.00000, 0.00000);
	CreateObject(1676, 695.67365, -553.88867, 17.08250,   0.00000, 0.00000, 0.00000);
	CreateObject(1676, 707.57294, -554.17126, 17.08250,   0.00000, 0.00000, -2.70000);
	CreateObject(19377, 706.24176, -559.54761, 15.00340,   0.00000, 91.00000, -1.20000);
	CreateObject(1676, 707.51013, -563.34412, 17.08250,   0.00000, 0.00000, -2.70000);
	CreateObject(1676, 707.54889, -572.00061, 17.08250,   0.00000, 0.00000, -1.20000);
	CreateObject(19377, 706.94525, -540.55505, 14.98340,   0.00000, 91.00000, -1.20000);
	CreateObject(19377, 710.90552, -548.85083, 14.90340,   0.00000, 91.00000, -1.20000);
	CreateObject(19377, 709.98456, -559.23059, 14.90340,   0.00000, 91.00000, -1.20000);
	CreateObject(19377, 716.18982, -577.36462, 14.78340,   0.00000, 91.00000, -1.20000);
	CreateObject(19377, 716.82098, -586.93445, 14.78340,   0.00000, 91.00000, -1.20000);
	CreateObject(1980, 617.92468, -602.69360, 17.91540,   0.00000, 0.00000, 0.00000);
	CreateObject(1980, 617.86615, -609.80939, 17.91540,   0.00000, 0.00000, 0.00000);
	CreateObject(1980, 617.93164, -597.28455, 17.91540,   0.00000, 0.00000, 0.00000);

	//-------------------------------Gas Station VW-----------------------------------------------//
	CreateDynamicObject(1676, 999.01080, -937.58527, 42.83630,   0.00000, 0.00000, 8.54000);
	CreateDynamicObject(1676, 1002.11664, -937.13104, 42.83630,   0.00000, 0.00000, 8.54000);
	CreateDynamicObject(1676, 1005.87872, -936.51556, 42.81630,   0.00000, 0.00000, 8.54000);
	CreateDynamicObject(1676, 1008.86292, -936.16095, 42.83630,   0.00000, 0.00000, 8.54000);
	CreateDynamicObject(983, 1008.65417, -937.02362, 41.85510,   0.00000, 0.00000, 97.78000);
	CreateDynamicObject(983, 1002.32001, -937.90167, 41.85510,   0.00000, 0.00000, 97.78000);
	CreateDynamicObject(983, 999.15021, -938.32751, 41.85510,   0.00000, 0.00000, 97.78000);
	CreateDynamicObject(983, 1008.65417, -935.31848, 41.85510,   0.00000, 0.00000, 97.78000);
	CreateDynamicObject(983, 1002.32001, -936.17767, 41.85510,   0.00000, 0.00000, 97.78000);
	CreateDynamicObject(983, 999.15399, -936.61731, 41.85510,   0.00000, 0.00000, 97.78000);
	CreateDynamicObject(1215, 1012.45050, -935.59039, 41.73930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1011.99579, -936.60394, 41.73930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1012.31006, -936.39368, 41.73930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1012.49567, -936.05591, 41.73930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1012.31561, -935.16766, 41.73930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1011.98206, -934.90894, 41.73930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 995.76654, -937.02051, 41.73930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 995.42529, -937.27100, 41.73930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 995.44580, -938.56421, 41.73930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 995.77106, -938.81226, 41.73930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 995.29395, -938.16028, 41.73930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 995.27124, -937.70074, 41.73930,   0.00000, 0.00000, 0.00000);

	//Line MASINI
    CreateObject(10183, 1267.64600, -1797.14282, 12.43480,   0.00000, 0.00000, 44.64000);
	CreateObject(10183, 1205.08972, -1829.13245, 12.43480,   0.00000, 0.00000, 45.48000);
	CreateObject(10183, 1570.63953, -1606.69458, 12.40590,   0.00000, 0.00000, 45.12000);

	//PD Exterior
	CreateObject(11326, 1605.05212, -1623.62476, 14.96770,   0.00000, 0.00000, 89.46000);
	CreateObject(955, 1553.64233, -1683.42175, 12.92650,   0.00000, 0.00000, -90.00000);
	CreateObject(983, 1542.62939, -1641.17981, 27.70590,   0.00000, 0.00000, -180.48010);
	CreateObject(983, 1545.80750, -1650.77563, 27.68590,   0.00000, 0.00000, -270.12021);
	CreateObject(983, 1542.60828, -1647.55884, 27.70590,   -0.16000, -0.04000, -180.12010);
	CreateObject(983, 1550.38745, -1650.77563, 27.68590,   0.00000, 0.00000, -270.12021);
	CreateObject(983, 1542.62939, -1640.45984, 27.70590,   0.00000, 0.00000, -180.48010);
	CreateObject(983, 1545.85986, -1637.26941, 27.70590,   0.00000, 0.00000, -270.18002);
	CreateObject(983, 1552.21460, -1637.27222, 27.70590,   0.00000, 0.00000, -270.18002);
	CreateObject(983, 1558.61877, -1637.28772, 27.70590,   0.00000, 0.00000, -270.18002);
	CreateObject(983, 1565.02625, -1637.32434, 27.70590,   0.00000, 0.00000, -270.18002);
	CreateObject(983, 1571.40149, -1637.35168, 27.70590,   0.00000, 0.00000, -270.18002);
	CreateObject(983, 1574.66931, -1637.35522, 27.70590,   0.00000, 0.00000, -270.17999);
	CreateObject(983, 1577.83557, -1640.57202, 27.70590,   0.00000, 0.00000, -180.48010);
	CreateObject(983, 1577.77295, -1646.93713, 27.70590,   0.00000, 0.00000, -180.48010);
	CreateObject(983, 1577.78162, -1653.32056, 27.70590,   0.00000, 0.00000, -180.06012);
	CreateObject(983, 1577.78674, -1659.73962, 27.70590,   0.00000, 0.00000, -180.06012);
	CreateObject(983, 1577.77917, -1666.16150, 27.70590,   0.00000, 0.00000, -180.06012);
	CreateObject(983, 1577.75732, -1672.53748, 27.70590,   0.00000, 0.00000, -180.06012);
	CreateObject(983, 1577.72766, -1678.91931, 27.70590,   0.00000, 0.00000, -180.06012);
	CreateObject(983, 1577.73621, -1685.32568, 27.70590,   0.00000, 0.00000, -180.06012);
	CreateObject(983, 1577.72400, -1691.71228, 27.70590,   0.00000, 0.00000, -180.06012);
	CreateObject(983, 1577.71289, -1698.10791, 27.70590,   0.00000, 0.00000, -180.06012);
	CreateObject(983, 1577.72131, -1704.51245, 27.70590,   0.00000, 0.00000, -180.06012);
	CreateObject(983, 1577.69897, -1710.88159, 27.70590,   0.00000, 0.00000, -180.06012);
	CreateObject(983, 1577.69897, -1711.24158, 27.70590,   0.00000, 0.00000, -180.06010);
	CreateObject(983, 1574.44556, -1714.38306, 27.70590,   0.00000, 0.00000, -270.35995);
	CreateObject(983, 1568.07471, -1714.34656, 27.70590,   0.00000, 0.00000, -270.35995);
	CreateObject(983, 1561.66760, -1714.30737, 27.70590,   0.00000, 0.00000, -270.35995);
	CreateObject(983, 1555.31116, -1714.26440, 27.70590,   0.00000, 0.00000, -270.35995);
	CreateObject(983, 1548.95508, -1714.22168, 27.70590,   0.00000, 0.00000, -270.35995);
	CreateObject(983, 1545.76025, -1714.20190, 27.70590,   0.00000, 0.00000, -270.35995);
	CreateObject(983, 1542.57971, -1710.99304, 27.70590,   0.00000, 0.00000, -359.87982);
	CreateObject(983, 1542.54773, -1704.60864, 27.70590,   0.00000, 0.00000, -359.87982);
	CreateObject(983, 1542.54773, -1703.70862, 27.70590,   0.00000, 0.00000, -359.87979);
	CreateObject(983, 1545.74390, -1700.54211, 27.70590,   0.00000, 0.00000, -270.00009);
	CreateObject(983, 1550.38757, -1700.53650, 27.70590,   0.00000, 0.00000, -270.00009);
	CreateObject(983, 1553.58850, -1697.36475, 27.70590,   0.00000, 0.00000, -179.70013);
	CreateObject(983, 1553.56555, -1690.94910, 27.70590,   0.00000, 0.00000, -179.70013);
	CreateObject(983, 1553.56580, -1656.84106, 27.70590,   0.00000, 0.00000, -179.70010);
	CreateObject(983, 1553.55737, -1653.96729, 27.70590,   0.00000, 0.00000, -179.70010);
	CreateObject(3934, 1562.89099, -1700.73755, 27.38710,   0.00000, -0.02000, -0.84000);
	CreateObject(3934, 1560.78516, -1650.95300, 27.38710,   0.00000, -0.02000, 1.02000);

	//Statii autobuz
	CreateObject(1257, 1692.89929, -2200.77808, 13.64870,   0.00000, 0.00000, -90.12000);
	CreateObject(1257, 1941.19080, -2172.63159, 13.76920,   0.00000, 0.00000, -90.36000);
	CreateObject(1257, 1967.80859, -1900.26184, 13.77870,   0.00000, 0.00000, 0.00000);
	CreateObject(1257, 1921.87402, -1746.02295, 13.76840,   0.00000, 0.00000, 90.06000);
	CreateObject(1257, 1815.46008, -1815.05981, 13.80990,   0.00000, 0.00000, -179.63989);
	CreateObject(1257, 1695.64038, -1766.75049, 13.78830,   0.00000, 0.00000, 0.00000);
	CreateObject(1257, 1392.64221, -1726.04602, 13.65910,   0.00000, 0.00000, 89.46000);
	CreateObject(1257, 1318.69714, -1633.10010, 13.76780,   0.00000, 0.00000, 0.00000);
	CreateObject(1257, 1325.55969, -1389.08057, 13.76010,   0.00000, 0.00000, 90.24000);
	CreateObject(1257, 1212.34741, -1326.52954, 13.68430,   0.00000, 0.00000, 0.00000);
	CreateObject(1257, 1083.02100, -1274.54492, 13.60720,   0.00000, 0.00000, 90.24000);
	CreateObject(1257, 964.63733, -1214.54919, 17.02340,   0.00000, 0.00000, 89.58000);
	CreateObject(1257, 818.55078, -1134.44849, 23.90680,   0.00000, 0.00000, 88.50000);
	CreateObject(1257, 791.28119, -1301.22681, 13.56870,   0.00000, 0.00000, -179.51990);
	CreateObject(1257, 679.34332, -1388.95630, 13.72830,   0.00000, 0.00000, 90.12000);
	CreateObject(1257, 378.06552, -1489.50562, 32.17630,   0.00000, 0.00000, 128.28003);
	CreateObject(1257, 261.02219, -1539.33704, 32.41950,   0.00000, 0.00000, -34.38000);
	CreateObject(1257, 485.92880, -1361.02576, 18.19000,   -4.00000, 4.00000, -65.24000);
	CreateObject(1257, 589.19830, -1236.84290, 17.97730,   0.00000, 0.00000, -67.92000);
	CreateObject(1257, 775.53870, -1062.00525, 24.75130,   0.00000, 0.00000, -77.69999);
	CreateObject(1257, 1209.70325, -952.07233, 43.01140,   0.00000, 0.00000, -79.26000);
	CreateObject(1257, 1713.93640, -736.80762, 50.49150,   -2.94000, 0.00000, -2.00000);
	CreateObject(1257, 1775.73401, 579.77661, 23.77970,   0.00000, 0.00000, -11.76000);
	CreateObject(1257, 1839.89514, 825.05157, 10.16840,   0.06000, 0.00000, 270.66010);
	CreateObject(1257, 2184.53564, 801.95203, 7.33030,   0.00000, 0.00000, -125.22000);
	CreateObject(1257, 2293.69141, 841.77661, 14.11820,   0.00000, 0.00000, 0.00000);
	CreateObject(1257, 2353.69604, 1025.47546, 10.84100,   0.00000, 0.00000, 0.00000);
	CreateObject(1257, 2570.79736, 1066.87720, 10.84120,   0.00000, 0.00000, -90.24001);
	CreateObject(1257, 2613.71777, 1319.62097, 10.86020,   0.00000, 0.00000, 90.36000);
	CreateObject(1257, 2476.20508, 1479.59375, 10.86030,   0.00000, 0.00000, 89.94000);
	CreateObject(1257, 2401.10645, 1619.55835, 10.89970,   0.00000, 0.00000, 89.88000);
	CreateObject(1257, 2293.08325, 1779.52710, 10.80020,   0.00000, 0.00000, 89.70000);
	CreateObject(1257, 2158.93481, 1995.43042, 10.87960,   0.00000, 0.00000, 0.00000);
	CreateObject(1257, 2231.25317, 2383.93506, 10.86030,   0.00000, 0.00000, -12.60000);
	CreateObject(1257, 2085.77344, 2459.35864, 10.88090,   0.00000, 0.00000, 90.00000);
	CreateObject(1257, 1948.35791, 2399.46997, 10.92060,   0.00000, 0.00000, 89.64000);
	CreateObject(1257, 1920.80237, 2315.90601, 10.88100,   0.00000, 0.00000, -179.69991);
	CreateObject(1257, 1921.41638, 2117.40479, 10.94120,   0.00000, 0.00000, -179.70000);
	CreateObject(1257, 2093.48389, 2015.85571, 10.90140,   0.00000, 0.00000, -90.18000);
	CreateObject(1257, 2035.99133, 1521.35413, 10.90060,   0.00000, 0.00000, -180.05991);
	CreateObject(1257, 2036.35254, 1168.23950, 10.82070,   0.00000, 0.00000, -179.75990);
	CreateObject(1257, 2034.95715, 878.28998, 7.36150,   0.00000, 0.00000, -179.40010);
	CreateObject(1257, 1752.35156, 621.24127, 21.25890,   4.00000, 0.00000, 165.00000);
	CreateObject(1257, 1614.87988, 186.35570, 33.65740,   4.00000, 0.00000, -192.00000);
	CreateObject(1257, 1657.21387, -331.40521, 40.28030,   0.00000, 0.00000, -174.59990);
	CreateObject(1257, 1684.78406, -727.13708, 49.88370,   4.00000, 0.00000, -190.80000);
	CreateObject(1257, 1412.48633, -934.33838, 35.80170,   0.00000, 0.00000, 80.46000);
	CreateObject(1257, 1431.33862, -1040.25464, 23.92800,   0.00000, 0.00000, -89.94000);
	CreateObject(1257, 1571.46692, -1139.13977, 23.71380,   0.00000, 0.00000, -180.60001);
	CreateObject(1257, 1708.46350, -1263.24890, 13.60880,   0.00000, 0.00000, -179.16000);
	CreateObject(1257, 1590.66150, -1434.45093, 13.52840,   0.00000, 0.00000, 90.06000);
	CreateObject(1257, 1423.55896, -1568.12500, 13.62870,   0.00000, 0.00000, 173.27989);
	CreateObject(1257, 1446.39136, -1738.46875, 13.68900,   0.00000, 0.00000, -89.58000);
	CreateObject(1257, 1579.74524, -1878.48059, 13.62880,   0.00000, 0.00000, -90.06000);
	CreateObject(1257, 1815.37183, -1904.30969, 13.65310,   0.00000, 0.00000, -180.65990);
	CreateObject(1257, 1955.44678, -1998.47595, 13.60910,   0.00000, 0.00000, -179.52000);
	CreateObject(1257, 1935.31299, -2160.26001, 13.66810,   0.00000, 0.00000, 89.82000);

	//Pompe de benzina
	CreateObject(1676, 1009.18927, -936.09637, 42.78190,   0.00000, 0.00000, 6.66000);
	CreateObject(1676, 1005.57520, -936.67499, 42.78190,   0.00000, 0.00000, 6.66000);
	CreateObject(1676, 1002.23541, -937.06488, 42.78190,   0.00000, 0.00000, 6.66000);
	CreateObject(1676, 998.64508, -937.57654, 42.78190,   0.00000, 0.00000, 6.66000);

	//Masinute/Elicoptere/Tancuri PD, Aeroport si Dealership
	CreateVehicle(464, 1972.3630, -2177.0972, 16.6885, 51.6000, -1, -1, 100);
	CreateVehicle(465, 1950.9691, -2177.2039, 16.8155, -56.9400, -1, -1, 100);
	CreateVehicle(441, 326.6814, -1538.6517, 32.1894, -133.6799, -1, -1, 100);
	CreateVehicle(441, 330.8876, -1533.0819, 32.1894, -133.7999, -1, -1, 100);
	CreateVehicle(564, 1546.9607, -1672.4099, 14.0163, 89.9999, -1, -1, 100);
	CreateVehicle(564, 1547.0096, -1678.7792, 14.0163, 89.9999, -1, -1, 100);
	return 1;
}

public LoadAllDynamicObjects()
{
	//event arena
	CreateDynamicObject(5107, 8131.84424, -7557.77441, 21.31974,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13190, 8092.79590, -7557.67969, 17.86357,   0.00000, 0.00000, -180.00002);
	CreateDynamicObject(13190, 8092.77637, -7557.67041, 21.69334,   0.00000, 0.00000, -180.00002);
	CreateDynamicObject(13190, 8092.77148, -7557.67383, 25.57404,   0.00000, 0.00000, -180.00002);
	CreateDynamicObject(13190, 8092.75781, -7557.68311, 29.43032,   0.00000, 0.00000, -180.00002);
	CreateDynamicObject(16287, 8085.43555, -7564.92334, 11.59161,   0.00000, 0.00000, -180.00002);
	CreateDynamicObject(16287, 8090.56982, -7569.92725, 11.61662,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(16287, 8085.42822, -7550.02686, 11.59772,   0.00000, 0.00000, -180.00002);
	CreateDynamicObject(16287, 8095.47949, -7569.92676, 11.61662,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(16287, 8090.53174, -7544.91895, 11.61663,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(16287, 8095.47852, -7544.91504, 11.61662,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(16287, 8100.60156, -7549.99854, 11.61662,   0.00000, 0.00000, -360.00003);
	CreateDynamicObject(16287, 8100.60010, -7564.91455, 11.61662,   0.00000, 0.00000, -360.00003);
	CreateDynamicObject(8947, 8093.10303, -7560.52051, 18.51939,   0.00000, 0.00000, -180.00002);
	CreateDynamicObject(8947, 8093.11426, -7560.53613, 24.52295,   0.00000, 0.00000, -180.00002);
	CreateDynamicObject(8947, 8093.10352, -7560.52686, 26.99291,   0.00000, 0.00000, -180.00002);
	CreateDynamicObject(8947, 8097.21094, -7561.63770, 12.04439,   0.00000, 0.00000, -180.00002);
	CreateDynamicObject(8947, 8097.22314, -7553.22217, 12.01940,   0.00000, 0.00000, -180.00002);
	CreateDynamicObject(8947, 8088.83398, -7561.64404, 12.05525,   0.00000, 0.00000, -359.99997);
	CreateDynamicObject(8947, 8088.81201, -7553.23730, 12.04439,   0.00000, 0.00000, -360.00003);
	CreateDynamicObject(4193, 8111.32910, -7498.31055, 31.44644,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(10041, 8032.82227, -7497.01855, 45.16753,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(4058, 8047.18066, -7595.05029, 33.55188,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(4058, 8108.80957, -7613.34033, 25.23701,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4682, 8096.74316, -7600.93604, 18.03067,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(4682, 8186.39941, -7550.15967, 22.69571,   0.00000, 0.00000, -989.99976);
	CreateDynamicObject(4113, 8187.83398, -7481.91797, 36.29269,   0.00000, 0.00000, 101.25001);
	CreateDynamicObject(4570, 7992.76074, -7555.49707, 49.23763,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(4570, 8153.17090, -7617.53174, 48.53752,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4571, 8236.04785, -7480.54053, 51.21596,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(3268, 8155.90918, -7553.35352, 14.36662,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(3268, 8155.92822, -7575.60303, 14.36662,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(3268, 8155.93018, -7573.09180, 18.19459,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(3268, 8155.92139, -7553.29834, 18.19116,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(4570, 8102.35938, -7624.73633, 57.35464,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4682, 8147.48584, -7497.79102, 30.86975,   0.00000, 0.00000, -809.99963);
	CreateDynamicObject(9910, 8157.54199, -7589.48975, 25.39473,   0.00000, 0.00000, -134.99997);
	CreateDynamicObject(9910, 8124.82959, -7589.49951, 25.33860,   0.00000, 0.00000, -134.99997);
	CreateDynamicObject(9910, 8170.17480, -7575.63916, 22.18861,   0.00000, 0.00000, -44.99999);
	CreateDynamicObject(9910, 8182.58154, -7519.66357, 27.21359,   0.00000, 0.00000, -225.00002);
	CreateDynamicObject(9910, 8188.66504, -7538.39795, 47.74644,   0.00000, 0.00000, -225.00002);
	CreateDynamicObject(9910, 8094.52393, -7495.31982, 25.78859,   0.00000, 0.00000, -315.00006);
	CreateDynamicObject(9917, 8215.37402, -7585.08643, 34.32093,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9917, 8081.14697, -7440.34424, 30.99039,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(18450, 8134.48389, -7523.63770, 19.93480,   0.00000, 0.00000, -179.99997);
	CreateDynamicObject(18450, 8060.39258, -7523.63232, -0.59019,   0.00000, 30.93972, -179.99997);
	CreateDynamicObject(8229, 8096.59375, -7534.57568, 16.94285,   0.00000, 0.00000, -180.00002);
	CreateDynamicObject(8229, 8108.25488, -7534.63477, 16.84285,   0.00000, 0.00000, -180.00002);
	CreateDynamicObject(8229, 8120.01416, -7534.65332, 16.86785,   0.00000, 0.00000, -180.00002);
	CreateDynamicObject(8229, 8172.48779, -7529.99268, 16.91785,   0.00000, 0.00000, -146.25000);
	CreateDynamicObject(3268, 8155.93701, -7553.31885, 15.28433,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(3268, 8155.91846, -7553.30127, 16.15442,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(3268, 8155.92578, -7553.29443, 17.02787,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(3268, 8155.92236, -7553.31152, 17.61886,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(975, 8167.36377, -7533.67383, 16.04131,   0.00000, 0.00000, 33.75002);
	CreateDynamicObject(975, 8155.01758, -7531.88770, 16.04131,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(975, 8146.13232, -7531.81982, 16.04131,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(975, 8141.76953, -7527.35010, 16.04131,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(8886, 8137.57275, -7544.12207, 17.79440,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(8886, 8137.58887, -7544.11523, 21.22811,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(8886, 8137.59082, -7543.86084, 21.21184,   179.62262, 0.00000, 89.99998);
	CreateDynamicObject(8886, 8112.26953, -7542.10889, 14.34441,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(8886, 8079.29980, -7586.33008, 14.34440,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(10773, 8105.36377, -7594.32227, 14.02387,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(8886, 8137.96680, -7520.91797, 14.34440,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(8886, 8158.07275, -7519.39404, 14.24440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8886, 8144.48389, -7548.29395, 17.79440,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(8886, 8166.40674, -7548.23535, 17.56940,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(8886, 8166.39990, -7553.76074, 17.59440,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(3268, 8155.93018, -7566.93262, 14.36662,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(8886, 8154.67920, -7556.83936, 14.26940,   0.00000, 0.00000, -269.99994);
	CreateDynamicObject(8886, 8155.95557, -7574.64160, 14.19440,   0.00000, 0.00000, -359.99997);
	CreateDynamicObject(8886, 8169.37842, -7570.28857, 14.19440,   0.00000, 0.00000, -269.99994);
	CreateDynamicObject(8886, 8142.33887, -7570.32471, 14.06940,   0.00000, 0.00000, -269.99994);
	CreateDynamicObject(8886, 8145.82861, -7581.98047, 17.54440,   0.00000, 0.00000, -359.99997);
	CreateDynamicObject(3268, 8155.93213, -7575.58691, 18.18340,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(8886, 8152.46289, -7582.12988, 14.21941,   0.00000, 0.00000, -359.99997);
	CreateDynamicObject(18260, 8154.32324, -7568.63037, 15.81481,   0.00000, 0.00000, -11.25003);
	CreateDynamicObject(18260, 8162.89551, -7581.72803, 15.81481,   0.00000, 0.00000, -179.99997);
	CreateDynamicObject(18260, 8157.46289, -7550.15869, 15.86481,   0.00000, 0.00000, -449.99997);
	CreateDynamicObject(5428, 8114.52100, -7494.75879, 15.39824,   -0.85944, 0.00000, -539.99988);
	CreateDynamicObject(8229, 8131.81934, -7534.68506, 17.06784,   0.00000, 0.00000, -180.00002);
	CreateDynamicObject(8229, 8143.81348, -7523.75293, 17.01785,   0.00000, 0.00000, -90.00004);
	CreateDynamicObject(5107, 7986.95850, -7524.04150, 21.34902,   0.00000, 0.00000, -179.99997);
	CreateDynamicObject(1492, 8169.92188, -7585.58643, 14.35846,   0.00000, 0.00000, -179.99997);
	CreateDynamicObject(1497, 8142.04199, -7585.52441, 14.35465,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1497, 8142.01172, -7563.33643, 14.35465,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18260, 8146.63477, -7567.67969, 15.93981,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(1497, 8142.00781, -7576.94775, 14.35465,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1437, 8135.71875, -7548.68555, 15.62885,   10.31324, 0.00000, 0.00000);
	CreateDynamicObject(1437, 8135.71680, -7548.73438, 20.07629,   10.31324, 0.00000, 0.00000);
	CreateDynamicObject(1437, 8145.01514, -7585.66992, 15.62885,   9.45380, 0.00000, 0.00000);
	CreateDynamicObject(1437, 8145.00586, -7585.61572, 20.79356,   9.45380, 0.00000, 0.00000);
	CreateDynamicObject(1437, 8172.58594, -7531.13623, 22.07913,   10.31324, 0.00000, 0.00000);
	CreateDynamicObject(1437, 8172.57861, -7531.14551, 28.25908,   10.31324, 0.00000, 0.00000);
	CreateDynamicObject(1437, 8172.46777, -7531.09863, 34.39047,   10.31324, 0.00000, 0.00000);
	CreateDynamicObject(1437, 8082.02832, -7568.90479, 16.55498,   10.31324, 0.00000, -89.99998);
	CreateDynamicObject(1437, 8081.99414, -7568.90918, 22.58348,   10.31324, 0.00000, -89.99998);
	CreateDynamicObject(1437, 8082.00537, -7568.91406, 25.83324,   10.31324, 0.00000, -89.99998);
	CreateDynamicObject(1437, 8077.97754, -7593.53369, 15.62885,   10.31324, 0.00000, -179.99997);
	CreateDynamicObject(1437, 8077.99121, -7593.52295, 21.74604,   10.31324, 0.00000, -179.99997);
	CreateDynamicObject(1437, 8077.99316, -7593.50000, 27.75269,   10.31324, 0.00000, -179.99997);
	CreateDynamicObject(1437, 8077.99023, -7593.45850, 32.17966,   10.31324, 0.00000, -179.99997);
	CreateDynamicObject(1635, 8071.80859, -7593.08936, 19.40563,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(1635, 8072.61182, -7519.09668, 18.12557,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(1635, 8067.36768, -7546.94043, 22.60154,   0.00000, 0.00000, 180.00002);
	CreateDynamicObject(1635, 8125.54248, -7590.24365, 18.56382,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(1635, 8150.25586, -7590.18408, 18.38124,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(1635, 8170.53369, -7536.85400, 20.93207,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1635, 8173.98975, -7524.76025, 24.34968,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1687, 8087.87109, -7585.62891, 38.60769,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1687, 8096.48926, -7589.43408, 38.60769,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1688, 8103.01904, -7585.02002, 38.81908,   0.00000, 0.00000, -269.99994);
	CreateDynamicObject(1688, 8114.15967, -7596.80127, 56.66604,   0.00000, 0.00000, -269.99994);
	CreateDynamicObject(1689, 8104.87305, -7589.12842, 39.00718,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1689, 8095.14209, -7598.22705, 56.85414,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1687, 8083.17236, -7596.31250, 56.45465,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(1687, 8132.16406, -7592.25244, 39.11093,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1687, 8145.69727, -7592.23193, 39.16706,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1687, 8173.56494, -7579.02344, 35.96095,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(1688, 8174.22949, -7588.15430, 36.17234,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1687, 8161.72461, -7562.52148, 26.92328,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(1688, 8162.31934, -7571.24707, 26.91760,   0.00000, 0.00000, -359.99997);
	CreateDynamicObject(1688, 8177.56982, -7527.30762, 41.19732,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1688, 8177.08105, -7516.06982, 41.19732,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(1687, 8175.26465, -7535.66211, 43.27273,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1687, 8174.27246, -7557.85156, 43.27273,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(1689, 8175.43945, -7544.75244, 43.67221,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(1689, 8093.44141, -7492.05273, 39.96041,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1687, 8085.01563, -7491.08838, 39.56092,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1687, 8070.73291, -7596.64941, 33.83205,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1688, 8078.04004, -7492.18604, 19.20200,   0.00000, 0.00000, -179.99997);
	CreateDynamicObject(1635, 8089.43848, -7494.62842, 22.50600,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(1635, 8091.17627, -7541.89551, 20.57246,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(1687, 8090.37109, -7552.17627, 33.17936,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(8661, 8087.17920, -7514.84473, 18.07185,   -89.38136, 0.00000, 0.00000);
	CreateDynamicObject(8661, 8129.15234, -7515.66211, 20.90702,   -89.38136, 0.00000, 0.00000);
	CreateDynamicObject(8661, 8157.16064, -7515.38672, 20.07667,   -89.38136, 0.00000, 0.00000);
	CreateDynamicObject(9910, 8170.84912, -7495.96387, 14.76549,   0.00000, 0.00000, -135.00003);
	CreateDynamicObject(9910, 8137.54297, -7500.13428, 17.75253,   0.00000, 0.00000, -135.00003);
	CreateDynamicObject(7921, 8085.90479, -7533.29688, 13.26363,   0.00000, 0.00000, -180.00002);

	// GUNSHOS TONOMAT
	CreateDynamicObject(1977, 317.1961, -132.4190, 1002.9836,  356.9584, 0.1400, -90.5708,-1,-1,-1,300.0);

	// bug house
	CreateDynamicObject(19303, 442.47998, 509.23032, 1001.63678,   0.00000, 0.00000, 90.00000,-1,-1,-1,300.0);
	CreateDynamicObject(19304, 453.06204, 507.98209, 1001.92603,   0.00000, 0.00000, 90.00000,-1,-1,-1,300.0);
	CreateDynamicObject(19304, 453.11362, 509.63824, 1001.92603,   0.00000, 0.00000, 90.00000,-1,-1,-1,300.0);

	//NG BAZA
    gateng = CreateDynamicObject(19313, 135.2833, 1941.3331, 21.6932, 0.0000, 0.0000, 0.0000,-1,-1,-1,300.0);
    CreateDynamicObject(19312, 191.14, 1870.04, 21.48,0.0000, 0.0000, 0.0000,-1,-1,-1,300.0);

    //Vama by MaWReZ
	VamaGates[0] = CreateDynamicObject(980, 72.22410, -1541.56580, 6.97300,   0.00000, 0.00000, 261.90009);
	VamaGates[1] = CreateDynamicObject(980, 74.23540, -1527.57202, 6.97300,   0.00000, 0.00000, 261.90009);
	VamaGates[2] = CreateDynamicObject(980, 95.23903, -1282.30798, 15.62902,   0.00000, 0.00000, 128.82004);
	VamaGates[3] = CreateDynamicObject(980, 79.06650, -1261.49048, 15.62902,   0.00000, 0.00000, 126.30009);
	VamaGates[4] = CreateDynamicObject(980, 1744.61487, 515.08691, 30.01192,   0.00000, 0.00000, 160.00000);
	VamaGates[5] = CreateDynamicObject(980, 1729.38416, 520.69910, 29.99904,   0.00000, 0.00000, 160.31999);
	VamaGates[6] = CreateDynamicObject(980, -1491.78479, 717.57526, 47.59902,   0.00000, 0.00000, -43.56001);
	VamaGates[7] = CreateDynamicObject(980, -1503.27661, 728.37793, 47.59902,   0.00000, 0.00000, -43.56001);

	//ATM
    //CreateObject(2942, 1158.52246, -1772.66724, 16.23062,   0.00000, 0.00000, 177.78009); //Spawn Civil

     // Hq Bug
    CreateDynamicObject(19357, 968.4691, -53.4128, 1001.8241, 0.0000, 0.0000, 0.0000,-1,-1,-1,300.0);

	//Lspd
	gatelspd = CreateObject(10184, 1592.67676, -1638.05225, 14.95110,   0.00000, 0.00000, -89.70000);

	//Lvpd
	gatelvpd = CreateDynamicObject(971, 2334.8999000, 2444.3999000, 8.3000000, 0.0000000, 0.0000000, 60.0000000,-1,-1,-1,300.0);
	gatelvpd2 = CreateDynamicObject(971, 2294.2000000, 2499.1001000, 5.7000000, 0.0000000, 0.0000000, 272.0000000,-1,-1,-1,300.0);
	CreateDynamicObject(955, 2273.52612, 2429.61206, 10.21940, 0.00000, 0.00000, 0.00000,-1,-1,-1,300.0); //usa
	CreateDynamicObject(1967, 2294.09497, 2494.32983, 3.40540, 0.00000, 0.00000, -4.68000,-1,-1,-1,300.0); //dozatorul
	CreateDynamicObject(19313, 2251.27319, 2498.03394, 5.56540,   0.00000, 0.00000, -90.36000,-1,-1,-1,300.0); //gratii

    //Lspd Object
	CreateDynamicObject(1500,1582.6122, -1637.9562, 12.3776,0.000000,0.000000,0.000000,-1,-1,-1,300.0);
    CreateDynamicObject(983, 1545.0706787109, -1635.6511230469, 13.237774848938, 0, 0, 0,-1,-1,-1,300.0);
    CreateDynamicObject(983, 1544.4979248047, -1620.7434082031, 13.238116264343, 0, 0, 0,-1,-1,-1,300.0);
    lspdbar = CreateDynamicObject(968, 1544.7007, -1630.7527, 13.2983, 0.0000, 90.0200, 90.0000,-1,-1,-1,300.0);

    //Lvpd Object
    lvpdbar = CreateDynamicObject(968, 2238.22021, 2450.44312, 10.58781, 0.0000, 90.0200, 90.0000,-1,-1,-1,300.0);

	//Garduri Fish
	/*CreateDynamicObject(970, 382.19919, -2042.00671, 7.32180,   0.00000, 0.00000, 0.00000,-1,-1,-1,500.0);
	CreateDynamicObject(970, 378.70398, -2045.08789, 7.32180,   0.00000, 0.00000, -91.98001,-1,-1,-1,500.0);
	CreateDynamicObject(970, 378.51715, -2050.44434, 7.32180,   0.00000, 0.00000, -92.76000,-1,-1,-1,500.0);
	CreateDynamicObject(970, 352.48499, -2050.70313, 7.29520, 0.00000, 0.00000, 0.00000,-1,-1,-1,500.0);*/
	
	//FBI DOZATOR
    CreateObject(955, 650.36047, -609.29718, 15.69630,   0.00000, 0.00000, 172.56000); //dozator
	return 1;
}

stock LoadTextdraws()
{
    Date = TextDrawCreate(549.599975, 11.946655, "--");
	TextDrawLetterSize(Date, 0.317999, 1.450666);
	TextDrawAlignment(Date, 1);
	TextDrawColor(Date, -1);
	TextDrawSetShadow(Date, 0);
	TextDrawSetOutline(Date, 1);
	TextDrawBackgroundColor(Date, 255);
	TextDrawFont(Date, 3);
	TextDrawSetProportional(Date, 1);

    Time = TextDrawCreate(549.599975, 23.893365, "--");
	TextDrawLetterSize(Time, 0.634799, 2.406399);
	TextDrawAlignment(Time, 1);
	TextDrawColor(Time, -1);
	TextDrawSetShadow(Time, 0);
	TextDrawSetOutline(Time, 1);
	TextDrawBackgroundColor(Time, 255);
	TextDrawFont(Time, 3);
	TextDrawSetProportional(Time, 1);

	Logosv1 = TextDrawCreate(614.500000, 427.562500, "New Land~W~");
	TextDrawLetterSize(Logosv1, 0.468499, 1.639374);
	TextDrawAlignment(Logosv1, 3);
	TextDrawColor(Logosv1, 423728895);
	TextDrawSetShadow(Logosv1, 0);
	TextDrawSetOutline(Logosv1, 0);
	TextDrawBackgroundColor(Logosv1, 255);
	TextDrawFont(Logosv1, 1);
	TextDrawSetProportional(Logosv1, 1);
	TextDrawSetShadow(Logosv1, 0);

	Logosv2 = TextDrawCreate(630.299926, 440.350006, "! One For All , All For One !");
	TextDrawLetterSize(Logosv2, 0.221000, 0.606873);
	TextDrawAlignment(Logosv2, 3);
	TextDrawColor(Logosv2, -1);
	TextDrawSetShadow(Logosv2, 0);
	TextDrawSetOutline(Logosv2, 0);
	TextDrawBackgroundColor(Logosv2, 255);
	TextDrawFont(Logosv2, 1);
	TextDrawSetProportional(Logosv2, 1);
	TextDrawSetShadow(Logosv2, 0);

	return 1;
}

public OnLoadAllCars()
{
    // TOW CAR
	towcar[1] = AddStaticVehicleEx(525,901.3007, -1206.4827, 16.8443, -180.6000,1,1,300);
	towcar[2] = AddStaticVehicleEx(525,867.2260, -1207.3051, 16.8443, -179.9400,1,1,300);
	towcar[3] = AddStaticVehicleEx(525,831.0751, -1207.0022, 16.8443, -180.6000,1,1,300);
	towcar[4] = AddStaticVehicleEx(525,865.9183, -1245.2936, 14.9243, -89.1600,1,1,300);
	towcar[5] = AddStaticVehicleEx(525,865.2650, -1255.1388, 14.9243, -89.1600,1,1,300);
	towo1 = CreateObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    towo2 = CreateObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(towo1, towcar[1], -0.600000,-0.485000,1.450000,0.000000,0.000000,0.000000);
    AttachObjectToVehicle(towo2, towcar[1], 0.600000,-0.485000,1.450000,0.000000,0.000000,0.000000);
    towo1b = CreateObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    towo2b = CreateObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(towo1b, towcar[2], -0.600000,-0.485000,1.450000,0.000000,0.000000,0.000000);
    AttachObjectToVehicle(towo2b, towcar[2], 0.600000,-0.485000,1.450000,0.000000,0.000000,0.000000);
    towo1c = CreateObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    towo2c = CreateObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(towo1c, towcar[3], -0.600000,-0.485000,1.450000,0.000000,0.000000,0.000000);
    AttachObjectToVehicle(towo2c, towcar[3], 0.600000,-0.485000,1.450000,0.000000,0.000000,0.000000);
    towo1d = CreateObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    towo2d = CreateObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(towo1d, towcar[4], -0.600000,-0.485000,1.450000,0.000000,0.000000,0.000000);
    AttachObjectToVehicle(towo2d, towcar[4], 0.600000,-0.485000,1.450000,0.000000,0.000000,0.000000);
    towo1e = CreateObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    towo2e = CreateObject(19294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(towo1e, towcar[5], -0.600000,-0.485000,1.450000,0.000000,0.000000,0.000000);
    AttachObjectToVehicle(towo2e, towcar[5], 0.600000,-0.485000,1.450000,0.000000,0.000000,0.000000);

    // PARAMEDIC

    ambcars[1] = AddStaticVehicleEx(407, 1622.3907, 1818.8561, 11.0146, 2.1000, 1, 3, 100);
	ambcars[2] = AddStaticVehicleEx(407, 1626.5786, 1819.0356, 11.0146, 4.2600, 1, 3, 100);
	ambcars[3] = AddStaticVehicleEx(416, 1642.0754, 1852.6729, 10.7805, -178.2600, 1, 3, 100);
	ambcars[4] = AddStaticVehicleEx(599, 1616.6969, 1832.2190, 10.9538, -179.4600, 1, 3, 100);
	ambcars[5] = AddStaticVehicleEx(416, 1613.6797, 1849.1584, 10.9605, -178.2600, 1, 3, 100);
	ambcars[6] = AddStaticVehicleEx(416, 1609.5166, 1849.3148, 10.9605, -178.2600, 1, 3, 100);
	ambcars[7] = AddStaticVehicleEx(416, 1179.00000000,-1339.03942871,13.87588120,268.00000000,1,3,900); // LS Ambulance
	ambcars[8] = AddStaticVehicleEx(416, 1179.00000000,-1308.55395508,13.87588120,267.99499512, 1, 3, 100); // LS Ambulance
	ambcars[9] = AddStaticVehicleEx(416, 1596.8003, 1849.4521, 10.9605, -178.2600, 1, 3, 100);
	ambcars[10] = AddStaticVehicleEx(416, 1592.6040, 1849.5396, 10.9605, -178.2600, 1, 3, 100);
	// JOB
	AddStaticVehicle(573,567.7736,1214.2710,12.4630,208.9064,-1,-1); // dumper 1 job
	AddStaticVehicle(573,573.5676,1218.1492,12.4224,211.1236,-1,-1); // dumper 2 job
	AddStaticVehicle(573,577.8958,1220.6921,12.3616,208.7676,-1,-1); // dumper 3 job
	AddStaticVehicle(573,582.6492,1223.7257,12.3636,211.0544,-1,-1); // dumper 4 job
	AddStaticVehicle(573,588.8985,1227.3594,12.3691,209.3556,-1,-1); // dumper 5 job
	AddStaticVehicle(573,591.5888,1228.9110,12.3693,211.4871,-1,-1); // dumper 6 job


	// NR
	news[1] = AddStaticVehicleEx(582,-345.8736,1515.5737,75.4176,0.3341,1,5,900);
	news[2] = AddStaticVehicleEx(582,-339.8129,1515.6082,75.3964,0.7024,1,5,900);
	news[3] = AddStaticVehicleEx(582,-333.3973,1515.6085,75.4154,0.7043,1,5,900);
	news[4] = AddStaticVehicleEx(582,-327.0107,1515.6385,75.4137,0.4363,1,5,900);
	news[5] = AddStaticVehicleEx(582,-320.8597,1515.6765,75.4160,0.9123,1,5,900);
	news[6] = AddStaticVehicleEx(582,-314.6850,1515.7216,75.4128,359.8183,1,5,900);
	news[7] = AddStaticVehicleEx(582,-265.4042,1542.8674,75.4394,134.0376,1,5,900);
	news[8] = AddStaticVehicleEx(582,-270.1957,1547.7979,75.4195,134.8546,1,5,900);
	news[9] = AddStaticVehicleEx(582,-275.2467,1552.7721,75.4172,133.7793,1,5,900);
	news[10] = AddStaticVehicleEx(582,-280.2346,1557.8284,75.4129,134.9141,1,5,900);
	news[11] = AddStaticVehicleEx(582,-285.2584,1562.8218,75.4174,134.6001,1,5,900);
	news[12] = AddStaticVehicleEx(582,-290.1928,1567.6609,75.4182,134.5492,1,5,900);
	news[13] = AddStaticVehicleEx(582,-295.0458,1572.6067,75.4169,134.4601,1,5,900);
	news[14] = AddStaticVehicleEx(582,-299.8424,1577.5095,75.4141,135.1747,1,5,900);
	news[15] = AddStaticVehicleEx(582,-304.7933,1582.5167,75.4121,134.7588,1,5,900);
	news[16] = AddStaticVehicleEx(488,-295.2464,1538.2325,75.7408,139.0523,1,5,900);
	news[17] = AddStaticVehicleEx(488,-355.0288,1523.2968,75.7393,264.6664,1,5,900);

	// TAXI CAR
	taxic[1] = AddStaticVehicleEx(438, 1777.8962, -1928.7753, 13.2539, -89.2200, 1, 1, 900);
	taxic[2] = AddStaticVehicleEx(438, 1777.9846, -1924.8000, 13.2539, -89.2200, 1, 1, 900);
	taxic[3] = AddStaticVehicleEx(438, 1777.9037, -1920.9972, 13.2539, -89.2200, 1, 1, 900);
	taxic[4] = AddStaticVehicleEx(438, 1777.9978, -1917.2262, 13.2539, -89.2200, 1, 1, 900);
	taxic[5] = AddStaticVehicleEx(438, 1777.9723, -1913.4618, 13.2539, -89.2200, 1, 1, 900);
	taxic[6] = AddStaticVehicleEx(560, 1803.1727, -1932.4276, 13.0398, -1.2600, 1, 1, 900);
	taxic[7] = AddStaticVehicleEx(560, 1799.4490, -1932.5117, 13.0398, -1.2600, 1, 1, 900);
	taxic[8] = AddStaticVehicleEx(426, 1795.7461, -1932.5288, 13.0398, -1.2600, 1, 1, 900);
	taxic[9] = AddStaticVehicleEx(426, 1792.0023, -1932.5956, 13.0398, -1.2600, 1, 1, 900);
	taxic[10] = AddStaticVehicleEx(426, 1788.0906, -1932.5337, 13.0398, -1.2600, 1, 1, 900);
	for(new y = 6; y <= 10;y++)
	{
		new taxiobj = CreateObject(19308, 0.00000, 0.00000, 0.00000,0.00000, 0.00000, 0.00000);
		AttachObjectToVehicle(taxiobj, taxic[y], 0.000000, -0.249999, 0.949999, 0.000000, 0.000001, 90.449951); //Object taxi
	}

	// BUS
    bus[1] = AddStaticVehicleEx(431,1650.1229,-2259.2463,13.5470,90.3719,-1,-1,300);
    bus[2] = AddStaticVehicleEx(431,1635.9896,-2259.3188,13.5358,88.9193,-1,-1,300);
    bus[3] = AddStaticVehicleEx(431,1622.1984,-2259.0908,13.5464,88.9671,-1,-1,300);
    bus[4] = AddStaticVehicleEx(431,1607.0907,-2258.9580,13.5663,89.2480,-1,-1,300);
    bus[5] = AddStaticVehicleEx(431,1593.3704,-2258.8799,13.5860,89.0953,-1,-1,300);
    bus[6] = AddStaticVehicleEx(431,1633.5763,-2248.2219,13.5406,268.2228,-1,-1,300);
    bus[7] = AddStaticVehicleEx(431,1593.8784,-2248.1543,13.5825,269.2748,-1,-1,300);
    bus[8] = AddStaticVehicleEx(431,1577.4076,-2215.0125,13.6680,358.6657,-1,-1,300);
    bus[9] = AddStaticVehicleEx(431,1584.6625,-2215.5178,13.6981,357.9202,-1,-1,300);
    bus[10] = AddStaticVehicleEx(431,1596.5707,-2158.0359,13.6880,179.3022,-1,-1,300);
    bus[11] = AddStaticVehicleEx(431,1590.8229,-2157.8784,13.6881,179.4117,-1,-1,300);
    bus[12] = AddStaticVehicleEx(431,1602.0060,-2158.1663,13.6880,180.0125,-1,-1,300);
    bus[13] = AddStaticVehicleEx(431,1607.7881,-2158.3040,13.6880,178.7068,-1,-1,300);
    bus[14] = AddStaticVehicleEx(431,1613.4357,-2158.4617,13.6883,178.5858,-1,-1,300);
    bus[15] = AddStaticVehicleEx(431,1618.9712,-2158.6409,13.6880,177.4767,-1,-1,300);
    bus[16] = AddStaticVehicleEx(431,1624.0460,-2158.9631,13.6882,177.5360,-1,-1,300);

    // PIZZA SCOOTER
	pizza[1] = AddStaticVehicleEx(448,2121.6047, -1785.0217, 12.8712, 0.0000,-1,-1,300);
	pizza[2] = AddStaticVehicleEx(448,2118.7844, -1785.0411, 12.8712, 0.0000,-1,-1,300);
	pizza[3] = AddStaticVehicleEx(448,2115.9109, -1785.0051, 12.8712, 0.0000,-1,-1,300);
	pizza[4] = AddStaticVehicleEx(448,2112.5642, -1784.9452, 12.8712, 0.0000,-1,-1,300);
	pizza[5] = AddStaticVehicleEx(448,2109.4675, -1784.8478, 12.8712, 0.0000,-1,-1,300);
	pizza[6] = AddStaticVehicleEx(448,2106.0376, -1784.9371, 12.8712, 0.0000,-1,-1,300);
	pizza[7] = AddStaticVehicleEx(448,2102.1960, -1784.8618, 12.8712, 0.0000,-1,-1,300);
	pizza[8] = AddStaticVehicleEx(448,2122.4009, -1780.5249, 12.8712, 90.3000,-1,-1,300);
	pizza[9] = AddStaticVehicleEx(448,2092.4058, -1812.4491, 12.8712, 90.3000,-1,-1,300);
	pizza[10] = AddStaticVehicleEx(448,2092.4268, -1814.1829, 12.8712, 90.3000,-1,-1,300);
	pizza[11] = AddStaticVehicleEx(448,2092.3889, -1815.8123, 12.8712, 90.3000,-1,-1,300);
	pizza[12] = AddStaticVehicleEx(448,2092.4170, -1817.3027, 12.8712, 90.3000,-1,-1,300);
	pizza[13] = AddStaticVehicleEx(448,2092.4138, -1819.1460, 12.8712, 90.3000,-1,-1,300);
	pizza[14] = AddStaticVehicleEx(448,2092.4617, -1820.7538, 12.8712, 90.3000,-1,-1,300);

	// FARMER
	farm[1] = AddStaticVehicleEx(531,-387.1538,-1453.2056,25.6913,181.7959,-1,-1,300);
	farm[2] = AddStaticVehicleEx(531,-390.8254,-1453.0826,25.6916,180.5099,-1,-1,300);
	farm[3] = AddStaticVehicleEx(531,-374.0725,-1425.5186,25.6929,91.8350,-1,-1,300);
	farm[5] = AddStaticVehicleEx(531,-374.0028,-1422.2795,25.6906,90.3433,-1,-1,300);
	farm[6] = AddStaticVehicleEx(531,-374.0585,-1419.3248,25.6898,92.3791,-1,-1,300);
	farm[7] = AddStaticVehicleEx(531,-374.1625,-1417.1273,25.6926,92.3748,-1,-1,300);
	farm[8] = AddStaticVehicleEx(531,-382.3956,-1413.8763,25.6903,269.2228,-1,-1,300);
	farm[9] = AddStaticVehicleEx(531,-382.1954,-1417.5774,25.6906,267.3361,-1,-1,300);
	farm[10] = AddStaticVehicleEx(531,-363.6213,-1437.9761,25.6929,173.9550,-1,-1,300);
	farm[11] = AddStaticVehicleEx(531,-366.1567,-1437.9288,25.6901,178.3990,-1,-1,300);
	farm[12] = AddStaticVehicleEx(531,-369.0606,-1437.7853,25.6897,179.9403,-1,-1,300);
	farm[13] = AddStaticVehicleEx(531,-372.1531,-1437.8651,25.6910,179.5404,-1,-1,300);

	// TRUCK
	truck[1] = AddStaticVehicleEx(515,-72.8603,-1109.0897,2.0963,160.0689,-1,-1,300);
	truck[2] = AddStaticVehicleEx(515,-77.6478,-1107.6663,2.1010,162.3327,-1,-1,300);
	truck[3] = AddStaticVehicleEx(515,-68.3563,-1110.6467,2.0967,159.2912,-1,-1,300);
	truck[4] = AddStaticVehicleEx(515,-64.2460,-1112.1866,2.0938,159.8777,-1,-1,300);
	truck[5] = AddStaticVehicleEx(515,-59.7920,-1113.6851,2.1026,160.2900,-1,-1,300);
	truck[6] = AddStaticVehicleEx(515,-55.5603,-1115.3163,2.0942,157.6068,-1,-1,300);
	truck[7] = AddStaticVehicleEx(515,-51.5216,-1116.9735,2.0941,158.3461,-1,-1,300);
	truck[8] = AddStaticVehicleEx(515,-47.4731,-1118.4883,2.0954,158.2615,-1,-1,300);
	truck[9] = AddStaticVehicleEx(515,-43.2673,-1120.0728,2.0987,159.5139,-1,-1,300);
	truck[10] = AddStaticVehicleEx(515,-38.9120,-1121.6001,2.1011,158.6831,-1,-1,300);
	truck[11] = AddStaticVehicleEx(515,-34.7402,-1123.2100,2.0965,158.0090,-1,-1,300);
	truck[12] = AddStaticVehicleEx(515,-30.4689,-1124.9196,2.0988,158.5070,-1,-1,300);
	truck[13] = AddStaticVehicleEx(515,-64.8522,-1142.4553,2.1026,337.1617,-1,-1,300);
	truck[14] = AddStaticVehicleEx(515,-60.4594,-1144.4293,2.0990,337.4590,-1,-1,300);
	truck[15] = AddStaticVehicleEx(515,-55.9892,-1146.2482,2.1009,337.4587,-1,-1,300);
	truck[16] = AddStaticVehicleEx(515,-51.4604,-1148.1526,2.1010,337.6587,-1,-1,300);
	truck[17] = AddStaticVehicleEx(515,-46.7572,-1150.0371,2.0950,338.6752,-1,-1,300);
	truck[18] = AddStaticVehicleEx(515,-41.8993,-1151.7046,2.0943,339.3744,-1,-1,300);

	// RENT LOS SANTOS
	rentls[1] = AddStaticVehicleEx(565,557.6970,-1291.6086,16.8097,356.1449,-1,-1,900);
	rentls[2] = AddStaticVehicleEx(426,530.0093,-1278.4558,17.0165,307.7176,-1,-1,900);
	rentls[3] = AddStaticVehicleEx(565,537.4207,-1272.8118,16.8736,301.5176,-1,-1,900);
	rentls[4] = AddStaticVehicleEx(522,541.5830,-1268.1183,16.8337,185.9296,-1,-1,900);

	// RENT LAS VENTURAS
	rentlv[1] = AddStaticVehicleEx(568,2103.9756,1398.7379,10.6144,180.3386,-1,-1,900);
	rentlv[2] = AddStaticVehicleEx(568,2103.9231,1408.5211,10.6904,359.0508,-1,-1,900);
	rentlv[3] = AddStaticVehicleEx(558,2123.1621,1409.4192,10.3810,0.9785,-1,-1,900);
	rentlv[4] = AddStaticVehicleEx(555,2123.4253,1397.8079,10.5493,174.9472,-1,-1,900);
	rentlv[5] = AddStaticVehicleEx(526,2129.5029,1398.4174,10.5286,180.9738,-1,-1,900);
	rentlv[6] = AddStaticVehicleEx(533,2129.4924,1409.0605,10.5614,359.9803,-1,-1,900);
	rentlv[7] = AddStaticVehicleEx(506,2135.8508,1408.3748,10.4901,359.9999,-1,-1,900);
	rentlv[8] = AddStaticVehicleEx(504,2135.8455,1397.8976,10.6780,182.6301,-1,-1,900);
	rentlv[9] = AddStaticVehicleEx(496,2142.3674,1398.4742,10.5698,180.5331,-1,-1,900);
	rentlv[10] = AddStaticVehicleEx(500,2142.2983,1409.0153,10.9588,0.5355,-1,-1,900);
	rentlv[11] = AddStaticVehicleEx(603,2148.7930,1408.7021,10.5702,1.0529,-1,-1,900);
	rentlv[12] = AddStaticVehicleEx(602,2148.7444,1397.6796,10.5289,180.5844,-1,-1,900);
	rentlv[13] = AddStaticVehicleEx(469,2168.8721,1411.4260,10.8571,2.5797,-1,-1,900);
	rentlv[14] = AddStaticVehicleEx(522,2229.6904,1416.4528,10.6188,271.9706,-1,-1,900);
	rentlv[15] = AddStaticVehicleEx(522,2229.5618,1414.4696,10.6203,274.8182,-1,-1,900);
	rentlv[16] = AddStaticVehicleEx(522,2229.6228,1410.0747,10.6145,270.0645,-1,-1,900);
	rentlv[17] = AddStaticVehicleEx(522,2229.7847,1408.1317,10.6339,272.8406,-1,-1,900);
	rentlv[18] = AddStaticVehicleEx(471,2229.1997,1399.9491,10.4780,272.5312,-1,-1,900);
	rentlv[19] = AddStaticVehicleEx(471,2229.3074,1396.6508,10.4830,269.4410,-1,-1,900);

	// MASINI LOS SANTOS
	masinils[1] = AddStaticVehicleEx(509,1783.2937,-1865.9631,13.0817,359.8124,-1,-1,900);
	masinils[2] = AddStaticVehicleEx(509,1784.8997,-1865.8044,13.0765,1.7586,-1,-1,900);
	masinils[3] = AddStaticVehicleEx(510,1780.1306,-1865.9545,13.1799,1.8864,-1,-1,900);
	masinils[4] = AddStaticVehicleEx(510,1781.5242,-1865.8881,13.1744,3.2173,-1,-1,900);
	masinils[5] = AddStaticVehicleEx(509,1743.7513,-1862.5304,13.0886,1.5418,-1,-1,900);
	masinils[6] = AddStaticVehicleEx(509,1745.2994,-1862.5126,13.0868,0.2961,-1,-1,900);
	masinils[7] = AddStaticVehicleEx(510,1741.0520,-1862.5813,13.1841,1.3846,-1,-1,900);
	masinils[8] = AddStaticVehicleEx(510,1742.3751,-1862.5203,13.1723,3.4108,-1,-1,900);
	masinils[9] = AddStaticVehicleEx(509,1844.3652,-1860.6521,12.8948,89.6512,-1,-1,900);
	masinils[10] = AddStaticVehicleEx(462,1836.5415,-1853.2559,12.9819,181.4726,-1,-1,900);
	masinils[11] = AddStaticVehicleEx(462,1839.7932,-1853.2306,12.9849,181.8733,-1,-1,900);
	masinils[12] = AddStaticVehicleEx(462,1834.8175,-1870.7203,12.9870,358.9500,-1,-1,900);
	masinils[13] = AddStaticVehicleEx(462,1837.8599,-1870.9141,12.9858,1.0992,-1,-1,900);
	masinils[14] = AddStaticVehicleEx(462,1844.5757,-1871.3917,12.9879,359.4228,-1,-1,900);
	masinils[15] = AddStaticVehicleEx(543,1841.2858,-1871.0758,13.2091,359.5413,-1,-1,900);
	masinils[16] = AddStaticVehicleEx(462,1865.9194,-1865.7461,13.1635,90.6615,-1,-1,900);
	masinils[17] = AddStaticVehicleEx(462,1865.9814,-1863.9229,13.1739,88.5363,-1,-1,900);
	masinils[18] = AddStaticVehicleEx(462,1865.8817,-1867.2446,13.1513,92.4187,-1,-1,900);
	masinils[19] = AddStaticVehicleEx(462,1865.8787,-1868.8300,13.1392,91.9116,-1,-1,900);
	masinils[20] = AddStaticVehicleEx(462,1865.9330,-1870.2122,13.1271,96.1952,-1,-1,900);
	masinils[21] = AddStaticVehicleEx(462,1865.9503,-1871.8007,13.1156,91.7427,-1,-1,900);
	masinils[22] = AddStaticVehicleEx(554,2239.4929,-1630.6929,15.7426,337.0701,-1,-1,900);
	masinils[23] = AddStaticVehicleEx(401,2353.8459,-1753.9047,13.3007,271.9364,-1,-1,900);
	masinils[24] = AddStaticVehicleEx(468,2450.4280,-1795.9473,14.0615,352.5495,-1,-1,900);
	masinils[25] = AddStaticVehicleEx(462,2468.8054,-1755.4731,13.1419,270.6110,-1,-1,900);
	masinils[26] = AddStaticVehicleEx(418,2493.8740,-1755.0149,13.6076,0.2794,-1,-1,900);
	masinils[27] = AddStaticVehicleEx(565,2659.7168,-1841.2327,10.5634,207.2517,-1,-1,900);
	masinils[28] = AddStaticVehicleEx(481,2759.8044,-1875.5656,9.1931,178.6795,-1,-1,900);
	masinils[29] = AddStaticVehicleEx(500,2767.9380,-1875.5514,9.8829,2.9916,-1,-1,900);
	masinils[30] = AddStaticVehicleEx(489,2822.9365,-1723.4464,10.0821,79.3965,-1,-1,900);
	masinils[31] = AddStaticVehicleEx(581,2795.4543,-1549.5430,10.5166,266.9930,-1,-1,900);
	masinils[32] = AddStaticVehicleEx(542,2814.6096,-1458.0116,20.0059,185.7919,-1,-1,900);
	masinils[33] = AddStaticVehicleEx(468,2492.8010,-1298.0760,32.3194,266.7164,-1,-1,900);
	masinils[34] = AddStaticVehicleEx(509,2460.6155,-1277.1774,23.4640,358.4498,-1,-1,900);
	masinils[35] = AddStaticVehicleEx(474,2429.8032,-1223.0559,24.9496,177.4104,-1,-1,900);
	masinils[36] = AddStaticVehicleEx(566,2340.3086,-1316.7501,23.7525,179.7874,-1,-1,900);
	masinils[37] = AddStaticVehicleEx(542,2358.1445,-1360.4233,23.6566,92.5309,-1,-1,900);
	masinils[38] = AddStaticVehicleEx(510,2325.3838,-1508.6649,25.2981,92.4031,-1,-1,900);
	masinils[39] = AddStaticVehicleEx(510,2304.5283,-1521.7415,25.4735,182.3902,-1,-1,900);
	masinils[40] = AddStaticVehicleEx(510,2308.2480,-1545.9022,25.0090,239.4057,-1,-1,900);
	masinils[41] = AddStaticVehicleEx(521,2405.4219,-1535.6381,23.5651,1.1783,-1,-1,900);
	masinils[42] = AddStaticVehicleEx(602,2159.1257,-1805.2057,13.2685,89.9498,-1,-1,900);
	masinils[43] = AddStaticVehicleEx(509,2113.0210,-1728.2810,13.0466,246.8558,-1,-1,900);
	masinils[44] = AddStaticVehicleEx(478,2052.4978,-1904.2292,13.4583,359.6707,-1,-1,900);
	masinils[45] = AddStaticVehicleEx(475,1912.9283,-1873.7346,13.3916,1.2560,-1,-1,900);
	masinils[46] = AddStaticVehicleEx(481,1938.4325,-1985.7521,13.0371,4.8674,-1,-1,900);
	masinils[47] = AddStaticVehicleEx(491,1980.6752,-1995.6832,13.2307,1.0062,-1,-1,900);
	masinils[48] = AddStaticVehicleEx(555,1947.7363,-2114.0159,13.2772,87.1935,-1,-1,900);
	masinils[49] = AddStaticVehicleEx(558,1947.5328,-2123.6509,13.1192,88.5185,-1,-1,900);
	masinils[50] = AddStaticVehicleEx(534,1793.3336,-2149.0208,13.2714,180.3206,-1,-1,900);
	masinils[51] = AddStaticVehicleEx(535,1744.5975,-2136.2654,13.3383,179.2873,-1,-1,900);
	masinils[52] = AddStaticVehicleEx(482,1705.0177,-2129.6885,13.5570,178.1410,-1,-1,900);
	masinils[53] = AddStaticVehicleEx(536,1698.9929,-2093.8384,13.1678,358.9626,-1,-1,900);
	masinils[54] = AddStaticVehicleEx(567,1667.9752,-2113.2800,13.3059,88.6971,-1,-1,900);
	masinils[55] = AddStaticVehicleEx(578,1669.2623,-2165.0239,14.1183,87.0461,-1,-1,900);
	masinils[56] = AddStaticVehicleEx(438,1518.7095,-2211.8906,13.6059,179.4284,-1,-1,900);
	masinils[57] = AddStaticVehicleEx(571,2285.4175,-2354.3469,12.7830,226.2505,-1,-1,900);
	masinils[58] = AddStaticVehicleEx(571,2289.0994,-2342.8228,12.8355,222.1870,-1,-1,900);
	masinils[59] = AddStaticVehicleEx(571,2292.5251,-2346.6611,12.8357,225.4696,-1,-1,900);
	masinils[60] = AddStaticVehicleEx(482,2528.1995,-2010.3619,13.5607,267.4615,-1,-1,900);
	masinils[61] = AddStaticVehicleEx(485,1953.8016,-2193.5457,13.1821,89.0116,-1,-1,900);
	masinils[62] = AddStaticVehicleEx(485,1940.8094,-2235.0728,13.1838,182.2761,-1,-1,900);
	masinils[63] = AddStaticVehicleEx(577,1932.8082,-2377.8477,13.4522,175.8586,-1,-1,900);
	masinils[64] = AddStaticVehicleEx(608,1936.4181,-2397.0518,14.0552,81.9305,-1,-1,900);
	masinils[65] = AddStaticVehicleEx(487,1973.0703,-2647.9475,13.7008,352.3174,-1,-1,900);
	masinils[66] = AddStaticVehicleEx(487,1955.4088,-2646.5007,13.6973,1.5214,-1,-1,900);
	masinils[67] = AddStaticVehicleEx(485,1963.7496,-2610.6018,13.1874,88.4399,-1,-1,900);
	masinils[68] = AddStaticVehicleEx(519,1890.3800,-2627.7698,14.4122,358.4205,-1,-1,900);
	masinils[69] = AddStaticVehicleEx(513,1822.2369,-2632.9529,14.0722,351.2814,-1,-1,900);
	masinils[70] = AddStaticVehicleEx(511,1684.1399,-2628.0200,14.8523,360.0000,-1,-1,900);
	masinils[71] = AddStaticVehicleEx(593,1615.9426,-2629.7314,13.9430,357.9850,-1,-1,900);
	masinils[72] = AddStaticVehicleEx(485,1652.3783,-2547.6809,13.1878,88.2834,-1,-1,900);
	masinils[73] = AddStaticVehicleEx(485,1655.0608,-2538.2200,13.1842,88.0360,-1,-1,900);
	masinils[74] = AddStaticVehicleEx(445,1837.1483,-1572.0918,13.3503,146.9127,-1,-1,900);
	masinils[75] = AddStaticVehicleEx(440,1362.0275,-1658.9196,13.4710,271.5900,-1,-1,900);
	masinils[76] = AddStaticVehicleEx(405,1339.4064,-1764.7444,13.4371,356.6715,-1,-1,900);
	masinils[77] = AddStaticVehicleEx(585,1281.3726,-1666.8911,13.1509,178.9866,-1,-1,900);
	masinils[78] = AddStaticVehicleEx(533,1226.3990,-1865.3936,13.1604,359.5092,-1,-1,900);
	masinils[79] = AddStaticVehicleEx(510,1863.7623,-1393.2576,13.0425,276.3262,-1,-1,900);
	masinils[80] = AddStaticVehicleEx(510,1863.7145,-1395.0117,13.0560,273.0493,-1,-1,900);
	masinils[81] = AddStaticVehicleEx(510,1869.0691,-1362.8928,18.7195,269.0171,-1,-1,900);
	masinils[82] = AddStaticVehicleEx(510,1943.6213,-1367.7805,18.1189,175.7585,-1,-1,900);
	masinils[83] = AddStaticVehicleEx(510,1909.6902,-1418.1139,15.9386,92.1796,-1,-1,900);
	masinils[84] = AddStaticVehicleEx(434,1785.6775,-1180.6459,23.7673,249.8715,-1,-1,900);
	masinils[85] = AddStaticVehicleEx(401,1555.7024,-1027.5682,23.7466,343.5457,-1,-1,900);
	masinils[86] = AddStaticVehicleEx(436,1331.1296,-1080.3518,24.9877,101.2256,-1,-1,900);
	masinils[87] = AddStaticVehicleEx(605,1278.4874,-939.9588,41.8950,274.1760,-1,-1,900);
	masinils[88] = AddStaticVehicleEx(405,980.1981,-914.9087,41.5209,184.1047,-1,-1,900);
	masinils[89] = AddStaticVehicleEx(400,589.4794,-1353.7014,14.4028,102.7391,-1,-1,900);
	masinils[90] = AddStaticVehicleEx(404,686.6794,-1413.1213,13.2275,91.5149,-1,-1,900);
	masinils[91] = AddStaticVehicleEx(437,599.1953,-1509.4843,15.3270,89.2659,-1,-1,900);
	masinils[92] = AddStaticVehicleEx(496,847.0896,-1503.0759,12.7671,177.1812,-1,-1,900);
	masinils[93] = AddStaticVehicleEx(496,720.9399,-1581.5565,14.0567,91.0754,-1,-1,900);
	masinils[94] = AddStaticVehicleEx(561,852.3123,-1363.9330,13.3108,180.6936,-1,-1,900);
	masinils[95] = AddStaticVehicleEx(404,1015.5672,-1358.8422,13.0208,273.6819,-1,-1,900);
	masinils[96] = AddStaticVehicleEx(509,766.0356,-1747.0859,12.0660,182.1092,-1,-1,900);
	masinils[97] = AddStaticVehicleEx(426,641.8690,-1704.4880,14.3627,348.5843,-1,-1,900);
	masinils[98] = AddStaticVehicleEx(509,539.3067,-1688.6719,18.3465,90.7645,-1,-1,900);
	masinils[99] = AddStaticVehicleEx(586,327.0353,-1473.3304,33.8680,131.2529,-1,-1,900);
	masinils[100] = AddStaticVehicleEx(509,247.4837,-1469.6525,23.2363,36.7312,-1,-1,900);
	masinils[101] = AddStaticVehicleEx(471,458.1586,-1779.6077,4.9527,357.5954,-1,-1,900);
	masinils[102] = AddStaticVehicleEx(457,478.6235,-1825.2671,5.0417,1.5500,-1,-1,900);
	masinils[103] = AddStaticVehicleEx(539,666.5036,-1879.7733,4.8200,272.2809,-1,-1,900);
	masinils[104] = AddStaticVehicleEx(566,334.0756,-1342.6429,14.1753,118.9580,-1,-1,900);
	masinils[105] = AddStaticVehicleEx(400,1185.1710,-925.1627,43.2723,277.7882,-1,-1,900);
	masinils[106] = AddStaticVehicleEx(568,1773.5421,-790.1965,62.9578,115.5337,-1,-1,900);
	masinils[107] = AddStaticVehicleEx(473,719.0027,-1636.4622,-0.1546,180.0970,-1,-1,900);
	masinils[108] = AddStaticVehicleEx(473,718.9659,-1627.7068,-0.1771,178.5294,-1,-1,900);

	// MASINI LAS VENTURAS
	masinilv[1] = AddStaticVehicleEx(412,2294.5266,607.2626,10.5616,181.6389,-1,-1,900);
	masinilv[2] = AddStaticVehicleEx(516,2542.7034,1105.2786,10.6882,89.8527,-1,-1,900);
	masinilv[3] = AddStaticVehicleEx(600,2441.9583,1355.3241,10.4492,270.0162,-1,-1,900);
	masinilv[4] = AddStaticVehicleEx(474,2442.0383,1351.8097,10.6753,269.7997,-1,-1,900);
	masinilv[5] = AddStaticVehicleEx(479,2002.3301,1265.9167,10.6411,269.0797,-1,-1,900);
	masinilv[6] = AddStaticVehicleEx(475,2023.6683,1334.6910,10.2891,268.8487,-1,-1,900);
	masinilv[7] = AddStaticVehicleEx(576,2034.8480,1496.4730,10.3284,182.8958,-1,-1,900);
	masinilv[8] = AddStaticVehicleEx(419,2207.8843,1787.9150,10.5245,359.0755,-1,-1,900);
	masinilv[9] = AddStaticVehicleEx(475,2199.8208,1821.7456,10.5407,178.2771,-1,-1,900);
	masinilv[10] = AddStaticVehicleEx(518,2325.4458,1785.2665,10.5292,88.5952,-1,-1,900);
	masinilv[11] = AddStaticVehicleEx(505,2531.5671,1836.1420,10.9196,90.6484,-1,-1,900);
	masinilv[12] = AddStaticVehicleEx(422,2523.1885,2006.9279,10.8256,359.9110,-1,-1,900);
	masinilv[13] = AddStaticVehicleEx(504,2547.5505,2196.4114,10.5338,178.4619,-1,-1,900);
	masinilv[14] = AddStaticVehicleEx(500,1908.3857,2390.3782,10.9523,268.2330,-1,-1,900);
	masinilv[15] = AddStaticVehicleEx(508,1908.7340,2280.3271,11.2364,90.8790,-1,-1,900);
	masinilv[16] = AddStaticVehicleEx(414,1451.6176,1880.0594,10.9389,92.9936,-1,-1,900);
	masinilv[17] = AddStaticVehicleEx(487,1544.0031,1667.1586,10.9712,91.1780,-1,-1,900);
	masinilv[18] = AddStaticVehicleEx(592,1479.3081,1798.8142,12.0048,180.3739,-1,-1,900);
	masinilv[19] = AddStaticVehicleEx(512,1328.2946,1782.6364,11.0550,276.2125,-1,-1,900);
	masinilv[20] = AddStaticVehicleEx(487,1337.0222,1614.1442,10.9634,272.4750,-1,-1,900);
	masinilv[21] = AddStaticVehicleEx(487,1337.8754,1627.5682,10.9531,264.8815,-1,-1,900);
	masinilv[22] = AddStaticVehicleEx(519,1288.8821,1362.1863,11.7454,268.5226,-1,-1,900);
	masinilv[23] = AddStaticVehicleEx(512,1280.0664,1330.0198,11.0504,264.8200,-1,-1,900);
	masinilv[24] = AddStaticVehicleEx(513,1403.3567,1218.7445,11.3572,7.4674,-1,-1,900);
	masinilv[25] = AddStaticVehicleEx(593,1413.9852,1217.7208,11.2396,5.0484,-1,-1,900);
	masinilv[26] = AddStaticVehicleEx(511,1594.3536,1240.2802,12.1148,3.2613,-1,-1,900);
	masinilv[27] = AddStaticVehicleEx(511,1623.3300,1337.5297,12.1246,91.3682,-1,-1,900);
	masinilv[28] = AddStaticVehicleEx(540,1666.4838,1296.9968,10.7416,179.7498,-1,-1,900);
	masinilv[29] = AddStaticVehicleEx(479,1551.0135,1024.9342,10.5311,90.3137,-1,-1,900);
	masinilv[30] = AddStaticVehicleEx(412,1380.9448,1058.2960,10.7115,270.4498,-1,-1,900);
	masinilv[31] = AddStaticVehicleEx(467,1036.2561,1398.3359,5.4636,358.5266,-1,-1,900);
	masinilv[32] = AddStaticVehicleEx(473,1619.5319,593.0696,-0.3580,179.8772,-1,-1,900);
	masinilv[33] = AddStaticVehicleEx(473,1631.2913,573.0074,-0.3858,87.3583,-1,-1,900);
	masinilv[34] = AddStaticVehicleEx(473,1624.8490,573.0233,-0.2494,90.8698,-1,-1,900);
	masinilv[35] = AddStaticVehicleEx(473,1636.8927,594.0209,-0.2125,180.9997,-1,-1,900);
	masinilv[36] = AddStaticVehicleEx(473,2368.0398,519.7652,-0.3253,89.7492,-1,-1,900);
	masinilv[37] = AddStaticVehicleEx(452,2356.0701,519.5508,-0.3697,92.3875,-1,-1,900);
	masinilv[38] = AddStaticVehicleEx(452,2374.2830,539.1554,-0.4487,183.6588,-1,-1,900);
	masinilv[39] = AddStaticVehicleEx(473,2345.9858,540.7730,-0.1944,179.5087,-1,-1,900);

	// HITMAN CAR
	thea[1] = AddStaticVehicleEx(495,1044.2778,-358.9926,73.8239,92.9276,17,17,900);
	thea[2] = AddStaticVehicleEx(495,1043.9465,-352.5518,73.8239,94.0145,17,17,900);
	thea[3] = AddStaticVehicleEx(468,1043.7915,-345.8123,73.8239,91.3013,17,17,900);
	thea[4] = AddStaticVehicleEx(468,1015.2307,-346.2094,73.8238,266.1345,17,17,900);
	thea[5] = AddStaticVehicleEx(471,1015.4081,-339.5652,73.8238,267.5244,17,17,900);
	thea[6] = AddStaticVehicleEx(471,1015.6899,-331.5628,73.8238,267.2681,17,17,900);
	thea[7] = AddStaticVehicleEx(487,1015.9189,-323.9321,73.8238,269.7325,17,17,900);
	thea[8] = AddStaticVehicleEx(487,1099.0902,-349.0028,73.8203,2.3551,17,17,900);
	thea[9] = AddStaticVehicleEx(560,1096.2920,-308.6715,73.6979,88.1378,17,17,900);
	thea[10] = AddStaticVehicleEx(415,1096.7079,-304.3992,73.7647,89.3157,17,17,900);
	thea[11] = AddStaticVehicleEx(411,1082.1527,-295.0977,73.8244,179.7204,17,17,900);
	thea[12] = AddStaticVehicleEx(411,1069.2429,-295.2384,73.8166,179.8476,17,17,900);
	thea[13] = AddStaticVehicleEx(411,1075.8245,-295.1208,73.8172,180.8675,17,17,900);
	thea[14] = AddStaticVehicleEx(411,1063.8973,-295.1360,73.8166,179.2115,17,17,900);
	thea[15] = AddStaticVehicleEx(522,1085.9768,-294.8000,73.5772,152.3337,17,17,900);
	thea[16] = AddStaticVehicleEx(522,1059.6511,-294.8799,73.5647,199.7866,17,17,900);

	// SCHOOL INSTRUCTOR
	si[1] = AddStaticVehicleEx(522,2409.0469,1681.7623,10.6146,90.3537,137,137,900);
	si[2] = AddStaticVehicleEx(522,2409.0825,1680.2034,10.5967,89.9852,137,137,900);
	si[3] = AddStaticVehicleEx(522,2409.0369,1678.6389,10.6143,90.3697,137,137,900);
	si[4] = AddStaticVehicleEx(522,2409.1223,1677.2565,10.6232,94.1138,137,137,900);
	si[5] = AddStaticVehicleEx(560,2402.0417,1667.6302,10.5566,359.6569,137,137,900);
	si[6] = AddStaticVehicleEx(560,2408.5007,1667.6865,10.5588,359.2312,137,137,900);
	si[7] = AddStaticVehicleEx(445,2395.5488,1667.7886,10.6953,359.5206,137,137,900);
	si[8] = AddStaticVehicleEx(411,2389.2542,1667.7137,10.6953,358.1865,137,137,900);
	si[9] = AddStaticVehicleEx(541,2386.2317,1658.5924,10.6953,179.3917,137,137,900);
	si[10] = AddStaticVehicleEx(547,2398.9675,1658.9366,10.5556,181.0593,137,137,900);
	si[11] = AddStaticVehicleEx(547,2392.6196,1658.9342,10.5565,181.0413,137,137,900);
	si[12] = AddStaticVehicleEx(487,2407.9966,1647.0828,10.9999,179.8186,137,1,900);
	si[13] = AddStaticVehicleEx(487,2401.0283,1647.5598,10.9989,176.9126,137,1,900);


	// GARBAGE
    garbage[1] = AddStaticVehicleEx(408, 2586.3604, 2752.3716, 11.3258, -270.9001, 1,1,300);
    garbage[2] = AddStaticVehicleEx(408, 2586.0588, 2768.4138, 11.3258, -269.4001, 1,1,300);
    garbage[3] = AddStaticVehicleEx(408, 2585.6665, 2780.1948, 11.3258, -268.3199, 1,1,300);
    garbage[4] = AddStaticVehicleEx(408, 2540.9575, 2791.2749, 11.3258, -178.8601, 1,1,300);
    garbage[5] = AddStaticVehicleEx(408, 2549.4739, 2791.2957, 11.3258, -180.1801, 1,1,300);
    garbage[6] = AddStaticVehicleEx(408, 2557.7361, 2791.1021, 11.3258, -178.9200, 1,1,300);
    garbage[7] = AddStaticVehicleEx(408, 2565.9211, 2791.2678, 11.3258, -180.3600, 1,1,300);
    garbage[8] = AddStaticVehicleEx(408, 2574.2212, 2790.9065, 11.3258, -179.0400, 1,1,300);
    garbage[9] = AddStaticVehicleEx(408, 2586.6204, 2743.8894, 11.3258, -270.9001, 1,1,300);
    garbage[10] = AddStaticVehicleEx(408, 2586.3572, 2731.5381, 11.3258, -270.9001, 1,1,300);

	// LVPD Cars
    LVpdcar[1] = AddStaticVehicleEx(598,2296.4753,2428.8464,10.5423,180.2992,79,7,900);
	LVpdcar[2] = AddStaticVehicleEx(598,2282.6416,2429.1765,10.5434,178.1002,79,7,900);
	LVpdcar[3] = AddStaticVehicleEx(523,2274.7607,2424.8008,10.3911,182.5943,79,7,900);
	LVpdcar[4] = AddStaticVehicleEx(523,2272.7112,2424.6758,10.3868,180.8248,79,7,900);
	LVpdcar[5] = AddStaticVehicleEx(523,2276.5781,2424.8667,10.3900,182.6335,79,7,900);
	LVpdcar[6] = AddStaticVehicleEx(598,2282.5022,2477.2290,10.5411,180.0986,79,7,900);
	LVpdcar[7] = AddStaticVehicleEx(598,2273.3823,2477.2761,10.5422,179.9195,79,7,900);
	LVpdcar[8] = AddStaticVehicleEx(598,2255.9744,2477.1863,10.5418,180.0715,79,7,900);
	LVpdcar[9] = AddStaticVehicleEx(599,2282.2554,2442.7581,10.5406,0.4026,79,7,900);
	LVpdcar[10] = AddStaticVehicleEx(599,2273.5378,2442.8154,10.5418,2.4805,79,7,900);
	LVpdcar[11] = AddStaticVehicleEx(598,2255.6563,2443.0259,10.5415,1.8904,79,7,900);
	LVpdcar[12] = AddStaticVehicleEx(598,2315.1396,2460.4126,2.9944,92.6695,79,7,900);
	LVpdcar[13] = AddStaticVehicleEx(598,2314.9729,2465.5859,2.9963,89.8920,79,7,900);
	LVpdcar[14] = AddStaticVehicleEx(599,2315.8379,2485.5735,2.9948,89.0501,79,7,900);
	LVpdcar[15] = AddStaticVehicleEx(599,2315.9233,2490.2949,2.9937,91.2910,79,7,900);
	LVpdcar[16] = AddStaticVehicleEx(427,2313.5798,2495.3081,2.9938,90.6170,79,7,900);
	LVpdcar[17] = AddStaticVehicleEx(427,2313.4670,2500.3618,2.9954,89.8853,79,7,900);
	LVpdcar[18] = AddStaticVehicleEx(598,2281.5029,2475.1082,2.9940,0.2796,79,7,900);
	LVpdcar[19] = AddStaticVehicleEx(598,2285.9463,2475.1255,2.9941,359.6340,79,7,900);
	LVpdcar[20] = AddStaticVehicleEx(598,2277.0945,2475.0522,2.9938,359.5937,79,7,900);
	LVpdcar[21] = AddStaticVehicleEx(598,2272.4824,2475.0195,2.9943,359.5405,79,7,900);
	LVpdcar[22] = AddStaticVehicleEx(598,2268.0525,2475.0859,2.9938,358.3742,79,7,900);
	LVpdcar[23] = AddStaticVehicleEx(598,2263.7883,2475.2202,2.9940,358.0775,79,7,900);
	LVpdcar[24] = AddStaticVehicleEx(528,2264.0022,2431.1414,2.9948,359.8471,79,7,900);
	LVpdcar[25] = AddStaticVehicleEx(528,2268.1904,2431.2593,2.9947,0.4350,79,7,900);
	LVpdcar[26] = AddStaticVehicleEx(490,2250.9780,2431.2661,2.9947,0.5568,79,7,900);
	LVpdcar[27] = AddStaticVehicleEx(490,2255.4153,2431.4417,2.9961,0.7626,79,7,900);
	LVpdcar[28] = AddStaticVehicleEx(490,2246.5183,2431.2273,2.9946,1.0029,79,7,900);
	LVpdcar[29] = AddStaticVehicleEx(428,2240.4561,2441.8025,2.9940,269.0435,79,7,900);
	LVpdcar[30] = AddStaticVehicleEx(428,2240.4368,2446.8977,2.9935,268.2694,79,7,900);
	LVpdcar[31] = AddStaticVehicleEx(427,2240.5601,2476.0071,2.9947,269.4551,79,7,900);
	LVpdcar[32] = AddStaticVehicleEx(427,2240.2854,2470.8904,2.9947,266.3839,79,7,900);
	LVpdcar[33] = AddStaticVehicleEx(523,2312.2671,2431.3662,2.8435,359.7229,79,7,900);
	LVpdcar[34] = AddStaticVehicleEx(523,2308.1733,2431.2585,2.8321,2.1832,79,7,900);
	LVpdcar[35] = AddStaticVehicleEx(523,2303.5332,2431.2656,2.8425,1.4797,79,7,900);
	LVpdcar[36] = AddStaticVehicleEx(523,2298.9768,2431.2798,2.8423,357.8687,79,7,900);

	LVpdcar[37] = AddStaticVehicleEx(411,2304.0747,2457.4907,10.5474,178.5763,79,7,900);
	object = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000, 0.0000, 0.0000);
	AttachObjectToVehicle(object, LVpdcar[37], 0.000000, 0.000000, 0.739999, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new policecar10 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(policecar10, "POLICE", 0, 50, "Arial", 25, 1, -16777216, 0, 1);
	AttachObjectToVehicle(policecar10, LVpdcar[37], 0.0, -1.9, 0.3, 270.0, 0.0, 0.0);
	LVpdcar[38] = AddStaticVehicleEx(411,2310.4553,2458.2539,10.5474,180.2667,79,7,900);
	object2 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(object2, LVpdcar[38], 0.000000, 0.000000, 0.739999, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new policecar11 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(policecar11, "POLICE", 0, 50, "Arial", 25, 1, -16777216, 0, 1);
	AttachObjectToVehicle(policecar11, LVpdcar[38], 0.0, -1.9, 0.3, 270.0, 0.0, 0.0);

    LVpdcar[39] = AddStaticVehicleEx(497,2344.7524,2473.8665,38.4056,179.4960,79,7,900);
    LVpdcar[40] = AddStaticVehicleEx(497,2319.7551,2473.6465,38.4036,181.5108,79,7,900);

    // FBI
	Fbicar[1] = AddStaticVehicleEx(489, 667.7097, -543.1226, 16.3610, 89.3400, 79, 79, 900, 1);
	new cacat1 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(cacat1, Fbicar[1], 0.000000, 0.000000, 1.152499, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new policecar9151 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536,-87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(policecar9151, "F.B.I.", 0, 50, "Arial", 25, 1,0xFFFFFFFF, 0, 1);
	AttachObjectToVehicle(policecar9151, Fbicar[1],-0.000000, 1.709998, 0.464999, -92.459945, -180.900100, 0.000000); //Object Model: 19327 |


	Fbicar[2] = AddStaticVehicleEx(489, 667.6566, -549.4137, 16.3610, 89.3400,79,79,900, 1);
	new cacat2 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(cacat2, Fbicar[2], 0.000000, 0.000000, 1.152499, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new policecar9152 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536,-87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(policecar9152, "F.B.I.", 0, 50, "Arial", 25, 1,0xFFFFFFFF, 0, 1);
	AttachObjectToVehicle(policecar9152, Fbicar[2],-0.000000, 1.709998, 0.464999, -92.459945, -180.900100, 0.000000); //Object Model: 19327 |

	Fbicar[3] = AddStaticVehicleEx(541, 663.5919, -556.6924, 16.1713, 88.6200,79,79,900, 1);
	new cacat41 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(cacat41, Fbicar[3], 0.000000, 0.000000, 0.674999, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new policecar912 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536,-87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(policecar912, "F.B.I.", 0, 50, "Arial", 25, 1,0xFFFFFFFF, 0, 1);
	AttachObjectToVehicle(policecar912, Fbicar[3], 0.000000, -1.634998, 0.394999, -78.364997, 0.000000, 0.000000); //Object Model: 19327 |

	Fbicar[4] = AddStaticVehicleEx(541, 663.4549, -561.5594, 16.0688, 89.2800,79,79,900, 1);
	new cacat42 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(cacat42, Fbicar[4], 0.000000, 0.000000, 0.674999, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new policecar913 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536,-87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(policecar913, "F.B.I.", 0, 50, "Arial", 25, 1,0xFFFFFFFF, 0, 1);
	AttachObjectToVehicle(policecar913, Fbicar[4], 0.000000, -1.634998, 0.397999, -78.364997, 0.000000, 0.000000); //Object Model: 19327 |

	Fbicar[5] = AddStaticVehicleEx(487, 659.9175, -583.5071, 16.4207, 92.6400,79,79,900);

	Fbicar[6] = AddStaticVehicleEx(426, 635.2023, -566.1065, 15.9865, -180.2401,79,79,900, 1);
	new cacat423 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(cacat423, Fbicar[6], 0.000000, 0.000000, 0.884999, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new policecar81 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536,-87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(policecar81, "F.B.I.", 0, 50, "Arial", 25, 1,0xFFFFFFFF, 0, 1);
	AttachObjectToVehicle(policecar81, Fbicar[6], -0.009999, 1.739998, 0.259999, -95.474937, 178.890090, 0.000000); //Object Model: 19327 |

	Fbicar[7] = AddStaticVehicleEx(426, 635.0311, -576.6041, 15.9865, -357.8401,79,79,900, 1);
	new cacat424 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(cacat424, Fbicar[7], 0.000000, 0.000000, 0.884999, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new policecar71 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536,-87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(policecar71, "F.B.I.", 0, 50, "Arial", 25, 1,0xFFFFFFFF, 0, 1);
	AttachObjectToVehicle(policecar71, Fbicar[7], -0.009999, 1.739998, 0.259999, -95.474937, 178.890090, 0.000000); //Object Model: 19327 |

	Fbicar[8] = AddStaticVehicleEx(523, 619.9854, -611.3990, 16.6931, -87.4200,79,79,900);

	Fbicar[9] = AddStaticVehicleEx(523, 619.9397, -609.3613, 16.6931, -87.4200,79,79,900);

	Fbicar[10] = AddStaticVehicleEx(523, 619.9480, -607.2165, 16.6931, -87.4200,79,79,900);

	Fbicar[11] = AddStaticVehicleEx(523, 619.7676, -605.1724, 16.6931, -87.4200,79,79,900);

	Fbicar[12] = AddStaticVehicleEx(426, 635.0296, -557.9111, 15.9865, -180.2401,79,79,900, 1);
	new cacat425 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(cacat425, Fbicar[12], 0.000000, 0.000000, 0.884999, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new policecar91 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536,-87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(policecar91, "F.B.I.", 0, 50, "Arial", 25, 1,0xFFFFFFFF, 0, 1);
	AttachObjectToVehicle(policecar91, Fbicar[12], -0.009999, 1.739998, 0.259999, -95.474937, 178.890090, 0.000000); //Object Model: 19327 |

	Fbicar[13] = AddStaticVehicleEx(541, 620.8021, -601.3132, 16.8175, -90.1200,79,79,900, 1);
	new cacat43 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(cacat43, Fbicar[13], 0.000000, 0.000000, 0.674999, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new policecar914 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536,-87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(policecar914, "F.B.I.", 0, 50, "Arial", 25, 1,0xFFFFFFFF, 0, 1);
	AttachObjectToVehicle(policecar914, Fbicar[13], 0.000000, -1.634998, 0.394999, -78.364997, 0.000000, 0.000000); //Object Model: 19327 |

	Fbicar[14] = AddStaticVehicleEx(541, 621.1262, -596.8475, 16.8175, -90.1200,79,79,900, 1);
	new cacat44 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(cacat44, Fbicar[14], 0.000000, 0.000000, 0.674999, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new policecar915 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536,-87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(policecar915, "F.B.I.", 0, 50, "Arial", 25, 1,0xFFFFFFFF, 0, 1);
	AttachObjectToVehicle(policecar915, Fbicar[14], 0.000000, -1.634998, 0.394999, -78.364997, 0.000000, 0.000000); //Object Model: 19327 |

	Fbicar[15] = AddStaticVehicleEx(489, 627.7803, -610.5059, 16.8413, -90.4800,79,79,900, 1);
	new cacat3 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(cacat3, Fbicar[15], 0.000000, 0.000000, 1.152499, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new policecar9153 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536,-87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(policecar9153, "F.B.I.", 0, 50, "Arial", 25, 1,0xFFFFFFFF, 0, 1);
	AttachObjectToVehicle(policecar9153, Fbicar[15],-0.000000, 1.709998, 0.464999, -92.459945, -180.900100, 0.000000); //Object Model: 19327 |

	Fbicar[16] = AddStaticVehicleEx(489, 637.2629, -610.5983, 16.8413, -90.4800,79,79,900, 1);
	new cacat4 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(cacat4, Fbicar[16], 0.000000, 0.000000, 1.152499, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new policecar9154 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536,-87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(policecar9154, "F.B.I.", 0, 50, "Arial", 25, 1,0xFFFFFFFF, 0, 1);
	AttachObjectToVehicle(policecar9154, Fbicar[16],-0.000000, 1.709998, 0.464999, -92.459945, -180.900100, 0.000000); //Object Model: 19327 |


	// NG
    Ngcar[1] = AddStaticVehicleEx(470,193.6376,1919.5774,17.6540,180.1054,0,0,900);
    Ngcar[2] = AddStaticVehicleEx(470,202.7587,1919.6334,17.6540,181.0742,0,0,900);
    Ngcar[3] = AddStaticVehicleEx(470,211.6932,1919.8369,17.6623,181.5005,0,0,900);
    Ngcar[4] = AddStaticVehicleEx(470,220.7388,1920.0652,17.6579,181.7381,0,0,900);
    Ngcar[5] = AddStaticVehicleEx(433,132.9258,1850.2843,18.0898,89.3563,0,0,900);
    Ngcar[6] = AddStaticVehicleEx(520,307.6303,1838.9869,18.3638,358.6516,0,0,900);
    Ngcar[7] = AddStaticVehicleEx(425,226.0177,1887.6583,18.2148,359.6147,0,0,900);
    Ngcar[8] = AddStaticVehicleEx(425,310.2802,2056.3174,18.2243,90.7007,0,0,900);
    Ngcar[9] = AddStaticVehicleEx(476,288.7537,2025.0685,18.3619,267.4474,0,0,900);
    Ngcar[10] = AddStaticVehicleEx(476,288.5681,1990.8434,18.3630,268.1221,0,0,900);
    Ngcar[11] = AddStaticVehicleEx(476,287.0078,1957.0768,18.3637,273.1341,0,0,900);

    // LSPD Cars
	Copcar[1] = AddStaticVehicleEx(599,1526.4309,-1646.1300,5.9640,178.1691,0,1,900);
	new copcarbari22 = CreateObject(1182,0,0,-1000,0,0,0,50);
    AttachObjectToVehicle(copcarbari22, Copcar[1], -0.894999, 2.820017, -0.334999, 17.085000, 0.000000, 0.000000); //Object Model: 1182 |
    new copcarbari23 = CreateObject(1182,0,0,-1000,0,0,0,50);
	AttachObjectToVehicle(copcarbari23, Copcar[1], -0.899999, 2.730015, 0.000000, 25.124994, 0.000000, 0.000000); //Object Model: 1182 |

	Copcar[2] = AddStaticVehicleEx(428,1543.4700,-1659.0294,5.5381,89.5068,0,1,900);

	Copcar[3] = AddStaticVehicleEx(427,1543.3763,-1667.8373,5.9306,91.0264,0,1,900);

	Copcar[4] = AddStaticVehicleEx(596,1543.9248,-1676.1206,5.5380,90.4348,0,1,900);

	Copcar[5] = AddStaticVehicleEx(596,1543.3737,-1684.3055,5.5382,89.2982,0,1,900);

    Copcar[6] = AddStaticVehicleEx(411,1600.3859,-1611.2262,13.5674,88.8041,1,1,900, 1);
    new copcarbari17 = CreateObject(1182,0,0,-1000,0,0,0,50);
    AttachObjectToVehicle(copcarbari17, Copcar[6], -0.934999, 2.810016, -0.324999, 7.035000, 0.000000, 0.000000); //Object Model: 1182 |
    new copcarbari18 = CreateObject(1139,0,0,-1000,0,0,0,50);
	AttachObjectToVehicle(copcarbari18, Copcar[6], -0.004999, -2.425008, 0.304999, 0.000000, 0.000000, 0.000000); //Object Model: 1182 |

    object3 = CreateObject(19620,-2597.0762, -2638.4270, -5.3536, 0.0000, 0.0000, 0.0000);
	AttachObjectToVehicle(object3, Copcar[6], 0.000000, 0.000000, 0.739999, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |

	new policecar = CreateObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(policecar, "POLICE", 0, 50, "Arial", 25, 1, -16777216, 0, 1);
	AttachObjectToVehicle(policecar, Copcar[6], 0.0, -1.9, 0.3, 270.0, 0.0, 0.0);

    Copcar[7] = AddStaticVehicleEx(411,1600.5139,-1606.0381,13.5527,90.2025,1,1,900, 1);
    new copcarbari15 = CreateObject(1182,0,0,-1000,0,0,0,50);
    AttachObjectToVehicle(copcarbari15, Copcar[7], -0.934999, 2.810016, -0.324999, 7.035000, 0.000000, 0.000000); //Object Model: 1182 |
    new copcarbari16 = CreateObject(1139,0,0,-1000,0,0,0,50);
	AttachObjectToVehicle(copcarbari16, Copcar[7], -0.004999, -2.425008, 0.304999, 0.000000, 0.000000, 0.000000); //Object Model: 1182 |

    object4 = CreateObject(19620,-2597.0762, -2638.4270, -5.3536, 0.0000, 0.0000, 0.0000);
	AttachObjectToVehicle(object4, Copcar[7], 0.000000, 0.000000, 0.739999, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new policecar2 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(policecar2, "POLICE", 0, 50, "Arial", 25, 1, -16777216, 0, 1);
	AttachObjectToVehicle(policecar2, Copcar[7], 0.0, -1.9, 0.3, 270.0, 0.0, 0.0);

	Copcar[8] = AddStaticVehicleEx(596,1564.7928,-1710.0051,5.5384,359.9996,0,1,900);

	Copcar[9] = AddStaticVehicleEx(596,1583.3475,-1709.9602,5.5384,359.2506,0,1,900);

	Copcar[10] = AddStaticVehicleEx(523,1599.9768,-1704.3639,5.4587,92.1010,0,1,900);

	Copcar[11] = AddStaticVehicleEx(522,1600.0652,-1699.9773,5.4617,91.1802,0,1,900);

	Copcar[12] = AddStaticVehicleEx(523,1600.1055,-1695.9366,5.4615,94.0026,0,1,900);

	Copcar[13] = AddStaticVehicleEx(596,1585.9886,-1676.4564,5.5416,230.7888,0,1,900);

	Copcar[14] = AddStaticVehicleEx(599,1603.6570,-1629.4156,13.6649,90.0000,0,1,900);
	new copcarbari20 = CreateObject(1182,0,0,-1000,0,0,0,50);
    AttachObjectToVehicle(copcarbari20, Copcar[14], -0.894999, 2.820017, -0.334999, 17.085000, 0.000000, 0.000000); //Object Model: 1182 |
    new copcarbari21 = CreateObject(1182,0,0,-1000,0,0,0,50);
	AttachObjectToVehicle(copcarbari21, Copcar[14], -0.899999, 2.730015, 0.000000, 25.124994, 0.000000, 0.000000); //Object Model: 1182 |

	Copcar[15] = AddStaticVehicleEx(426,1578.0828,-1606.5848,13.1259,179.0756,1,1,900, 1);
	new copcarobj3 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(copcarobj3, Copcar[15], 0.000000, 0.000000, 0.884999, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new poccarobj3 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536,-87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(poccarobj3, "LSPD", 0, 50, "Arial", 25, 1,-16777216, 0, 1);
	AttachObjectToVehicle(poccarobj3, Copcar[15], -0.009999, 1.739998, 0.259999, -95.474937, 178.890090, 0.000000); //Object Model: 19327 |
	new copcarbari1 = CreateObject(1182,0,0,-1000,0,0,0,50);
    AttachObjectToVehicle(copcarbari1, Copcar[15], -0.909999, 2.545010, -0.284999, 14.070000, 0.000000, 0.000000); //Object Model: 1182 |
    new copcarbari2 = CreateObject(1182,0,0,-1000,0,0,0,50);
	AttachObjectToVehicle(copcarbari2, Copcar[15], -0.919999, 2.455008, 0.000000, 20.099996, 0.000000, 0.000000); //Object Model: 1182 |

	Copcar[16] = AddStaticVehicleEx(426,1573.0165,-1606.5100,13.1257,178.9909,1,1,900, 1);
	new copcarobj2 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(copcarobj2, Copcar[16], 0.000000, 0.000000, 0.884999, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new poccarobj2 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536,-87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(poccarobj2, "LSPD", 0, 50, "Arial", 25, 1,-16777216, 0, 1);
	AttachObjectToVehicle(poccarobj2, Copcar[16], -0.009999, 1.739998, 0.259999, -95.474937, 178.890090, 0.000000); //Object Model: 19327 |
	new copcarbari3 = CreateObject(1182,0,0,-1000,0,0,0,50);
    AttachObjectToVehicle(copcarbari3, Copcar[16], -0.909999, 2.545010, -0.284999, 14.070000, 0.000000, 0.000000); //Object Model: 1182 |
    new copcarbari4 = CreateObject(1182,0,0,-1000,0,0,0,50);
	AttachObjectToVehicle(copcarbari4, Copcar[16], -0.919999, 2.455008, 0.000000, 20.099996, 0.000000, 0.000000); //Object Model: 1182 |

	Copcar[17] = AddStaticVehicleEx(426,1568.1632,-1606.4669,13.1260,179.0691,1,1,900, 1);
	new copcarobj1 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(copcarobj1, Copcar[17], 0.000000, 0.000000, 0.884999, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new poccarobj1 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536,-87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(poccarobj1, "LSPD", 0, 50, "Arial", 25, 1,-16777216, 0, 1);
	AttachObjectToVehicle(poccarobj1, Copcar[17], -0.009999, 1.739998, 0.259999, -95.474937, 178.890090, 0.000000); //Object Model: 19327 |
	new copcarbari5 = CreateObject(1182,0,0,-1000,0,0,0,50);
    AttachObjectToVehicle(copcarbari5, Copcar[17], -0.909999, 2.545010, -0.284999, 14.070000, 0.000000, 0.000000); //Object Model: 1182 |
    new copcarbari6 = CreateObject(1182,0,0,-1000,0,0,0,50);
	AttachObjectToVehicle(copcarbari6, Copcar[17], -0.919999, 2.455008, 0.000000, 20.099996, 0.000000, 0.000000); //Object Model: 1182 |



	Copcar[18] = AddStaticVehicleEx(411,1547.6494,-1669.6461,13.2124,90.4200,1,1,900, 1);
	object5 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(object5, Copcar[18], 0.000000, 0.000000, 0.739999, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new policecar3 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(policecar3, "POLICE", 0, 50, "Arial", 25, 1, -16777216, 0, 1);
	AttachObjectToVehicle(policecar3, Copcar[18], 0.0, -1.9, 0.3, 270.0, 0.0, 0.0);
	new copcarbari13 = CreateObject(1182,0,0,-1000,0,0,0,50);
    AttachObjectToVehicle(copcarbari13, Copcar[18], -0.934999, 2.810016, -0.324999, 7.035000, 0.000000, 0.000000); //Object Model: 1182 |
    new copcarbari14 = CreateObject(1139,0,0,-1000,0,0,0,50);
	AttachObjectToVehicle(copcarbari14, Copcar[18], -0.004999, -2.425008, 0.304999, 0.000000, 0.000000, 0.000000); //Object Model: 1182 |

	Copcar[19] = AddStaticVehicleEx(497,1563.8638,-1700.7856,28.5752,89.4731,0,1,900, 1);

	Copcar[20] = AddStaticVehicleEx(426,1562.9956,-1606.3975,13.1259,179.2377,1,1,900);
	new copcarobj4 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(copcarobj4, Copcar[20], 0.000000, 0.000000, 0.884999, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new poccarobj4 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536,-87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(poccarobj4, "LSPD", 0, 50, "Arial", 25, 1,-16777216, 0, 1);
	AttachObjectToVehicle(poccarobj4, Copcar[20], -0.009999, 1.739998, 0.259999, -95.474937, 178.890090, 0.000000); //Object Model: 19327 |
	new copcarbari7 = CreateObject(1182,0,0,-1000,0,0,0,50);
    AttachObjectToVehicle(copcarbari7, Copcar[20], -0.909999, 2.545010, -0.284999, 14.070000, 0.000000, 0.000000); //Object Model: 1182 |
    new copcarbari8 = CreateObject(1182,0,0,-1000,0,0,0,50);
	AttachObjectToVehicle(copcarbari8, Copcar[20], -0.919999, 2.455008, 0.000000, 20.099996, 0.000000, 0.000000); //Object Model: 1182 |

	Copcar[21] = AddStaticVehicleEx(596,1587.5325,-1709.9883,5.6112,359.9413,0,1,900);

	Copcar[22] = AddStaticVehicleEx(426,1557.8916,-1606.2847,13.1260,180.5179,1,1,900, 1);
	new copcarobj5 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(copcarobj5, Copcar[22], 0.000000, 0.000000, 0.884999, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new poccarobj5 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536,-87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(poccarobj5, "LSPD", 0, 50, "Arial", 25, 1,-16777216, 0, 1);
	AttachObjectToVehicle(poccarobj5, Copcar[22], -0.009999, 1.739998, 0.259999, -95.474937, 178.890090, 0.000000); //Object Model: 19327 |
	new copcarbari9 = CreateObject(1182,0,0,-1000,0,0,0,50);
    AttachObjectToVehicle(copcarbari9, Copcar[22], -0.909999, 2.545010, -0.284999, 14.070000, 0.000000, 0.000000); //Object Model: 1182 |
    new copcarbari10 = CreateObject(1182,0,0,-1000,0,0,0,50);
	AttachObjectToVehicle(copcarbari10, Copcar[22], -0.919999, 2.455008, 0.000000, 20.099996, 0.000000, 0.000000); //Object Model: 1182 |

	Copcar[23] = AddStaticVehicleEx(522,1546.8705,-1615.3568,12.8479,-84.3000,0,1,900);

	Copcar[24] = AddStaticVehicleEx(523,1546.9951,-1613.3981,12.8479,-84.3000,0,0,900);

	Copcar[25] = AddStaticVehicleEx(522,1546.9257,-1611.2958,12.8479,-84.3000,0,1,900);

	Copcar[26] = AddStaticVehicleEx(523,1546.9569,-1608.4889,12.8479,-84.3000,0,0,900);

	Copcar[27] = AddStaticVehicleEx(522,1546.8323,-1606.7531,12.8479,-88.2600,0,1,900);

	Copcar[28] = AddStaticVehicleEx(426,1547.5900,-1653.1339,13.1537,90.9600,1,1,900, 1);
	new copcarobj6 = CreateObject(19620,-2597.0762,-2638.4270,-5.3536,0.0000,0.0000,0.0000);
	AttachObjectToVehicle(copcarobj6, Copcar[28], 0.000000, 0.000000, 0.884999, 0.000000, 0.000000, 0.000000); //Object Model: 19620 |
	new poccarobj6 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536,-87.6999, 90.4001, -87.1805);
	SetObjectMaterialText(poccarobj6, "LSPD", 0, 50, "Arial", 25, 1,-16777216, 0, 1);
	AttachObjectToVehicle(poccarobj6, Copcar[28], -0.009999, 1.739998, 0.259999, -95.474937, 178.890090, 0.000000); //Object Model: 19327 |
	new copcarbari11 = CreateObject(1182,0,0,-1000,0,0,0,50);
    AttachObjectToVehicle(copcarbari11, Copcar[28], -0.909999, 2.545010, -0.284999, 14.070000, 0.000000, 0.000000); //Object Model: 1182 |
    new copcarbari12 = CreateObject(1182,0,0,-1000,0,0,0,50);
	AttachObjectToVehicle(copcarbari12, Copcar[28], -0.919999, 2.455008, 0.000000, 20.099996, 0.000000, 0.000000); //Object Model: 1182 |

	Copcar[29] = AddStaticVehicleEx(428,1548.9617,-1698.0908,13.2750,89.6983,0,1,900);

	Copcar[30] = AddStaticVehicleEx(497,1561.8992,-1651.0338,28.5481,90.9973,0,1,900);

	Copcar[31] = AddStaticVehicleEx(523,1546.8285,-1604.8269,12.8479,-87.1800,0,0,900);

	Copcar[32] = AddStaticVehicleEx(522,1512.6748,-1661.9081,13.1110,273.3558,0,1,900);

	// Los Aztecas
	Aztecasc[1] = AddStaticVehicleEx(560,1460.6954,2762.5344,10.5237,271.5471,98,98,900);
	Aztecasc[2] = AddStaticVehicleEx(536,1461.9623,2753.8328,10.6892,273.3610,98,98,900);
	Aztecasc[3] = AddStaticVehicleEx(560,1461.1525,2786.9851,10.6934,269.1133,98,98,900);
	Aztecasc[4] = AddStaticVehicleEx(411,1461.3575,2794.3330,10.6006,269.0929,98,98,900);
	Aztecasc[5] = AddStaticVehicleEx(536,1474.8593,2780.5283,10.4039,264.9414,98,98,900);
	Aztecasc[6] = AddStaticVehicleEx(536,1475.0002,2782.9585,10.3998,269.8494,98,98,900);
	Aztecasc[7] = AddStaticVehicleEx(536,1529.3812,2809.1833,10.6250,89.6316,98,98,900);
	Aztecasc[8] = AddStaticVehicleEx(468,1529.4087,2818.3010,10.9447,89.9707,98,98,900);
	Aztecasc[9] = AddStaticVehicleEx(468,1529.1504,2827.2883,10.6203,90.1389,98,98,900);
	Aztecasc[10] = AddStaticVehicleEx(487,1512.2842,2841.6584,10.9975,144.0251,98,98,900);
	Aztecasc[11] = AddStaticVehicleEx(482,1494.2539,2838.4846,10.6961,179.5514,98,98,900);
	Aztecasc[12] = AddStaticVehicleEx(482,1484.5641,2838.4858,10.6920,179.3786,98,98,900);
	Aztecasc[13] = AddStaticVehicleEx(463,1465.4622,2838.1118,10.7499,179.9015,98,98,900);
	Aztecasc[14] = AddStaticVehicleEx(463,1475.0416,2838.1453,10.7520,179.7256,98,98,900);

	// Grove Street
	Grovec[1] = AddStaticVehicleEx(560,2500.9385,-1684.8418,13.1542,15.8181,86,86,900);
	Grovec[2] = AddStaticVehicleEx(405,2505.1641,-1683.3035,13.4222,26.9960,86,86,900);
	Grovec[3] = AddStaticVehicleEx(536,2508.1526,-1680.9349,13.2847,45.6690,86,86,900);
	Grovec[4] = AddStaticVehicleEx(579,2510.6338,-1676.9895,13.4786,62.3178,86,86,900);
	Grovec[5] = AddStaticVehicleEx(445,2512.2429,-1673.0170,13.3648,71.2817,86,86,900);
	Grovec[6] = AddStaticVehicleEx(492,2512.9138,-1669.0248,13.3085,88.2244,86,86,900);
	Grovec[7] = AddStaticVehicleEx(579,2511.8726,-1664.8618,13.5153,97.2258,86,86,900);
	Grovec[8] = AddStaticVehicleEx(482,2509.9109,-1660.3676,13.7128,98.4274,86,86,900);
	Grovec[9] = AddStaticVehicleEx(468,2505.6279,-1653.6042,13.4246,138.7236,86,1,900);
	Grovec[10] = AddStaticVehicleEx(461,2488.7827,-1651.6926,13.0592,174.6712,86,86,900);
	Grovec[11] = AddStaticVehicleEx(461,2486.1694,-1651.5857,13.0460,177.2937,86,86,900);
	Grovec[12] = AddStaticVehicleEx(487,2530.0879,-1677.6205,19.8052,90.9696,86,86,900);

	// Los Vagos
	Vagosc[1] = AddStaticVehicleEx(560,703.8182,-1420.7809,13.2456,359.3748,6,6,900);
	Vagosc[2] = AddStaticVehicleEx(567,713.9906,-1421.1212,13.4004,359.3567,6,6,900);
	Vagosc[3] = AddStaticVehicleEx(461,702.9658,-1427.0078,13.1210,0.1650,6,6,900);
	Vagosc[4] = AddStaticVehicleEx(461,714.9586,-1426.9335,13.0970,359.2690,6,6,900);
	Vagosc[5] = AddStaticVehicleEx(579,720.4292,-1431.0087,13.4736,88.5139,6,6,900);
	Vagosc[6] = AddStaticVehicleEx(579,727.1696,-1431.2373,13.4597,89.0968,6,6,900);
	Vagosc[7] = AddStaticVehicleEx(468,736.4515,-1431.6168,13.3294,89.7145,6,1,900);
	Vagosc[8] = AddStaticVehicleEx(482,745.3128,-1443.3632,13.6579,0.3060,6,6,900);
	Vagosc[9] = AddStaticVehicleEx(405,703.6475,-1437.2335,13.4147,0.0735,6,6,900);
	Vagosc[10] = AddStaticVehicleEx(405,707.5731,-1437.1660,13.4149,359.2963,6,6,900);
	Vagosc[11] = AddStaticVehicleEx(487,704.3814,-1456.8789,17.5703,357.7882,6,1,900);

	// Government
	Govc[1] = AddStaticVehicleEx(560,1455.2803,-1750.9225,13.5469,358.8254,1,1,900);
	Govc[2] = AddStaticVehicleEx(560,1507.2585,-1750.1055,13.5469,1.6572,1,1,900);
	Govc[3] = AddStaticVehicleEx(409,1492.5269,-1743.4381,13.5469,89.3797,1,1,900);
	Govc[4] = AddStaticVehicleEx(409,1477.2596,-1743.3105,13.5469,89.6147,1,1,900);
	
	// Ballas
	Ballasc[1] = AddStaticVehicleEx(579,1413.5422,749.4807,10.7580,269.9083,85,1,900);
	Ballasc[2] = AddStaticVehicleEx(579,1413.4001,743.1329,10.7553,269.7700,85,1,900);
	Ballasc[3] = AddStaticVehicleEx(567,1413.2825,762.3490,10.6902,270.8318,85,1,900);
	Ballasc[4] = AddStaticVehicleEx(567,1413.2863,755.9528,10.6858,269.8961,85,1,900);
	Ballasc[5] = AddStaticVehicleEx(405,1413.1633,768.6138,10.6960,270.1100,85,1,900);
	Ballasc[6] = AddStaticVehicleEx(566,1413.4899,775.0634,10.6012,271.0518,85,1,900);
	Ballasc[7] = AddStaticVehicleEx(482,1451.9924,787.3679,10.9385,180.6828,85,1,900);
	Ballasc[8] = AddStaticVehicleEx(445,1445.4983,787.2238,10.6958,180.6648,85,1,900);
	Ballasc[9] = AddStaticVehicleEx(426,1413.0426,711.4196,10.5633,269.5171,85,1,900);
	Ballasc[10] = AddStaticVehicleEx(560,1412.6903,717.7070,10.5259,269.6876,85,1,900);
	Ballasc[11] = AddStaticVehicleEx(487,1416.9390,730.5318,10.9975,267.9874,85,1,900);
	Ballasc[12] = AddStaticVehicleEx(468,1496.3334,732.9077,10.7156,91.8306,85,1,900);
	Ballasc[13] = AddStaticVehicleEx(461,1449.8251,731.3597,10.4061,176.0271,85,1,900);
	Ballasc[14] = AddStaticVehicleEx(461,1453.9224,731.3972,10.4033,181.9228,85,1,900);

	//Helpers
	new helpertext1 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
	new helpertext2 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
	new helpertext3 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
	new helpertext4 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
	new helpertext5 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
	helpercars[1] = AddStaticVehicleEx(541,892.7222, -1669.5413, 13.1444, 0.0000, 2, 2, 100);
	SetObjectMaterialText(helpertext1, "HELPER", 0, 50, "Arial", 25, 1, -16777216, 0, 1);
	AttachObjectToVehicle(helpertext1, helpercars[1], 0.000000, 2.115000, 0.294999, -104.519912, -177.885086, 0.000000);
	helpercars[2] = AddStaticVehicleEx(560,888.1392, -1669.5321, 13.1444, 0.0000, 2, 2, 100);
	SetObjectMaterialText(helpertext2, "HELPER", 0, 50, "Arial", 25, 1, -16777216, 0, 1);
	AttachObjectToVehicle(helpertext2, helpercars[2], 0.000000, 2.115000, 0.294999, -104.519912, -177.885086, 0.000000);
	helpercars[3] = AddStaticVehicleEx(541,883.7499, -1669.5525, 13.1444, 0.0000, 2, 2, 100);
	SetObjectMaterialText(helpertext3, "HELPER", 0, 50, "Arial", 25, 1, -16777216, 0, 1);
	AttachObjectToVehicle(helpertext3, helpercars[3], 0.000000, 2.115000, 0.294999, -104.519912, -177.885086, 0.000000);
	helpercars[4] = AddStaticVehicleEx(560,879.2927, -1669.5281, 13.1444, 0.0000, 2, 2, 100);
	SetObjectMaterialText(helpertext4, "HELPER", 0, 50, "Arial", 25, 1, -16777216, 0, 1);
	AttachObjectToVehicle(helpertext4, helpercars[4], 0.000000, 2.115000, 0.294999, -104.519912, -177.885086, 0.000000);
	helpercars[5] = AddStaticVehicleEx(541,874.8338, -1669.4906, 13.1444, 0.0000, 2, 2, 100);
	SetObjectMaterialText(helpertext5, "HELPER", 0, 50, "Arial", 25, 1, -16777216, 0, 1);
	AttachObjectToVehicle(helpertext5, helpercars[5], 0.000000, 2.115000, 0.294999, -104.519912, -177.885086, 0.000000);

	//Admins
	new admintext1 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
	new admintext2 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
	new admintext3 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
	new admintext4 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
	new admintext5 = CreateObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
	admincars[1] = AddStaticVehicleEx(411, 874.9003, -1657.5371, 13.1468, -180.2400, 2, 2, 100);
	SetObjectMaterialText(admintext1, "ADMIN", 0, 50, "Arial", 25, 1, -16777216, 0, 1);
	AttachObjectToVehicle(admintext1, admincars[1], 0.000000, -1.634998, 0.394999, -78.364997, 0.000000, 0.000000); //Object Model: 19327 |
	admincars[2] = AddStaticVehicleEx(560, 870.3499, -1657.5870, 13.1468, -180.2400, 2, 2, 100);
	SetObjectMaterialText(admintext2, "ADMIN", 0, 50, "Arial", 25, 1, -16777216, 0, 1);
	AttachObjectToVehicle(admintext2, admincars[2], 0.000000, -1.634998, 0.394999, -78.364997, 0.000000, 0.000000); //Object Model: 19327 |
	admincars[3] = AddStaticVehicleEx(411, 879.4915, -1657.4695, 13.1468, -180.2400, 2, 2, 100);
	SetObjectMaterialText(admintext3, "ADMIN", 0, 50, "Arial", 25, 1, -16777216, 0, 1);
	AttachObjectToVehicle(admintext3, admincars[3], 0.000000, -1.634998, 0.394999, -78.364997, 0.000000, 0.000000); //Object Model: 19327 |
	admincars[4] = AddStaticVehicleEx(560, 883.7678, -1657.4855, 13.1468, -180.2400, 2, 2, 100);
	SetObjectMaterialText(admintext4, "ADMIN", 0, 50, "Arial", 25, 1, -16777216, 0, 1);
	AttachObjectToVehicle(admintext4, admincars[4], 0.000000, -1.634998, 0.394999, -78.364997, 0.000000, 0.000000); //Object Model: 19327 |
	admincars[5] = AddStaticVehicleEx(411, 888.1348, -1657.6543, 13.1468, -180.2400, 2, 2, 100);
	SetObjectMaterialText(admintext5, "MaWReZ", 0, 50, "Arial", 25, 1, -16777216, 0, 1);
	AttachObjectToVehicle(admintext5, admincars[5], 0.000000, -1.634998, 0.394999, -78.364997, 0.000000, 0.000000); //Object Model: 19327 |
	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
   new newcar = GetClosestVehicle2(playerid, 40);
   new veh = GetPlayerVehicleID(playerid);
   new engine,lights,alarm,doors,bonnet,boot,objective;
   if(newkeys & KEY_JUMP && !(oldkeys & KEY_JUMP) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) ApplyAnimation(playerid, "GYMNASIUM", "gym_jog_falloff",4.1,0,1,1,0,0);
   if(newkeys & KEY_FIRE || newkeys & KEY_AIM)
   {
	   new weapon = GetPlayerWeapon(playerid),
           slot = GetWeaponSlot(weapon);
	   if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER && WeaponData[playerid][slot] == false && slot != 0 && weapon != 46  && GetPlayerWeapon(playerid) != 9 && curatj[playerid] == 0)
       {
           ResetPlayerWeaponsEx(playerid);
           ResetPlayerWeapons(playerid);
		   new sendername[25],gunname[50],string[256];
		   GetWeaponNameEx(weapon,gunname,sizeof(gunname));
		   GetPlayerName(playerid, sendername, sizeof(sendername));
		   format(string, sizeof(string), "[Cheating] %s (%d, level %d) may be using weapon hack, weapon created: %s.",sendername, playerid, PlayerInfo[playerid][pLevel], gunname);
		   ABroadCast(COLOR_RED,string,1);
		   return 1;
	   }
   }
   
   if(newkeys & KEY_FIRE) //Anti DM la spawn
   {
		if(!IsPlayerInAnyVehicle(playerid))
		{
			new wep = GetPlayerWeapon(playerid);
			if((wep > 0 && wep < 43) && IsPlayerInRangeOfPoint(playerid, 50,1473.8352,-1896.5021,22.2977) && !IsACop(playerid) && GetPlayerVirtualWorld(playerid) < 1)
			{
	    		SetPlayerArmedWeapon(playerid,0);
				SendClientMessage(playerid, COLOR_RED, "You Can't Use Weapons In Spawn Area !");
				SpawnPlayer(playerid);
			}
   		}
   }
   if(IsKeyJustDown(KEY_SECONDARY_ATTACK, newkeys, oldkeys) && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
   {
   		if(IsABoat(newcar))
		{
		    if(PlayerInfo[playerid][pBoatLic] < 1)
			{
                if(TakingLesson[playerid] == 2) { }
                else {
			    SendClientMessage(playerid,COLOR_GREY, "You Don't have a boat license.");
			    ClearAnimations(playerid); }
			}
		}
		if(IsAPlane(newcar))
		{
		    if(PlayerInfo[playerid][pFlyLic] < 1)
			{
			    if(TakingLesson[playerid] == 2) { }
			    else {
			    SendClientMessage(playerid, COLOR_GREY, "You don't have a flying license.");
			    ClearAnimations(playerid); }
			}
		}
		if(GetVehicleModel(newcar) >= 400 && GetVehicleModel(newcar) <= 611)
		{
			if(PlayerInfo[playerid][pCarLic] < 1)
			{
			    if(IsABike(newcar) || GetVehicleModel(newcar) == 462) { }
			    else
			    {
					if(TakingLesson[playerid] == 1) { }
					else {
				 	SendClientMessage(playerid,COLOR_GREY, "You don't have a driving license.");
                    ClearAnimations(playerid);
				  }
				}
			}
		}
		if(IsACopCar(newcar))
		{
		    if(IsACop(playerid)) { }
		    else { ClearAnimations(playerid); SendClientMessage(playerid,COLOR_WHITE, "{999999}You Are Not A Cop."); }
		}
		if(newcar == Copcar[6] || newcar == Copcar[7] || newcar == Copcar[18] || newcar == Copcar[19])
		{
		    if(IsACop(playerid))
		    {
		        if(PlayerInfo[playerid][pRank] < 3)
		        {
		        	ClearAnimations(playerid);
		        	SendClientMessage(playerid,COLOR_WHITE, "{999999}You Don't Have Rank 3.");
		        }
			}
		}
		if(newcar == Copcar[1] || newcar == Copcar[2] || newcar == Copcar[3] || newcar == Copcar[14] || newcar == Copcar[29])
		{
		    if(IsACop(playerid))
		    {
		        if(PlayerInfo[playerid][pRank] < 2)
		        {
		        	ClearAnimations(playerid);
		        	SendClientMessage(playerid,COLOR_WHITE, "{999999}You Don't Have Rank 2.");
		        }
			}
		}
		if(newcar == Copcar[30] || newcar == Copcar[19])
		{
		    if(IsACop(playerid))
		    {
		        if(PlayerInfo[playerid][pRank] < 4)
		        {
		        	ClearAnimations(playerid);
		        	SendClientMessage(playerid,COLOR_WHITE, "{999999}You Don't Have Rank 4.");
		        }
			}
		}
		if(IsAFbiCar(newcar))
		{
		    if(IsACop(playerid)) { }
		    else { ClearAnimations(playerid); SendClientMessage(playerid,COLOR_WHITE, "{999999}You are not a Cop. !"); }
		}
		if(IsALVPDCar(newcar))
		{
		    if(IsACop(playerid)) { }
		    else { ClearAnimations(playerid); SendClientMessage(playerid,COLOR_WHITE, "{999999}You are not a Cop. !"); }
		}
		if(IsANgCar(newcar))
		{
		    if(IsACop(playerid)) { }
		    else { ClearAnimations(playerid); SendClientMessage(playerid,COLOR_WHITE, "{999999}You are not a Cop."); }
		}
		else if(IsAGovCar(newcar))
		{
		    if(PlayerInfo[playerid][pMember] == 7) { }
		    else { ClearAnimations(playerid); SendClientMessage(playerid,COLOR_WHITE, "{999999}You Are'nt Government Member");}
		}
		else if(IsAnAmbulance(newcar))
		{
		    if(PlayerInfo[playerid][pMember] == 14) { }
		    else { ClearAnimations(playerid); SendClientMessage(playerid,COLOR_WHITE, "{999999}You are not a Paramedic.");}
		}
		if(IsAGarbageTruck(newcar))//garbagejob
		{
		    if(PlayerInfo[playerid][pJob] == 10) { }
			else
			{
   				SendClientMessage(playerid, COLOR_WHITE, "You are not a Garbage Collector.");
			    ClearAnimations(playerid);
			}
		}
		if(IsATruck(newcar))
		{
			if(PlayerInfo[playerid][pJob] == 14) { }
    		else
			{
   				SendClientMessage(playerid, COLOR_WHITE, "{999999}You are not a Trucker.");
			    ClearAnimations(playerid);
			}
		}

		if(newcar == bus[1] || newcar == bus[2] || newcar == bus[3] || newcar == bus[4] || newcar == bus[5] || newcar == bus[6] || newcar == bus[7] || newcar == bus[8] || newcar == bus[9] || newcar == bus[10] || newcar == bus[11] || newcar == bus[12] || newcar == bus[13]
		|| newcar == bus[14] || newcar == bus[15] || newcar == bus[16])
		{
		    if(PlayerInfo[playerid][pJob] == 7) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_WHITE,"{999999}You are not a Bus Driver.");
		        ClearAnimations(playerid);
		    }
		}
		if(newcar == pizza[1] || newcar == pizza[2] || newcar == pizza[3] || newcar == pizza[4] || newcar == pizza[5] || newcar == pizza[6] || newcar == pizza[7] || newcar == pizza[8] || newcar == pizza[9] || newcar == pizza[10] || newcar == pizza[11] || newcar == pizza[12] || newcar == pizza[13] || newcar == pizza[14])
		{
		    if(PlayerInfo[playerid][pJob] == 5) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_WHITE,"{999999}You are not a Pizza Boy.");
		        ClearAnimations(playerid);
		    }
		}
		if(newcar == towcar[1] || newcar == towcar[2] || newcar == towcar[3] || newcar == towcar[4] || newcar == towcar[5])
		{
		    if(PlayerInfo[playerid][pJob] == 8) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_WHITE,"{999999}You are not a mechanic.");
		        ClearAnimations(playerid);
		    }
		}
		if(newcar == taxic[1] || newcar == taxic[2] || newcar == taxic[3] || newcar == taxic[4] || newcar == taxic[5] || newcar == taxic[6] || newcar == taxic[7] || newcar == taxic[8] || newcar == taxic[9] || newcar == taxic[10])
		{
		    if(PlayerInfo[playerid][pMember] == 13||PlayerInfo[playerid][pLeader] == 13) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_WHITE,"{999999}You are not a Los Santos Taxi member.");
		        ClearAnimations(playerid);
		    }
		}
		if(newcar == taxic[6] || newcar == taxic[7])
		{
		    if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
		    {
				if(PlayerInfo[playerid][pRank] > 2) { }
			    else
				{
			        SendClientMessage(playerid,COLOR_WHITE,"{999999}You don't have rank 3.");
			        ClearAnimations(playerid);
			    }
			}
			else
			{
		        SendClientMessage(playerid,COLOR_WHITE,"{999999}You are not a Los Santos Taxi member or you don't have rank 3.");
		        ClearAnimations(playerid);
		    }
		}
		if(newcar == Aztecasc[1] || newcar == Aztecasc[2] || newcar == Aztecasc[3] || newcar == Aztecasc[4] || newcar == Aztecasc[5] || newcar == Aztecasc[6] || newcar == Aztecasc[7] || newcar == Aztecasc[8] || newcar == Aztecasc[9] || newcar == Aztecasc[10] || newcar == Aztecasc[11]
		|| newcar == Aztecasc[12] || newcar == Aztecasc[13] || newcar == Aztecasc[14])
		{
		    if(PlayerInfo[playerid][pMember] == 4||PlayerInfo[playerid][pLeader] == 4) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_WHITE,"{999999}You are not a Los Aztecas member.");
		        ClearAnimations(playerid);
		    }
		}
		if(newcar == Grovec[1] || newcar == Grovec[2] || newcar == Grovec[3] || newcar == Grovec[4] || newcar == Grovec[5] || newcar == Grovec[6] || newcar == Grovec[7] || newcar == Grovec[8] || newcar == Grovec[9] || newcar == Grovec[10] || newcar == Grovec[11] || newcar == Grovec[12])
		{
		    if(PlayerInfo[playerid][pMember] == 5||PlayerInfo[playerid][pLeader] == 5) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_WHITE,"{999999}You are not a Grove Street member.");
		        ClearAnimations(playerid);
		    }
		}
		if(newcar == Vagosc[1] || newcar == Vagosc[2] || newcar == Vagosc[3] || newcar == Vagosc[4] || newcar == Vagosc[5] || newcar == Vagosc[6]
		 || newcar == Vagosc[7] || newcar == Vagosc[8] || newcar == Vagosc[9] || newcar == Vagosc[10] || newcar == Vagosc[11])
		{
		    if(PlayerInfo[playerid][pMember] == 6||PlayerInfo[playerid][pLeader] == 6) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_WHITE,"{999999}You are not a Los Vagos member.");
		        ClearAnimations(playerid);
		    }
		}
		if(newcar == Ballasc[1] || newcar == Ballasc[2] || newcar == Ballasc[3] || newcar == Ballasc[4] || newcar == Ballasc[5] || newcar == Ballasc[6]
		 || newcar == Ballasc[7] || newcar == Ballasc[8] || newcar == Ballasc[9] || newcar == Ballasc[10] || newcar == Ballasc[11] || newcar == Ballasc[12] || newcar == Ballasc[13] || newcar == Ballasc[14])
		{
		    if(PlayerInfo[playerid][pMember] == 10||PlayerInfo[playerid][pLeader] == 10) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_WHITE,"{999999}You are not a Ballas member.");
		        ClearAnimations(playerid);
		    }
		}
		if(newcar == thea[1] || newcar == thea[2] || newcar == thea[3] || newcar == thea[4] || newcar == thea[5] || newcar == thea[6] || newcar == thea[7] || newcar == thea[8] || newcar == thea[9] || newcar == thea[10] || newcar == thea[11]
  		 || newcar == thea[12] || newcar == thea[13] || newcar == thea[14] || newcar == thea[15] || newcar == thea[16])
		{
		    if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) { }
		    else
			{
		        SendClientMessage(playerid, COLOR_WHITE,"{999999}You are not a Hitman.");
		        ClearAnimations(playerid);
		    }
		}
		if(newcar == helpercars[1] || newcar == helpercars[2] || newcar == helpercars[3] || newcar == helpercars[4] || newcar == helpercars[5])
		{
		    if(PlayerInfo[playerid][pHelper] >= 1) { }
		    else
			{
		        SendClientMessage(playerid, COLOR_WHITE,"{999999}You are not a Helper.");
		        ClearAnimations(playerid);
		    }
		}
		if(newcar == admincars[1] || newcar == admincars[2] || newcar == admincars[3] || newcar == admincars[4] || newcar == admincars[5])
		{
		    if(PlayerInfo[playerid][pAdmin] >= 1) { }
		    else
			{
		        SendClientMessage(playerid, COLOR_WHITE,"{999999}You are not a Admin.");
		        ClearAnimations(playerid);
		    }
		}
		if(newcar == si[1] || newcar == si[2] || newcar == si[3] || newcar == si[4] || newcar == si[5] || newcar == si[6] || newcar == si[7] || newcar == si[8] || newcar == si[9] || newcar == si[10] || newcar == si[11] || newcar == si[12] || newcar == si[13])
		{
		    if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12 || TakingLesson[playerid] == 2) { }
		    else
			{
		        SendClientMessage(playerid, COLOR_WHITE,"{999999}You are not a School Instructors or your don't have active leasson.");
		        ClearAnimations(playerid);
		    }
		}
		if(newcar == si[12] || newcar == si[13])
		{
		    if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
		    {
		        if(PlayerInfo[playerid][pRank] < 2)
		        {
		        	SendClientMessage(playerid, COLOR_WHITE,"{999999}You don't have rank 2.");
		        	ClearAnimations(playerid);
		        }
		    }
		}
		if(newcar == news[16] || newcar == news[17])
		{
		    if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		    {
		        if(PlayerInfo[playerid][pRank] < 4)
		        {
		        	SendClientMessage(playerid, COLOR_WHITE,"{999999}You don't have rank 4.");
		        	ClearAnimations(playerid);
		        }
		    }
		}
		if(newcar == farm[1] || newcar == farm[2] || newcar == farm[3] || newcar == farm[4] || newcar == farm[5] || newcar == farm[6] || newcar == farm[7] || newcar == farm[8] || newcar == farm[9] || newcar == farm[10]
		|| newcar == farm[11] || newcar == farm[12] || newcar == farm[13])
		{
		    KillTimer(timerfarmm[playerid]);
		    if(AreFaina[playerid] < 1)
		    {
				if(PlayerInfo[playerid][pJob] == 6) { }
    			else
				{
   					SendClientMessage(playerid, COLOR_WHITE, "{999999}You are not a Farmer.");
			    	ClearAnimations(playerid);
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_YELLOW, "Before Start Work Again , Sell Flour");
			    ClearAnimations(playerid);
			}
		}
		if(newcar == news[1] || newcar == news[2] || newcar == news[3] || newcar == news[4] || newcar == news[5] || newcar == news[6] || newcar == news[7] || newcar == news[8] || newcar == news[9] || newcar == news[10]
		|| newcar == news[11 || newcar == news[12]] || newcar == news[13] || newcar == news[14] || newcar == news[15] || newcar == news[16] || newcar == news[17])
		{
			if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9){ }
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE,"{999999}You are not a News Reporter !");
			    ClearAnimations(playerid);
			}
		}
   }
   if((IsACBUGWeapon(playerid) && RELEASED(KEY_FIRE)) && newkeys != KEY_FIRE && newkeys & KEY_CROUCH)
   {
       ApplyAnimation ( playerid , "PED" , "getup" , 4.1 , 0 , 0 , 0 , 0 , 0 ) ;
       SCM(playerid,COLOR_WHITE,"{AA3333}Using C-Bug Is Forbidden On Our Server , You Risk Ban !");
   }
   if ((newkeys==KEY_CTRL_BACK )&&(IsPlayerInAnyVehicle(playerid))&&(GetPlayerState(playerid)==PLAYER_STATE_DRIVER))
	{
        ShowPlayerDialog(playerid, Dialog_radio, DIALOG_STYLE_LIST, "Car music:","Radio Kiss FM\nRadio Pro Fm\nRadio Taraf\nRadio Bandit\nRadio Hot Style\nRadio Diz\nRadio Tequila\nOpreste Radio","Ok","Cancel");
	}
   if (newkeys & KEY_NO)
   {
        if(SwitchKey[playerid] == 1)
        {
			new string[100];
			for(new v=0; v<MAX_PVEHS; v++)
			{
   				if(CheckPlayerDistanceToVehicle(5.0, playerid, personalcar[v][playerid]))
				{
	 				if(CarInfo[OwnedVeh(personalcar[v][playerid])][cLock] == 1)
		  			{
   						GetVehicleParamsEx(personalcar[v][playerid],engine,lights,alarm,doors,bonnet,boot,objective);
	  	    			SetVehicleParamsEx(personalcar[v][playerid],engine,lights,alarm,0,bonnet,boot,objective);
						format(string, sizeof(string), "~h~%s~n~~g~Unlocked",CarInfo[OwnedVeh(personalcar[v][playerid])][cDescription]);
						GameTextForPlayer(playerid, string, 4000, 4);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						CarInfo[OwnedVeh(personalcar[v][playerid])][cLock] = 0;
						gCarLock[personalcar[v][playerid]] = 0;
						vUpdate(OwnedVeh(personalcar[v][playerid]), cLockx); //
						return 1;
					}
					else if(CarInfo[OwnedVeh(personalcar[v][playerid])][cLock] == 0)
					{
 						GetVehicleParamsEx(personalcar[v][playerid],engine,lights,alarm,doors,bonnet,boot,objective);
	    				SetVehicleParamsEx(personalcar[v][playerid],engine,lights,alarm,1,bonnet,boot,objective);
						format(string, sizeof(string), "~h~%s~n~~r~Locked",CarInfo[OwnedVeh(personalcar[v][playerid])][cDescription]);
						GameTextForPlayer(playerid, string, 4000, 4);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						CarInfo[OwnedVeh(personalcar[v][playerid])][cLock] = 1;
						gCarLock[personalcar[v][playerid]] = 1;
						vUpdate(OwnedVeh(personalcar[v][playerid]), cLockx); //
     					return 1;
					}
				}
			}
			return 1;
        }
        else if(SwitchKey[playerid] == 2)
		{
		    new carid,string[128];
			if(HireCar[playerid] == -1) return 1;
		    if(HireCar[playerid] != -1)
		    {
				carid = HireCar[playerid];
			}
            if(CheckPlayerDistanceToVehicle(5.0, playerid, HireCar[playerid]))
			{
			    if(gCarLock[carid] == 0)
		        {
			        new vehicles = GetVehicleModel(carid) - 400;
				    format(string, sizeof(string), "~h~%s~n~~r~Locked", aVehicleNames[vehicles]);
				    GameTextForPlayer(playerid, string, 4000, 4);
		  	        PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					gCarLock[carid] = 1;
	    			GetVehicleParamsEx(HireCar[playerid],engine,lights,alarm,doors,bonnet,boot,objective);
	      	    	SetVehicleParamsEx(HireCar[playerid],engine,lights,alarm,1,bonnet,boot,objective);
		            return 1;
			    }
				else if(gCarLock[carid] == 1)
				{
					new vehicles = GetVehicleModel(carid) - 400;
					format(string, sizeof(string), "~h~%s~n~~g~Unlocked", aVehicleNames[vehicles]);
				    GameTextForPlayer(playerid, string, 4000, 4);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					gCarLock[carid] = 0;
	    			GetVehicleParamsEx(HireCar[playerid],engine,lights,alarm,doors,bonnet,boot,objective);
	      	    	SetVehicleParamsEx(HireCar[playerid],engine,lights,alarm,0,bonnet,boot,objective);
		            return 1;
				}
			}
		}
	}
   if (newkeys & KEY_HANDBRAKE)
   {
       if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK && PlayerInfo[playerid][pAdmin] < 1)
	   {
		   new string[256];
		   format(string, sizeof(string), "[Cheating] %s (%d, level %d) created a jetpack.",GetName(playerid),playerid,PlayerInfo[playerid][pLevel]);
		   ABroadCast(COLOR_RED,string,1);
	   }
   }
   if (newkeys & KEY_CROUCH)
   {
       if(PlayerToPoint(10.0, playerid,907.50238, -1666.58813, 13.50640))
       {
			if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
			{
			    MoveObject(gatehqa, 907.46240, -1666.58813, 13.40640, 2, -0.04000, -2.32000, -90.00000);
            	SetTimer("gateadminclose" ,5000 ,false);
			}
       }
	   if(IsACop(playerid))
       {

       }
       if(IsACop(playerid))
       {
		   if(PlayerToPoint(15.0, playerid,1588.6552, -1637.9025, 15.0358))
           {
               MoveObject(gatelspd,1592.65674, -1638.05286, 9.89110,2, -1000.0, -1000.0, -1000.0);
               SetTimer("lspdgateclose" ,9000 ,false);
               return 1;
           }
           if(PlayerToPoint(15.0, playerid,2334.8999000, 2444.3999000, 8.3000000))
           {
               MoveDynamicObject(gatelvpd,2339.3000000, 2450.5000000, 8.3000000,2, -1000.0, -1000.0, -1000.0);
               SetTimer("lvpdgateclose" ,9000 ,false);
               return 1;
           }
           if(PlayerToPoint(15.0, playerid,2295.3000000, 2507.0000000, 5.7000000))
           {
               MoveDynamicObject(gatelvpd2,2295.3000000, 2507.0000000, 5.7000000,2, -1000.0, -1000.0, -1000.0);
               SetTimer("lvpdgateclose2" ,9000 ,false);
               return 1;
           }
		   if(PlayerToPoint(15.0, playerid,135.2833, 1941.3331, 21.6932))
           {
               MoveDynamicObject(gateng,122.0023, 1941.4100, 21.6932,2, -1000.0, -1000.0, -1000.0);
               SetTimer("nggateclose" ,9000 ,false);
               return 1;
           }
		   if(PlayerToPoint(15.0, playerid,1544.7007, -1630.7527, 13.2983))
           {
               MoveDynamicObject(lspdbar,1544.7007, -1630.7527, 13.2983,1,0.0000, 0.0000, 90.0000);
               SetTimer("lspdbarclose" ,9000 ,false);
               return 1;
           }
           if(PlayerToPoint(15.0, playerid,2238.22021, 2450.44312, 10.58781))
           {
               MoveDynamicObject(lvpdbar,2238.22021, 2450.44312, 10.58781,1,0.0000, 0.0000, 90.0000);
               SetTimer("lvpdbarclose" ,9000 ,false);
               return 1;
           }
	   }
	   if(PlayerToPoint(15.0, playerid,1813.5217, -1890.2693, 13.4141) && PlayerInfo[playerid][pMember] == 13)
		{
               MoveObject(taxibar,1811.57495, -1895.00598, 13.54720,1,   0.00000, -1.00000, -90.34000);
               SetTimer("taxibaraclose" ,9000 ,false);
               return 1;
    	}
   }
   if (((newkeys & KEY_WALK && newkeys & KEY_UP) || (newkeys & KEY_WALK && newkeys & KEY_DOWN) || (newkeys & KEY_WALK && newkeys & KEY_LEFT) || (newkeys & KEY_WALK && newkeys & KEY_RIGHT))
   || ((oldkeys & KEY_WALK && newkeys & KEY_UP) || (oldkeys & KEY_WALK && newkeys & KEY_DOWN) || (oldkeys & KEY_WALK && newkeys & KEY_LEFT) || (oldkeys & KEY_WALK && newkeys & KEY_RIGHT))
   || ((newkeys & KEY_WALK && oldkeys & KEY_UP) || (newkeys & KEY_WALK && oldkeys & KEY_DOWN) || (newkeys & KEY_WALK && oldkeys & KEY_LEFT) || (newkeys & KEY_WALK && oldkeys & KEY_RIGHT))
   && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
   {
		walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
   }
   if(newkeys == KEY_LOOK_BEHIND)
   {
	   if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	   {
		   new idcar = GetPlayerVehicleID(playerid),string[128],sendername[25];
		   if(IsABike(idcar)) return 1;
		   if(Refueling[playerid] == 0)
	  	   {
     	       if(vehEngine[idcar] == 0)
        	   {
				   vehEngine[idcar] = 1;
	               GetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,boot,objective);
	               SetVehicleParamsEx(idcar,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
	               new vehicle;
	               vehicle = GetVehicleModel(idcar) - 400;
	    		   GetPlayerName(playerid, sendername, sizeof(sendername));
	               SetPVarInt(playerid, "Engine", 1);
	               if(Undercover[playerid] != 0)
	               {
	                   format(string,sizeof(string),"* An unknown hitman starts the engine of his %s.",aVehicleNames[vehicle]);
		               ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	               }
	               else
	               {
		               format(string,sizeof(string),"* %s starts the engine of his %s.",sendername,aVehicleNames[vehicle]);
		               ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				   }
        	   }
      	  	   else if(vehEngine[idcar] == 1)
        	   {
    			   vehEngine[idcar] = 0;
    			   GetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,boot,objective);
      	    	   SetVehicleParamsEx(idcar,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
            	   new vehicle;
            	   vehicle = GetVehicleModel(idcar) - 400;
	        	   GetPlayerName(playerid, sendername, sizeof(sendername));
            	   SetPVarInt(playerid, "Engine", 0);
            	   if(Undercover[playerid] != 0)
            	   {
	                   format(string,sizeof(string),"* An unknown hitman stops the engine of his %s.",aVehicleNames[vehicle]);
	            	   ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	   }
            	   else
            	   {
	            	   format(string,sizeof(string),"* %s stops the engine of his %s.",sendername,aVehicleNames[vehicle]);
	            	   ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				   }
        	   }
	       }
		   else return SendClientMessage(playerid,COLOR_WHITE,"{999999}Please wait, you refill your vehicle.");
	   }
   }
   if (newkeys & KEY_SPRINT)
   {
       if(gPlayerUsingLoopingAnim[playerid] == 1)
       {
	       StopLoopingAnim(playerid);
       }
   }
   if (newkeys & KEY_ANALOG_DOWN)
   {
      if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
      {
         if(GetPVarInt(playerid, "Boot") == 0)
         {
			 GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
			 SetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_ON,objective);
			 SetPVarInt(playerid, "Boot", 1);
         }
         else if(GetPVarInt(playerid, "Boot") == 1)
         {
			 GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
			 SetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_OFF,objective);
			 SetPVarInt(playerid, "Boot", 0);
         }
      }
      return 1;
   }
   if (newkeys & KEY_SECONDARY_ATTACK)
   {
	   new string[300];
	   if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	   {
		   if(IsPlayerConnected(playerid))
		   {
			   if(BusinessRob[playerid] == 3) return SendClientMessage(playerid, COLOR_ROB, "You Have To Wait 10 Seconds To Rob The Bussiness");
			   for(new i = 1; i < sizeof(HouseInfo); i++)
			   {
				   if(IsPlayerInRangeOfPoint(playerid,2,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]) && GetPlayerVirtualWorld(playerid) == 0)
				   {
					   if(PlayerInfo[playerid][pPhousekey] == i || HouseInfo[i][hLock] == 0)
					   {
						   SetPlayerInterior(playerid,HouseInfo[i][hInterior]);
						   SetPlayerPosEx(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
						   GameTextForPlayer(playerid, "~w~Welcome Home", 5000, 1);
						   PlayerInfo[playerid][pInt] = HouseInfo[i][hInterior];
						   PlayerInfo[playerid][pLocal] = i;
						   SetPlayerVirtualWorld(playerid,HouseInfo[i][hVirtual]);
						   InHouse[playerid] = i;
						   if(strlen(housestring[InHouse[playerid]]) > 0)
						   {
			   			       StopAudioStreamForPlayer(playerid);
	    				       PlayAudioStreamForPlayer(playerid, housestring[InHouse[playerid]]);
						   }
					   }
					   else
					   {
						   GameTextForPlayer(playerid, "~r~~h~Locked", 5000, 1);
					   }
				   }
			   }
			   for(new i = 1; i < sizeof(BizzInfo); i++)
			   {
				   if (IsPlayerInRangeOfPoint(playerid,2,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				   {
					   if(BizzInfo[i][bSbiz] != 0) return 0;
					   if(GetPlayerCash(playerid) >= BizzInfo[i][bEntranceCost])
					   {
						   if(BizzInfo[i][bLocked] == 1)
						   {
							   GameTextForPlayer(playerid, "~r~~h~Closed", 5000, 1);
							   return 1;
						   }
						   if(LastBiz[playerid] != i)
						   {
							   GivePlayerCash(playerid,-BizzInfo[i][bEntranceCost]);
							   BizzInfo[i][bTill] += BizzInfo[i][bEntranceCost];
							   format(string,sizeof(string),"~r~-$%d",BizzInfo[i][bEntranceCost]);
							   GameTextForPlayer(playerid, string, 5000, 1);
						   }
						   else
						   {
							   GameTextForPlayer(playerid, "welcome back", 5000, 1);
						   }
						   LastBiz[playerid] = i;
						   if(BizzInfo[i][bType] == 3)
						   {
							   if(strlen(barstring[i][playerid]) > 0)
							   {
									StopAudioStreamForPlayer(playerid);
									PlayAudioStreamForPlayer(playerid, barstring[i]);
							   }
						   }
						   if(BizzInfo[i][bType] == 1)
						   {
                               SCM(playerid,COLOR_GREEN,"Scams & Trading With Real Money Is Forbidden On Our Server");
					           SCM(playerid,COLOR_WHITE,"{0739D0}[Biz-CMD]: {FFFFFF} /deposit, /withdraw, /balance, /transfer");
						   }
						   else if(BizzInfo[i][bType] == 2)
						   {
					           SCM(playerid,COLOR_WHITE,"{0739D0}[Biz-CMD]: {FFFFFF} /buygun");
						   }
						   else if(BizzInfo[i][bType] == 3)
						   {
					           SCM(playerid,COLOR_WHITE,"{0739D0}[Biz-CMD]: {FFFFFF} /buydrink");
						   }
						   else if(BizzInfo[i][bType] == 4)
						   {
					           SCM(playerid,COLOR_WHITE,"{C3FF00}[Biz-CMD]: {FFFFFF} /buytoys");
						   }
						   else if(BizzInfo[i][bType] == 5)
						   {
					           SCM(playerid,COLOR_WHITE,"{C3FF00}[Biz-CMD]: {FFFFFF} /dice");
						   }
						   else if(BizzInfo[i][bType] == 6)
						   {
								SCM(playerid,COLOR_WHITE,"{C3FF00}[Biz-CMD]: {FFFFFF} /buy");
								if(PlayerInfo[playerid][pFishPrice] != 0)
								{
									ShowPlayerDialog(playerid, DIALOG_SELLFISH, DIALOG_STYLE_MSGBOX, "Sell fish", "Do you want to sell the fish you are carying?", "Yes", "No");
								}
						   }
						   else if(BizzInfo[i][bType] == 7 || BizzInfo[i][bType] == 14)
						   {
					           SCM(playerid,COLOR_WHITE,"{C3FF00}[Biz-CMD]: {FFFFFF} /buyfood");
							   if(AreFaina[playerid] > 0)
						        {
						        	new money,faina = AreFaina[playerid];
		       						if(PlayerInfo[playerid][pFarmSkill] == 1)
						       		{
										money = 7000 + faina*500;
									}
									else if(PlayerInfo[playerid][pFarmSkill] == 2)
						       		{
										money = 10000 + faina*500;
									}
									else if(PlayerInfo[playerid][pFarmSkill] == 3)
						       		{
										money = 14000 + faina*500;
									}
									else if(PlayerInfo[playerid][pFarmSkill] == 4)
						       		{
										money = 16000 + faina*500;
									}
									else if(PlayerInfo[playerid][pFarmSkill] == 5)
						       		{
										money = 18000 + faina*500;
									}
									else if(PlayerInfo[playerid][pFarmSkill] >= 6)
						       		{
										money = 20000 + faina*500;
									}
									PlayerInfo[playerid][pFarmTimes]++;
									PlayerInfo[playerid][pFarmRem]--;
									AreFaina[playerid] = 0;
									GivePlayerCash(playerid, money);
									Update(playerid, pCashx);
									Update(playerid, pFarmTimesx);
									Update(playerid, pFarmRemx);
									if(PlayerInfo[playerid][pFarmSkill] <= 5)
									{
										if(PlayerInfo[playerid][pFarmRem] <= 0)
										{
			    							PlayerInfo[playerid][pFarmSkill]++;
			    							if(PlayerInfo[playerid][pFarmSkill] == 2)
											{
												PlayerInfo[playerid][pFarmRem] = 34;
											}
											else if(PlayerInfo[playerid][pFarmSkill] == 3)
											{
												PlayerInfo[playerid][pFarmRem] = 49;
											}
											else if(PlayerInfo[playerid][pFarmSkill] == 4)
											{
												PlayerInfo[playerid][pFarmRem] = 89;
											}
											else if(PlayerInfo[playerid][pFarmSkill] == 5)
											{
												PlayerInfo[playerid][pFarmRem] = 99;
											}
		    								Update(playerid,pFarmSkillx);
		    								Update(playerid,pFarmRemx);
			    							format(string,sizeof(string),"Cngrats ! Your Job Skill Is Now %d !",PlayerInfo[playerid][pFarmSkill]);
			    							SendClientMessage(playerid, COLOR_YELLOW, string);
										}
									}
									format(string,sizeof(string),"(+) You Sold A Flour Bag For $%s.", FormatNumber(money));
									SendClientMessage(playerid, COLOR_GREEN, string);
								}
						   }
						   else if(BizzInfo[i][bType] == 8)
						   {
					           SCM(playerid,COLOR_WHITE,"{C3FF00}[Biz-CMD]: {FFFFFF} /buyfightstyle");
						   }
						   else if(BizzInfo[i][bType] == 9)
						   {
					           SCM(playerid,COLOR_WHITE,"{C3FF00}[Biz-CMD]: {FFFFFF} /buyfood");
						   }
						   else if(BizzInfo[i][bType] == 11)
						   {
					           SCM(playerid,COLOR_WHITE,"{C3FF00}[Biz-CMD]: {FFFFFF} /buyglasses ($5000), /clothes, /buyhat ($5000)");
						   }
						   SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
						   SetPlayerPosEx(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
						   PlayerInfo[playerid][pInt] = BizzInfo[i][bInterior];
						   PlayerInfo[playerid][pLocal] = i+99;
	                       SetPlayerVirtualWorld(playerid,BizzInfo[i][bVirtual]);
						   InBussines[playerid] = i;
						   Update(playerid, pCashx);
			               new str1[184];
						   mysql_format(SQL,str1,sizeof(str1),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[i][bTill],i);
						   mysql_tquery(SQL,str1,"","");
					   }
					   else
					   {
						   GameTextForPlayer(playerid, "~r~~h~You dont have the cash", 5000, 1);
					   }
				   }
			   }
			   if(IsPlayerInRangeOfPoint(playerid,2,893.71094, -1636.59204, 14.72620)) // hq staff
			   {
				   if(PlayerInfo[playerid][pAdmin] >= 1) return SCM(playerid, COLOR_WHITE, AdminOnly);
				   SetPlayerInterior(playerid, 5);
				   SetPlayerPosEx(playerid, 1267.663208,-781.323242,1091.906250);
				   SetPlayerVirtualWorld(playerid, 696969);
				   PlayerInfo[playerid][pInt] = 5;
			   }
			   else if(IsPlayerInRangeOfPoint(playerid,2,1262.1661,-785.6332,1091.9063) && GetPlayerVirtualWorld(playerid) == 696969) // hq staff
			   {
				   SetPlayerInterior(playerid, 0);
				   SetPlayerPosEx(playerid, 893.71094, -1636.59204, 14.72620);
				   SetPlayerVirtualWorld(playerid, 0);
				   PlayerInfo[playerid][pInt] = 0;
			   }
			   else if (IsPlayerInRangeOfPoint(playerid,1,1552.5898,-1683.4698,13.5504) && Vending[playerid] == 0 && GetPlayerVirtualWorld(playerid) == 0) // dozator
			   {
			      	if(GetPlayerCash(playerid) < 200) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have money needed.");
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
        			ApplyAnimation(playerid, "VENDING", "VEND_USE", 4.0, 0, 0, 0, 0, 0);
           			PlayerPlaySound(playerid, 42600, 0.0, 0.0, 0.0);
           			SetPlayerFacingAngle(playerid, 272.63);
              		GameTextForPlayer(playerid, "~r~-200$", 5000, 1);
                	GivePlayerCash(playerid, -200);
					Update(playerid,pCashx);
					Vending[playerid] = 1;
					vendi[playerid] = SetTimerEx("Vendingg", 6000, 0, "i", playerid);
					vendi2[playerid] = SetTimerEx("Vendingg2", 2300, 0, "i", playerid);
					format(string, sizeof(string), "* %s bought a drink from vending machine.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			   }
			   else if (IsPlayerInRangeOfPoint(playerid,1,2273.5654,2428.7834,10.8203) && Vending[playerid] == 0) // dozator
			   {
					if(GetPlayerCash(playerid) < 200) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have money needed.");
					new sendername[MAX_PLAYER_NAME];
					GetPlayerName(playerid, sendername, sizeof(sendername));
        			ApplyAnimation(playerid, "VENDING", "VEND_USE", 4.0, 0, 0, 0, 0, 0);
           			PlayerPlaySound(playerid, 42600, 0.0, 0.0, 0.0);
           			SetPlayerFacingAngle(playerid, 272.63);
              		GameTextForPlayer(playerid, "~r~-200$", 5000, 1);
                	GivePlayerCash(playerid, -200);
					Update(playerid,pCashx);
					Vending[playerid] = 1;
					vendi[playerid] = SetTimerEx("Vendingg", 6000, 0, "i", playerid);
					vendi2[playerid] = SetTimerEx("Vendingg2", 2300, 0, "i", playerid);
					format(string, sizeof(string), "* %s bought a drink from vending machine.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			   }
			   else if (IsPlayerInRangeOfPoint(playerid,2,1090.7542,-1476.3380,22.7465)) //tatto
			   {
			       SetPlayerInterior(playerid,16);
				   SetPlayerPosEx(playerid,-204.439987,-26.453998,1002.273437);
				   GameTextForPlayer(playerid, "~r~Tatto", 5000, 1);
				   PlayerInfo[playerid][pInt] = 16;
			   }
			   else if (IsPlayerInRangeOfPoint(playerid,2,1765.1732,-1569.0253,1742.4930)) // enter visit
			   {
				   SetPlayerPosEx(playerid,1764.3419,-1567.7599,1742.4967);
			   }
			   else if (IsPlayerInRangeOfPoint(playerid,2,2166.4771,-1671.7883,15.0743)) // drugs house
			   {
	               SetPlayerInterior(playerid,5);
				   SetPlayerPosEx(playerid,318.5867,1115.4735,1083.8828);
				   PlayerInfo[playerid][pInt] = 5;
			   }
			   else if (IsPlayerInRangeOfPoint(playerid,2,-329.5258,1536.7759,76.6117)) //nr
			   {
			       if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			       {
				       SetPlayerInterior(playerid,3);
					   SetPlayerPosEx(playerid,-2027.0515,-104.5211,1035.1719);
					   PlayerInfo[playerid][pInt] = 3;
					   InHQ[playerid] = 9;
				   }
			   }
			   else if (IsPlayerInRangeOfPoint(playerid,2,2435.3064,1671.0139,10.8203)) //SI
			   {
			       if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
			       {
				       SetPlayerInterior(playerid,3);
					   SetPlayerPosEx(playerid,1494.2838,1304.3364,1093.2891);
					   PlayerInfo[playerid][pInt] = 3;
					   SetPlayerVirtualWorld(playerid, 3);
					   InHQ[playerid] = 12;
				   }
			   }
			   else if (IsPlayerInRangeOfPoint(playerid,2,1081.1794,-345.3979,73.9825))//hitman
			   {
			       if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
			       {
				       SetPlayerInterior(playerid,12);
					   SetPlayerPosEx(playerid,2323.9993,-1148.0469,1050.7101);
					   PlayerInfo[playerid][pInt] = 12;
					   InHQ[playerid] = 11;
					   SetPlayerVirtualWorld(playerid, 2);
				   }
			   }
			   else if (IsPlayerInRangeOfPoint(playerid,2,1754.3792,-1894.0465,13.5569)) //LS TAXI
			   {
			       if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
			       {
				       SetPlayerInterior(playerid,18);
					   SetPlayerPosEx(playerid,1700.9830,-1667.8865,20.2188);
					   PlayerInfo[playerid][pInt] = 18;
					   SetPlayerVirtualWorld(playerid, 5);
					   InHQ[playerid] = 13;
				   }
			   }
			   else if (IsPlayerInRangeOfPoint(playerid,2,1614.92480, 1816.09631, 10.91310)) //fireman / paramedic
			   {
			       if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
			       {
				       SetPlayerInterior(playerid,3);
					   SetPlayerPosEx(playerid,1494.2838,1304.3364,1093.2891);
					   PlayerInfo[playerid][pInt] = 3;
					   SetPlayerVirtualWorld(playerid, 7);
					   InHQ[playerid] = 14;
				   }
			   }
			   else if (IsPlayerInRangeOfPoint(playerid,2,2307.2935,-1786.0671,13.5557)) // b'dub house
			   {
			       SetPlayerInterior(playerid,3);
				   SetPlayerPosEx(playerid,1527.229980,-11.574499,1002.097106);
			       GameTextForPlayer(playerid, "~w~B'Dub House", 5000, 1);
				   PlayerInfo[playerid][pInt] = 3;
			   }
			   else if (IsPlayerInRangeOfPoint(playerid,2,157.3923,1903.2848,18.6660)) // armoury NG
			   {
	               if (IsACop(playerid))
	               {
			           SetPlayerInterior(playerid,10);
			    	   SetPlayerPosEx(playerid,246.5872,109.0304,1003.2188);
			    	   GameTextForPlayer(playerid, "~w~National Guard Armoury", 5000, 1);
			    	   PlayerInfo[playerid][pInt] = 10;
			    	   SetPlayerVirtualWorld(playerid, 4);
			    	   InHQ[playerid] = 3;
		    	   }
		       }
			   else if (IsPlayerInRangeOfPoint(playerid,2,242.8626,66.2978,1003.6406) && GetPlayerVirtualWorld(playerid) == 0) // lspd armoury
			   {
	               if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a cop.");
	               {
			           SetPlayerInterior(playerid,3);
			           SetPlayerVirtualWorld(playerid,333);
			    	   SetPlayerPosEx(playerid,288.8405,167.7809,1007.1719);
			    	   GameTextForPlayer(playerid, "~w~LSPD Staff HQ", 5000, 1);
			    	   PlayerInfo[playerid][pInt] = 3;
			    	   InHQ[playerid] = 1;
		    	   }
		       }
		       else if (IsPlayerInRangeOfPoint(playerid,2,242.8626,66.2978,1003.6406) && GetPlayerVirtualWorld(playerid) == 3) // lvpd armoury
			   {
	               if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a cop.");
	               {
			           SetPlayerInterior(playerid,3);
			           SetPlayerVirtualWorld(playerid,343);
			    	   SetPlayerPosEx(playerid,288.8405,167.7809,1007.1719);
			    	   GameTextForPlayer(playerid, "~w~LVPD Staff HQ", 5000, 1);
			    	   PlayerInfo[playerid][pInt] = 3;
			    	   InHQ[playerid] = 1;
		    	   }
		       }
		       else if (PlayerToPoint(2,playerid,1553.1854,-1675.8188,16.1953) && GetPlayerVirtualWorld(playerid) == 0)
		       {
		           SetPlayerPosEx(playerid,246.7732,65.1425,1003.6406);
	               SetPlayerInterior(playerid,6);
	               SetPlayerVirtualWorld(playerid,0);
	               format(string, sizeof(string), "~w~Inside the ~w~LSPD");
	               GameTextForPlayer(playerid, string, 1000, 1);
	               return 1;
		       }
		       else if (PlayerToPoint(2,playerid,2287.1047,2431.7996,10.8203))
		       {
		           SetPlayerPosEx(playerid,246.7732,65.1425,1003.6406);
	               SetPlayerInterior(playerid,6);
	               SetPlayerVirtualWorld(playerid,3);
	               format(string, sizeof(string), "~w~Inside the ~w~LVPD");
	               GameTextForPlayer(playerid, string, 1000, 1);
	               return 1;
		       }
		       else if (PlayerToPoint(2,playerid,627.6160,-571.7920,17.6242))
		       {
		           SetPlayerPosEx(playerid,238.5496,139.3451,1003.0234);
	               SetPlayerInterior(playerid,3);
	               format(string, sizeof(string), "~w~FBI");
	               GameTextForPlayer(playerid, string, 1000, 1);
	               return 1;
		       }
			   else if (IsPlayerInRangeOfPoint(playerid,2,1456.7423,2773.3423,10.8203))//Los Aztecas
			   {
			       if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
			       {
			           GameTextForPlayer(playerid, "~g~Los Aztecas", 1000, 1);
			           SetPlayerInterior(playerid,6);
			           PlayerInfo[playerid][pInt] = 6;
				       SetPlayerPosEx(playerid,774.213989,-48.924297,1000.585937);
				       SetPlayerVirtualWorld(playerid, 1);
	                   InHQ[playerid] = 4;
			       }
			   }
			   else if (IsPlayerInRangeOfPoint(playerid,2,2495.3271,-1690.6740,14.7656))//Grove Street
	           {
			       if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
			       {
			           GameTextForPlayer(playerid, "~g~Grove Street", 1000, 1);
			           SetPlayerInterior(playerid,3);
				       SetPlayerPosEx(playerid,2496.049804,-1695.238159,1014.742187);
				       InHQ[playerid] = 5;
				       SetPlayerVirtualWorld(playerid,393);
			       }
			   }
			   else if (IsPlayerInRangeOfPoint(playerid,2,1481.0206,-1771.1138,18.7958))//Government
	           {
			       if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
			       {
			           GameTextForPlayer(playerid, "~g~Government", 1000, 1);
			           SetPlayerInterior(playerid,3);
				       SetPlayerPosEx(playerid,386.5259, 173.6381, 1008.3828);
				       InHQ[playerid] = 7;
				       SetPlayerVirtualWorld(playerid,393);
			       }
			   }
			   else if (IsPlayerInRangeOfPoint(playerid,2,1455.2687,750.8684,11.0234))
	           {
			       if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
			       {
	                   SetPlayerInterior(playerid,3);
				       SetPlayerPosEx(playerid,964.106994,-53.205497,1001.124572);
				       GameTextForPlayer(playerid, "~w~Ballas HQ", 5000, 1);
				       PlayerInfo[playerid][pInt] = 3;
				       InHQ[playerid] = 10;
		           }
			   }
			   else if (IsPlayerInRangeOfPoint(playerid,2,725.6769,-1440.4506,13.5391))
	           {
			       if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
			       {
	                   SetPlayerInterior(playerid,12);
				       SetPlayerPosEx(playerid,2324.2273,-1148.8241,1050.7101);
				       GameTextForPlayer(playerid, "~w~Los Vagos HQ", 5000, 1);
				       PlayerInfo[playerid][pInt] = 12;
				       InHQ[playerid] = 6;
				       SetPlayerVirtualWorld(playerid,1);
		           }
			   }
			   else if (IsPlayerInRangeOfPoint(playerid,2,1510.3986,-1059.5723,25.0625))
			   {
				   if(areape == 1)
				   {
				       SetPlayerInterior(playerid,15);
					   SetPlayerPosEx(playerid,-1423.5153,935.8321,1036.4756);
					   PlayerInfo[playerid][pInt] = 15;
				   }
				   else return SCM(playerid,COLOR_WHITE,"Event area is closed.");
			   }
		   }
		   for(new i = 1; i <  sizeof(HouseInfo); i++)
		   {
			   if (PlayerToPoint(2, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]) && HouseInfo[i][hVirtual] == GetPlayerVirtualWorld(playerid))
		       {
				   SetPlayerVirtualWorld(playerid,0);
				   SetPlayerInterior(playerid,0);
				   SetPlayerPosEx(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
				   PlayerInfo[playerid][pInt] = 0;
				   PlayerInfo[playerid][pLocal] = 255;
				   InHouse[playerid] = -1;
				   StopAudioStreamForPlayer(playerid);
			   }
		   }
		   for(new i = 1; i <  sizeof(BizzInfo); i++)
		   {
			   if (PlayerToPoint(2, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]) && BizzInfo[i][bVirtual]==GetPlayerVirtualWorld(playerid) && BizzInfo[i][bSbiz] == 0)
			   {
				   SetPlayerInterior(playerid,0);
				   PlayerInfo[playerid][pInt] = 0;
				   SetPlayerPosEx(playerid,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ]);
				   PlayerInfo[playerid][pLocal] = 255;
	               SetPlayerVirtualWorld(playerid,0);
	               InBussines[playerid] = -1;
				   StopAudioStreamForPlayer(playerid);
			   }
		   }
		   if (IsPlayerInRangeOfPoint(playerid,2,1756.4181,-1577.8954,1742.5309) && PlayerInfo[playerid][pJailed] == 0)//jail
		   {
			   SetPlayerInterior(playerid,0);
			   SetPlayerPosEx(playerid,1798.5801,-1578.1804,14.0827);
			   PlayerInfo[playerid][pInt] = 0;
		   }
		   else if (IsPlayerInRangeOfPoint(playerid,2,1764.3419,-1567.7599,1742.4967)) // exit visit
		   {
			   SetPlayerPosEx(playerid,1765.1732,-1569.0253,1742.4930);
		   }
		   else if (IsPlayerInRangeOfPoint(playerid,2,-2027.0515,-104.5211,1035.1719)) //nr
		   {
			   SetPlayerInterior(playerid,0);
			   SetPlayerPosEx(playerid,-329.5258,1536.7759,76.6117);
			   PlayerInfo[playerid][pInt] = 0;
			   SetPlayerVirtualWorld(playerid, 0);
			   InHQ[playerid] = -1;
		   }
		   else if(IsPlayerInRangeOfPoint(playerid,2,2323.9993,-1148.0469,1050.7101) && GetPlayerVirtualWorld(playerid) == 2)//hitman
		   {
	           SetPlayerInterior(playerid,0);
			   SetPlayerVirtualWorld(playerid, 0);
			   SetPlayerPosEx(playerid,1081.1794,-345.3979,73.9825);
			   PlayerInfo[playerid][pInt] = 0;
			   InHQ[playerid] = -1;
		   }
		   else if (IsPlayerInRangeOfPoint(playerid,2,626.3122,-11.8606,1000.9219) && GetPlayerVirtualWorld(playerid) == 10) //tow
		   {
			   SetPlayerInterior(playerid,0);
			   SetPlayerPosEx(playerid,918.6766,-1252.2185,16.2109);
			   PlayerInfo[playerid][pInt] = 0;
			   SetPlayerVirtualWorld(playerid, 0);
			   InHQ[playerid] = -1;
		   }
		   else if (IsPlayerInRangeOfPoint(playerid,2,318.5867,1115.4735,1083.8828)) // drugs house
		   {
	           SetPlayerInterior(playerid,0);
			   SetPlayerPosEx(playerid,2166.4771,-1671.7883,15.0743);
			   PlayerInfo[playerid][pInt] = 0;
		   }
		   else if (PlayerToPoint(4.0, playerid,1494.2838,1304.3364,1093.2891) && GetPlayerVirtualWorld(playerid) == 3) //SI
		   {
			   SetPlayerInterior(playerid,0);
			   SetPlayerPosEx(playerid,2435.3064,1671.0139,10.8203);
			   PlayerInfo[playerid][pInt] = 0;
			   SetPlayerVirtualWorld(playerid, 0);
			   InHQ[playerid] = -1;
		   }
		   else if (IsPlayerInRangeOfPoint(playerid,2,1700.9830,-1667.8865,20.2188) && GetPlayerVirtualWorld(playerid) == 5) //LS TAXI
		   {
			   SetPlayerInterior(playerid,0);
			   SetPlayerPosEx(playerid,1754.3792,-1894.0465,13.5569);
			   PlayerInfo[playerid][pInt] = 0;
			   SetPlayerVirtualWorld(playerid, 0);
			   InHQ[playerid] = -1;
		   }
		   else if (IsPlayerInRangeOfPoint(playerid,2,1494.2838,1304.3364,1093.2891) && GetPlayerVirtualWorld(playerid) == 7) //Paramedic
		   {
			   SetPlayerInterior(playerid,0);
			   SetPlayerPosEx(playerid,1614.92480, 1816.09631, 10.91310);
			   PlayerInfo[playerid][pInt] = 0;
			   SetPlayerVirtualWorld(playerid, 0);
			   InHQ[playerid] = -1;
		   }
		   else if (IsPlayerInRangeOfPoint(playerid,2,774.213989,-48.924297,1000.585937) && GetPlayerVirtualWorld(playerid) == 1) // los aztecas
		   {
			   SetPlayerInterior(playerid,0);
			   SetPlayerPosEx(playerid,1456.7423,2773.3423,10.8203);
			   PlayerInfo[playerid][pInt] = 0;
			   if(InWar[PlayerInfo[playerid][pMember]] == 1)
			   {
					SetPlayerVirtualWorld(playerid, 1024);
			   }
			   else
			   {
					SetPlayerVirtualWorld(playerid, 0);
			   }
			   InHQ[playerid] = -1;
		   }
		   else if(IsPlayerInRangeOfPoint(playerid,2,246.5872,109.0304,1003.2188) && GetPlayerVirtualWorld(playerid) == 4) // armoury NG
		   {
		       SetPlayerInterior(playerid,0);
		       SetPlayerPosEx(playerid,157.3923,1903.2848,18.6660);
		       PlayerInfo[playerid][pInt] = 0;
		       SetPlayerVirtualWorld(playerid, 0);
		       InHQ[playerid] = -1;
	   	   }
		   else if (IsPlayerInRangeOfPoint(playerid,2,-204.439987,-26.453998,1002.273437))
		   {
			   SetPlayerInterior(playerid,0);
			   SetPlayerPosEx(playerid,1090.7542,-1476.3380,22.7465);
			   PlayerInfo[playerid][pInt] = 0;
		   }
		   else if (IsPlayerInRangeOfPoint(playerid,2,1527.229980,-11.574499,1002.097106))
		   {
			   SetPlayerInterior(playerid,0);
			   SetPlayerPosEx(playerid,2307.2935,-1786.0671,13.5557);
			   PlayerInfo[playerid][pInt] = 0;
		   }
		   else if (IsPlayerInRangeOfPoint(playerid,2,288.8405,167.7809,1007.1719) && GetPlayerVirtualWorld(playerid) == 333) // LSPD Armoury
		   {
			   SetPlayerInterior(playerid,6);
			   SetPlayerVirtualWorld(playerid,0);
			   SetPlayerPosEx(playerid,242.8626,66.2978,1003.6406);
			   PlayerInfo[playerid][pInt] = 6;
			   PlayerInfo[playerid][pLocal] = 0;
			   InHQ[playerid] = -1;
		   }
		   else if (IsPlayerInRangeOfPoint(playerid,2,288.8405,167.7809,1007.1719) && GetPlayerVirtualWorld(playerid) == 343) // LVPD Armoury
		   {
			   SetPlayerInterior(playerid,6);
			   SetPlayerVirtualWorld(playerid,3);
			   SetPlayerPosEx(playerid,242.8626,66.2978,1003.6406);
			   PlayerInfo[playerid][pInt] = 6;
			   PlayerInfo[playerid][pLocal] = 0;
			   InHQ[playerid] = -1;
		   }
		   else if (IsPlayerInRangeOfPoint(playerid,1,304.5868,-141.9874,1004.0625))//gunshopusa
		   {
			   SetPlayerPosEx(playerid,305.7950,-141.8203,1004.0547);
		   }
		   else if (IsPlayerInRangeOfPoint(playerid,1,298.8386,-141.9191,1004.0547))//gunshopusa
		   {
			   SetPlayerPosEx(playerid,300.1631,-141.8074,1004.0625);
		   }
		   else if (IsPlayerInRangeOfPoint(playerid,2,1262.1383,-785.3315,1091.9063) && GetPlayerVirtualWorld(playerid) == 3)//Guvern
		   {
			   SetPlayerInterior(playerid,0);
			   SetPlayerPosEx(playerid,1481.1063,-1771.2532,18.7958);
			   PlayerInfo[playerid][pInt] = 0;
			   SetPlayerVirtualWorld(playerid,0);
			   InHQ[playerid] = -1;
		   }
		   else if (IsPlayerInRangeOfPoint(playerid,2,834.1988,7.1422,1004.1870))
		   {
			   SetPlayerInterior(playerid,0);
			   SetPlayerPosEx(playerid,1247.9105,-1560.4454,13.5556);
			   PlayerInfo[playerid][pInt] = 0;
		   }
		   else if (PlayerToPoint(3.0,playerid,246.7732,65.1425,1003.6406) && GetPlayerVirtualWorld(playerid) == 0)
	       {
		       SetPlayerPosEx(playerid,1553.1854,-1675.8188,16.1953);
		       SetPlayerInterior(playerid,0);
		       PlayerInfo[playerid][pInt] = 0;
		       SetPlayerVirtualWorld(playerid,0);
	           format(string, sizeof(string), "~w~LSPD");
	           GameTextForPlayer(playerid, string, 1000, 1);
		   }
		   else if (PlayerToPoint(3.0,playerid,246.7732,65.1425,1003.6406) && GetPlayerVirtualWorld(playerid) == 3)
	       {
		       SetPlayerPosEx(playerid,2287.1047,2431.7996,10.8203);
		       SetPlayerInterior(playerid,0);
		       PlayerInfo[playerid][pInt] = 0;
		       SetPlayerVirtualWorld(playerid,0);
	           format(string, sizeof(string), "~w~LVPD");
	           GameTextForPlayer(playerid, string, 1000, 1);
		   }
		   else if (PlayerToPoint(5,playerid,387.7978,173.8582,1008.3828))
	       {
		       SetPlayerPosEx(playerid,1481.1063,-1771.2532,18.7958);
		       SetPlayerVirtualWorld(playerid,0);
		       SetPlayerInterior(playerid,0);
		       PlayerInfo[playerid][pInt] = 0;
	           format(string, sizeof(string), "~w~Government");
	           GameTextForPlayer(playerid, string, 1000, 1);
	       }
		   else if (PlayerToPoint(5,playerid,238.5496,139.3451,1003.0234) && GetPlayerVirtualWorld(playerid) == 0)
	       {
		       SetPlayerPosEx(playerid,627.6160,-571.7920,17.6242);
		       SetPlayerInterior(playerid,0);
		       PlayerInfo[playerid][pInt] = 0;
	           format(string, sizeof(string), "~w~Los Santos F.B.I");
	           GameTextForPlayer(playerid, string, 1000, 1);
	           InHQ[playerid] = -1;
		   }
		   else if (IsPlayerInRangeOfPoint(playerid,2,761.412963,1440.191650,1102.703125))
		   {
			   SetPlayerInterior(playerid,0);
			   SetPlayerPosEx(playerid,387.7978,173.8582,1008.3828);
			   PlayerInfo[playerid][pInt] = 0;
			   PlayerInfo[playerid][pLocal] = 255;
		   }
		   else if (IsPlayerInRangeOfPoint(playerid,2,964.106994,-53.205497,1001.124572)) //Ballas
		   {
			   SetPlayerInterior(playerid,0);
			   SetPlayerPosEx(playerid,1455.2687,750.8684,11.0234);
			   PlayerInfo[playerid][pInt] = 0;
			   PlayerInfo[playerid][pLocal] = 255;
			   InHQ[playerid] = -1;
			   if(InWar[PlayerInfo[playerid][pMember]] == 1)
			   {
					SetPlayerVirtualWorld(playerid, 1024);
			   }
			   else
			   {
					SetPlayerVirtualWorld(playerid, 0);
			   }
		   }
		   else if (IsPlayerInRangeOfPoint(playerid,2,2324.2273,-1148.8241,1050.7101) && GetPlayerVirtualWorld(playerid) == 1) //Los Vagos
		   {
			   SetPlayerInterior(playerid,0);
			   SetPlayerPosEx(playerid,725.6769,-1440.4506,13.5391);
			   PlayerInfo[playerid][pInt] = 0;
			   PlayerInfo[playerid][pLocal] = 255;
			   InHQ[playerid] = -1;
			   if(InWar[PlayerInfo[playerid][pMember]] == 1)
			   {
					SetPlayerVirtualWorld(playerid, 1024);
			   }
			   else
			   {
					SetPlayerVirtualWorld(playerid, 0);
			   }
		   }
		   else if (IsPlayerInRangeOfPoint(playerid,2,2496.049804,-1695.238159,1014.742187))//Grove Street
		    {
			   GameTextForPlayer(playerid, "~w~Grove Street", 1000, 1);
			   SetPlayerInterior(playerid,0);
			   PlayerInfo[playerid][pInt] = 0;
			   SetPlayerPosEx(playerid,2495.3271,-1690.6740,14.7656);
			   InHQ[playerid] = -1;
			   if(InWar[PlayerInfo[playerid][pMember]] == 1)
			   {
					SetPlayerVirtualWorld(playerid, 1024);
			   }
			   else
			   {
					SetPlayerVirtualWorld(playerid, 0);
			   }
		    }
		   else if (IsPlayerInRangeOfPoint(playerid,2,-1423.5153,935.8321,1036.4756))
		   {
			   if(areape == 1)
			   {
			       SetPlayerInterior(playerid,0);
				   SetPlayerPosEx(playerid,1510.3986,-1059.5723,25.0625);
				   PlayerInfo[playerid][pInt] = 0;
			   }
			   else return SCM(playerid,COLOR_WHITE,"Event area is closed.");
		   }
	   }
       if(GetPlayerVehicleID(playerid) == rentls[1] || GetPlayerVehicleID(playerid) == rentls[2] || GetPlayerVehicleID(playerid) == rentls[3])
	   {
		   TogglePlayerControllable(playerid, 1);
		   RemovePlayerFromVehicle(playerid);
       }
	   if(NoFuel[playerid] == 1)
	   {
		   RemovePlayerFromVehicle(playerid);
           TogglePlayerControllable(playerid, 1);
		   NoFuel[playerid] = 0;
	   }
	   ////////////////////////////////////////////////////////////////////////////////////////////////////////GARA / 24/7///////////////////////////////////////////////////////////////////////////
	   if(PlayerToPoint(4.0, playerid, 650.36047, -609.29718, 15.69630) || PlayerToPoint(4.0, playerid, 1833.0419, -1835.5486, 12.9753) || PlayerToPoint(4.0, playerid, 317.2124, -132.4013, 1002.9965))
	   {
			if(GetPlayerVirtualWorld(playerid) == 0)
			{
			   if(GetPlayerCash(playerid) < 100) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have money needed.");
			   new Float:health;
			   GetPlayerHealthEx(playerid,health);
			   if(health >= 75)
			   {
				   SetPlayerHealthEx(playerid, 100);
				   ApplyAnimation(playerid,"FOOD","EAT_Burger", 3.0, 0, 0, 0, 0, 0);
				   GivePlayerCash(playerid, -100);
				   GameTextForPlayer(playerid, "~r~-100$", 5000, 1);
				   Update(playerid, pCashx);
			   }
			   else
			   {
				   SetPlayerHealthEx(playerid, health+25);
				   ApplyAnimation(playerid,"FOOD","EAT_Burger", 3.0, 0, 0, 0, 0, 0);
				   GivePlayerCash(playerid, -100);
				   GameTextForPlayer(playerid, "~r~-100$", 5000, 1);
				   Update(playerid, pCashx);
			   }
			}
	    }
   }
   if (newkeys & KEY_ACTION)
   {
	  if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
      {
         if(GetPVarInt(playerid, "Lights") == 0)
         {
			 GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
			 SetVehicleParamsEx(veh,engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
			 SetPVarInt(playerid, "Lights", 1);
         }
         else if(GetPVarInt(playerid, "Lights") == 1)
         {
			 GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
			 SetVehicleParamsEx(veh,engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
			 SetPVarInt(playerid, "Lights", 0);
         }
      }
      return 1;
   }
   if (newkeys & KEY_ANALOG_UP)
   {
      if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
      {
         if(GetPVarInt(playerid, "Bonnet") == 0)
         {
			 GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
			 SetVehicleParamsEx(veh,engine,lights,alarm,doors,VEHICLE_PARAMS_ON,boot,objective);
			 SetPVarInt(playerid, "Bonnet", 1);
         }
         else if(GetPVarInt(playerid, "Bonnet") == 1)
         {
			 GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
			 SetVehicleParamsEx(veh,engine,lights,alarm,doors,VEHICLE_PARAMS_OFF,boot,objective);
			 SetPVarInt(playerid, "Bonnet", 0);
         }
      }
      return 1;
   }
   return 0;
}

public OnVehicleSpawn(vehicleid)
{
    if(!IsAnOwnableCar(vehicleid))
	{
		Gas[vehicleid] = 100;
  	}
  	else
  	{
  	    new engine,lights,alarm,doors,bonnet,boot,objective;
		if(CarInfo[OwnedVeh(vehicleid)][cLock] == 1)
		{
			GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
  	    	SetVehicleParamsEx(vehicleid,engine,lights,alarm,1,bonnet,boot,objective);
		}
		if(CarInfo[OwnedVeh(vehicleid)][cLock] == 0)
		{
			GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
  	    	SetVehicleParamsEx(vehicleid,engine,lights,alarm,0,bonnet,boot,objective);
		}
		ChangeVehiclePaintjob(vehicleid, CarInfo[OwnedVeh(vehicleid)][cPaintJ]);
		ModVehicle(vehicleid);
		SetVehicleNumberPlate(vehicleid,CarInfo[OwnedVeh(vehicleid)][cLicense]);
		vUpdate(OwnedVeh(vehicleid), cKMx);
  	}
  	vehRadio[vehicleid] = 0;
	return 1;
}

public SyncUp()
{
	new string[128],
		tmphour,
		tmpminute,
		tmpsecond,
		hour,
		minn,
		sec,
		da,
		mo,
		ye;
	gettime(hour,minn,sec);
	gettime(tmphour, tmpminute, tmpsecond);
	getdate(ye, mo, da);
	FixHour(tmphour);
	tmphour = shifthour;
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		format(string, sizeof(string), "{00FFAA}[TIME]: {FFFFFF} The Time Is Now {0000FF}%d:00",hour);
		BroadCast(COLOR_WHITE,string);
		ghour = tmphour;
		PayDay();
	    if(hour == 22)
	    {
        	mysql_tquery(SQL,"UPDATE users SET FactionTime = FactionTime+1 WHERE Member > 0","","");
        	foreach(Player, i)
        	{
				new escstr2[MAX_PLAYER_NAME],
					result[500],
					query[500];
				GetPlayerName(i, escstr2, sizeof(escstr2));
            	format(query, sizeof(query), "SELECT `FactionTime` FROM users WHERE `name` = '%s'", escstr2);
            	mysql_store_result();
				mysql_query(SQL,query);
				if(mysql_retrieve_row())
      			{
					mysql_fetch_field_row(result, "FactionTime"); PlayerInfo[i][pFactionTime] = strval( result );
				}
				mysql_free_result();
			}
			mysql_tquery(SQL,"UPDATE users SET ClanTime = ClanTime+1 WHERE Clan > 0","","");
		}
		if(hour == 23)
		{
			new str[256];
			mysql_tquery(SQL,"UPDATE cars SET days = days+1","","");
			foreach(Player,i)
		    {
		        if(PlayerInfo[i][pPcarkey] != 0)
 				{
 	                CarInfo[PlayerInfo[i][pPcarkey]][cDays]++;
 				}
 				if(PlayerInfo[i][pmotokey] != 0)
 				{
                    CarInfo[PlayerInfo[i][pmotokey]][cDays]++;
 				}
 				if(PlayerInfo[i][pprcarkey] != 0)
 				{
                    CarInfo[PlayerInfo[i][pprcarkey]][cDays]++;
 				}
 				if(PlayerInfo[i][pprcarkey2] != 0)
 				{
                    CarInfo[PlayerInfo[i][pprcarkey2]][cDays]++;
	 			}
 				if(PlayerInfo[i][pPPluscarkey] != 0)
 				{
	                CarInfo[PlayerInfo[i][pPPluscarkey]][cDays]++;
 				}
 				if(PlayerInfo[i][pPPluscarkey2] != 0)
 				{
		            CarInfo[PlayerInfo[i][pPPluscarkey2]][cDays]++;
 				}
			}
			mysql_tquery(SQL,"UPDATE `users` SET `OnlineToday` = '0'","","");
			foreach(Player, i)
			{
				if(IsPlayerConnected(i))
				{
					mysql_format(SQL,str,sizeof(str),"UPDATE `users` SET `OnlineToday` = '1' WHERE `name`='%s'",PlayerInfo[i][pNormalName]);
					mysql_tquery(SQL,str,"","");
				}
			}
		}
		if(hour == 21 && GetWeekDay() == 7)
		{
            mysql_tquery(SQL,"UPDATE `users` SET `MoneyD` = '0'","","");
		    mysql_tquery(SQL,"UPDATE `users` SET `Runners` = '0'","","");
		    mysql_tquery(SQL,"UPDATE `users` SET `Arrests` = '0'","","");
		    mysql_tquery(SQL,"UPDATE `users` SET `Tickets` = '0'","","");
		    mysql_tquery(SQL,"UPDATE `users` SET `DConfiscate` = '0'","","");
		    mysql_tquery(SQL,"UPDATE `users` SET `LConfiscate` = '0'","","");
		    mysql_tquery(SQL,"UPDATE `users` SET `Contracts` = '0'","","");
		    mysql_tquery(SQL,"UPDATE `users` SET `News` = '0'","","");
		    mysql_tquery(SQL,"UPDATE `users` SET `Lives` = '0'","","");
		    mysql_tquery(SQL,"UPDATE `users` SET `Orders` = '0'","","");
		    mysql_tquery(SQL,"UPDATE `users` SET `DDeposit` = '0'","","");
		    mysql_tquery(SQL,"UPDATE `users` SET `MDeposit` = '0'","","");
		    mysql_tquery(SQL,"UPDATE `users` SET `MUsed` = '0'","","");
		    mysql_tquery(SQL,"UPDATE `users` SET `WKills` = '0'","","");
		    mysql_tquery(SQL,"UPDATE `users` SET `WDeaths` = '0'","","");
		    mysql_tquery(SQL,"UPDATE `users` SET `LGiven` = '0'","","");
		    mysql_tquery(SQL,"UPDATE `users` SET `PHeals` = '0'","","");
		    mysql_tquery(SQL,"UPDATE `users` SET `HelpedPlayers` = '0'","","");
		    mysql_tquery(SQL,"UPDATE `users` SET `Paydayuri` = '0'","","");
		    foreach(Player,id)
			{
			    PlayerInfo[id][pRunners] = 0;
				PlayerInfo[id][pArrestss] = 0;
	            PlayerInfo[id][pTickets] = 0;
			    PlayerInfo[id][pWKills] = 0;
				PlayerInfo[id][pWDeaths] = 0;
			    PlayerInfo[id][pMoneyD] = 0;
			  	PlayerInfo[id][pMDeposit] = 0;
			    PlayerInfo[id][pDDeposit] = 0;
			    PlayerInfo[id][pOrders] = 0;
			    PlayerInfo[id][pPHeals] = 0;
			    PlayerInfo[id][pLGiven] = 0;
			    PlayerInfo[id][pMUsed] = 0;
			    PlayerInfo[id][pNews] = 0;
				PlayerInfo[id][pLives] = 0;
			    PlayerInfo[id][pDConfiscate] = 0;
		        PlayerInfo[id][pLConfiscate] = 0;
			    PlayerInfo[id][pContracts] = 0;
			    PlayerInfo[id][pHelpedPlayers] = 0;
			    PlayerInfo[id][pPaydayuri] = 0;
		    }
		    SendClientMessageToAll(COLOR_GREEN,"All Faction Raports Automaticly Set");
		}
		if(da == 28)
		{
			mysql_tquery(SQL,"UPDATE `users` SET `dm` = '0', `dmp` = '0'","","");
		}
		if(GetWeekDay() == 2 && hour == 23)
		{
			new str[256];
			mysql_format(SQL,str,sizeof(str),"UPDATE `users` SET `OnlineLastWeek` = '1', `OnlineThisWeek` = '0' WHERE `OnlineThisWeek`='1'");
			mysql_tquery(SQL,str,"","");
			foreach(Player, i)
			{
				if(IsPlayerConnected(i))
				{
					mysql_format(SQL,str,sizeof(str),"UPDATE `users` SET `OnlineThisWeek` = '1' WHERE `name`='%s'",PlayerInfo[i][pNormalName]);
					mysql_tquery(SQL,str,"","");
				}
			}
		}
		if (realtime)
		{
			SetWorldTime(hour);
		}
	}
	return 1;
}
public WeatherChange()
{
     new var = random(17);
     switch (var)
     {
         case 1: SendRconCommand("weather 1");


	}
}
public SendMSG(playerid)
{
	if(PlayerInfo[playerid][pLanguage] == 2)
	{
    	new randMSG = random(sizeof(RandomMSG));
    	SendClientMessage(playerid, COLOR_GREEN, RandomMSG[randMSG]);
	}
}

public PlaceAD(playerid)
{
	new string[256],sendername[30];
	KillTimer(AdvTimer[playerid]);
	GetPlayerName(playerid, sendername, sizeof(sendername));
	format(string,sizeof(string),"[ADS] %s (phone: {FFFFFF}%d{00FF00}): %s",sendername,PlayerInfo[playerid][pPnumber],AdvMSG[playerid]);
	foreach(Player, i)
	{
		if(i != playerid || PlayerInfo[i][pAdmin] == 0)
		{
			SendSplitMessage(i, COLOR_ADV, string);
		}
	}
	SendClientMessage(playerid, COLOR_GREEN, "Your Ad Is :");
	format(string,sizeof(string),"[ADS] %s (phone: {FFFFFF}%d{33AA33}): %s",sendername,PlayerInfo[playerid][pPnumber],AdvMSG[playerid]);
	SendClientMessage(playerid, COLOR_GREEN, string);
	SendClientMessage(playerid, COLOR_DARKPINK, "You Can Now Use Again /Ad");
	AdvPlayer[playerid] = 0;
	format(AdvMSG[playerid], 256, "");
	return 1;
}

public RentTimer(playerid)
{
	RentTime[playerid]++;
	TotalTimeRent[playerid]++;
	if(GetPlayerCash(playerid) < 20)
	{
		VehicleRent[RentVeh[playerid]] = -1;
		RentTime[playerid] = 0;
		TotalTimeRent[playerid] = 0;
		RentVeh[playerid] = -1;
		KillTimer(RentTimerr[playerid]);
		PlayerTextDrawHide(playerid, RentCar[playerid]);
	}
	if(RentTime[playerid] == 10)
	{
		new veh = GetPlayerVehicleID(playerid),str2[256],string[64];
		GivePlayerCash(playerid, -20);
		Update(playerid, pCashx);
		RentTime[playerid] = 0;
		format(string,sizeof(string),"Rentcar Cost: ~g~$%d",TotalTimeRent[playerid]*2);
		PlayerTextDrawSetString(playerid, RentCar[playerid], string);
		PlayerTextDrawShow(playerid, RentCar[playerid]);
		if(rentls[1] == veh || rentls[2] == veh || rentls[3] == veh || rentls[4] == veh || rentlv[1] == veh || rentlv[2] == veh || rentlv[3] == veh || rentlv[4] == veh || rentlv[5] == veh || rentlv[6] == veh || rentlv[7] == veh || rentlv[8] == veh || rentlv[9] == veh || rentlv[10] == veh || rentlv[11] == veh || rentlv[12] == veh || rentlv[13] == veh
		|| rentlv[14] == veh || rentlv[15] == veh || rentlv[16] == veh || rentlv[17] == veh || rentlv[18] == veh || rentlv[19] == veh)
		{
			BizzInfo[31][bTill] += 20;
			mysql_format(SQL,str2,sizeof(str2),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='31'",BizzInfo[31][bTill]);
			mysql_tquery(SQL,str2,"","");
		}
	}
	return 1;
}

public IsPlayerInArea(playerid, Float:minx, Float:miny, Float:maxx, Float:maxy)
{
   new Float:x, Float:y, Float:z;
   GetPlayerPos(playerid, x, y, z);
   if (x > minx && x < maxx && y > miny && y < maxy) return 1;
   return 0;
}

public IsPlayerInTurf(playerid, turfid)
{
	if(IsPlayerConnected(playerid))
	{
		if(turfid == -1)
		{
			return 0;
		}
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid,x,y,z);
		if(x >= TurfInfo[turfid][zMinX] && x < TurfInfo[turfid][zMaxX] && y >= TurfInfo[turfid][zMinY] && y < TurfInfo[turfid][zMaxY])
		{
	 		return 1;
		}
	}
	return 0;
}

public GetPlayerTurf(playerid)
{
    for(new i = 1; i < sizeof(Turfs); i++)
    {
        if(IsPlayerInTurf(playerid, i))
        {
            return i;
        }
    }
    return -1;
}

public Production()
{
	foreach(Player,i)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerDrunk[i] > 0)
			{
			    PlayerDrunk[i] = 0;
		     	PlayerDrunkTime[i] = 0;
	    		GameTextForPlayer(i, "~p~Drunk effect~n~~w~Gone", 3500, 1);
	    		SetPlayerDrunkLevel(i, 0);
			}
		}
	}
	return 1;
}

public PayDay()
{
	new string[128],
		str[256],
		string3[128],
		interest,
		account[MAX_PLAYERS],
		hour,
		minn,
		sec,
		expamount,
		rent[MAX_PLAYERS];
	gettime(hour,minn,sec);
	foreach(Player,i)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pLevel] >= 0)
		    {
            	new wakaname[25];
                GetPlayerName(i,wakaname,sizeof(wakaname));
			    if(MoneyMessage[i]==1)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "You failed to pay your debt, Jail time.");
                    new rand;
					rand = random(sizeof(gRandomJailSpawns));
					SetPlayerInterior(i, 6);
					SetPlayerPosEx(i,gRandomJailSpawns[rand][0],gRandomJailSpawns[rand][1],gRandomJailSpawns[rand][2]);
		            PlayerInfo[i][pJailed] = 1;
		            ResetPlayerWeaponsEx(i);
		            ResetPlayerWeapons(i);
					WantedPoints[i] = 0;
					PlayerInfo[i][pJailTime] = 240;
					format(string, sizeof(string), "You are jailed for %d seconds.   Bail: Unable", PlayerInfo[i][pJailTime]);
					SendClientMessage(i, COLOR_LIGHTBLUE, string);
					Update(i,pJailedx);
					Update(i,pJailTimex);
					TogglePlayerControllable(i, 0);
					SetTimerEx("UnFreezeStation", 1000, false, "i", i);
				}
				new key = PlayerInfo[i][pPhousekey];
				if(key != 999)
				{
					rent[i] = HouseInfo[key][hRent];
					if(rent[i] > GetPlayerCash(i) && strcmp(PlayerInfo[i][pNormalName], HouseInfo[key][hOwner], false) == 0)
					{
						PlayerInfo[i][pPhousekey] = 999;
						Update(i,pPhousekeyx);
					}
					HouseInfo[key][hTakings] += rent[i];
				    mysql_format(SQL,str,sizeof(str),"UPDATE `houses` SET `Takings`='%d' WHERE `ID`='%d'",HouseInfo[key][hTakings],key);
				    mysql_tquery(SQL,str,"","");
				}
				new tmpintrate;
				if(PlayerInfo[i][pPremiumAccount] == 1)
				{
					tmpintrate = 2;
	    			new bonus = PlayerInfo[i][pPayCheck] / 2;
				    PlayerInfo[i][pPayCheck] += bonus;
				}
				else
				{
					tmpintrate = 1;
				}
				account[i] = PlayerInfo[i][pAccount];
				Tax += TaxValue;
    			PlayerInfo[i][pAccount] -= TaxValue;
				new checks = PlayerInfo[i][pPayCheck];
    			PlayerInfo[i][pAccount] += checks;
				interest = (PlayerInfo[i][pAccount]/1000)*(tmpintrate);
				new finalinterest;
				SendClientMessage(i, COLOR_LIGHTGREEN, "----------------------------------------------------------------------------");
				SendClientMessage(i, COLOR_WHITE, "Your Paycheck has arrived; please visit the bank to withdraw your money.");
				new stringsu[256];
				if(PlayerInfo[i][pPayDay] >= 1)
				{
				format(stringsu,sizeof(stringsu),"{8E6CFF}You Just Played {00FF00}%d Minutes {8E6CFF}[31 Minutes For Recieve A Full Hour]",PlayerInfo[i][pPayDay]/60+1);
                SendSplitMessage(i, 0x87A1FFFF, stringsu);
                }
				if(PlayerInfo[i][pRob] < 20)
    			{
       				PlayerInfo[i][pRob]++;
           		}
           		else
           		{
           		    SendClientMessage(i, COLOR_WHITE, "You Can't Get Another Free/Rob Point Because It Already Is 20/20");
				}
                if(PlayerInfo[i][pPayDay] >= 1800)
				{
				    PlayerInfo[i][pConnectTime] += 1;
				    finalinterest = interest;
				    PlayerInfo[i][pPayDay] = 0;
				    if(PlayerInfo[i][pGiftTime] > 0)
				    {
				        PlayerInfo[i][pGiftTime] -= 1;
				        Update(i, pGiftTimex);
					}
				}
				else
				{
				    finalinterest = interest / 2;
				    format(stringsu,sizeof(stringsu),"You Only Recieved Half Paycheck Because You Played %d !",PlayerInfo[i][pPayDay]/60+1);
				    SendSplitMessage(i, COLOR_LIGHTBLUE, stringsu);
				}
				PlayerInfo[i][pExp] += 1;
				PlayerInfo[i][pAccount] += finalinterest;
				format(string, sizeof(string), "{FF4600}-- {FFFFFF}Paycheck: $%s | Bank Balance: $%s | Bank Interest: $%s | Tax: $%s (10 percent)", FormatNumber(checks), FormatNumber(PlayerInfo[i][pAccount]), FormatNumber(finalinterest), FormatNumber(TaxValue));
				SendClientMessage(i, COLOR_GREY, string);
				format(string3, sizeof(string3), "{FF4600}-- {FFFFFF}Rent: $%s | Total Earnings: {00FF00}$%d", FormatNumber(rent[i]), checks-TaxValue);
				SendClientMessage(i, COLOR_GREY, string3);
				SendClientMessage(i, COLOR_LIGHTGREEN, "----------------------------------------------------------------------------");
				format(string, sizeof(string), "~y~payday");
				GameTextForPlayer(i, string, 5000, 1);
				if(PlayerInfo[i][pMember] >= 0)
				{
					PlayerInfo[i][pPaydayuri] += 1;
					Update(i, pPaydayurix);
				}
				if(PlayerInfo[i][pCarLicT] > 0)
				{
					PlayerInfo[i][pCarLicT] -= 1;
				}
				if(PlayerInfo[i][pFlyLicT] > 0)
				{
					PlayerInfo[i][pFlyLicT] -= 1;
				}
				if(PlayerInfo[i][pBoatLicT] > 0)
				{
					PlayerInfo[i][pBoatLicT] -= 1;
				}
				if(PlayerInfo[i][pGunLicT] > 0)
				{
					PlayerInfo[i][pGunLicT] -= 1;
				}
				if(PlayerInfo[i][pFpunish] > 0)
				{
					PlayerInfo[i][pFpunish]--;
		 		}
		 		if(PlayerInfo[i][pFpunish] < 0)
		 		{
	    			PlayerInfo[i][pFpunish] = 0;
				}
				if(PlayerInfo[i][pCarLicSuspend] > 0)
				{
					PlayerInfo[i][pCarLicSuspend]--;
					Update(i, pCarLicSuspendx);
					if(PlayerInfo[i][pCarLicSuspend] == 0) SendClientMessage(i, COLOR_YELLOW, "* Your Driving License Have Been Confistanced Recently | Go To Driving School !");
				}
				if(PlayerInfo[i][pGunLicSuspend] > 0)
				{
					PlayerInfo[i][pGunLicSuspend]--;
					Update(i, pGunLicSuspendx);
					if(PlayerInfo[i][pGunLicSuspend] == 0) SendClientMessage(i, COLOR_YELLOW, "* Your Gun License Have Been Confistanced Recently");
				}
   				if(IsACop(i))
				{
    				PlayerInfo[i][pLawyer] += 1;
				}
				PlayerInfo[i][pPayCheck] = 0;
				if(PlayerInfo[i][pLevel] == 1 || PlayerInfo[i][pLevel] == 2 || PlayerInfo[i][pLevel] == 3 || PlayerInfo[i][pLevel] == 4)
				{
    				expamount = PlayerInfo[i][pLevel]*2;
					if(PlayerInfo[i][pExp] >= expamount)
					{
	    				SCM(i,COLOR_LIGHTBLUE,"[** You Can Now Use /BuyLevel **]");
					}
				}
				else if(PlayerInfo[i][pLevel] >= 5)
				{
    				expamount = PlayerInfo[i][pLevel]*3;
					if(PlayerInfo[i][pExp] >= expamount)
					{
	    				SCM(i,COLOR_LIGHTBLUE,"[** You Can Now Use /BuyLevel **]");
					}
				}
			}
		}
	}
	for(new x = 0; x < MAX_GROUPS; x++)
	{
	    DynamicFactions[x][fBank] += DynamicFactions[x][fPaydayMoney];
	    mysql_format(SQL,str,sizeof(str),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],x);
		mysql_tquery(SQL,str,"","");
	}
	return 1;
}

stock GetWeaponSlot (weaponid)
{
	switch (weaponid)
	{
		case 0, 1:
			return 0;

		case 2 .. 9:
			return 1;
		case 10 .. 15:
			return 10;
		case 16 .. 19, 39:
			return 8;
		case 22 .. 24:
			return 2;
		case 25 .. 27:
			return 3;
		case 28, 29, 32:
			return 4;
		case 30, 31:
			return 5;
		case 33, 34:
			return 6;
		case 35 .. 38:
			return 7;
		case 40:
			return 12;
		case 41 .. 43:
			return 9;

		case 44 .. 46:
			return 11;
	}
	return 0;
}

stock GivePlayerWeaponEx(playerid,weapon,ammo)
{
	WeaponData[playerid][GetWeaponSlot(weapon)] = true;
	return GivePlayerWeapon(playerid,weapon,ammo);
}

stock ResetPlayerWeaponsEx(playerid)
{
	WeaponData[playerid][0] = false; WeaponData[playerid][1] = false; WeaponData[playerid][2] = false; WeaponData[playerid][3] = false;
	WeaponData[playerid][4] = false; WeaponData[playerid][5] = false; WeaponData[playerid][6] = false; WeaponData[playerid][7] = false;
	WeaponData[playerid][8] = false; WeaponData[playerid][9] = false; WeaponData[playerid][10] = false; WeaponData[playerid][11] = false;
	WeaponData[playerid][12] = false;
	return ResetPlayerWeapons(playerid);
}

stock GetWeaponNameEx(id, name[], len) return format(name,len, "%s", GunNames[id]);

stock RemovePlayerWeapon(playerid, weaponid);
public RemovePlayerWeapon(playerid, weaponid)
{
	new plyWeapons[12] = 0,
		plyAmmo[12] = 0;
	for(new sslot = 0; sslot != 12; sslot++)
	{
		new wep, ammo;
		GetPlayerWeaponData(playerid, sslot, wep, ammo);
		if(wep != weaponid && ammo != 0) GetPlayerWeaponData(playerid, sslot, plyWeapons[sslot], plyAmmo[sslot]);
	}
	ResetPlayerWeaponsEx(playerid);
	ResetPlayerWeapons(playerid);
	for(new sslot = 0; sslot != 12; sslot++)
	{
	    if(plyAmmo[sslot] != 0) GivePlayerWeaponEx(playerid, plyWeapons[sslot], plyAmmo[sslot]);
	}
	return 1;
}

public split(const strsrc[], strdest[][], delimiter)
{
	new i,
		li,
		aNum,
		len;
	while(i <= strlen(strsrc)){
	    if(strsrc[i]==delimiter || i==strlen(strsrc)){
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return 1;
}

public OnPlayerRegister(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
		new playername3[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername3, sizeof(playername3));
		new Str[200];
		mysql_format(SQL,Str,sizeof(Str),"INSERT INTO `users` (`name`,`password`) VALUES ('%s','%s')",playername3,password);
		mysql_tquery(SQL,Str,"","");
		strmid(PlayerInfo[playerid][pKey], password, 0, strlen(password), 255);
		PlayerInfo[playerid][pCash] = GetPlayerCash(playerid);
	    GetPlayerHealthEx(playerid,PlayerInfo[playerid][pHealth]);
		if ((PlayerInfo[playerid][pPos_x]==0.0 && PlayerInfo[playerid][pPos_y]==0.0 && PlayerInfo[playerid][pPos_z]==0.0))
		{
     	    PlayerInfo[playerid][pPos_x] = 2246.6;
     	    PlayerInfo[playerid][pPos_y] = -1161.9;
     	    PlayerInfo[playerid][pPos_z] = 1029.7;
		}
		if(Spectate[playerid] != -1)
		{
			PlayerInfo[playerid][pPos_x] = Unspec[playerid][sPx];
			PlayerInfo[playerid][pPos_y] = Unspec[playerid][sPy];
			PlayerInfo[playerid][pPos_z] = Unspec[playerid][sPz];
			PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
			PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
		}
		new str[128];
		mysql_format(SQL,str,128,"UPDATE users SET `pHealth`='%.1f' WHERE `name`='%s'",PlayerInfo[playerid][pHealth],PlayerInfo[playerid][pNormalName]);
		mysql_tquery(SQL,str,"","");
		ShowPlayerDialog(playerid,DIALOG_LOGIN2,DIALOG_STYLE_PASSWORD,"SERVER: Login","Welcome to the New Land RP Server.\n\nPlease enter your password below!","Login","Cancel");
		return 1;
	}
	return 1;
}

public OnPlayerLogin(playerid,password[])
{
	new string[2000];
	new playerskin;
	new playername2[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername2, sizeof(playername2));
    playerskin = GetPlayerSkin(playerid);
    TextDrawShowForPlayer(playerid, LoginBox);
	TogglePlayerControllable(playerid, 0);
	format(string, sizeof(string), "Accounts: ~y~%s~w~ / Newest account: ~y~%s ~w~/ Most players online: %s",FormatNumber(sumaconturi),celmainoucont,recordjucatori);
	TextDrawSetString(LoginInfo, string);
	TextDrawShowForPlayer(playerid, LoginInfo);
	PlayerTextDrawSetPreviewModel(playerid, SkinPreview[playerid], playerskin);
	PlayerTextDrawShow(playerid, SkinPreview[playerid]);
    //PlayAudioStreamForPlayer(playerid, "http://k003.kiwi6.com/hotlink/1kmyunrjz6/Game-Arena_RPG.mp3");
    new playerip[16];
	GetPlayerIp(playerid,playerip,sizeof(playerip));
	/*if(NumIp(playerip, playerid) >= 3 && !IsBotOnIP(playerip))
	{
 		SendClientMessage(playerid, COLOR_LIGHTRED, "There are already 2 players connected with same IP.");
 		Kick(playerid);
 		return 1;
	}*/
    new qstr[256];
    format(qstr,100,"SELECT * FROM users WHERE `name`='%s' AND `password`='%s'",playername2,password);
    new Cache: pass = mysql_query(SQL,qstr);
    if(cache_get_row_count() > 0)
    {
		cache_get_field_content(0, "password", PlayerInfo[playerid][pKey], SQL, 130);
    	cache_get_field_content(0, "name", PlayerInfo[playerid][pNormalName], SQL, 130);
    	PlayerInfo[playerid][pLevel]                    = cache_get_field_content_int(0, "Level");
    	PlayerInfo[playerid][pAdmin]                    = cache_get_field_content_int(0, "Admin");
    	PlayerInfo[playerid][pHelper]                   = cache_get_field_content_int(0, "Helper");
    	PlayerInfo[playerid][pPremiumAccount]           = cache_get_field_content_int(0, "Premium");
    	//PlayerInfo[playerid][pHToken]            		= cache_get_field_content_int(0, "HelperToken");
    	PlayerInfo[playerid][pVIP]                      = cache_get_field_content_int(0, "VIP");
    	PlayerInfo[playerid][pYoutuber]                 = cache_get_field_content_int(0, "Youtuber");
    	PlayerInfo[playerid][pAcces]                    = cache_get_field_content_int(0, "Acces");
		PlayerInfo[playerid][pBeta]                     = cache_get_field_content_int(0, "Beta");
    	PlayerInfo[playerid][pSupport]                  = cache_get_field_content_int(0, "Support");
    	PlayerInfo[playerid][pManagerLideri]            = cache_get_field_content_int(0, "ManagerLideri");
    	PlayerInfo[playerid][pManagerLideriSupport]     = cache_get_field_content_int(0, "ManagerLideriSupport");
    	PlayerInfo[playerid][pManagerDepartamente]      = cache_get_field_content_int(0, "ManagerDepartamente");
    	PlayerInfo[playerid][pManagerTaxi]              = cache_get_field_content_int(0, "ManagerTaxi");
    	PlayerInfo[playerid][pManagerInstructori]       = cache_get_field_content_int(0, "ManagerInstructori");
    	PlayerInfo[playerid][pManagerMedici]            = cache_get_field_content_int(0, "ManagerMedici");
    	PlayerInfo[playerid][pManagerHitman]            = cache_get_field_content_int(0, "ManagerHitman");
    	PlayerInfo[playerid][pPremiumPoints]            = cache_get_field_content_int(0, "PremiumPoints");
    	PlayerInfo[playerid][pConnectTime]              = cache_get_field_content_int(0, "ConnectedTime");
    	PlayerInfo[playerid][pReg]                      = cache_get_field_content_int(0, "Registered");
    	PlayerInfo[playerid][pSex]                      = cache_get_field_content_int(0, "Sex");
    	PlayerInfo[playerid][pAge]                      = cache_get_field_content_int(0, "Age");
		PlayerInfo[playerid][pGasCan]                   = cache_get_field_content_int(0, "GasCan");
    	PlayerInfo[playerid][pOrigin]                   = cache_get_field_content_int(0, "Origin");
    	PlayerInfo[playerid][pMuted]                    = cache_get_field_content_int(0, "Muted");
	 	PlayerInfo[playerid][pMuteTime]                 = cache_get_field_content_int(0, "MuteTime");
    	PlayerInfo[playerid][pExp]                      = cache_get_field_content_int(0, "Respect");
    	PlayerInfo[playerid][pCash]                     = cache_get_field_content_int(0, "Money");
    	PlayerInfo[playerid][pAccount]                  = cache_get_field_content_int(0, "Bank");
    	PlayerInfo[playerid][pCrimes]                   = cache_get_field_content_int(0, "Crimes");
    	PlayerInfo[playerid][pKills]                    = cache_get_field_content_int(0, "Kills");
    	PlayerInfo[playerid][pDeaths]                   = cache_get_field_content_int(0, "Deaths");
    	PlayerInfo[playerid][pArrested]                 = cache_get_field_content_int(0, "Arrested");
    	PlayerInfo[playerid][pWantedDeaths]             = cache_get_field_content_int(0, "WantedDeaths");
    	PlayerInfo[playerid][pPhoneBook]                = cache_get_field_content_int(0, "Phonebook");
    	PlayerInfo[playerid][pWantedLevel]              = cache_get_field_content_int(0, "WantedLevel");
    	PlayerInfo[playerid][pFishes]                   = cache_get_field_content_int(0, "Fishes");
    	PlayerInfo[playerid][pJob]                      = cache_get_field_content_int(0, "Job");
    	PlayerInfo[playerid][pPayCheck]                 = cache_get_field_content_int(0, "Paycheck");
    	PlayerInfo[playerid][pHeadValue]                = cache_get_field_content_int(0, "HeadValue");
    	PlayerInfo[playerid][pJailed]                   = cache_get_field_content_int(0, "Jailed");
    	PlayerInfo[playerid][pJailTime]                 = cache_get_field_content_int(0, "JailTime");
    	PlayerInfo[playerid][pMats]                     = cache_get_field_content_int(0, "Materials");
    	PlayerInfo[playerid][pDrugs]                    = cache_get_field_content_int(0, "Drugs");
    	PlayerInfo[playerid][pLeader]                   = cache_get_field_content_int(0, "Leader");
    	PlayerInfo[playerid][pMember]                   = cache_get_field_content_int(0, "Member");
    	PlayerInfo[playerid][pRank]                     = cache_get_field_content_int(0, "Rank");
    	PlayerInfo[playerid][pFACWarns]                 = cache_get_field_content_int(0, "FWarn");
    	PlayerInfo[playerid][pFpunish]                  = cache_get_field_content_int(0, "FPunish");
    	PlayerInfo[playerid][pLawyer]                   = cache_get_field_content_int(0, "Acceptpoints");
    	PlayerInfo[playerid][pFishSkill]                = cache_get_field_content_int(0, "FishSkill");
    	PlayerInfo[playerid][pSpawnChange]              = cache_get_field_content_int(0, "SpawnChange");
 		PlayerInfo[playerid][pRobSkill]                 = cache_get_field_content_int(0, "RobSkill");
    	PlayerInfo[playerid][pTruckSkill]               = cache_get_field_content_int(0, "TruckSkill");
    	PlayerInfo[playerid][pTruckTimes]               = cache_get_field_content_int(0, "TruckTimes");
    	PlayerInfo[playerid][pTruckRem]                 = cache_get_field_content_int(0, "TruckRem");
    	PlayerInfo[playerid][pFarmSkill]                = cache_get_field_content_int(0, "FarmSkill");
    	PlayerInfo[playerid][pFarmTimes]                = cache_get_field_content_int(0, "FarmTimes");
    	PlayerInfo[playerid][pFarmRem]                  = cache_get_field_content_int(0, "FarmRem");
		PlayerInfo[playerid][pPizzaSkill]               = cache_get_field_content_int(0, "PizzaSkill");
    	PlayerInfo[playerid][pPizzaTimes]               = cache_get_field_content_int(0, "PizzaTimes");
    	PlayerInfo[playerid][pPizzaRem]                 = cache_get_field_content_int(0, "PizzaRem");
		PlayerInfo[playerid][pArmsSkill]                = cache_get_field_content_int(0, "ArmsSkill");
		PlayerInfo[playerid][pArmsTimes]                = cache_get_field_content_int(0, "ArmsTimes");
		PlayerInfo[playerid][pArmsRem]                	= cache_get_field_content_int(0, "ArmsRem");
		PlayerInfo[playerid][pBusSkill]                	= cache_get_field_content_int(0, "BusSkill");
		PlayerInfo[playerid][pCurierRem]                = cache_get_field_content_int(0, "CurierRem");
		PlayerInfo[playerid][pCurierSkill]              = cache_get_field_content_int(0, "CurierSkill");
		PlayerInfo[playerid][pCurierTimes]              = cache_get_field_content_int(0, "CurierTimes");
		PlayerInfo[playerid][pBusTimes]                	= cache_get_field_content_int(0, "BusTimes");
		PlayerInfo[playerid][pBusRem]                	= cache_get_field_content_int(0, "BusRem");
    	PlayerInfo[playerid][pFishTimes]                = cache_get_field_content_int(0, "FishTimes");
    	PlayerInfo[playerid][pFishRem]                  = cache_get_field_content_int(0, "FishRem");
    	PlayerInfo[playerid][pRobRem]                   = cache_get_field_content_int(0, "RobRem");
    	PlayerInfo[playerid][pRobTimes]                 = cache_get_field_content_int(0, "RobTimes");
    	PlayerInfo[playerid][pHealth]                   = cache_get_field_content_float(0, "pHealth");
    	PlayerInfo[playerid][pInt]                      = cache_get_field_content_int(0, "Inter");
    	PlayerInfo[playerid][pLocal]                    = cache_get_field_content_int(0, "Local");
    	PlayerInfo[playerid][pTeam]                     = cache_get_field_content_int(0, "Team");
    	PlayerInfo[playerid][pModel]                    = cache_get_field_content_int(0, "Model");
    	PlayerInfo[playerid][pPnumber]                  = cache_get_field_content_int(0, "PhoneNr");
    	PlayerInfo[playerid][pPhousekey]                = cache_get_field_content_int(0, "House");
    	PlayerInfo[playerid][pPbiskey]                  = cache_get_field_content_int(0, "Bizz");
    	PlayerInfo[playerid][pPos_x]                    = cache_get_field_content_float(0, "Pos_x");
    	PlayerInfo[playerid][pPos_y]                    = cache_get_field_content_float(0, "Pos_y");
    	PlayerInfo[playerid][pPos_z]                    = cache_get_field_content_float(0, "Pos_z");
    	PlayerInfo[playerid][pRob]                      = cache_get_field_content_int(0, "Rob");
    	PlayerInfo[playerid][pCarLicT]                  = cache_get_field_content_int(0, "CarLicT");
    	PlayerInfo[playerid][pCarLic]                   = cache_get_field_content_int(0, "CarLic");
		PlayerInfo[playerid][pCarLicSuspend]            = cache_get_field_content_int(0, "CarLicSuspend");
		PlayerInfo[playerid][pGunLicSuspend]            = cache_get_field_content_int(0, "GunLicSuspend");
    	PlayerInfo[playerid][pFlyLicT]                  = cache_get_field_content_int(0, "FlyLicT");
    	PlayerInfo[playerid][pFlyLic]                   = cache_get_field_content_int(0, "FlyLic");
    	PlayerInfo[playerid][pBoatLicT]                 = cache_get_field_content_int(0, "BoatLicT");
    	PlayerInfo[playerid][pBoatLic]                  = cache_get_field_content_int(0, "BoatLic");
    	PlayerInfo[playerid][pGunLicT]                  = cache_get_field_content_int(0, "GunLicT");
    	PlayerInfo[playerid][pGunLic]                   = cache_get_field_content_int(0, "GunLic");
    	PlayerInfo[playerid][pPayDay]                   = cache_get_field_content_int(0, "PayDay");
    	PlayerInfo[playerid][pTut]                      = cache_get_field_content_int(0, "Tutorial");
    	PlayerInfo[playerid][pWarns]                    = cache_get_field_content_int(0, "Warnings");
    	PlayerInfo[playerid][pRented]                   = cache_get_field_content_int(0, "Rented");
    	PlayerInfo[playerid][pFuel]                     = cache_get_field_content_int(0, "Fuel");
    	PlayerInfo[playerid][pWTalkie]                  = cache_get_field_content_int(0, "WTalkie");
    	cache_get_field_content(0, "Email", PlayerInfo[playerid][pEmail], SQL, 255);
    	cache_get_field_content(0, "RegisterDate", PlayerInfo[playerid][pRegistredDate], SQL, 255);
    	PlayerInfo[playerid][pClan]                     = cache_get_field_content_int(0, "Clan");
    	PlayerInfo[playerid][pHitT]                     = cache_get_field_content_int(0, "HitT");
    	PlayerInfo[playerid][pCRank]                    = cache_get_field_content_int(0, "CRank");
		PlayerInfo[playerid][pCWarns]                   = cache_get_field_content_int(0, "ClanWarns");
    	PlayerInfo[playerid][pPhone]                    = cache_get_field_content_int(0, "Phone");
    	PlayerInfo[playerid][pSQLID]                    = cache_get_field_content_int(0, "id");
    	PlayerInfo[playerid][pPcarkey]                  = cache_get_field_content_int(0, "Carkey");
    	PlayerInfo[playerid][pmotokey]                  = cache_get_field_content_int(0, "motokey");
    	PlayerInfo[playerid][pprcarkey2]                = cache_get_field_content_int(0, "prcarkey2");
    	PlayerInfo[playerid][pPPluscarkey]              = cache_get_field_content_int(0, "pluscarkey");
    	PlayerInfo[playerid][pPPluscarkey2]             = cache_get_field_content_int(0, "pluscarkey2");
    	PlayerInfo[playerid][pPlusSlot1]                = cache_get_field_content_int(0, "PlusSlot1");
    	PlayerInfo[playerid][pPlusSlot2]                = cache_get_field_content_int(0, "PlusSlot2");
    	PlayerInfo[playerid][phelikey]                  = cache_get_field_content_int(0, "helikey");
    	PlayerInfo[playerid][pprcarkey]                 = cache_get_field_content_int(0, "prcarkey");
    	cache_get_field_content(0, "Victim", PlayerInfo[playerid][pVictim], SQL, 255);
    	cache_get_field_content(0, "Accused", PlayerInfo[playerid][pAccused], SQL, 255);
    	cache_get_field_content(0, "Crime1", PlayerInfo[playerid][pCrime1], SQL, 255);
    	cache_get_field_content(0, "Crime2", PlayerInfo[playerid][pCrime2], SQL, 255);
    	cache_get_field_content(0, "Crime3", PlayerInfo[playerid][pCrime3], SQL, 255);
        PlayerInfo[playerid][pBTemp]                    = cache_get_field_content_int(0, "BTemp");
    	PlayerInfo[playerid][pBYear]                    = cache_get_field_content_int(0, "BYear");
    	PlayerInfo[playerid][pBMonth]                   = cache_get_field_content_int(0, "BMonth");
    	PlayerInfo[playerid][pBDay]                     = cache_get_field_content_int(0, "BDay");
    	cache_get_field_content(0, "BBy", PlayerInfo[playerid][pBBy], SQL, 255);
    	cache_get_field_content(0, "BReason", PlayerInfo[playerid][pBReason], SQL, 255);
    	PlayerInfo[playerid][pStatus]                   = cache_get_field_content_int(0, "Status");
    	PlayerInfo[playerid][pALeader]                  = cache_get_field_content_int(0, "ALeader");
    	PlayerInfo[playerid][pLanguage]                 = cache_get_field_content_int(0, "Language");
    	PlayerInfo[playerid][pClanTag]                  = cache_get_field_content_int(0, "ClanTag");
    	PlayerInfo[playerid][pFWorks]                   = cache_get_field_content_int(0, "FWorks");
    	PlayerInfo[playerid][pVirtualPD]                = cache_get_field_content_int(0, "VirtualPD");
    	PlayerInfo[playerid][pGlasses]                  = cache_get_field_content_int(0, "Glasses");
    	PlayerInfo[playerid][pFactionTime]              = cache_get_field_content_int(0, "FactionTime");
    	PlayerInfo[playerid][pCredits]                  = cache_get_field_content_int(0, "CreditsF");
    	PlayerInfo[playerid][pNMuted]                   = cache_get_field_content_int(0, "NMuted");
    	PlayerInfo[playerid][pHelpedPlayers]            = cache_get_field_content_int(0, "HelpedPlayers");
    	PlayerInfo[playerid][pCommands]                 = cache_get_field_content_int(0, "Commands");
    	PlayerInfo[playerid][pHost]            			= cache_get_field_content_int(0, "Host");
    	PlayerInfo[playerid][pPhoneBlock]            	= cache_get_field_content_int(0, "PhoneBlock");
    	PlayerInfo[playerid][pHiddenColor]            	= cache_get_field_content_int(0, "HiddenColor");
    	PlayerInfo[playerid][pGiftTime]            		= cache_get_field_content_int(0, "GiftTime");
    	PlayerInfo[playerid][pSkillCoal]                = cache_get_field_content_int(0, "SkillCoal");
    	PlayerInfo[playerid][pRemainCoal]                = cache_get_field_content_int(0, "RemainCoal");
    	PlayerInfo[playerid][pTransportateCoal]                = cache_get_field_content_int(0, "TransportateCoal");
    	PlayerInfo[playerid][pRunners]                  = cache_get_field_content_int(0, "Runners");
        PlayerInfo[playerid][pArrestss]                 = cache_get_field_content_int(0, "Arrests");
        PlayerInfo[playerid][pTickets]                  = cache_get_field_content_int(0, "Tickets");
        PlayerInfo[playerid][pDConfiscate]              = cache_get_field_content_int(0, "DConfiscate");
        PlayerInfo[playerid][pLConfiscate]              = cache_get_field_content_int(0, "LConfiscate");
        PlayerInfo[playerid][pContracts]                = cache_get_field_content_int(0, "Contracts");
        PlayerInfo[playerid][pNews]                     = cache_get_field_content_int(0, "News");
        PlayerInfo[playerid][pLives]                    = cache_get_field_content_int(0, "Live");
        PlayerInfo[playerid][pOrders]                   = cache_get_field_content_int(0, "Orders");
        PlayerInfo[playerid][pDDeposit]                 = cache_get_field_content_int(0, "DDeposit");
        PlayerInfo[playerid][pMDeposit]                 = cache_get_field_content_int(0, "MDeposit");
        PlayerInfo[playerid][pMUsed]                    = cache_get_field_content_int(0, "MUsed");
        PlayerInfo[playerid][pWKills]                   = cache_get_field_content_int(0, "WKills");
        PlayerInfo[playerid][pWDeaths]                  = cache_get_field_content_int(0, "WDeaths");
        PlayerInfo[playerid][pLGiven]                   = cache_get_field_content_int(0, "LGiven");
        PlayerInfo[playerid][pPHeals]                   = cache_get_field_content_int(0, "PHeals");
        PlayerInfo[playerid][pMoneyD]                   = cache_get_field_content_int(0, "MoneyD");
        PlayerInfo[playerid][pPaydayuri]            = cache_get_field_content_int(0, "Paydayuri");
    	PlayerInfo[playerid][pHats]                     = cache_get_field_content_int(0, "Hats");
    	PlayerInfo[playerid][pFightStyle]               = cache_get_field_content_int(0, "FightStyle");
    	PlayerInfo[playerid][pHUD1]               		= cache_get_field_content_int(0, "HUD1");
    	PlayerInfo[playerid][pHUD2]               		= cache_get_field_content_int(0, "HUD2");
    	PlayerInfo[playerid][pHUD3]              	 	= cache_get_field_content_int(0, "HUD3");
    	PlayerInfo[playerid][pPinCode]              	= cache_get_field_content_int(0, "PinCode");
		for(new ev=0; ev<50; ev++)
		{
			new strb[30];
			format(strb, sizeof(strb),"Quest%d",ev);
			QEvent[playerid][ev] 						= cache_get_field_content_int(0, strb);
		}
	}
	else
	{
		new stringyy[320],
			loginname[64];
		GetPlayerName(playerid,loginname,sizeof(loginname));
		gPlayerLogTries[playerid] -= 1;
		if(gPlayerLogTries[playerid] == 1 || gPlayerLogTries[playerid] == 0)
		{
			format(stringyy,sizeof(stringyy),"{FF0000}Incorrect password. You have %d remaining login attempts left.", gPlayerLogTries[playerid]);
			SendClientMessage(playerid, COLOR_RED, stringyy);
		}
		ShowPlayerDialog(playerid,DIALOG_LOGIN2,DIALOG_STYLE_PASSWORD,"SERVER: Login","Welcome to the New Land RP Server.\n\nPlease enter your password below!","Login","Cancel");
        if(gPlayerLogTries[playerid] == -1)
		{
		    new stringkick[256];
		    format(stringkick, sizeof(stringkick), "[AdmWarn]: {0087FF}%s {FFFFFF}has been kicked for entering the wrong password 2 times.",loginname);
		   	ABroadCast(COLOR_AdminWarn,stringkick,1);
			KickEx(playerid);
		}
        return 1;
	}
	cache_delete(pass);
	ResetPlayerCash(playerid);
	GivePlayerCash(playerid,PlayerInfo[playerid][pCash]);
	CurrentMoney[playerid] = PlayerInfo[playerid][pCash];
	KillTimer(login[playerid]);

	new name2[MAX_PLAYER_NAME];
	GetPlayerName(playerid,name2,sizeof(name2));

	if(PlayerInfo[playerid][pReg] == 0)
	{
		PlayerInfo[playerid][pLevel] = 1;
		PlayerInfo[playerid][pHealth] = 100.0;
 	    PlayerInfo[playerid][pPos_x] = 2246.6;
 	    PlayerInfo[playerid][pPos_y] = -1161.9;
 	    PlayerInfo[playerid][pPos_z] = 1029.7;
		PlayerInfo[playerid][NoTp] = 0;
		PlayerInfo[playerid][pInt] = 0;
		PlayerInfo[playerid][pLocal] = 255;
		PlayerInfo[playerid][pTeam] = 3;
		PlayerInfo[playerid][pModel] = 47;
		PlayerInfo[playerid][pPnumber] = 0;
		PlayerInfo[playerid][pPhousekey] = 999;
		PlayerInfo[playerid][pPbiskey] = 255;
		PlayerInfo[playerid][pAccount] = 1000;
		PlayerInfo[playerid][pPcarkey] = 0;
		PlayerInfo[playerid][pmotokey] = 0;
		PlayerInfo[playerid][pprcarkey2] = 0;
		PlayerInfo[playerid][pPPluscarkey] = 0;
		PlayerInfo[playerid][pPPluscarkey2] = 0;
		PlayerInfo[playerid][phelikey] = 0;
		PlayerInfo[playerid][pprcarkey] = 0;
		PlayerInfo[playerid][pReg] = 1;
		PlayerInfo[playerid][pBoatLic] = 0;
        PlayerInfo[playerid][pBoatLicT] = 0;
		PlayerInfo[playerid][pFlyLic] = 0;
        PlayerInfo[playerid][pFlyLicT] = 0;
		PlayerInfo[playerid][pCarLic] = 0;
        PlayerInfo[playerid][pCarLicT] = 0;
		PlayerInfo[playerid][pPinCode] = 0;
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pCarLicSuspend] = 0;
		Update(playerid, pCarLicSuspendx);
		PlayerInfo[playerid][pGunLic] = 0;
        PlayerInfo[playerid][pGunLicT] = 0;
		PlayerInfo[playerid][pGunLicSuspend] = 0;
		Update(playerid, pGunLicSuspendx);
		new //string[350],
			str[256],
			d,
			m,
			y,
			h,
			mine,
			s;
		getdate(y,m,d);
		gettime(h,mine,s);
		format(string,sizeof(string),  "%d-%02d-%02d %02d:%02d:%02d",y,m,d,h,mine,s);
		strmid(PlayerInfo[playerid][pRegistredDate], string, 0, strlen(string), 255);
		mysql_format(SQL,str,sizeof(str),"UPDATE users SET `pHealth`='100.0',`Team`='3',`Model`='250', `IP`='%s' WHERE `name`='%s'",playerip,PlayerInfo[playerid][pNormalName]);
		mysql_tquery(SQL,str,"","");
		Update(playerid,pCashx);
		Update(playerid,pLevelx);
		Update(playerid,pPhousekeyx);
		Update(playerid,pPbiskeyx);
		Update(playerid,pPnumberx);
		Update(playerid,pRegx);
		Update(playerid,pRegistredDatex);
		Update(playerid,pPcarkeyx);
		Update(playerid,pmotokeyx);
		Update(playerid,pprcarkey2x);
		Update(playerid,pPPluscarkeyx);
		Update(playerid,pPPluscarkey2x);
		Update(playerid,phelikeyx);
		Update(playerid,pprcarkeyx);
	}
	if(PlayerInfo[playerid][pFightStyle] > 0)
	{
	    if(PlayerInfo[playerid][pFightStyle] == 1)
	    {
	        SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
		}
		else if(PlayerInfo[playerid][pFightStyle] == 2)
	    {
	        SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
		}
		else if(PlayerInfo[playerid][pFightStyle] == 3)
	    {
	        SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
		}
		else if(PlayerInfo[playerid][pFightStyle] == 4)
	    {
	        SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
		}
		else if(PlayerInfo[playerid][pFightStyle] == 5)
	    {
	        SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
		}
	}
	else if(PlayerInfo[playerid][pFightStyle] == 0)
	{
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
	}
    StopAudioStreamForPlayer(playerid);
    new string2[128];
    if(PlayerInfo[playerid][pTut] == 1)
    {
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"");
	}
	SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
	new adminss=0, adminsafk=0, helperss=0, helpersafk=0;
	foreach(Player, ids2)
	{
		if(PlayerInfo[ids2][pAdmin] > 0)
		{
			adminss++;
			if(IsPlayerAFK[ids2] > 0)
			{
				adminsafk++;
			}
		}
		if(PlayerInfo[ids2][pHelper] > 0)
		{
			helperss++;
			if(IsPlayerAFK[ids2] > 0)
			{
				helpersafk++;
			}
		}
	}
	new query[256],playeriddd,strings[128],namee[30];
	GetPlayerName(playerid, namee, sizeof(namee));
	if (PlayerInfo[playerid][pPremiumAccount] == 1)
	{
		SendClientMessage(playerid, COLOR_YELLOW,"- You Are Logged In As {00FF00}'Premium User'");
	}
	if (PlayerInfo[playerid][pVIP] == 1)
	{
		SendClientMessage(playerid, COLOR_YELLOW,"- You Are Logged In As {00FF00}'VIP User'");
	}
	if (PlayerInfo[playerid][pYoutuber] == 1)
	{
		SendClientMessage(playerid, COLOR_YELLOW,"- You Are Logged In As {00FF00}'Aparater User'");
	}
	if (PlayerInfo[playerid][pAcces] == 1)
	{
		SendClientMessage(playerid, COLOR_YELLOW,"- You Are Logged In As {00FF00}'Full Access Admin'");
	}
	if(PlayerInfo[playerid][pPinCode] == 0 && PinLogged[playerid] == 0)
	{
	    SCM(playerid, -1,"{FF9900}You Have'nt PinCode | Use /SetPin !");
	}
	if(PlayerInfo[playerid][pPinCode] != 0 && PinLogged[playerid] == 0)
	{
	    SCM(playerid, -1, NeedPin);
	}
	if (PlayerInfo[playerid][pAdmin] > 0)
	{
		format(string2, sizeof(string2), "[HelloBot]: Admin %s Has Just Logged In",namee);
		ABroadCast(COLOR_ADMCHAT, string2,1);
	    HLChat(COLOR_ADMCHAT,string2);
	}
	if (PlayerInfo[playerid][pHelper] > 0)
	{
		format(string2, sizeof(string2), "[HelloBot]: Helper %s Has Just Logged In",namee);
		ABroadCast(COLOR_ADMCHAT, string2,1);
	    HLChat(COLOR_ADMCHAT,string2);
	}
	format(query,sizeof(query),"SELECT PlayerID FROM `friends` WHERE `FriendID`='%d'", PlayerInfo[playerid][pSQLID]);
	new Cache: resultt = mysql_query(SQL,query);
	if(cache_get_row_count() > 0)
	{
		for(new iddd, jddd = cache_get_row_count (); iddd != jddd; ++iddd)
		{
			playeriddd = cache_get_field_content_int(iddd, "PlayerID");
			foreach(Player, ids)
			{
				if(PlayerInfo[ids][pSQLID] == playeriddd)
				{
					format(strings,sizeof(strings),"{FFC266}** {FFFF00}Your Friend %s Has Just Logged In {FFC266}**", namee);
					SendClientMessage(ids, COLOR_YELLOW, strings);
				}
			}
		}
	}
	cache_delete(resultt);
	if (PlayerInfo[playerid][pWantedLevel] > 0)
	{
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
		PlayerTextDrawShow(playerid, WantedText[playerid]);
		new str1[256];
        format(str1,sizeof(str1),"Wanted Clear In : ~r~%d MINUTES",wantedlost[playerid]/60+1);
		PlayerTextDrawSetString(playerid, WantedText[playerid], str1);
		SendClientMessage(playerid, COLOR_RED2, "Lost 1 Wanted Level !");
		wantedlost[playerid] = 1800;
		WantedPoints[playerid] = PlayerInfo[playerid][pWantedLevel]*2;
		DestroyDynamic3DTextLabel(WantedScris[playerid]);
		Tigaanel[playerid] = 1;
		new str2[256];
        format(str2,sizeof(str2),"{FF00FF}Wanted Level: %d", PlayerInfo[playerid][pWantedLevel]);
        WantedScris[playerid] = CreateDynamic3DTextLabel(str2, COLOR_WHITE, 0, 0, -20, 20, playerid);
		Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL, WantedScris[playerid] , E_STREAMER_ATTACH_OFFSET_Z, 0.48);
	}
	SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pModel], 1800.1581,-1865.7731,13.5722, 1.0, -1, -1, -1, -1, -1, -1);
    if(PlayerInfo[playerid][pClan] > 0)
    {
        new szName[25];
        if(PlayerInfo[playerid][pClanTag] == 1)
        {
            format(szName, sizeof(szName), "%s%s", ClanInfo[PlayerInfo[playerid][pClan]][cClanTag], PlayerInfo[playerid][pNormalName]);
            SetPlayerName(playerid, szName);
		}
		else if(PlayerInfo[playerid][pClanTag] == 2)
		{
            format(szName, sizeof(szName), "%s%s", PlayerInfo[playerid][pNormalName], ClanInfo[PlayerInfo[playerid][pClan]][cClanTag]);
            SetPlayerName(playerid, szName);
		}
	}
	if(gTeam[playerid] == 0)
	{
		gTeam[playerid] = 3;
	}
	else
	{
		gTeam[playerid] = PlayerInfo[playerid][pTeam];
	}
	if(PlayerInfo[playerid][pMember] != 0)
	{
	    new namex[25],disc[84];
	    GetPlayerName(playerid,namex,sizeof(namex));
	    format(disc,sizeof(disc),"[Group] {FFFFFF}%s from your group has just logged in.",namex);
	    SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_GENANNOUNCE, disc);
	    SCM(playerid,COLOR_GENANNOUNCE,disc);
	}
	if(PlayerInfo[playerid][pMember] != 0)
	{
		if(strlen(DynamicFactions[PlayerInfo[playerid][pMember]][fAnn]) > 0)
		{
		    new factioninfo[128];
			format(factioninfo,sizeof(factioninfo), "[Group-MOTD]: {FFFFFF}%s.",DynamicFactions[PlayerInfo[playerid][pMember]][fAnn]);
			SCM(playerid,COLOR_GENANNOUNCE,factioninfo);
		}
	}
	if(PlayerInfo[playerid][pClan] != 0)
	{
		if(strlen(ClanInfo[PlayerInfo[playerid][pClan]][cClanMOTD]) > 0)
		{
		    new factioninfo[128];
			format(factioninfo,sizeof(factioninfo), "{FFF273}[Clan MOTD]: %s.",ClanInfo[PlayerInfo[playerid][pClan]][cClanMOTD]);
			SCM(playerid,COLOR_GENANNOUNCE,factioninfo);
		}
	}
	new sendername[30],
		playersip[64],
		iplog[256],
		qqerry[500],
		stringname[128];
	GetPlayerName(playerid,sendername,sizeof(sendername));
	GetPlayerIp(playerid,playersip,sizeof(playersip));
	LogIP(playersip,PlayerInfo[playerid][pSQLID]);
	format(iplog,sizeof(iplog),"%s (%d) has been connected to the server (IP: %s).",sendername,playerid,playersip);
	SendIP(COLOR_WHITE,iplog);
	gPlayerLogged[playerid] = 1;
	SpawnPlayer(playerid);
	mysql_format(SQL,qqerry, sizeof(qqerry), "UPDATE `users` SET `Status` = '1', `OnlineToday` = '1', `OnlineThisWeek` = '1', `LastIP` = '%s' WHERE `id` = '%d'", playersip, PlayerInfo[playerid][pSQLID]);
    mysql_tquery(SQL,qqerry,"","");
	mysql_format(SQL,qqerry, sizeof(qqerry), "UPDATE `friends` SET `Status` = '1' WHERE `FriendID` = '%d'", PlayerInfo[playerid][pSQLID]);
    mysql_tquery(SQL,qqerry,"","");
	printf("%s has been connected to the server (IP: %s).",sendername,playersip);
 	format(stringname,sizeof(stringname),"%s / New Land",sendername);
	return 1;
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
    return 1;
}

public BroadCast(color,const string[])
{

	SendClientMessageToAll(color, string);
	return 1;
}

public LeaderChat(color,const string[])
{
	foreach(Player, i)
 	{
		if(gPlayerLogged[i] == 1)
		{
			if (PlayerInfo[i][pLeader] >= 1 || PlayerInfo[i][pAdmin] >= 1)
			{
			    if(toglc[i] == 0)
				{
					SendClientMessage(i, color, string);
				}
			}
		}
	}
	printf("%s", string);
	return 1;
}

public ABroadCast(color,const string[],level)
{
	foreach(Player, i)
	{
	    if(IsPlayerConnected(i))
	    {
	    	if(togadminchat[i] == 0)
			if(gPlayerLogged[i] == 1)
			{
				if (PlayerInfo[i][pAdmin] >= level)
				{
					SendClientMessage(i, color, string);
				}
			}
		}
	}
	printf("%s", string);
	return 1;
}

public SendIP(color,const string[])
{
	foreach(Player, i)
	{
		if (PlayerInfo[i][pAdmin] >= 1)
		{
			if(togip[i] == 1)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
	return 1;
}

public HLChat(color,const string[])
{
	foreach(Player, i)
	{
		if(gPlayerLogged[i] == 1)
		{
			if (PlayerInfo[i][pHelper] >= 1)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
	printf("%s", string);
	return 1;
}

public OOCOff(color,const string[])
{
	foreach(Player, i)
	{
	    if(!gOoc[i])
	    {
			SendClientMessage(i, color, string);
		}
	}
	return 1;
}

stock SendSplitMessage(playerid, color, final[])
{
    new len = strlen(final),
		_iL = len / EX_SPLITLENGTHH;
	if( ( len % EX_SPLITLENGTHH ) ) _iL++;
	new _Line[EX_SPLITLENGTHH+5];
	new _:_i@Index;
	while( _i@Index < _iL )
	{
		if( _i@Index == 0 )
			strmid( _Line, final, ( _i@Index * EX_SPLITLENGTHH ), ( _i@Index * EX_SPLITLENGTHH ) + EX_SPLITLENGTHH );
		else
			strmid( _Line, final, ( _i@Index * EX_SPLITLENGTHH ), ( _i@Index * EX_SPLITLENGTHH ) + EX_SPLITLENGTHH );

		if( _iL > 1 )
		{
			if( _i@Index > 0 )
			{
				format( _Line, sizeof _Line, "... %s", _Line );
			}
		}
		SendClientMessage(playerid, color, _Line);
		_i@Index++;
	}
    return 1;
}

public OOCNews(color,string[])
{
	foreach(Player, i)
	{
	    if(!gNews[i])
	    {
			SendSplitMessage(i, color, string);
		}
	}
	return 1;
}

public OOCNews2(color,const string[])
{
	foreach(Player, i)
	{
		SendClientMessage(i, color, string);
	}
	return 1;
}

public SendRadioMessage(member, color, string[])
{
 	foreach(Player, i)
	{
        if(gPlayerLogged[i] == 1)
        {
		    if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member)
		    {
					SendClientMessage(i, color, string);
			}
			if(SpecFactiune[i] == member)
			{
					SendClientMessage(i, color, string);
			}
		}
	}
	return 1;
}

public SendTeamMessage(member, color, string[])
{
	foreach(Player, i)
	{
	    if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member)
	    {
			SendClientMessage(i, color, string);
		}
	}
	return 1;
}

public SendJobMessage(job, color, string[])
{
	foreach(Player, i)
	{
	    if(PlayerInfo[i][pJob] == job)
	    {
			SendClientMessage(i, color, string);
		}
	}
	return 1;
}

public SendFamilyMessage(family, color, string[])
{
	foreach(Player, i)
	{
        if(gPlayerLogged[i] == 1)
        {
		    if(PlayerInfo[i][pMember] == family || PlayerInfo[i][pLeader] == family)
		    {
	            if(!gFam[i])
	            {
					SendClientMessage(i, color, string);
				}
			}
			if(SpecFactiune[i] == family)
			{
			    if(!gFam[i])
	            {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
	return 1;
}

public SendTeamBeepMessage(team, color, string[])
{
	foreach(Player, i)
	{
	    if(gTeam[i] == team)
	    {
			SendClientMessage(i, color, string);
		}
	}
	return 1;
}
stock nearByMessage(playerid, color, string[], Float: Distance3 = 12.0) {
	new
	    Float: nbCoords[3];

	GetPlayerPos(playerid, nbCoords[0], nbCoords[1], nbCoords[2]);

	foreach(Player, i) {
	        if(IsPlayerInRangeOfPoint(i, Distance3, nbCoords[0], nbCoords[1], nbCoords[2]) && (GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))) {
				SendClientMessage(i, color, string);
	    }
	}

	return 1;
}

stock CalculateBestScore(turfid)
{
    new bestid;
    if(WarInfo[turfid][wAttacker] != 0 && WarInfo[turfid][wFaction] != 0)
    {
        new bestscore,
            group1 = WarInfo[turfid][wAttacker],
            group2 = WarInfo[turfid][wFaction];
        foreach(Player, i)
        {
            if(group1 == PlayerInfo[i][pMember] || group2 == PlayerInfo[i][pMember])
            {
                new score;
                score = ucideri[i][turfid] - decese[i][turfid];
                if(score >= bestscore)
                {
                    bestscore = score;
                    bestid = i;
                }
            }
        }
    }
	return bestid;
}

stock CalculateWorstScore(turfid)
{
    new bestid;
    if(WarInfo[turfid][wAttacker] != 0 && WarInfo[turfid][wFaction] != 0)
    {
        new bestscore,
            group1 = WarInfo[turfid][wAttacker],
            group2 = WarInfo[turfid][wFaction];
        foreach(Player, i)
        {
            if(group1 == PlayerInfo[i][pMember] || group2 == PlayerInfo[i][pMember])
            {
                new score;
                score = ucideri[i][turfid] - decese[i][turfid];
                if(score <= bestscore)
                {
                    bestscore = score;
                    bestid = i;
                }
            }
        }
    }
    return bestid;
}

public SendEnemyMessage(color, string[])
{
	foreach(Player, i)
	{
	    if(gTeam[i] >= 3)
	    {
			SendClientMessage(i, color, string);
		}
	}
	return 1;
}

OnePlayAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
    if(arefreeze[playerid] == 1) return SCM(playerid, COLOR_ERROR, "You Can't Use Any Animation When You Are Frozen !");
	ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
	return 1;
}

LoopingAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
    if(arefreeze[playerid] == 1) return SCM(playerid, COLOR_ERROR, "You Can't Use Any Animation When You Are Frozen !");
    gPlayerUsingLoopingAnim[playerid] = 1;
    ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
    return 1;
}

StopLoopingAnim(playerid)
{
	gPlayerUsingLoopingAnim[playerid] = 0;
    ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
}

PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
}
public OnPlayerPickUpPickup(playerid, pickupid)
{
	if(eventobjects > 0)
	{
	    for(new obj=0; obj<11; obj++)
	    {
	    	if(pickupid == objectevent[obj])
	    	{
	    	    eventobjects--;
	    	    new string[128],name[30];
	    	    GetPlayerName(playerid, name, sizeof(name));
	    	    GivePlayerCash(playerid,eventprizeobj[obj]);
	    	    Update(playerid,pCashx);
	    	    DestroyPickup(objectevent[obj]);
	    	    format(string,sizeof(string),"NR AdmBot: An Object Founded By %s And He/She Recieved $%s!",name,FormatNumber(eventprizeobj[obj]));
                OOCNews(COLOR_ORANGE,string);
                if(eventobjects > 0)
                {
                    format(string,sizeof(string),"NR AdmBot: Event Continues | There Are %d Objects",eventobjects);
                }
                else
                {
					format(string,sizeof(string),"NR AdmBot: Event Over ! Thanks For Your Participation !");
				}
               	OOCNews(COLOR_ORANGE,string);
				objectevent[obj] = 0;
	    	    eventprizeobj[obj] = 0;
			}
		}
	}
	for(new q=0; q<50; q++)
	{
		if(pickupid == QuestP[q])
		{
			if(QEvent[playerid][q] == 0)
			{
				new str[128],queryy[256];
				if(QuestWait[playerid] > 0)
				{
					format(str, sizeof(str),"Wait %d Before Collecting A New Heart", QuestWait[playerid]);
					SendClientMessage(playerid, COLOR_WHITE, str);
					return 1;
				}
				QEvent[playerid][q] = 1;
				QuestWait[playerid] = 120;
				mysql_format(SQL,queryy,sizeof(queryy),"UPDATE `users` SET `Quest%d`='1' WHERE `name`='%s'",q,PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,queryy,"","");
				new remain = 50;
				for(new qs=0; qs<50; qs++)
				{
					if(QEvent[playerid][qs] == 1)
					{
						remain--;
					}
				}
				if(remain > 0)
				{
					format(str, sizeof(str),"Cngrats ! You've Found A Nerw Heart | Find Another %d For A Special Prize", remain);
					SendClientMessage(playerid, COLOR_YELLOW, str);
				}
				else if(remain == 0)
				{
					new randomcash = 1500000 + random(1000000) + random(1500000), randomrp = 5 + random(10), name[30], randompremium = random(10), randompoints = 10 + random(30);
					GetPlayerName(playerid, name, sizeof(name));
					if(randompremium != 7)
					{
						format(str, sizeof(str),"Cngrats ! You Have Found All Hearts And Recieve $%s And %d Respect Points", FormatNumber(randomcash), randomrp);
						SendClientMessage(playerid, COLOR_YELLOW, str);
						format(str, sizeof(str),"[QUEST]: %s Found All Hearts On Map And Recieved $%s And %d Respect Points", name, FormatNumber(randomcash), randomrp);
						SendClientMessageToAll(COLOR_WHITE, str);
					}
					else
					{
						format(str, sizeof(str),"Cngrats ! You Have Found All Hearts And Recieve $%s + %d Respect Points And %d Premium Points", FormatNumber(randomcash), randomrp, randompoints);
						SendClientMessage(playerid, COLOR_YELLOW, str);
						format(str, sizeof(str),"[QUEST]: %s Found All Hearts On Map And Recieved $%s + %d Respect Points And %d Premium Points", name, FormatNumber(randomcash), randomrp, randompoints);
						SendClientMessageToAll(COLOR_WHITE, str);
						PlayerInfo[playerid][pPremiumPoints] += randompoints;
						Update(playerid, pPremiumPointsx);
					}
					GivePlayerCash(playerid, randomcash);
					PlayerInfo[playerid][pExp] += randomrp;
					Update(playerid, pCashx);
					Update(playerid, pRP);
				}
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "You Have Already Found This Heart | Run For Another !");
		}
	}
	if(pickupid == pickuph)
	{
	    if(OrderReady[playerid] > 0)
	    {
       		if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid, COLOR_WHITE,"{FFB870}You don't have gun license.");
	        switch (OrderReady[playerid])
	        {
	            case 1:
	            {
	                GivePlayerWeaponEx(playerid, 23, 100); GivePlayerWeaponEx(playerid, 31, 300); GivePlayerWeaponEx(playerid, 4, 1);
	                GivePlayerCash(playerid, - 5000);
	                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You picked up your Ordered Package.");
					DynamicFactions[11][fBank] += 5000;
					new str2[184];
					mysql_format(SQL,str2,sizeof(str2),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='11'",DynamicFactions[11][fBank]);
					mysql_tquery(SQL,str2,"","");
			    }
	            case 2:
	            {
	                GivePlayerWeaponEx(playerid, 23, 200); GivePlayerWeaponEx(playerid, 34, 40); GivePlayerWeaponEx(playerid, 4, 1); GivePlayerWeaponEx(playerid, 29, 150); GivePlayerWeaponEx(playerid, 31, 300);
	                GivePlayerCash(playerid, - 8000);
	                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You picked up your Ordered Package.");
					DynamicFactions[11][fBank] += 8000;
					new str2[184];
					mysql_format(SQL,str2,sizeof(str2),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='11'",DynamicFactions[11][fBank]);
					mysql_tquery(SQL,str2,"","");
			    }
	        }
	        OrderReady[playerid] = 0;
	    }
	}
	else if(pickupid == sip)
	{
	    GameTextForPlayer(playerid, "~w~School Instructors", 4000, 1);
	}
	else if(pickupid == hitmanep)
	{
	    GameTextForPlayer(playerid, "~w~Hitman Agency", 4000, 1);
	}
	else if(pickupid == rusp)
	{
		GameTextForPlayer(playerid, "~w~Ballas", 4000, 1);
	}
	else if(pickupid == sicp)
	{
		GameTextForPlayer(playerid, "~w~Los Vagos", 4000, 1);
	}
	else if(pickupid == porp)
	{
		GameTextForPlayer(playerid, "~w~Grove Street", 4000, 1);
	}
	else if(pickupid == govp) //Government
	{
		GameTextForPlayer(playerid, "~w~Government", 4000, 1);
	}
	else if(pickupid == trdp)
	{
		GameTextForPlayer(playerid, "~w~Los Aztecas", 4000, 1);
	}
	else if(pickupid == taxip)
	{
		GameTextForPlayer(playerid, "~w~Los Santos Taxi", 4000, 1);
	}
	else if(pickupid == gslsenter1)
	{
		SetPlayerPosEx(playerid, 302.3855,-142.1355,1004.0625);
	}
	else if(pickupid == gslsenter2)
	{
		SetPlayerPosEx(playerid, 296.4399,-141.7991,1004.0625);
	}
	else if(pickupid == gslsenter3)
	{
		SetPlayerPosEx(playerid, 308.8968,-141.8929,1004.0625);
	}
	else if(pickupid == gslsenter4)
	{
		SetPlayerPosEx(playerid, 302.3855,-142.1355,1004.0625);
	}
	return 1;
}

stock GetVehicleType(playerid)
{
	new type;
	if(PlayerInfo[playerid][pPcarkey] == OwnedVeh(personalcar[0][playerid]))
	{
	    type = 1;
	}
	else if(PlayerInfo[playerid][pmotokey] == OwnedVeh(personalcar[1][playerid]))
	{
	    type = 2;
	}
	else if(PlayerInfo[playerid][pprcarkey] == OwnedVeh(personalcar[2][playerid]))
	{
	    type = 4;
	}
	else if(PlayerInfo[playerid][pprcarkey2] == OwnedVeh(personalcar[3][playerid]))
	{
	    type = 5;
	}
	else if(PlayerInfo[playerid][pPPluscarkey] == OwnedVeh(personalcar[4][playerid]))
	{
	    type = 6;
	}
	else if(PlayerInfo[playerid][pPPluscarkey2] == OwnedVeh(personalcar[5][playerid]))
	{
	    type = 7;
	}
	return type;
}

forward ValidTuningCar(carid);
public	ValidTuningCar(carid)
{
	if(GetVehicleModel(carid) == 558 || GetVehicleModel(carid) == 565 || GetVehicleModel(carid) == 561 || GetVehicleModel(carid) == 562 || GetVehicleModel(carid) == 559 || GetVehicleModel(carid) == 560)
	{
	    return 1;
	}
	return 0;
}
CMD:addsafezone(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new range, string[256], Float: Pos[3];
    if(PlayerInfo[playerid][pAdmin] < 11) return SCM(playerid, COLOR_SERVER, "# {FFFFFF}You Have'nt Access To This Command");
	if(sscanf(params, "i", range)) return SendClientMessage(playerid, COLOR_SERVER, "[SYNTAX]: {FFFFFF}/addsafezone <Range>");
	if(range < 15) return SCM(playerid, COLOR_SERVER, "# {FFFFFF}Too Small Range (Minim 15m)");
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
    mysql_format(SQL, string, sizeof(string), "INSERT INTO `safezones` (`X`, `Y`, `Z`, `Range`) VALUES ('%f', '%f', '%f', '%d')", Pos[0], Pos[1], Pos[2], range);
	new Cache: result = mysql_query(SQL, string);
	new i = cache_insert_id();
	SafeZone[i][szX] = Pos[0];
	SafeZone[i][szY] = Pos[1];
	SafeZone[i][szZ] = Pos[2];
	SafeZone[i][szRange] = range;
	cache_delete(result);
	SCM(playerid, COLOR_SERVER, "# {FFFFFF}This Place Has Successfully Added To Database");
	format(string, sizeof(string), "Information: ID %d, Coordonate (%f, %f, %f), raza %d.", i, Pos[0], Pos[1], Pos[2], range);
	SCM(playerid, COLOR_SERVER, string);
	return 1;
}
CMD:savedata(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 12)
	{
		foreach(Player, x)
		{
			OnPlayerDateUpdateX2(x);
			Update(x, pPayDayx);
			Update(x, pPayCheckx);
			Update(x, pFpunishx);
			Update(x, pConnectTimex);
			Update(x, pLawyerx);
			Update(x, pBank);
			Update(x, pCashx);
			Update(x, pRP);
			Update(x, pJailTimex);
			Update(x, pPremiumPointsx);
			Update(x, pLevelx);
			//Update(x, pHTokenx);
		}
		SendClientMessageToAll(COLOR_GREEN,"SavePlayerData: All Acounts Have Been Saved");
	}
	return 1;
}
CMD:startradar(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if(PlayerInfo[playerid][pMember] != 1 && PlayerInfo[playerid][pMember] != 8) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not a officer.");
		if(OnDuty[playerid] != 1) return SendClientMessage(playerid,COLOR_WHITE, "{FFB870}You are not on Duty.");
		new tmpcar = GetPlayerVehicleID(playerid),
			ccar = IsPlayerInAnyVehicle(playerid);
		if(ccar && IsACopCar(tmpcar) || ccar && IsANgCar(tmpcar) || ccar && IsAFbiCar(tmpcar) || ccar && IsALVPDCar(tmpcar))
		{
			if(Radaron[playerid] == 1) return SCM(playerid,COLOR_WHITE,"{FFB870}You have active radar.");
			new viteza,string[128];
			if(sscanf(params, "d",viteza)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/startradar <Speed Limit>");
			if(viteza > 200 || viteza < 40) return SCM(playerid,COLOR_WHITE,"{FFB870}Invalid speed limit(200-40).");
			Radaron[playerid] = 1;
			Radarlimit[playerid] = viteza;
			TogglePlayerControllable(playerid, 0);
			format(string,sizeof(string),"{FFFF00}You have activated the radar, speed limit is: %d KM/H.",viteza);
			SCM(playerid,COLOR_WHITE,string);
			return 1;
		}
		else return SCM(playerid,COLOR_WHITE,"{FFB870}You are not in a cop car.");
	}
	return 1;
}
CMD:stopradar(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
    {
		if(!IsACop(playerid)) return SCM(playerid,COLOR_WHITE,"{478fca}Server: {ffffff}You Are'nt A COP");
		if(Radaron[playerid] == 0) return SCM(playerid,COLOR_WHITE,"{478fca}Server: {ffffff}No Activated Radar");
		Radaron[playerid] = 0;
		Radarlimit[playerid] = 0;
		SCM(playerid,COLOR_WHITE,"{FFFF00}You Stopped Radar");
		TogglePlayerControllable(playerid, 1);
		return 1;
    }
    return 1;
}
CMD:arenapl(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 11)
	{
		if(ArenaPlOn == 0)
		{
			ArenaPlOn = 1;
			ArenaPl[0] = CreateObject(971, 31.88083, -1941.30017, 2.80661,   0.00000, 0.00000, 17.04000);
			ArenaPl[1] = CreateObject(971, 23.43219, -1943.93774, 2.80661,   0.00000, 0.00000, 17.04000);
			ArenaPl[2] = CreateObject(971, 39.53321, -1913.48523, 2.80661,   0.00000, 0.00000, 17.04000);
			ArenaPl[3] = CreateObject(971, 31.10431, -1916.07971, 2.80661,   0.00000, 0.00000, 17.04000);
			ArenaPl[4] = CreateObject(971, 24.52845, -1918.04761, 2.80661,   0.00000, 0.00000, 17.04000);
			ArenaPl[5] = CreateObject(971, 16.10754, -1920.65552, 2.80661,   0.00000, 0.00000, 17.04000);
			ArenaPl[6] = CreateObject(971, 13.22274, -1926.25464, 2.80661,   0.00000, 0.00000, 106.56001);
			ArenaPl[7] = CreateObject(971, 17.83398, -1941.03442, 2.80661,   0.00000, 0.00000, 109.07998);
			ArenaPl[8] = CreateObject(971, 32.05378, -1936.97131, 6.14964,   0.00000, 0.00000, 106.20000);
			ArenaPl[9] = CreateObject(971, 30.08924, -1930.20752, 6.14964,   0.00000, 0.00000, 106.20000);
			ArenaPl[10] = CreateObject(971, 27.64395, -1921.74902, 6.14964,   0.00000, 0.00000, 106.20000);
		}
		else if(ArenaPlOn == 1)
		{
		    for(new i = 0; i < 11; i++)
		    {
                DestroyDynamicObject(ArenaPl[i]);
		        DestroyObject(ArenaPl[i]);
		    }
			ArenaPlOn = 0;
		}
	}
	else { SendClientMessage(playerid,COLOR_LIGHTRED,"You Have'nt Access To This Command !"); }
	return 1;
}
CMD:stunt(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		if(StuntOn == 0)
		{
			StuntOn = 1;
			Stunt[1] = CreateObject(16133, -2367.733398, -1603.614380, 475.600555, 0.0000, 335.0763, 160.0784);
			Stunt[2] = CreateObject(16133, -2372.995117, -1609.019775, 478.692902, 0.0000, 352.2651, 172.9698);
			Stunt[3] = CreateObject(4867, -2401.987793, -1539.044189, 477.351074, 0.0000, 0.0000, 276.1708);
			Stunt[4] = CreateObject(16141, -2445.336914, -1581.441528, 467.570038, 0.0000, 0.0000, 292.5000);
			Stunt[5] = CreateObject(5005, -2318.819092, -1456.996460, 480.552673, 0.0000, 0.0000, 276.0934);
			Stunt[6] = CreateObject(4867, -2406.934570, -1493.294800, 477.348022, 0.0000, 0.0000, 276.1708);
			Stunt[7] = CreateObject(5005, -2405.908203, -1386.418701, 480.574615, 0.0000, 0.0000, 186.0934);
			Stunt[8] = CreateObject(5005, -2426.622070, -1388.611206, 480.578979, 0.0000, 0.0000, 186.0934);
			Stunt[9] = CreateObject(5005, -2500.007324, -1479.637817, 480.602661, 0.0000, 0.0000, 96.0933);
			Stunt[10] = CreateObject(5005, -2489.837402, -1575.889648, 480.602661, 0.0000, 0.0000, 96.0933);
			Stunt[11] = CreateObject(1655, -2359.707764, -1412.587891, 478.398193, 0.0000, 0.0000, 5.1566);
			Stunt[12] = CreateObject(1655, -2360.356201, -1405.525513, 482.634033, 16.3293, 0.0000, 5.1566);
			Stunt[13] = CreateObject(1655, -2360.836914, -1400.028320, 488.724640, 33.5180, 0.0000, 5.1566);
			Stunt[14] = CreateObject(1655, -2361.086426, -1396.881226, 496.230530, 54.1445, 0.0000, 5.1566);
			Stunt[15] = CreateObject(1655, -2361.127930, -1396.476929, 504.540863, 73.9115, 0.0000, 5.1566);
			Stunt[16] = CreateObject(13592, -2402.928955, -1408.991089, 487.743561, 0.0000, 345.3896, 101.2500);
			Stunt[17] = CreateObject(13592, -2411.467041, -1405.442139, 488.451111, 0.0000, 345.3896, 101.2500);
			Stunt[18] = CreateObject(13592, -2420.024902, -1401.762207, 489.422729, 0.0000, 345.3896, 101.2500);
			Stunt[19] = CreateObject(1632, -2424.100098, -1402.571289, 480.352631, 339.3735, 0.0000, 6.0161);
			Stunt[20] = CreateObject(1632, -2424.633545, -1397.527954, 481.543060, 358.2811, 0.0000, 6.0161);
			Stunt[21] = CreateObject(1632, -2425.099854, -1393.022217, 484.447296, 18.9076, 0.0000, 6.0161);
			Stunt[22] = CreateObject(13722, -2433.109131, -1585.542358, 499.367462, 0.0000, 0.0000, 211.1717);
			Stunt[23] = CreateObject(1655, -2464.282471, -1440.722168, 481.332001, 19.7670, 0.0000, 65.3172);
			Stunt[24] = CreateObject(1655, -2468.946777, -1531.217896, 478.376251, 0.0000, 0.0000, 144.0671);
			Stunt[25] = CreateObject(1655, -2472.125488, -1535.630249, 481.632294, 17.1887, 0.0000, 144.0671);
			Stunt[26] = CreateObject(16133, -2482.744873, -1487.614624, 477.352905, 0.0000, 347.1084, 160.0784);
			Stunt[27] = CreateObject(16133, -2324.287109, -1489.340820, 475.902893, 0.0000, 347.1084, 12.2556);
			Stunt[28] = CreateObject(16133, -2386.093750, -1573.152954, 482.045532, 0.0000, 327.3414, 268.2640);
			Stunt[29] = CreateObject(16133, -2452.604004, -1400.911011, 477.399841, 0.0000, 335.0763, 112.7063);
			Stunt[30] = CreateObject(16037, -2233.225830, -1588.548096, 482.915497, 0.0000, 5.1566, 21.6406);
			Stunt[31] = CreateObject(16037, -2123.113281, -1544.881958, 461.069702, 0.0000, 15.4699, 21.6406);
			Stunt[32] = CreateObject(16037, -2016.906738, -1502.714722, 429.396118, 0.0000, 15.4699, 21.6406);
			Stunt[33] = CreateObject(3502, -2282.901123, -1660.623413, 483.176605, 0.0000, 0.0000, 263.1245);
			Stunt[34] = CreateObject(3502, -2273.989990, -1661.890869, 483.215973, 0.0000, 0.0000, 263.1245);
			Stunt[35] = CreateObject(3502, -2265.248535, -1663.133545, 482.867645, 354.8434, 341.9518, 260.5462);
			Stunt[36] = CreateObject(3502, -2259.701172, -1664.185181, 481.814606, 346.2490, 357.4217, 259.6868);
			Stunt[37] = CreateObject(3502, -2251.645996, -1665.360352, 479.925659, 348.8273, 0.0000, 262.2651);
			Stunt[38] = CreateObject(3502, -2244.312256, -1666.311523, 480.139709, 12.0321, 357.4217, 263.9840);
			Stunt[39] = CreateObject(3502, -2225.496338, -1668.427979, 484.032623, 6.8755, 0.0000, 263.1245);
			Stunt[40] = CreateObject(3502, -2217.831787, -1669.223389, 484.966522, 6.8755, 0.0000, 263.1245);
			Stunt[41] = CreateObject(3502, -2210.459961, -1670.093628, 485.823212, 6.8755, 0.0000, 263.1245);
			Stunt[42] = CreateObject(3502, -2203.328125, -1671.063599, 486.722290, 6.8755, 0.0000, 263.1245);
			Stunt[43] = CreateObject(3502, -2197.360596, -1671.774414, 487.543762, 6.8755, 0.0000, 263.1245);
			Stunt[44] = CreateObject(3554, -2283.532959, -1660.568726, 491.427063, 0.0000, 0.0000, 82.7466);
			Stunt[45] = CreateObject(726, -2317.475586, -1523.263550, 476.748627, 0.0000, 0.0000, 0.0000);
			Stunt[46] = CreateObject(726, -2262.246338, -1687.043335, 478.717285, 0.0000, 0.0000, 0.0000);
			Stunt[47] = CreateObject(13831, -2371.499512, -1609.126221, 510.351898, 0.0000, 0.8594, 78.8274);
			Stunt[48] = CreateObject(16133, -2271.329102, -1725.697510, 467.926666, 0.0000, 347.1084, 205.0009);
			Stunt[49] = CreateObject(726, -2244.677734, -1751.020386, 479.253052, 0.0000, 0.0000, 0.0000);
			Stunt[50] = CreateObject(726, -2332.699951, -1395.800049, 476.595551, 0.0000, 0.0000, 0.0000);
			Stunt[51] = CreateObject(726, -2456.037598, -1415.987793, 478.839233, 0.0000, 0.0000, 0.0000);
			Stunt[52] = CreateObject(726, -2475.019287, -1500.015381, 483.235046, 0.0000, 0.0000, 0.0000);
			Stunt[53] = CreateObject(726, -2401.300537, -1556.422485, 476.978363, 0.0000, 0.0000, 0.0000);
			Stunt[54] = CreateObject(726, -2474.946045, -1602.279785, 476.548798, 0.0000, 0.0000, 348.8273);
			Stunt[55] = CreateObject(13641, -2296.286133, -1598.397949, 481.657684, 359.1406, 17.1887, 29.5301);
			Stunt[56] = CreateObject(1655, -2237.607178, -1732.991211, 480.597504, 1.7189, 0.8594, 210.2350);
			Stunt[57] = CreateObject(4853, -2273.502686, -1563.095215, 479.013184, 0.0000, 358.2811, 45.0000);
			Stunt[58] = CreateObject(733, -2328.628906, -1685.137939, 481.263336, 0.0000, 0.0000, 0.0000);
			Stunt[59] = CreateObject(735, -2359.962158, -1646.896484, 480.823181, 0.0000, 0.0000, 0.0000);
			Stunt[60] = CreateObject(16127, -2346.484375, -1683.917969, 486.535278, 346.2490, 0.8594, 292.5000);
			Stunt[61] = CreateObject(16127, -2316.885254, -1707.428955, 485.294098, 349.6868, 0.0000, 321.7209);
			Stunt[62] = CreateObject(1655, -2287.536865, -1640.013428, 483.290405, 359.1406, 0.8594, 271.8735);
			Stunt[63] = CreateObject(1655, -2287.704346, -1631.852661, 483.343323, 359.1406, 0.0000, 270.1547);
			Stunt[64] = CreateObject(9685, -2282.945068, -1531.112549, 536.956421, 0.0000, 0.0000, 320.2340);
			Stunt[65] = CreateObject(9685, -2196.876221, -1427.748413, 545.709290, 0.0000, 0.0000, 320.2341);
			Stunt[66] = CreateObject(9685, -2110.682129, -1324.258545, 554.474060, 0.0000, 0.0000, 320.2341);
			Stunt[67] = CreateObject(1655, -1897.739380, -1056.234497, 523.446411, 0.0000, 0.0000, 321.0934);
			Stunt[68] = CreateObject(7916, -2362.495605, -1613.521729, 497.175476, 28.3614, 0.0000, 77.0311);
			Stunt[69] = CreateObject(7916, -2355.780273, -1657.320801, 495.550903, 29.2208, 359.1406, 109.0622);
			Stunt[70] = CreateObject(16127, -2363.804199, -1645.952271, 482.383606, 346.2490, 0.8594, 292.5000);
			Stunt[71] = CreateObject(16133, -2384.800537, -1575.735107, 485.205292, 350.5462, 332.4980, 254.5129);
			Stunt[72] = CreateObject(11435, -2310.024414, -1584.276733, 485.406494, 0.0000, 0.0000, 0.0000);
			Stunt[73] = CreateObject(7392, -2287.596436, -1672.066162, 491.210052, 0.0000, 0.0000, 353.1245);
			Stunt[74] = CreateObject(8483, -2354.760010, -1579.378906, 490.026672, 358.2811, 357.4217, 331.6386);
			Stunt[75] = CreateObject(13562, -2288.042236, -1654.219604, 483.428680, 0.0000, 0.0000, 0.0000);
			Stunt[76] = CreateObject(16776, -2309.831787, -1695.022583, 481.263855, 0.0000, 0.0000, 135.7911);
			Stunt[77] = CreateObject(1655, -2293.263916, -1607.783081, 483.331848, 358.2811, 359.1406, 290.7811);
			Stunt[78] = CreateObject(1655, -2290.208740, -1615.830811, 483.378387, 358.2811, 0.0000, 290.7811);
			Stunt[79] = CreateObject(1655, -1746.057617, -1395.105103, 356.689148, 344.5301, 0.0000, 292.5000);
			Stunt[80] = CreateObject(1655, -1738.833496, -1392.102417, 358.864594, 0.8594, 0.0000, 292.5000);
			Stunt[81] = CreateObject(1655, -1732.128052, -1389.344116, 363.115265, 14.6104, 0.0000, 292.5000);
			Stunt[82] = CreateObject(1655, -2344.177734, -1555.536255, 479.025848, 8.5944, 0.0000, 189.4538);
			Stunt[83] = CreateObject(1655, -2340.236328, -1571.689819, 483.501282, 12.8916, 0.0000, 12.8916);
			Stunt[84] = CreateObject(10838, -2321.319336, -1576.838623, 497.207764, 359.1406, 358.2811, 48.1285);
			Stunt[85] = CreateObject(3502, -2236.016602, -1667.085815, 481.978516, 12.0321, 357.4217, 263.9840);
			Stunt[86] = CreateObject(3502, -2231.742920, -1667.539307, 483.079529, 12.0321, 357.4217, 263.9840);
			Stunt[87] = CreateObject(3502, -2189.548096, -1672.909180, 488.475128, 6.8755, 0.0000, 259.6868);
			Stunt[88] = CreateObject(3502, -2182.247803, -1674.791748, 489.424927, 6.8755, 0.0000, 249.3735);
			Stunt[89] = CreateObject(3502, -2175.396973, -1678.202148, 490.330475, 6.8755, 0.0000, 235.6225);
			Stunt[90] = CreateObject(3502, -2169.115479, -1682.439209, 490.702087, 359.1406, 1.7189, 235.6225);
			Stunt[91] = CreateObject(3502, -2162.809570, -1687.261353, 490.582703, 359.1406, 1.7189, 227.0281);
			Stunt[92] = CreateObject(3502, -2157.657715, -1693.175049, 490.435760, 359.1406, 1.7189, 212.4175);
			Stunt[93] = CreateObject(3502, -2153.705078, -1699.343628, 490.112579, 354.8434, 0.0000, 212.4175);
			Stunt[94] = CreateObject(3502, -2150.361816, -1705.594360, 489.456421, 354.8434, 0.0000, 200.3854);
			Stunt[95] = CreateObject(3502, -2148.392334, -1712.520264, 488.786682, 354.8434, 0.0000, 188.3531);
			Stunt[96] = CreateObject(3502, -2147.960449, -1719.520508, 488.138397, 354.8434, 0.0000, 176.3210);
			Stunt[97] = CreateObject(3502, -2148.934814, -1726.642578, 487.486542, 354.8434, 0.0000, 165.1482);
			Stunt[98] = CreateObject(3502, -2150.717041, -1733.483643, 486.590454, 349.6868, 0.0000, 165.1482);
			Stunt[99] = CreateObject(3502, -2153.015869, -1739.367188, 485.401703, 349.6868, 0.0000, 153.9754);
			Stunt[100] = CreateObject(3502, -2156.837158, -1745.682251, 484.070984, 349.6868, 0.0000, 141.9433);
			Stunt[101] = CreateObject(3502, -2161.273926, -1750.572876, 482.887634, 349.6868, 0.0000, 129.9110);
			Stunt[102] = CreateObject(3502, -2167.023926, -1754.297974, 481.637604, 349.6868, 0.0000, 115.3008);
			Stunt[103] = CreateObject(3502, -2173.998291, -1756.777100, 480.306000, 349.6868, 0.0000, 102.4093);
			Stunt[104] = CreateObject(3502, -2188.537109, -1756.432861, 477.593719, 349.6868, 0.0000, 74.0482);
			Stunt[105] = CreateObject(3502, -2195.460693, -1753.232056, 476.218719, 349.6868, 0.0000, 56.0002);
			Stunt[106] = CreateObject(3502, -2201.581543, -1748.011963, 474.669128, 349.6868, 0.0000, 42.2493);
			Stunt[107] = CreateObject(3502, -2205.860840, -1742.106567, 473.359680, 349.6868, 0.0000, 27.6390);
			Stunt[108] = CreateObject(3502, -2208.186523, -1735.107544, 471.998138, 349.6868, 0.0000, 8.7316);
			Stunt[109] = CreateObject(3502, -2208.333008, -1727.435181, 470.608276, 349.6868, 0.0000, 352.4024);
			Stunt[110] = CreateObject(3502, -2206.184326, -1719.654297, 469.124237, 349.6868, 0.0000, 337.7921);
			Stunt[111] = CreateObject(3502, -2202.089355, -1713.131836, 467.796204, 349.6868, 0.0000, 318.0252);
			Stunt[112] = CreateObject(3502, -2196.138184, -1708.348267, 466.406311, 349.6868, 0.0000, 299.9772);
			Stunt[113] = CreateObject(3502, -2189.043701, -1705.487061, 465.060394, 349.6868, 0.0000, 283.6481);
			Stunt[114] = CreateObject(3502, -2181.029053, -1704.219482, 463.627960, 349.6868, 0.0000, 273.3349);
			Stunt[115] = CreateObject(3502, -2173.138916, -1703.716919, 462.158630, 349.6868, 0.0000, 273.3349);
			Stunt[116] = CreateObject(3502, -2166.241699, -1703.246948, 460.851471, 349.6868, 0.0000, 273.3349);
			Stunt[117] = CreateObject(3502, -2158.819336, -1702.773804, 459.460571, 349.6868, 0.0000, 273.3349);
			Stunt[118] = CreateObject(3502, -2151.518066, -1702.335083, 458.113007, 349.6868, 0.0000, 273.3349);
			Stunt[119] = CreateObject(3502, -2144.233887, -1701.886230, 456.762085, 349.6868, 0.0000, 273.3349);
			Stunt[120] = CreateObject(13641, -2148.504150, -1700.999390, 446.601807, 0.0000, 0.0000, 0.0000);
			Stunt[121] = CreateObject(13641, -2142.585938, -1700.974854, 446.369110, 0.0000, 0.0000, 0.0000);
			Stunt[122] = CreateObject(1655, -1810.578247, -1636.152344, 443.571930, 351.4056, 0.0000, 270.0000);
			Stunt[123] = CreateObject(1655, -1802.608643, -1636.158203, 446.361755, 2.5783, 0.0000, 270.0000);
			Stunt[124] = CreateObject(1655, -1796.575195, -1636.114624, 450.264862, 17.1887, 0.0000, 270.0000);
			Stunt[125] = CreateObject(1655, -1790.488525, -1636.095337, 456.110718, 25.7831, 0.0000, 270.0000);
			Stunt[126] = CreateObject(6986, -2349.082275, -1572.664551, 499.172119, 0.0000, 0.0000, 303.2772);
			Stunt[127] = CreateObject(2918, -1893.173462, -1063.102661, 524.188721, 0.0000, 0.0000, 0.0000);
			Stunt[128] = CreateObject(2918, -2403.692627, -1416.831543, 481.090088, 0.0000, 0.0000, 0.0000);
			Stunt[129] = CreateObject(2918, -2402.507813, -1416.592651, 481.020844, 0.0000, 0.0000, 0.0000);
			Stunt[130] = CreateObject(2918, -2404.888428, -1416.949707, 481.043274, 0.0000, 0.0000, 0.0000);
			Stunt[131] = CreateObject(16133, -2382.161377, -1605.630005, 488.946136, 0.0000, 334.2169, 136.8732);
			Stunt[132] = CreateObject(16127, -2363.821289, -1674.433594, 499.316986, 346.2490, 0.8594, 292.5000);
			Stunt[133] = CreateObject(8618, -2355.659668, -1591.174438, 499.221191, 0.0000, 0.0000, 24.9237);
			Stunt[134] = CreateObject(3715, -2287.515625, -1636.579956, 491.155884, 0.0000, 0.0000, 270.6186);
			Stunt[135] = CreateObject(1655, -2245.182129, -1737.325684, 480.616455, 1.7189, 359.1406, 209.3755);
			Stunt[136] = CreateObject(13641, -2235.341309, -1746.547974, 489.821381, 0.8594, 341.9518, 299.8395);
			Stunt[137] = CreateObject(13722, -2371.522705, -1609.125732, 510.788025, 0.0000, 0.0000, 78.8183);
			Stunt[138] = CreateObject(16133, -2391.179932, -1617.601563, 504.422729, 0.0000, 352.2651, 172.1104);
			Stunt[139] = CreateObject(10281, -2360.666748, -1667.896606, 507.080811, 0.0000, 358.2811, 116.0238);
			Stunt[140] = CreateObject(16480, -2272.725586, -1686.892090, 482.329712, 0.0000, 0.0000, 262.8837);
			Stunt[141] = CreateObject(3528, -2287.642090, -1635.914673, 496.569214, 1.7189, 0.0000, 180.3774);
			Stunt[142] = CreateObject(13667, -2224.704102, -1497.719360, 503.366241, 0.8594, 0.0000, 243.9762);
			Stunt[143] = CreateObject(9685, -2024.513794, -1220.604126, 563.332825, 0.0000, 0.0000, 320.2341);
			Stunt[144] = CreateObject(9685, -1937.978027, -1116.640747, 572.140137, 0.0000, 0.0000, 320.2341);
			Stunt[145] = CreateObject(1655, -1885.763428, -1065.629395, 523.496094, 0.0000, 0.0000, 320.2340);
			Stunt[146] = CreateObject(1655, -1893.638672, -1051.214111, 527.073120, 12.0321, 0.0000, 321.0934);
			Stunt[147] = CreateObject(1655, -1891.218994, -1048.136597, 530.248108, 21.4859, 0.0000, 321.0934);
			Stunt[148] = CreateObject(1655, -1882.046997, -1061.124023, 526.657410, 12.0321, 0.0000, 320.2340);
			Stunt[149] = CreateObject(1655, -1878.976318, -1057.240112, 530.952026, 23.2048, 0.0000, 320.2340);
			Stunt[150] = CreateObject(2918, -1814.756104, -1630.923584, 444.398956, 0.0000, 0.0000, 0.0000);
			Stunt[151] = CreateObject(2918, -1814.233032, -1642.566650, 444.214264, 0.0000, 0.0000, 0.0000);
			Stunt[152] = CreateObject(2918, -1814.360107, -1641.334717, 444.011475, 0.0000, 0.0000, 0.0000);
			Stunt[153] = CreateObject(2918, -1814.285522, -1629.354004, 444.276611, 0.0000, 0.0000, 0.0000);
			Stunt[154] = CreateObject(2918, -1751.891113, -1390.118530, 357.958679, 0.0000, 0.0000, 0.0000);
			Stunt[155] = CreateObject(2918, -1751.580688, -1391.690796, 357.638977, 0.0000, 0.0000, 0.0000);
			Stunt[156] = CreateObject(2918, -1748.322266, -1401.555786, 358.254395, 0.0000, 0.0000, 0.0000);
			Stunt[157] = CreateObject(2918, -1746.572998, -1402.643311, 358.207123, 0.0000, 0.0000, 0.0000);
			Stunt[158] = CreateObject(2918, -2307.165527, -1589.942871, 485.268677, 0.0000, 0.0000, 0.0000);
			Stunt[159] = CreateObject(4853, -2210.492432, -1500.054443, 481.670502, 0.0000, 358.2811, 45.0000);
			Stunt[160] = CreateObject(4853, -2150.038330, -1439.543701, 483.539093, 0.0000, 359.1406, 45.0000);
			Stunt[161] = CreateObject(4853, -2087.690430, -1377.160889, 484.828461, 0.0000, 359.1406, 45.0000);
			Stunt[162] = CreateObject(4853, -2025.604614, -1315.127563, 484.129333, 0.0000, 1.7189, 45.0000);
			Stunt[163] = CreateObject(4853, -1962.248535, -1251.777466, 481.448669, 0.0000, 1.7189, 45.0000);
			Stunt[164] = CreateObject(4853, -1904.201538, -1193.699585, 479.618042, 0.8594, 0.8594, 45.0000);
			Stunt[165] = CreateObject(1655, -1871.277100, -1160.854126, 483.567352, 4.2972, 0.0000, 313.9859);
			Stunt[166] = CreateObject(2918, -2285.191406, -1664.533203, 483.925903, 0.0000, 0.0000, 0.0000);
			Stunt[167] = CreateObject(18449, -2245.029541, -1636.056641, 484.846588, 0.0000, 0.0000, 0.0000);
			Stunt[168] = CreateObject(18449, -2165.407227, -1636.061401, 484.833618, 0.0000, 0.0000, 0.0000);
			Stunt[169] = CreateObject(18449, -2086.046143, -1636.096313, 484.845520, 0.0000, 0.0000, 0.0000);
			Stunt[170] = CreateObject(18449, -2007.129395, -1636.095337, 477.757751, 0.0000, 10.3132, 0.0000);
			Stunt[171] = CreateObject(18449, -1929.063110, -1636.092651, 463.594421, 0.0000, 10.3132, 0.0000);
			Stunt[172] = CreateObject(18449, -1852.876831, -1636.080688, 449.734955, 0.0000, 10.3132, 0.0000);
			Stunt[173] = CreateObject(18449, -1928.735352, -1467.160767, 400.454315, 0.0000, 12.8916, 21.4859);
			Stunt[174] = CreateObject(18449, -1856.401978, -1438.663330, 382.688263, 0.0000, 12.8916, 21.4859);
			Stunt[175] = CreateObject(18449, -1784.238525, -1410.250366, 364.949280, 0.0000, 12.8916, 21.4859);
			Stunt[176] = CreateObject(1655, -2234.173096, -1738.968384, 484.516846, 11.1727, 1.7189, 210.2349);
			Stunt[177] = CreateObject(1655, -2241.746826, -1743.292236, 484.245148, 11.1727, 1.7189, 210.2349);
			Stunt[178] = CreateObject(1655, -2241.746826, -1743.292236, 484.245148, 11.1727, 1.7189, 210.2349);
			Stunt[179] = CreateObject(1655, -2459.956543, -1442.699219, 478.376251, 0.0000, 0.0000, 65.3172);
			Stunt[180] = CreateObject(13831, -2433.231934, -1586.090942, 499.387695, 0.0000, 0.0000, 211.1717);
			Stunt[181] = CreateObject(3502, -2181.328125, -1757.569458, 478.920044, 349.6868, 0.0000, 87.7990);
			Stunt[182] = CreateVehicle(522, -2328.8738, -1609.4236, 483.9092, 0.0000, -1, -1, 100);
			Stunt[183] = CreateVehicle(522, -2325.5481, -1609.3794, 483.9092, 0.0000, -1, -1, 100);
			Stunt[184] = CreateVehicle(522, -2321.7087, -1609.2971, 483.9092, 0.0000, -1, -1, 100);
			Stunt[185] = CreateVehicle(522, -2318.8882, -1609.3242, 483.9092, 0.0000, -1, -1, 100);
			Stunt[186] = CreateVehicle(522, -2316.0339, -1609.2561, 483.9092, 0.0000, -1, -1, 100);
			Stunt[187] = CreateVehicle(522, -2313.4370, -1609.5968, 483.9092, 0.0000, -1, -1, 100);
			Stunt[188] = CreateVehicle(522, -2311.3743, -1609.7063, 483.9092, 0.0000, -1, -1, 100);
			Stunt[189] = CreateVehicle(411, -2328.0564, -1614.0421, 484.1373, 0.0000, -1, -1, 100);
			Stunt[190] = CreateVehicle(411, -2324.2998, -1614.1398, 484.1373, 0.0000, -1, -1, 100);
			Stunt[191] = CreateVehicle(411, -2320.5681, -1614.1831, 484.1373, 0.0000, -1, -1, 100);
			Stunt[192] = CreateVehicle(411, -2316.6355, -1614.0862, 484.1373, 0.0000, -1, -1, 100);
			Stunt[193] = CreateVehicle(411, -2312.8198, -1613.9634, 484.1373, 0.0000, -1, -1, 100);
			Stunt[194] = CreateObject(18772, -2330.69092, -1447.09619, 501.44821,   7.50000, 0.00000, 0.78000);
			SendClientMessageToAll(COLOR_YELLOW,"[Stunt Chiliad] {FFFFFF}Chilliad Stunt Map Has Been Activated | Have Fun !");
		}
		else if(StuntOn == 1)
		{
		    for(new i = 0; i < 195; i++)
		    {
                DestroyDynamicObject(Stunt[i]);
		        DestroyObject(Stunt[i]);
				DestroyVehicle(Stunt[i]);
		    }
		    SendClientMessageToAll(COLOR_YELLOW,"[Stunt Chiliad] {FFFFFF}Chilliad Stunt Map Has Been DeActivated");
			StuntOn = 0;
		}
	}
	else { SendClientMessage(playerid,COLOR_LIGHTRED,"You Have'nt Access To This Command !"); }
	return 1;
}
CMD:closestcar(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 1)return SCM(playerid, -1, AdminOnly);
	if(IsPlayerInAnyVehicle(playerid))return SCM(playerid, COLOR_GREY, "You're Already In A Vehicle");
	new thacar = GetClosestVehicle2(playerid, 100000);
	PutPlayerInVehicle(playerid, thacar, 0);
    SCM(playerid, COLOR_GREY,"Yo Were Teleported To Nearest Vehicle");
	return 1;
}
CMD:giveallgp(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 11)
	{
		new gpall,sendername[MAX_PLAYER_NAME],string[100];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(sscanf(params, "i",gpall)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFFFFF}[SYNTAX]: {FFFFFF}/giveallgp <gift points>");
		if(gpall >= 31) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Error: Too much gift points(1-30).");
		else if(gpall < 31)
		{
			format(string, sizeof(string),"Admin %s Send %d Gift Points To All Players Online",sendername,gpall);
			SendClientMessageToAll(COLOR_YELLOW,string);
			foreach(Player,i)
			{
				PlayerInfo[i][pGiftTime] -= gpall;
			}
		}
	}
	else
	{
	     SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	 	 return 1;
	}
	return 1;
}
CMD:kickallfactions(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid, COLOR_YELLOW2, "[ERROR]: You Have'nt Access To This Command");
    {
        new id,string[100],giveplayer[30],sendername[MAX_PLAYER_NAME];
        GetPlayerName(id, giveplayer, sizeof(giveplayer));
        GetPlayerName(playerid, sendername, sizeof(sendername));
        if(IsPlayerConnected(id))
        {
                format(string, sizeof(string), "* You have been kicked from a faction, by admin %s.",sendername);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
                PlayerInfo[id][pMember]=0;
                PlayerInfo[id][pLeader]=0;
                PlayerInfo[id][pRank] = 0;
                PlayerInfo[id][pFACWarns] = 0;
                PlayerInfo[id][pFpunish] = 0;
                gTeam[id] = 3;
                PlayerInfo[id][pTeam] = 3;
                OnDuty[id] = 0;
                tazer[id] = 0;
                SetPlayerArmourEx(id, 0);
                SetPlayerSkin(id,PlayerInfo[id][pModel]);
                SpawnPlayer(id);
                new str[256];
                format(str,sizeof(str),"UPDATE users SET `Member`='0',`Leader`='0',`Rank`='0',`FWarn`='0',`FPunish`='0',`Team`='3'",PlayerInfo[id][pSQLID]);
                mysql_query(SQL,str);
                PlayerInfo[id][pCommands] = 0;
                new rquery[256];
                format(rquery, sizeof(rquery), "UPDATE `users` SET `Commands`='%d'", PlayerInfo[id][pCommands], PlayerInfo[id][pSQLID]);
                mysql_query(SQL, rquery);
                return 1;
        }
    }
    return 1;
}
CMD:voteinfo(playerid, params[])
{
    if(InVote == 0)return SCM(playerid, -1, "There Is'nt Any Running Vote !");
    new text[500];
    if(candsnumber == 2)
    {
        format(text, sizeof(text), "Voting poll for receiving faculty leadership %s\nNumber 1: %s Votes: %d\nNumber 2: %s Votes: %d",NameOfFactions(candfaction), voteoption,votefor1, voteoption2,votefor2);
    }
    else if(candsnumber == 3)
    {
        format(text, sizeof(text), "Voting poll for receiving faculty leadership %s\nNumber 1: %s Votes: %d\nNumber 2: %s Votes: %d\nNumber 3: %s Votes: %d",NameOfFactions(candfaction), voteoption,votefor1, voteoption2,votefor2, voteoption3,votefor3);
    }
    ShowPlayerDialog(playerid, DIALOG_VOTEINFO, DIALOG_STYLE_MSGBOX, "VOTE INFO!", text, "OK", "");
	return 1;
}
CMD:stopvote(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 3)return SCM(playerid, -1, AdminOnly);
    if(InVote == 0)return SCM(playerid, -1, "There Is'nt Any Vote");
    new text[500];
    if(votefor1 > votefor2 && votefor3 || votefor1 > votefor2)
    {
        format(text, sizeof(text), "(( Election winner for faction leadership %s, it is %s ! Cngrats ! ))",NameOfFactions(candfaction), voteoption);
        SendClientMessageToAll(COLOR_GENANNOUNCE, text);
        format(text, sizeof(text), "%s Has won the election of the leader!", voteoption);
        ABroadCast(COLOR_RED, text, 1);
        InVote = 0;
    }
    else if(votefor2 > votefor1 && votefor3 || votefor2 > votefor1)
    {
        format(text, sizeof(text), "(( Election winner for faction leadership %s, it is %s ! Cngrats ! ))",NameOfFactions(candfaction), voteoption2);
        SendClientMessageToAll(COLOR_GENANNOUNCE, text);
        format(text, sizeof(text), "%s Has won the election of the leader!", voteoption2);
        ABroadCast(COLOR_RED, text, 1);
        InVote = 0;
    }
    else if(votefor3 > votefor1 && votefor2)
    {
        format(text, sizeof(text), "(( Election winner for faction leadership %s, it is %s ! Cngrats ! ))",NameOfFactions(candfaction), voteoption3);
        SendClientMessageToAll(COLOR_GENANNOUNCE, text);
        format(text, sizeof(text), "%s a Has won the election of the leader!", voteoption3);
        ABroadCast(COLOR_RED, text, 1);
        InVote = 0;
    }
    else if(votefor3 == votefor1 || votefor1 == votefor2 || votefor2 == votefor3)
    {
        format(text, sizeof(text), "It was equal to the candidacy for leadership!");
        ABroadCast(COLOR_RED, text, 1);
        InVote = 0;
    }
    return 1;

}
CMD:vote(playerid, params[])
{
	if(InVote == 0)return SCM(playerid, -1, "There Is'nt Any Vote");
	if(AVotatDeja[playerid] == 1)return SCM(playerid, -1, "You Already Voted");
	if(PlayerInfo[playerid][pMember] == candfaction || PlayerInfo[playerid][pHelper] >= 1 || PlayerInfo[playerid][pAdmin] >= 1)
	{
	    new text[500];
	    if(candsnumber == 2)
	    {
			format(text, sizeof(text), "%s\n%s",voteoption, voteoption2);
		}
		else if(candsnumber == 3)
		{
		    format(text, sizeof(text), "%s\n%s\n%s",voteoption, voteoption2, voteoption3);
		}
		ShowPlayerDialog(playerid, DIALOG_VOTEZ, DIALOG_STYLE_LIST, "VOTE!", text, "Select", "Cancel");
	}
	return 1;
}
CMD:startvote(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)return SCM(playerid, -1, AdminOnly);
	if(InVote == 1)return SCM(playerid, -1, "Already IS A Vote");
	ShowPlayerDialog(playerid, DIALOG_VOTE, DIALOG_STYLE_LIST, "Vote System:", "Number of Candidatees\n", "Select", "Cancel");
	return 1;
}
CMD:va(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 2)
    {
		new vehicleid = GetPlayerVehicleID(playerid);
        new Float:x, Float:y, Float:z, range;
        if(sscanf(params, "i", range)) return SendClientMessage(playerid, COLOR_GRAD2, "{FFFFFF}[SYNTAX]: {FFFFFF}/va [range]");
        for(new car = 0; car < MAX_VEHICLES; car++)
        {
            GetVehiclePos(car, x, y, z);
            if(IsPlayerInRangeOfPoint(playerid, range, x, y, z))
            {
                SetVehicleToRespawn(car);
                DestroyDynamicObject(vText[OwnedVeh(vehicleid)][playerid]);
                DestroyNeon(playerid, personalcar[0][playerid]);
            }
        }
        new string[144];
        new sendername[MAX_PLAYER_NAME];
        GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "Admin %s Has Respawned All Cars In Range Of %d Meters.",sendername,range);
        ABroadCast(COLOR_ADMCOMMANDS,string,1);
    }
    return 1;
}
CMD:desync(playerid, params[])
{
	if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "You need to login pin.");
	new id,string[256], giveplayer[25];
	if(PlayerInfo[playerid][pAcces] == 1)
	{
	    if(sscanf(params, "us[128]", id)) return SCM(playerid,COLOR_WHITE,"{FFFFFF}[SYNTAX]: {FFFFFF}/desync <Name/Playerid>");
	    {
	        if(id != INVALID_PLAYER_ID)
	        {
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "[AdmBot]: %s Has Been Kicked By AdmBot | Reason: Desync/Lag | Relog.", giveplayer);
				Adminlog(string);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				KickEx(id);
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}
CMD:areaunmute(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if (PlayerInfo[playerid][pAdmin] >= 3)
	{
		new range,string[128],sendername[25];
		if(sscanf(params, "i", range)) return SCM(playerid,COLOR_WHITE,"[SYNTAX]: /areaunmute <Range>");
		{
			foreach(Player,i)
			{
				if(IsPlayerConnected(i))
				{
					if (ProxDetectorS(range, playerid, i))
					{
						PlayerInfo[i][pMuted] = 0;
						PlayerInfo[i][pMuteTime] = 0;
					}
				}
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[AdmInfo]: %s Has UnMuted All Players In Range %dm", sendername,range);
			ABroadCast(0xf03337FF,string,4);
		}
	}
	else return SendClientMessage(playerid, COLOR_WHITE, AdminOnly);
	return 1;
}
CMD:aunmute(playerid, params[])
{
  return cmd_areaunmute(playerid, params);
}

CMD:areamute(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if (PlayerInfo[playerid][pAdmin] >= 3)
	{
		new range,string[128],sendername[25];
		if(sscanf(params, "i", range)) return SCM(playerid,COLOR_WHITE,"[SYNTAX]: /areamute <Range>");
		{
			foreach(Player,i)
			{
				if(IsPlayerConnected(i))
				{
					if (ProxDetectorS(range, playerid, i))
					{
						PlayerInfo[i][pMuted] = 1;
						PlayerInfo[i][pMuteTime] = 180;
					}
				}
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[AdmInfo]: %s Has Muted All Players In Range %dm For 3Minutes", sendername,range);
			ABroadCast(0xf03337FF,string,4);
		}
	}
	else return SendClientMessage(playerid, COLOR_WHITE, AdminOnly);
	return 1;
}
CMD:amute(playerid, params[])
{
  return cmd_areamute(playerid, params);
}

CMD:arearespawn(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if (PlayerInfo[playerid][pAdmin] >= 3)
	{
		new range,string[128],sendername[25];
		if(sscanf(params, "i", range)) return SCM(playerid,COLOR_WHITE,"[SYNTAX]: /arearespawn <Range>");
		{
			foreach(Player,i)
			{
				if(IsPlayerConnected(i))
				{
					if (ProxDetectorS(range, playerid, i))
					{
						SpawnPlayer(i);
					}
				}
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[AdmInfo]: %s Has Respawned All Players In Range %dm", sendername,range);
			ABroadCast(0xf03337FF,string,4);
		}
	}
	else return SendClientMessage(playerid, COLOR_WHITE, AdminOnly);
	return 1;
}
CMD:aspawn(playerid, params[])
{
  return cmd_arearespawn(playerid, params);
}

CMD:arearepair(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(SomatePermission[playerid] == 0) return SendClientMessage(playerid, COLOR_WHITE, "{FEC3AC}Wait 5Seconds");
    if (PlayerInfo[playerid][pAdmin] >= 3)
	{
		new range,string[128],sendername[25];
		if(sscanf(params, "i", range)) return SCM(playerid,COLOR_WHITE,"[SYNTAX]: /arearepair <Range>");
		{
            timersoo[playerid] = SetTimerEx("SetSomate", 5000, 1, "i", playerid);
			somatee[playerid] = 0;
			SomatePermission[playerid] = 0;
			foreach(Player,i)
			{
				if(IsPlayerConnected(i))
				{
					if (ProxDetectorS(range, playerid, i))
					{
						RepairVehicle(GetPlayerVehicleID(i));
					}
				}
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[AdmInfo]: %s Has Repaired All Vehicles In Range %dm", sendername,range);
			ABroadCast(0xf03337FF,string,4);
		}
	}
	else return SendClientMessage(playerid, COLOR_WHITE, AdminOnly);
	return 1;
}
CMD:arepair(playerid, params[])
{
  return cmd_arearepair(playerid, params);
}

CMD:am(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if (PlayerInfo[playerid][pAdmin] >= 5)
	{
		new msjam[250],string[250];
		if(sscanf(params, "s[250]", msjam)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFFF00}[SYNTAX]: /am <Message>");
		format(string, sizeof(string), "{0080FF}[AdmBot]:{FFFFFF} %s", msjam);
		OOCOff(COLOR_LIGHTBLUE,string);
		printf("%s", string);
  	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, AdminOnly);
	}
	return 1;
}
/*CMD:wanted1(playerid, params[])
{
    if(!IsACop(playerid)) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not a cop.");
	SendClientMessage(playerid, COLOR_WHITE,"Poti acorda Wanted 1 pentru urmatoarele infractiuni:\n");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Atacarea unui civil.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Furtul unui vehicul.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Insulte aduse la adresa unui civil.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- /call 112 fara motiv.");
	return 1;
}
CMD:wanted2(playerid, params[])
{
    if(!IsACop(playerid)) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not a cop.");
	SendClientMessage(playerid, COLOR_WHITE,"- Poti acorda Wanted 2 pentru urmatoarele infractiuni:\n");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Neoprirea la somatie.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Neplata amenda.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Uciderea unu civil");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Impingerea masinilor pe strada.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Neprezentarea actelor in fata unui politist.");
	return 1;
}
CMD:wanted3(playerid, params[])
{
    if(!IsACop(playerid)) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not a cop.");
	SendClientMessage(playerid, COLOR_WHITE,"Poti acorda Wanted 3 pentru urmatoarele infractiuni:\n");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Rapirea unui civil.\n");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Port arma fara permis.\n");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Droguri (wanted + /confiscate).");
	return 1;
}
CMD:wanted4(playerid, params[])
{
    if(!IsACop(playerid)) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not a cop.");
	SendClientMessage(playerid, COLOR_WHITE,"Poti acorda Wanted 4 pentru urmatoarele infractiuni:");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Atack Cop.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Drive-by shot sau calcat.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Dare de mita.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Patrunderea pe proprietati guvernamentale (inchisoarea, garajul lspd, fbi si NG, area51).");
	return 1;
}
CMD:wanted5(playerid, params[])
{
    if(!IsACop(playerid)) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not a cop.");
	SendClientMessage(playerid, COLOR_WHITE,"Poti acorda Wanted 5 pentru urmatoarele infractiuni:");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Kamikaze (omorarea mai multor jucatori bubuind o masina, avion etc.)");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Rapirea primarului sau a vice-primarului.");
	return 1;
}
CMD:wanted6(playerid, params[])
{
    if(!IsACop(playerid)) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not a cop.");
	SendClientMessage(playerid, COLOR_WHITE,"Poti acorda Wanted 6 pentru urmatoarele infractiuni:");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Runner (Mentionez ca un suspect de wanted 1-5 , la [3x somatii] i se va acorda wanted6 'nepredare'.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Complice la rob.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- Afk cu wanted.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"- /q in perimetrul unui Cop (/q la somatii, /q in timpul unei urmariri).");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"Mentionez ca wanted 6 nu are drept de predare.");
	return 1;
}
CMD:tlist(playerid, params[])
{
    if(!IsACop(playerid)) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not a cop.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"Amenziile pot fi acordate intocmai dupa modelul de mai jos:");
	SendClientMessage(playerid, COLOR_WHITE,"- Condus neregulamentar - Cand cineva conduce pe contra sens si poate provoca un accident.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"Amenda: 50.000$");
	SendClientMessage(playerid, COLOR_WHITE,"- Posesia ilegala de arme.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"Amenda: 20.000$ - 30.000$");
	SendClientMessage(playerid, COLOR_WHITE,"- Faruri stinse dupa ora 19:00.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"Amenda: 20.000$");
	SendClientMessage(playerid, COLOR_WHITE,"- Folosirea de NOS si hidraulice.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"Amenda: 50.000$.");
	SendClientMessage(playerid, COLOR_WHITE,"- Violarea propietatilor guvernamentale. +Wanted.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"Amenda: 15.000 $ - 30.000 $");
	SendClientMessage(playerid, COLOR_WHITE,"- Incalcarea limitei de viteza(Viteza legala in afara orasului 140km/h . Viteza legala in incinta orasului 100km/h).");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"Amenda: 20.000 $ - 35.000 $.");
	SendClientMessage(playerid, COLOR_WHITE,"- Transportarea de marfa ilegala ca si camionagiu.");
	SendClientMessage(playerid, TEAM_CYAN_COLOR,"Amenda: 100.000 $");
	return 1;
}
*/
CMD:awarn(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 10)
		{
			new id,reason[128],string[200],giveplayer[30],sendername[30],time,playerip[16];
			if(sscanf(params, "us[128]", id, reason)) return SCM(playerid,COLOR_WHITE,"[SYNTAX]: /awarn <Name/Playerid> <reason>");
			{
			    if(IsPlayerConnected(id))
			    {
			        new ip[25];
				    GetPlayerIp(id, ip, sizeof(ip));
				    if(PlayerInfo[id][pAdmin] >= PlayerInfo[playerid][pAdmin]) return SendClientMessage(playerid, COLOR_GREY, "You can not use this command someone with a higher degree than the other.");
			        if(id != INVALID_PLAYER_ID)
			        {

					    GetPlayerName(id, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[id][pWarns] += 1;
						format(string, sizeof(string), "You Gave A Staff Warn For %s | Reason : %s", giveplayer, reason);
						SendClientMessage(playerid, COLOR_LIGHTRED, string);
						format(string, sizeof(string), "You Recieved A Staff Warn From %s | Reason : %s", sendername, reason);
						SendClientMessage(id, COLOR_LIGHTRED, string);
						format(string, sizeof(string), "[AdmInfo]: %s Has Recieved A Staff Warn From %s | Reason : %s", giveplayer, sendername, reason);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
	                    new var100[256];
	    				mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`reason`,`playername`,`givername`) VALUES ('%d','%d','5','%s','%s','%s')", PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],reason,giveplayer,sendername);
						mysql_tquery(SQL,var100,"","");
						Adminlog(string);
						Update(id,pWarnsx);
						if(PlayerInfo[id][pWarns] >= 3)
						{
						    new str[500];
						    GetPlayerIp(id, playerip, sizeof(playerip));
						    time = gettime() + (3*86400);
						    mysql_format(SQL,str,sizeof(str),"INSERT INTO bans (PlayerName, AdminName, Reason, IP, Days, IPBan, Permanent, Active, Time) VALUES('%s', 'AdmBot', '3/3 warns', '%s', 3, 0, 0, 1, %d)",
							PlayerInfo[id][pNormalName],playerip,time);
							mysql_tquery(SQL,str,"","");
							PlayerInfo[id][pWarns] = 0;
							Update(id,pWarnsx);
							PlayerInfo[id][pAdmin] = 0;
							mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Admin`='0' WHERE `name`='%s'",PlayerInfo[id][pAdmin],PlayerInfo[id][pNormalName]);
							mysql_tquery(SQL,str,"","");
							format(string, sizeof(string), "Admin %s Recieved A 3Day Bans + Demote | Reason : 3/3 Staff Warn", giveplayer);
							SendClientMessageToAll(COLOR_LIGHTRED, string);
	    					mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`reason`,`playername`,`givername`) VALUES ('%d','0','2','3/3 warns','%s','AdmBot')", PlayerInfo[id][pSQLID], PlayerInfo[id][pNormalName]);
							mysql_tquery(SQL,var100,"","");
							KickEx(id);
						}
					}
				}
			    else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
			}
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:gototw(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 2 || PlayerInfo[playerid][pHelper] >= 1)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 2962.69238, 2043.05237, 2002.05237);
			}
			else
			{
				SetPlayerPos(playerid, 2962.69238, 2043.05237, 2002.05237);
			}
			new string[64],sendername[25];
			SendClientMessage(playerid, 0x0080FFFF, "Info: {FFFFFF}You've Been Teleported Successfully");
			SetPlayerInterior(playerid,0);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[AdmWarn]: Admin/Helper %s Teleported to TeamViewer Area.", sendername);
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE,AdminOnly);
		}
	}
	return 1;
}
CMD:gotopeco(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		new string[64],sendername[25];
		if (PlayerInfo[playerid][pAdmin] >= 2 || PlayerInfo[playerid][pHelper] >= 1)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 986.8287,-920.1818,42.1797);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid, 986.8287,-920.1818,42.1797);
			}
			SendClientMessage(playerid, 0x0080FFFF, "Info: {FFFFFF}You've Been Teleported Successfully !");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported To Peco.", sendername);
			Adminlog(string);
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, AdminOnly);
		}
	}
	return 1;
}
CMD:msg(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 8)return SCM(playerid, COLOR_DARKNICERED,"You Have'nt Access To This Command");
	new text[50], mesaj[50];
	if(sscanf(params, "s[128]", text)) return SendClientMessage(playerid, -1, " /msg [Message]");
	format(mesaj, sizeof(mesaj), "[MESSAGE]: %s",text);
	SendClientMessageToAll(-1, mesaj);
	return 1;
}
CMD:gmx(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 11)return SCM(playerid, COLOR_DARKNICERED,"You Have'nt Access To This Command");
	{
	    SendClientMessageToAll(COLOR_YELLOW, "---- SERVER RESTART ----");
	    SendClientMessageToAll(COLOR_TEAL, "Server Being Restarted For Fixing Bugs And Other Options");
	    SendClientMessageToAll(COLOR_TEAL, "Don't Leave Server ! It Returns In 10 Seconds !");
	    GameModeExit();
	}
	return 1;
}
CMD:muie(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    new id;
    new string[128];
    new PulaName[MAX_PLAYER_NAME];
    if(PlayerInfo[playerid][pAdmin] < 6)return SCM(playerid, COLOR_DARKNICERED,"You Have'nt Access To This Command");
    if(sscanf(params, "u", id)) return SCM(playerid,-1,"{B8DBFF}/muie <Name|PlayerID>");
    GetPlayerName(playerid, PulaName, sizeof(PulaName));
    format(string,sizeof(string),"Cngrats ! You Just Got A BlowJob From His Dick : %s",PulaName);
	SCM(id,COLOR_DARKNICERED,string);
    return 1;
}
CMD:acover(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new numefals[128];
	new nivelfals;
	if(PlayerInfo[playerid][pAdmin] < 10)return SendClientMessage(playerid, -1,AdminOnly);
	if(sscanf(params,"si",numefals,nivelfals))return SendClientMessage(playerid, COLOR_GREY, "/acover <Name> <Level>");
	SetPlayerScore(playerid,nivelfals);
	SetPlayerName(playerid,numefals);
	SendClientMessage(playerid, COLOR_YELLOW,"You Are In AdminCover ! You Can Back To YourSelf With /ACover");
	acovers = 1;
	return 1;

}
CMD:mynameoncar(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new culoare[128];
	new nume[MAX_PLAYER_NAME];
	new text[128];
	GetPlayerName(playerid,nume,sizeof(nume));
	if(PlayerInfo[playerid][pAdmin] < 3)return SendClientMessage(playerid,-1,AdminOnly);
	if(!IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_GREY,"You must be in a car");
	if(sscanf(params,"s[128]", culoare))return SendClientMessage(playerid,COLOR_GREY,"/mynameoncar {Color}");
	format(text,sizeof(text),"{%s}%s",culoare,nume);
	new currentveh;
	currentveh = GetPlayerVehicleID(playerid);
	new Float:vehx, Float:vehy, Float:vehz;
	GetVehiclePos(currentveh, vehx, vehy, vehz);
	new objectid = CreateObject(19327, vehx,vehy,vehz, vehx,vehy,vehz);
	SetObjectMaterialText(objectid, text, 0, 50, "Arial", 25, 1, -16777216, 0, 1);
	AttachObjectToVehicle(objectid, currentveh, 0.0, -1.9, 0.3, 270.0, 0.0, 0.0);
	return 1;
}
CMD:showme(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 10) return SendClientMessage(playerid, -1, AdminOnly);
	if(EsteListat[playerid] == 0)
	{
		EsteListat[playerid] = 1;
		SendClientMessage(playerid, -1,"{008BC7}Info: {ffffff}You Will Now Appear In /Admins");
	}
	else
	{
		EsteListat[playerid] = 0;
		SendClientMessage(playerid, -1,"{008BC7}Info: {ffffff}You Will Not Appear In /Admins");
	}
	return 1;
}

/*CMD:setpin(playerid, params[])
{
	new cod;
	if(PlayerInfo[playerid][pPinCode] != 0)return SCM(playerid, 0x0091FFFF,"You Already Have A Pin Code | For Change It Use /Pin");
	if(sscanf(params,"i",cod))return SCM(playerid, COLOR_GREY, "{FF9900}[SYNTAX]: {33CCFF}/SetPin <cod [4Digits]>");
	PlayerInfo[playerid][pPinCode] = cod;
	Update(playerid, pPinCodex);
	return 1;
}

CMD:pin(playerid, params[])
{
	if(gPlayerLogged[playerid] == 0) return SCM(playerid, COLOR_LIGHTRED, "You Need To Login First");
	new stringz[500];
	new text[500];
	if(PlayerInfo[playerid][pPinCode] == 0 && PinLogged[playerid] == 0)
	{
	    format(stringz,sizeof(stringz),"{FFFFFF}Pin Code | Not Seted\n{FFFFFF}Change Pin Code\n{FFFFFF}Lock Your Account\n");
		format(text,sizeof(text),"{FFFFFF}Login\n{FFFFFF}Pin Account {FFFFFF}Status {FFFFFF}-{FFFFFF}UnProtected");
		ShowPlayerDialog(playerid, DIALOG_PINS, DIALOG_STYLE_LIST, text, stringz,"Select","Cancel");
	}
	if(PlayerInfo[playerid][pPinCode] != 0 && PinLogged[playerid] == 0)
	{
	    format(stringz,sizeof(stringz),"{FFFFFF}Login\n{FFFFFF}Pin Code - {FFFFFF}Not Loged\n{FFFFFF}Change Pin Code\n{FFFFFF}Lock Your Account\n");
		format(text,sizeof(text),"{FFFFFF}Pin Account {FFFFFF}Status {FFFFFF}-{FFFFFF}Not Loged");
		ShowPlayerDialog(playerid, DIALOG_PINS, DIALOG_STYLE_LIST, text, stringz,"Select","Cancel");
	}
	if(PlayerInfo[playerid][pPinCode] != 0 && PinLogged[playerid] == 1)
	{
	    format(stringz,sizeof(stringz),"{FFFFFF}Login\n{FFFFFF}Pin Code\n{FFFFFF}Change Pin Code\n{66ff33}Lock Your Account\n");
		format(text,sizeof(text),"{FFFFFF}Pin Account {FFFFFF}Status {FFFFFF}-{FFFFFF}Loged");
		ShowPlayerDialog(playerid, DIALOG_PINS, DIALOG_STYLE_LIST, text, stringz,"Select","Cancel");
	}
	return 1;
}*/
CMD:leaders(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
        new string[200];
		SendClientMessage(playerid, 0x95C730FF, "{FF0000}|____ {B98300}Online Leaders {FFFFFF}____|");
		foreach(Player,i)
		{
			if(IsPlayerConnected(i))
			{
				new sendername[MAX_PLAYER_NAME];
			    GetPlayerName(i, sendername, sizeof(sendername));
				if(PlayerInfo[i][pLeader] == 1)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{9065D6}* ID: %d | Leader : {FF0000}%s{9065D6} - {0000FF}LSPD", i, sendername);
					SendClientMessage(playerid, -1, string);
				}
				if(PlayerInfo[i][pLeader] == 2)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{9065D6}* ID: %d | Leader : {FF0000}%s{9065D6} - {0000FF}F.B.I.", i, sendername);
					SendClientMessage(playerid, -1, string);
				}
				if(PlayerInfo[i][pLeader] == 3)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{9065D6}* ID: %d | Leader : {FF0000}%s{9065D6} - {0000FF}National Guard", i, sendername);
					SendClientMessage(playerid, -1, string);
				}
				if(PlayerInfo[i][pLeader] == 4)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{9065D6}* ID: %d | Leader : {FF0000}%s{9065D6} - {18EBD6}Los Aztecas", i, sendername);
					SendClientMessage(playerid, -1, string);
				}
				if(PlayerInfo[i][pLeader] == 5)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{9065D6}* ID: %d | Leader : {FF0000}%s{9065D6} - {63AE52}Grove Street", i, sendername);
					SendClientMessage(playerid, -1, string);
				}
				if(PlayerInfo[i][pLeader] == 6)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{9065D6}* ID: %d | Leader : {FF0000}%s{9065D6} - {FFAE00}Los Vagos", i, sendername);
					SendClientMessage(playerid, -1, string);
				}
				if(PlayerInfo[i][pLeader] == 7)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{9065D6}* ID: %d | Leader : {FF0000}%s{9065D6} - {BEFDBD}Government", i, sendername);
					SendClientMessage(playerid, -1, string);
				}
				if(PlayerInfo[i][pLeader] == 8)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{9065D6}* ID: %d | Leader : {FF0000}%s{9065D6} - {0000FF}LVPD", i, sendername);
					SendClientMessage(playerid, -1, string);
				}
				if(PlayerInfo[i][pLeader] == 9)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{9065D6}* ID: %d | Leader : {FF0000}%s{9065D6} - {FF00FF}News Reporter", i, sendername);
					SendClientMessage(playerid, -1, string);
				}
				if(PlayerInfo[i][pLeader] == 10)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{9065D6}* ID: %d | Leader : {FF0000}%s{9065D6} - {BD1CDE}Ballas", i, sendername);
					SendClientMessage(playerid, -1, string);
				}
				if(PlayerInfo[i][pLeader] == 11)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{9065D6}* ID: %d | Leader : {FF0000}%s{9065D6} - {660000}Hitman Agency", i, sendername);
					SendClientMessage(playerid, -1, string);
				}
				if(PlayerInfo[i][pLeader] == 12)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{9065D6}* ID: %d | Leader : {FF0000}%s{9065D6} - {00FF00}School Instructors", i, sendername);
					SendClientMessage(playerid, -1, string);
				}
				if(PlayerInfo[i][pLeader] == 13)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{9065D6}* ID: %d | Leader : {FF0000}%s{9065D6} - {FFFF00}Taxi los Santos", i, sendername);
					SendClientMessage(playerid, -1, string);
				}
				if(PlayerInfo[i][pLeader] == 14)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{9065D6}* ID: %d | Leader : {FF0000}%s{9065D6} - {FF6600}Paramedic Las Venturas", i, sendername);
					SendClientMessage(playerid, -1, string);
				}
			}
	    }
 	}
 	SendClientMessage(playerid, 0x95C730FF, "[____________________________________]");
	return 1;
}
CMD:vehname(playerid, params[]) {
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(PlayerInfo[playerid][pAdmin] >= 1) {
        SendClientMessage(playerid, -1, "Vehicle Search :");

        new mesaj[256],
            rcount;

        if(isnull(params))
            return SendClientMessage(playerid, -1, "No Charachters Specified");

        if(strlen(params) < 3)
            return SendClientMessage(playerid, -1, "Too few specified characters");

        for(new v; v < sizeof(aVehicleNames); v++)
        {
            if(strfind(aVehicleNames[v], params, true) != -1)
            {

                if(rcount == 0)
                    format(mesaj, sizeof(mesaj), "%s (ID %d)", aVehicleNames[v], v+400);
                else
                    format(mesaj, sizeof(mesaj), "%s | %s (ID %d)", mesaj, aVehicleNames[v], v+400);

                rcount++;
            }
        }

        if(rcount == 0)
            SendClientMessage(playerid, -1, "No Result");

        else
            if(strlen(mesaj) >= 128)
                SendClientMessage(playerid, -1, "Too Many Results");
            else
                SendClientMessage(playerid, -1, mesaj);

    }
    else return SendClientMessage(playerid, -1, "You are not an admin!");
    return 1;
}
CMD:slapcar(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new carid;
	if(PlayerInfo[playerid][pAdmin] < 2)return SCM(playerid, -1, AdminOnly);
	if(sscanf(params,"i",carid))return SCM(playerid, COLOR_GREY,"[SYNTAX]:/slapcar <carid>");
	new Float:x, Float:y, Float:z;
    GetVehiclePos(carid, x, y ,z);
    SetVehiclePos(carid, x,y,z+4);
	return 1;
}
CMD:credit(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
       PlayerTextDrawShow(playerid, credite0[playerid]);
       PlayerTextDrawShow(playerid, credite1[playerid]);
       PlayerTextDrawShow(playerid, credite2[playerid]);
       PlayerTextDrawShow(playerid, credite3[playerid]);
       PlayerTextDrawShow(playerid, credite4[playerid]);
       PlayerTextDrawShow(playerid, credite5[playerid]);
       PlayerTextDrawShow(playerid, credite6[playerid]);
       PlayerTextDrawShow(playerid, credite7[playerid]);
       SendClientMessage(playerid, COLOR_WHITE,"You Used The Commnd {ff0000}[/credit]{ffffff} To Show New Land Server Credit");
       SendClientMessage(playerid, COLOR_WHITE,"To Disable That Use {ff0000}[/CreditOff]");
	}
	return 1;
}
CMD:creditoff(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
       PlayerTextDrawHide(playerid, credite0[playerid]);
       PlayerTextDrawHide(playerid, credite1[playerid]);
       PlayerTextDrawHide(playerid, credite2[playerid]);
       PlayerTextDrawHide(playerid, credite3[playerid]);
       PlayerTextDrawHide(playerid, credite4[playerid]);
       PlayerTextDrawHide(playerid, credite5[playerid]);
       PlayerTextDrawHide(playerid, credite6[playerid]);
       PlayerTextDrawHide(playerid, credite7[playerid]);
       SendClientMessage(playerid, COLOR_WHITE,"You've Been Disabled Credit");
	}
	return 1;
}
CMD:anno(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new text[128];
	if(PlayerInfo[playerid][pAdmin] < 7)return SendClientMessage(playerid,COLOR_RED,AdminOnly);
	if(sscanf(params,"s[128]",text))return SendClientMessage(playerid,COLOR_GREY,"/anno <text>");
	if(esteanunt == 1)return SendClientMessage(playerid,COLOR_GREY,"A Global Announcement Is Already Placed");
	new anunt[128];
	format(anunt,sizeof(anunt),"%s",text);
    AnuntServer[0] = TextDrawCreate(254.000000, 4.079977, anunt);
	TextDrawLetterSize(AnuntServer[0], 0.216499, 1.734400);
	TextDrawAlignment(AnuntServer[0], 1);
	TextDrawColor(AnuntServer[0], -5963521);
	TextDrawSetShadow(AnuntServer[0], 1);
	TextDrawSetOutline(AnuntServer[0], 1);
	TextDrawBackgroundColor(AnuntServer[0], 255);
	TextDrawFont(AnuntServer[0], 1);
	TextDrawSetProportional(AnuntServer[0], 1);
	TextDrawSetShadow(AnuntServer[0], 1);
	TextDrawShowForAll(AnuntServer[0]);
	new string[128];
	new sendername[25];
	GetPlayerName(playerid,sendername,sizeof(sendername));
	format(string, sizeof(string), "* Admin %s a Placed A Global Announcement !", sendername);
	ABroadCast(COLOR_ADMIN,string,1);
	esteanunt = 1;
	SendClientMessage(playerid,COLOR_GREY,"Use /danno To Remove This Announcement !");
	return 1;
}
CMD:danno(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(PlayerInfo[playerid][pAdmin] < 7)return SendClientMessage(playerid,COLOR_RED,AdminOnly);
    TextDrawHideForAll(AnuntServer[0]);
   	new string[128];
	new sendername[25];
	GetPlayerName(playerid,sendername,sizeof(sendername));
	format(string, sizeof(string), "* Admin %s Removed The Global Announcement !", sendername);
	ABroadCast(COLOR_ADMIN,string,1);
	esteanunt = 0;
	return 1;
}
CMD:notp(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new chose[28];
	if(PlayerInfo[playerid][pAdmin] < 10)return SendClientMessage(playerid,COLOR_RED,AdminOnly);
	if(sscanf(params,"s",chose))return SendClientMessage(playerid,COLOR_GREY,"/notp <on/off>");
	if(strcmp(chose,"on",true) == 0)
	{
	PlayerInfo[playerid][NoTp] = 1;
	SendClientMessage(playerid,COLOR_RED,"You Activated This Option !");
	}
	if(strcmp(chose,"off",true) == 0)
	{
	PlayerInfo[playerid][NoTp] = 0;
	SendClientMessage(playerid,COLOR_RED,"You DeActivated This Option !");
	}
	return 1;
}
CMD:vama(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	{
		if(PlayerToPoint(10.0, playerid,72.2241, -1541.5658, 6.9730))
		{
			if(GetPlayerCash(playerid) < 100) return SCM(playerid, COLOR_WHITE, "You Have'nt The Money To Pass The Customs");
			MoveDynamicObject(VamaGates[0], 72.2241, -1541.5658, 1.2582, 5);
			SetTimer("VamaGate", 5000, 0);
			SCM(playerid, COLOR_MONEY, "You Paid 250$ To pass the customs, money was stored in the server bank.");
			GivePlayerCash(playerid, -250);
		}
		else if(PlayerToPoint(10.0, playerid, 74.2354, -1527.5720, 6.9730))
		{
			if(GetPlayerCash(playerid) < 100) return SCM(playerid, COLOR_WHITE, "You Have'nt The Money To Pass The Customs");
			MoveDynamicObject(VamaGates[1], 74.2354, -1527.5720, 0.7831, 5);
			SetTimer("VamaGate1", 5000, 0);
			SCM(playerid, COLOR_MONEY, "You Paid 250$ To pass the customs, money was stored in the server bank.");
			GivePlayerCash(playerid, -250);
		}
		else if(PlayerToPoint(10.0, playerid,95.2390, -1282.3080, 15.6290))
		{
			if(GetPlayerCash(playerid) < 100) return SCM(playerid, COLOR_WHITE, "You Have'nt Money To Pass The Customs !");
			MoveDynamicObject(VamaGates[2], 95.2390, -1282.3080, 10.1818, 5);
			SetTimer("VamaGate2", 5000, 0);
			SCM(playerid, COLOR_MONEY, "You Paid 250$ To pass the customs, money was stored in the server bank.");
			GivePlayerCash(playerid, -250);
		}
		else if(PlayerToPoint(10.0, playerid, 79.0665, -1261.4905, 15.6290))
		{
			if(GetPlayerCash(playerid) < 100) return SCM(playerid, COLOR_WHITE, "You Have'nt Money To Pass The Customs !");
			MoveDynamicObject(VamaGates[3], 79.0665, -1261.4905, 10.4855, 5);
			SetTimer("VamaGate3", 5000, 0);
			SCM(playerid, COLOR_MONEY, "You Paid 250$ To pass the customs, money was stored in the server bank.");
			GivePlayerCash(playerid, -250);
		}
		else if(PlayerToPoint(10.0, playerid, 1744.61487, 515.08691, 30.01192))
		{
			if(GetPlayerCash(playerid) < 100) return SCM(playerid, COLOR_WHITE, "You Have'nt Money To Pass The Customs !");
			MoveDynamicObject(VamaGates[4], 1744.6149, 515.0869, 24.4539, 5);
			SetTimer("VamaGate4", 5000, 0);
			SCM(playerid, COLOR_MONEY, "You Paid 250$ To pass the customs, money was stored in the server bank.");
			GivePlayerCash(playerid, -250);
		}
		else if(PlayerToPoint(10.0, playerid, 1729.38416, 520.69910, 29.99904))
		{
			if(GetPlayerCash(playerid) < 100) return SCM(playerid, COLOR_WHITE, "You Have'nt Money To Pass The Customs !");
			MoveDynamicObject(VamaGates[5], 1729.3842, 520.6991, 24.1632, 5);
			SetTimer("VamaGate5", 5000, 0);
			SCM(playerid, COLOR_MONEY, "You Paid 250$ To pass the customs, money was stored in the server bank.");
			GivePlayerCash(playerid, -250);
		}
		else if(PlayerToPoint(10.0, playerid, -1491.78479, 717.57526, 47.59902))
		{
			if(GetPlayerCash(playerid) < 100) return SCM(playerid, COLOR_WHITE, "You Have'nt Money To Pass The Customs !");
			MoveDynamicObject(VamaGates[6], -1491.7848, 717.5753, 41.9921, 5);
			SetTimer("VamaGate6", 5000, 0);
			SCM(playerid, COLOR_MONEY, "You Paid 250$ To pass the customs, money was stored in the server bank.");
			GivePlayerCash(playerid, -250);
		}
		else if(PlayerToPoint(10.0, playerid, -1503.27661, 728.37793, 47.59902))
		{
			if(GetPlayerCash(playerid) < 100) return SCM(playerid, COLOR_WHITE, "You Have'nt Money To Pass The Customs !");
			MoveDynamicObject(VamaGates[7], -1503.2766, 728.3779, 41.7853, 5);
			SetTimer("VamaGate7", 5000, 0);
			SCM(playerid, COLOR_MONEY, "You Paid 250$ To pass the customs, money was stored in the server bank.");
			GivePlayerCash(playerid, -250);
		}
		else SCM(playerid, COLOR_WHITE, "You Are'nt In Customs Office");
		return 1;
	}
}
CMD:fchat(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 7)return SCM(playerid, -1, AdminOnly);
	if(SpecFactiune[playerid] == 0)return SCM(playerid, -1, "You Are'nt Spec OF A Factions");
	new szMesg[1000], name[25], chat[1000];
	GetPlayerName(playerid, name, sizeof(name));
	if(sscanf(params, "s[1000]", chat))return SCM(playerid, -1, "/fchat <text>");
	if(SpecFactiune[playerid] == 1)
	{
	    format(szMesg, sizeof(szMesg), "{B30000}Admin %s: %s", name, chat);
	    SendRadioMessage(1, -1, szMesg);
	}
	else if(SpecFactiune[playerid] == 2)
	{
        format(szMesg, sizeof(szMesg), "{B30000}Admin %s: %s", name, chat);
	    SendRadioMessage(2, -1, szMesg);
	}
	else if(SpecFactiune[playerid] == 3)
	{
        format(szMesg, sizeof(szMesg), "{B30000}Admin %s: %s", name, chat);
	    SendRadioMessage(3, -1, szMesg);
	}
	else if(SpecFactiune[playerid] == 4)
	{
        format(szMesg, sizeof(szMesg), "{B30000}Admin %s: %s", name, chat);
	    SendFamilyMessage(4, -1, szMesg);
	}
	else if(SpecFactiune[playerid] == 5)
	{
        format(szMesg, sizeof(szMesg), "{B30000}Admin %s: %s", name, chat);
	    SendFamilyMessage(5, -1, szMesg);
	}
	else if(SpecFactiune[playerid] == 6)
	{
        format(szMesg, sizeof(szMesg), "{B30000}Admin %s: %s", name, chat);
	    SendFamilyMessage(6, -1, szMesg);
	}
	else if(SpecFactiune[playerid] == 7)
	{
        format(szMesg, sizeof(szMesg), "{B30000}Admin %s: %s", name, chat);
	    SendFamilyMessage(7, -1, szMesg);
	}
	else if(SpecFactiune[playerid] == 8)
	{
        format(szMesg, sizeof(szMesg), "{B30000}Admin %s: %s", name, chat);
	    SendRadioMessage(8, -1, szMesg);
	}
	else if(SpecFactiune[playerid] == 9)
	{
        format(szMesg, sizeof(szMesg), "{B30000}Admin %s: %s", name, chat);
	    SendFamilyMessage(9, -1, szMesg);
	}
	else if(SpecFactiune[playerid] == 10)
	{
        format(szMesg, sizeof(szMesg), "{B30000}Admin %s: %s", name, chat);
	    SendFamilyMessage(10, -1, szMesg);
	}
	else if(SpecFactiune[playerid] == 11)
	{
        format(szMesg, sizeof(szMesg), "{B30000}Admin %s: %s", name, chat);
	    SendFamilyMessage(11, -1, szMesg);
	}
	else if(SpecFactiune[playerid] == 12)
	{
        format(szMesg, sizeof(szMesg), "{B30000}Admin %s: %s", name, chat);
	    SendFamilyMessage(12, -1, szMesg);
	}
	else if(SpecFactiune[playerid] == 13)
	{
        format(szMesg, sizeof(szMesg), "{B30000}Admin %s: %s", name, chat);
	    SendFamilyMessage(13, -1, szMesg);
	}
	else if(SpecFactiune[playerid] == 14)
	{
        format(szMesg, sizeof(szMesg), "{B30000}Admin %s: %s", name, chat);
	    SendFamilyMessage(14, -1, szMesg);
	}
	return 1;
}
CMD:fspec(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new id;
	if(PlayerInfo[playerid][pAdmin] < 7)return SCM(playerid, -1, AdminOnly);
	if(sscanf(params, "u", id))return SCM(playerid, -1, "/fspec <player id>");
	if(id == 0)return SpecFactiune[playerid] = 0;
	if(INVALID_PLAYER_ID == id)return SCM(playerid, -1, "ID Incorrect !");
	new facid = PlayerInfo[id][pMember];
	SpecFactiune[playerid] = facid;
	new szname2[25], szname[25], szs[100];
	GetPlayerName(playerid, szname, sizeof(szname));
	GetPlayerName(id, szname2, sizeof(szname2));
	format(szs, sizeof(szs), "%s is /fpsec on %s's Faction.", szname, szname2);
	ABroadCast(COLOR_ORANGE, szs, 1);
	return 1;
}
CMD:ip(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new id, ip[16], text[128], query[1000], names[255], emails[255], sqlid, level;
	if(PlayerInfo[playerid][pAdmin] < 1)return SCM(playerid, -1 , AdminOnly);
	if(sscanf(params, "u", id))return SCM(playerid, COLOR_FADE2, "[SYNTAX]: /ip <playername>");
	if(id != INVALID_PLAYER_ID)
	{
	    SCM(playerid, -1, "--- Admin Player Search ---");

	    GetPlayerIp(id, ip, 16);
	    format(query, sizeof(query), "SELECT * FROM `users` WHERE `IP` = '%s'", ip);
		new Cache: stringresult = mysql_query(SQL, query);
		for(new i, j = cache_get_row_count (); i != j; ++i)
		{
            cache_get_field_content(i, "Email", emails, SQL, 255);
            cache_get_field_content(i, "name", names, SQL, 255);
            sqlid = cache_get_field_content_int(i, "id");
            level = cache_get_field_content_int(i, "Level");
            format(text, sizeof(text), "(%d)%s | lvl: %d | email: %s",sqlid, names, level, emails);
            SCM(playerid, -1, text);
		}
		cache_delete(stringresult);

	}
	else return SCM(playerid, -1, "Invalid player id");
	return 1;
}
CMD:wipe(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	{
		mysql_tquery(SQL,"DELETE FROM `users`","","");
		mysql_tquery(SQL,"DELETE FROM `aplications`","","");
		mysql_tquery(SQL,"DELETE FROM `bans`","","");
		mysql_tquery(SQL,"DELETE FROM `cars`","","");
		mysql_tquery(SQL,"DELETE FROM `factionlog`","","");
		mysql_tquery(SQL,"DELETE FROM `faction_logs`","","");
		mysql_tquery(SQL,"DELETE FROM `iplogs`","","");
		mysql_tquery(SQL,"DELETE FROM `staff_Logs`","","");
		mysql_tquery(SQL,"DELETE FROM `shop_Logs`","","");
		mysql_tquery(SQL,"DELETE FROM `punishlogs`","","");
		mysql_tquery(SQL,"DELETE FROM `friends`","","");
		mysql_tquery(SQL,"DELETE FROM `emails`","","");
		SendClientMessage(playerid,-1,"You Wiped Every Thing");
	    GameModeExit();
	}
	return 1;
}
CMD:unbanall(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 11)
	{
		mysql_tquery(SQL,"DELETE FROM `bans`","","");
		SendClientMessage(playerid,-1,"You've Been Unbanned All Banned Players !");
	}
	return 1;
}
CMD:cioff(playerid, params[])
{
    TextDrawHideForPlayer(playerid, LoginBox);
    TextDrawHideForPlayer(playerid, LoginInfo);
    return 1;
}
CMD:ci(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new string[2000];
	SendClientMessage(playerid,-1,"Type [/cioff] To Disable This Option");
    TextDrawShowForPlayer(playerid, LoginBox);
	format(string, sizeof(string), "Accounts: ~y~%s~w~ / Newest Account: ~y~%s ~w~/ Most players online: %s",FormatNumber(sumaconturi),celmainoucont,recordjucatori);
	TextDrawSetString(LoginInfo, string);
	TextDrawShowForPlayer(playerid, LoginInfo);
	return 1;
}
CMD:updates(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new chose[28];
	if(sscanf(params,"s",chose))return SendClientMessage(playerid,COLOR_GREY,"{FF9900}[SYNTAX]: {33CCFF}/updates <v1>");
	if(strcmp(chose,"v1",true) == 0)
	{
	new szString[2500];
	format( szString, sizeof( szString ), "%s>>> New Land Gaming RolePlay | Version 1<<<\n",szString);
	format( szString, sizeof( szString ), "%sFixed Vehicle Upgrading To VIP\n",szString);
	format( szString, sizeof( szString ), "%sChanged Some Text Colors\n",szString);
	format( szString, sizeof( szString ), "%sAdded 2 Ambulances To LS Hospital For Paramedic\n",szString);
	format( szString, sizeof( szString ), "%sChanged VIP Commands To Shorter Commands\n",szString);
	format( szString, sizeof( szString ), "%sRemoved 'Premium Cars' From Car Shop Menu\n",szString);
	format( szString, sizeof( szString ), "%sFixed BuyCar Bug\n",szString);
	format( szString, sizeof( szString ), "%sFixed SellCarToDs Bug\n",szString);
	format( szString, sizeof( szString ), "%sTranslated 99%\n",szString);
	format( szString, sizeof( szString ), "%sFixed Some Admin Commands\n",szString);
	format( szString, sizeof( szString ), "%sFixed Some Plugin Bugs\n",szString);
	format( szString, sizeof( szString ), "%sAdded NRG-500 For COPs\n",szString);
	format( szString, sizeof( szString ), "%sAdded Sanchez For Mafia Factions + Infernus For Los Aztecas\n",szString);
	format( szString, sizeof( szString ), "%sFixed Some Database Bugs\n",szString);
	ShowPlayerDialog( playerid, DIALOG_FACTIONS, DIALOG_STYLE_MSGBOX, "Updates Menu", szString, "Ok", "" );
	}
	/*if(strcmp(chose,"v2",true) == 0)
	{
	new szString[2500];
	format( szString, sizeof( szString ), "%s>>>Update V2.0 New Land | Scripter MaWReZ<<<\n",szString);
	format( szString, sizeof( szString ), "%sS-au mai adaugat 5 case in LS\n",szString);
	format( szString, sizeof( szString ), "%sDe acum nu se vor mai putea pune contracte pe Admini & Helper lv 3\n",szString);
	format( szString, sizeof( szString ), "%sS-au adaugat inca 9 comenzi pentru admini /ip & /fspec & /fchat & /notp & /healme & /killme & giveallpp & /anunt.\n",szString);
	format( szString, sizeof( szString ), "%sProtectie la speed hack imbunatatita ! daca treci de 225 KM/H primesti kick automat.\n",szString);
	format( szString, sizeof( szString ), "%sDe acum nu se va mai putea face DM la spawn.\n",szString);
	format( szString, sizeof( szString ), "%sS-a adaugat sistem de vama intre orase LS & LV & SF | Daca ai wanted nu poti trece.\n",szString);
	format( szString, sizeof( szString ), "%sS-a scos comanda /window\n",szString);
	format( szString, sizeof( szString ), "%sS-a adaugat comanda /bonuscar pentru cei noi\n",szString);
	format( szString, sizeof( szString ), "%sS-a modificat putin sistem-ul de newbie.\n",szString);
	format( szString, sizeof( szString ), "%sS-a adaugat comanda /credite & /crediteoff\n",szString);
	format( szString, sizeof( szString ), "%sS-au adaugat faggio + bmx-uri la spawn + putin mapping.\n",szString);
	format( szString, sizeof( szString ), "%sS-a adaugat comanda /ci [ Iti arata cate conturi inregistrate sunt ]\n",szString);
	format( szString, sizeof( szString ), "%sAcum poti da /eject cuiva care este si pe masina ta.\n",szString);
	format( szString, sizeof( szString ), "%sAcum playeri nu vor mai putea sa dea /find pe un hitman undercover, doar politisti vor putea.\n",szString);
	format( szString, sizeof( szString ), "%sAm intarit securitatea pe /report [ Daca scrii urmatoarele cuvinte primesti kick automat : pula , muie , server de rahat , server de cacat , :7777 , .ro , rpg. , % - Sql_Inject , ' , ` ]\n",szString);
	format( szString, sizeof( szString ), "%sS-a adaugat sistem de V.I.P | Tasteaza /vip pentru mai multe informati.\n",szString);
	format( szString, sizeof( szString ), "%sS-a adaugat comanda /leaders - Arata lideri online.\n",szString);
	format( szString, sizeof( szString ), "%sS-a adaugat sistem de PIN | /setpin & /pin\n",szString);
	format( szString, sizeof( szString ), "%sS-a adaugat sistem de Atm-uri [Momentan este doar la spawn 1 atm]\n",szString);
	format( szString, sizeof( szString ), "%sS-a adaugat comanda /buylicense\n",szString);
	ShowPlayerDialog( playerid, DIALOG_FACTIONS, DIALOG_STYLE_MSGBOX, "Update Menu", szString, "Ok", "" );
	}*/
    return 1;
}

CMD:createhouse(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pAdmin] >= 11)
		{
				new ivLevel,ivPrice,ivInt,Float:IntPos[3], inter,Float:pX,Float:pY,Float:pZ,string[128],PropertyString[256],query[500];
				if(sscanf(params, "iii",ivLevel,ivPrice,ivInt)) return SendClientMessage(playerid, 0xFFFFFFFF, "{00FFFF}[SYNTAX]: {ffffff}/createhouse <Level> <Price> <Interior>");
			    GetPlayerPos(playerid, pX, pY, pZ);
				SetPVarFloat(playerid, "pHeX", pX);
	        	SetPVarFloat(playerid, "pHeY", pY);
	        	SetPVarFloat(playerid, "pHeZ", pZ);
				SetPVarInt(playerid, "hExt", 1);
				SendClientMessage(playerid, COLOR_YELLOW, "{ffffff}[Step {ff0000}1{ffffff}/{ff0000}4{ffffff}] The Exterior Of The House Was Positioned");

				if(ivLevel < 1 || ivLevel > 50) return 1;
				if(ivPrice < 1 || ivPrice > 100000000) return 1;
				if(ivInt < 1 || ivInt > 42) return 1;
				if(ivInt == 1)IntPos[0] = 140.17, IntPos[1] = 1366.07, IntPos[2] = 1083.65, inter = 5;
				else if(ivInt == 2)IntPos[0] = 2324.53, IntPos[1] = -1149.54, IntPos[2] = 1050.71, inter = 12;
				else if(ivInt == 3)IntPos[0] = 225.68, IntPos[1] = 1021.45, IntPos[2] = 1084.02, inter = 7;
				else if(ivInt == 4) IntPos[0] = 234.19, IntPos[1] = 1063.73, IntPos[2] = 1084.21, inter = 6;
				else if(ivInt == 5) IntPos[0] = 226.30, IntPos[1] = 1114.24, IntPos[2] = 1080.99, inter = 5;
				else if(ivInt == 6) IntPos[0] = 235.34, IntPos[1] = 1186.68, IntPos[2] = 1080.26, inter = 3;
				else if(ivInt == 7) IntPos[0] = 491.07, IntPos[1] = 1398.50, IntPos[2] = 1080.26, inter = 2;
				else if(ivInt == 8) IntPos[0] = 24.04, IntPos[1] = 1340.17, IntPos[2] = 1084.38, inter = 10;
				else if(ivInt == 9) IntPos[0] = -283.44, IntPos[1] = 1470.93, IntPos[2] = 1084.38, inter = 15;
				else if(ivInt == 10) IntPos[0] = -260.49, IntPos[1] = 1456.75, IntPos[2] = 1084.37, inter = 4;
				else if(ivInt == 11) IntPos[0] = 83.03, IntPos[1] = 1322.28, IntPos[2] = 1083.87, inter = 9;
				else if(ivInt == 12) IntPos[0] = 2317.89, IntPos[1] = -1026.76, IntPos[2] = 1050.22, inter = 9;
				else if(ivInt == 13) IntPos[0] = 2495.98, IntPos[1] = -1692.08, IntPos[2] = 1014.74, inter = 3;
				else if(ivInt == 14) IntPos[0] = 2807.48, IntPos[1] = -1174.76, IntPos[2] = 1025.57, inter = 8;
				else if(ivInt == 15) IntPos[0] = 2196.85, IntPos[1] = -1204.25, IntPos[2] = 1049.02, inter = 6;
				else if(ivInt == 16) IntPos[0] = 377.15, IntPos[1] = 1417.41, IntPos[2] = 1081.33, inter = 15;
				else if(ivInt == 17) IntPos[0] = 2270.38, IntPos[1] = -1210.35, IntPos[2] = 1047.56, inter = 10;
				else if(ivInt == 18) IntPos[0] = 446.99, IntPos[1] = 1397.07, IntPos[2] = 1084.30, inter = 2;
				else if(ivInt == 19) IntPos[0] = 387.22, IntPos[1] = 1471.70, IntPos[2] = 1080.19, inter = 15;
				else if(ivInt == 20) IntPos[0] = 22.88, IntPos[1] = 1403.33, IntPos[2] = 1084.44, inter = 5;
				else if(ivInt == 21) IntPos[0] = 2365.31, IntPos[1] = -1135.60, IntPos[2] = 1050.88, inter = 8;
				else if(ivInt == 22) IntPos[0] =  2237.59, IntPos[1] = -1081.64, IntPos[2] = 1049.02, inter = 2;
				else if(ivInt == 23) IntPos[0] = 295.04, IntPos[1] = 1472.26, IntPos[2] = 1080.26, inter = 15;
				else if(ivInt == 24) IntPos[0] =  261.12, IntPos[1] = 1284.30, IntPos[2] = 1080.26, inter = 4;
				else if(ivInt == 25) IntPos[0] = 221.92, IntPos[1] = 1140.20, IntPos[2] = 1082.61, inter = 4;
				else if(ivInt == 26) IntPos[0] = -68.81, IntPos[1] = 1351.21, IntPos[2] = 1080.21, inter = 6;
				else if(ivInt == 27) IntPos[0] = 260.85, IntPos[1] = 1237.24, IntPos[2] = 1084.26, inter = 9;
				else if(ivInt == 28) IntPos[0] =  2468.84, IntPos[1] = -1698.24, IntPos[2] = 1013.51, inter = 2;
				else if(ivInt == 29) IntPos[0] = 223.20, IntPos[1] = 1287.08, IntPos[2] = 1082.14, inter = 1;
				else if(ivInt == 30) IntPos[0] =  2283.04, IntPos[1] = -1140.28, IntPos[2] = 1050.90, inter = 11;
				else if(ivInt == 31) IntPos[0] = 328.05, IntPos[1] = 1477.73, IntPos[2] = 1084.44, inter = 15;
				else if(ivInt == 32) IntPos[0] = 223.20, IntPos[1] = 1287.08, IntPos[2] = 1287.08, inter = 1;
				else if(ivInt == 33) IntPos[0] = -42.59, IntPos[1] = 1405.47, IntPos[2] = 1084.43, inter = 8;
				else if(ivInt == 34) IntPos[0] = 446.90, IntPos[1] = 506.35, IntPos[2] = 1001.42, inter = 12;
				else if(ivInt == 35) IntPos[0] = 299.78, IntPos[1] = 309.89, IntPos[2] = 1003.30, inter = 4;
				else if(ivInt == 36) IntPos[0] = 2308.77, IntPos[1] = -1212.94, IntPos[2] = 1049.02, inter = 6;
				else if(ivInt == 37) IntPos[0] = 2233.64, IntPos[1] = -1115.26, IntPos[2] = 1050.88, inter = 5;
				else if(ivInt == 38) IntPos[0] = 2218.40, IntPos[1] = -1076.18, IntPos[2] = 1050.48, inter = 1;
				else if(ivInt == 39) IntPos[0] = 266.50, IntPos[1] = 304.90, IntPos[2] = 999.15, inter = 2;
				else if(ivInt == 40) IntPos[0] = 243.72, IntPos[1] = 304.91, IntPos[2] = 999.15, inter = 1;
				else if(ivInt == 41) IntPos[0] = 343.81, IntPos[1] = 304.86, IntPos[2] = 999.15, inter = 6;
				else if(ivInt == 42) IntPos[0] = 2259.38, IntPos[1] = -1135.77, IntPos[2] = 1050.64, inter = 10;
			    GetPlayerPos(playerid, pX, pY, pZ);
				SetPVarFloat(playerid, "pHiX", IntPos[0]);
            	SetPVarFloat(playerid, "pHiY", IntPos[1]);
            	SetPVarFloat(playerid, "pHiZ", IntPos[2]);
				SetPVarInt(playerid, "pHiID", GetPlayerInterior(playerid));
				SetPVarInt(playerid, "pHiVW", housess+1);
            	SetPVarInt(playerid, "hInt", inter);
				SendClientMessage(playerid, COLOR_YELLOW, "{ffffff}[Step {ff0000}2{ffffff}/{ff0000}4{ffffff}] Interior Of House Was Positioned");

				new i = housess+1;
				mysql_format(SQL, query, sizeof(query), "INSERT INTO houses (Owner, Lockk, Hel, Arm, Level, Rentabil, Rent, Owned, Discription, Value, Takings) VALUES('The State', '0', '0', '0', '10', '1', '500', '0', 'House', '10000000', '0')");
				mysql_tquery(SQL, query, "", "");

				HouseInfo[i][hID]                           = i;
   	    		HouseInfo[i][hEntrancex]                    = GetPVarFloat(playerid, "pHeX");
				HouseInfo[i][hEntrancey]                    = GetPVarFloat(playerid, "pHeY");
			 	HouseInfo[i][hEntrancez]                    = GetPVarFloat(playerid, "pHeZ");
        		HouseInfo[i][hExitx]                        = GetPVarFloat(playerid, "pHiX");
        		HouseInfo[i][hExity]                        = GetPVarFloat(playerid, "pHiY");
        		HouseInfo[i][hExitz]                        = GetPVarFloat(playerid, "pHiZ");
        		format(HouseInfo[i][hOwner], 64, "AdmBot");
        		format(HouseInfo[i][hDiscription], 64, "House");
        		HouseInfo[i][hValue]						= ivPrice;
        		SendClientMessage(playerid, COLOR_YELLOW, "{ffffff}[Step {ff0000}3{ffffff}/{ff0000}4{ffffff}] Price Of House Was Seted");
        		HouseInfo[i][hHel]                          = 0;
 			 	HouseInfo[i][hArm]                          = 0;
        		HouseInfo[i][hInterior]                     = GetPVarInt(playerid, "hInt");
        		HouseInfo[i][hLock]                         = 0;
        		HouseInfo[i][hOwned]                        = 0;
        		HouseInfo[i][hRent]                         = 500;
        		HouseInfo[i][hRentabil]                     = 1;
        		HouseInfo[i][hTakings]                      = 0;
        		HouseInfo[i][hLevel]                        = ivLevel;
        		SendClientMessage(playerid, COLOR_YELLOW, "{ffffff}[Step {ff0000}4{ffffff}/{ff0000}4{ffffff}] Level Of House Was Seted");
        		HouseInfo[i][hVirtual]                      = GetPVarInt(playerid, "pHiVW");

        		mysql_format(SQL, query, sizeof(query), "UPDATE `houses` SET `Entrancex`='%f',`Entrancey`='%f',`Entrancez`='%f',`Exitx`='%f',`Exity`='%f',`Exitz`='%f',`Interior`='%d',`Virtual`='%d',`Value`='%d',`Level`='%d' WHERE `ID`='%d'",HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez],HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz],HouseInfo[i][hInterior],HouseInfo[i][hVirtual],HouseInfo[i][hValue],HouseInfo[i][hLevel],i);
        		mysql_tquery(SQL,query,"","");

        		DeletePVar(playerid, "pHeX");
			    DeletePVar(playerid, "pHeY");
			    DeletePVar(playerid, "pHeZ");
			    DeletePVar(playerid, "pHiX");
			    DeletePVar(playerid, "pHeY");
			    DeletePVar(playerid, "pHeZ");
			    DeletePVar(playerid, "pHiID");
			    DeletePVar(playerid, "pHiVW");
			    DeletePVar(playerid, "pExt");
			    DeletePVar(playerid, "pInt");

        		DestroyDynamic3DTextLabel(HouseLabel[i]);
				format(PropertyString, sizeof(PropertyString),"{FFBE00}[House {FFFFFF}%d{FFBE00}] \n{FFFFFF}This House Is For Sale(/buyhouse) ! \n{FFBE00}Description: {FFFFFF}%s \n{FFBE00}Price: {FFFFFF}$%s \n{FFBE00}Level: {FF0000}%d",i,HouseInfo[i][hDiscription],FormatNumber(HouseInfo[i][hValue]),HouseInfo[i][hLevel]);
				HouseLabel[i] = CreateDynamic3DTextLabel(PropertyString ,0x09FF00CC,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez],25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
				DestroyDynamicPickup(HousePickup[i]);
				HousePickup[i] = CreateDynamicPickup(1273, 23, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]);

				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]);
				housess++;
				format(string,sizeof(string),"House %d created succesfully!",i);
				SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:ahat(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
	    if(PalariaProstului[playerid] != 0)
	    {
	        DestroyPlayerObject(playerid, 5);
		    PalariaProstului[playerid] = 0;
		}
		else
		{
		    PalariaProstului[playerid] = 1;
		    SetPlayerAttachedObject(playerid, 5, 19528, 2, 0.167425, -0.006185, -0.004779, 0.612963, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		}
	}
	return 1;
}
CMD:askin(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new name[25];
	GetPlayerName(playerid, name, 25);
	if(strfind("MaWReZ", name, true) == 0)
	{
	    SetPlayerSkin(playerid, 289);
		PlayerInfo[playerid][pModel] = 289;
	}
	else
	{
	    if(PlayerInfo[playerid][pAdmin] < 0)return SCM(playerid, -1, AdminOnly);
	    SetPlayerSkin(playerid, 217);
	}
	return 1;
}
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
CMD:Aparaters(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Locked{ffffff} | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
	{
        new string[200];
		SendClientMessage(playerid, 0x95C730FF, "{FF3300}|____________ {66CC00}Online Aparaters{FF3300} ___________|");
		foreach(Player,i)
		{
			if(IsPlayerConnected(i))
			{
				new sendername[MAX_PLAYER_NAME];
			    GetPlayerName(i, sendername, sizeof(sendername));
				if(PlayerInfo[i][pYoutuber] == 1)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{9065D6}* ID: %d | Aparater : {FF0000}%s", i, sendername);
					SendClientMessage(playerid, -1, string);
				}
			}
	    }
 	}
 	SendClientMessage(playerid, 0x95C730FF, "{6699FF}[____________________________________]");
	return 1;
}
CMD:setap(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Locked{ffffff} | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pAdmin] < 8)return SCM(playerid, -1, AdminOnly);
	new id,string[128];
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FFFFFF}[SYNTAX]: {FFFFFF}/setap <Name/Playerid>");
	PlayerInfo[id][pYoutuber] = 1;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `Youtuber`='1' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:removeap(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Locked{ffffff} | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pAdmin] < 8)return SCM(playerid, -1, AdminOnly);
	new id,string[128];
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FFFFFF}[SYNTAX]: {FFFFFF}/removeap <Name/Playerid>");
	PlayerInfo[id][pYoutuber] = 0;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `Youtuber`='0' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
forward Dezmute(playerid);
public Dezmute(playerid)
{
	if(PoateVorbiVIP[playerid] == 0)
	{
	    PoateVorbiVIP[playerid] = 1;
	    SCM(playerid, -1, "Now You Can Type A Message On VIP Chat Again");
	}
    return 1;
}

CMD:vipneon(playerid, params[])
{
    new vehicleid = GetPlayerVehicleID(playerid);
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER && GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return SCM(playerid, COLOR_WHITE, "Nu esti intr-un vehicul.");
    if(vehicleid == personalcar[0][playerid] || vehicleid == personalcar[1][playerid] || vehicleid == personalcar[2][playerid] || vehicleid == personalcar[3][playerid] || vehicleid == personalcar[4][playerid] || vehicleid == personalcar[5][playerid])
    {
        //if(CarInfo[OwnedVeh(vehicleid)][cVIP] == 0)return SCM(playerid, -1, "Acesta nu este un vehicul VIP.");
        ShowPlayerDialog(playerid, DIALOG_NEON, DIALOG_STYLE_LIST, "Neon VIP Car", "Blue\nRed\nGreen\nWhite\nPink\nYellow\nRemove All Neon", "Select", "Cancel");
    }
    else return SCM(playerid, -1, "This is not your car.");
    return 1;
}

CMD:vneon(playerid, params[])
{
  return cmd_vipneon(playerid, params);
}

CMD:vips(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
        new string[200];
		SendClientMessage(playerid, 0x95C730FF, "{6699FF}|____________ {66CC00}Online VIPs{6699FF} ___________|");
		foreach(Player,i)
		{
			if(IsPlayerConnected(i))
			{
				new sendername[MAX_PLAYER_NAME];
			    GetPlayerName(i, sendername, sizeof(sendername));
				if(PlayerInfo[i][pVIP] == 1)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{9065D6}* ID: %d | VIP : {FF0000}%s", i, sendername);
					SendClientMessage(playerid, -1, string);
				}
			}
	    }
 	}
 	SendClientMessage(playerid, 0x95C730FF, "{6699FF}[____________________________________]");
	return 1;
}

CMD:vipname(playerid, params[])
{
    new TEXTLEANUS132[15];
	new vehicleid = GetPlayerVehicleID(playerid);
	if(sscanf(params, "s[15]", TEXTLEANUS132)) return SCM(playerid, COLOR_WHITE, "[SYNTAX]: /vipname [name]");
	if(isnull(TEXTLEANUS132))return TEXTLEANUS132 = "[]";
	if(strlen(TEXTLEANUS132) > 15)return SCM(playerid, -1, "Maximum of characters is 15");
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER && GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return SCM(playerid, COLOR_WHITE, "You Are'nt In Any Vehicle");
    if(vehicleid == personalcar[0][playerid] || vehicleid == personalcar[1][playerid] || vehicleid == personalcar[2][playerid] || vehicleid == personalcar[3][playerid] || vehicleid == personalcar[4][playerid] || vehicleid == personalcar[5][playerid])
    {
        if(CarInfo[OwnedVeh(vehicleid)][cModel] == 411 || CarInfo[OwnedVeh(vehicleid)][cModel] == 560 || CarInfo[OwnedVeh(vehicleid)][cModel] == 541)
        {
	        DestroyDynamicObject(vText[OwnedVeh(vehicleid)][playerid]);
			new szMessage[256];
			if(CarInfo[OwnedVeh(vehicleid)][cModel] == 411)//infernus
			{
		    	vText[OwnedVeh(vehicleid)][playerid] = CreateDynamicObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
				SetDynamicObjectMaterialText(vText[OwnedVeh(vehicleid)][playerid], 0, TEXTLEANUS132, 50, "Arial", 15, 1, 0xFFFFFFFF, 0, 1);
				AttachDynamicObjectToVehicle(vText[OwnedVeh(vehicleid)][playerid], vehicleid, 0.0,-1.9, 0.3, 270.0, 0.0, 0.0);
			}
			else if(CarInfo[OwnedVeh(vehicleid)][cModel] == 560)//sultan
			{
                vText[OwnedVeh(vehicleid)][playerid] = CreateDynamicObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
				SetDynamicObjectMaterialText(vText[OwnedVeh(vehicleid)][playerid],  0, TEXTLEANUS132, 50, "Arial", 15, 1, 0xFFFFFFFF, 0, 1);
				AttachDynamicObjectToVehicle(vText[OwnedVeh(vehicleid)][playerid], vehicleid, 0.0,-0.7, 0.8, 270.0, 0.0, 0.0);
			}
			else if(CarInfo[OwnedVeh(vehicleid)][cModel] == 541)//bullet
			{
                vText[OwnedVeh(vehicleid)][playerid] = CreateDynamicObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
    			SetDynamicObjectMaterialText(vText[OwnedVeh(vehicleid)][playerid],  0, TEXTLEANUS132, 50, "Arial", 15, 1, 0xFFFFFFFF, 0, 1);
				AttachDynamicObjectToVehicle(vText[OwnedVeh(vehicleid)][playerid], vehicleid, 0.0,-0.4, 0.6, 274.5, 0.0, 0.0);
			}
			format(szMessage, sizeof(szMessage), "{F2CF09}Test For Set On Vehicle : '%s'", TEXTLEANUS132);
			SCM(playerid, COLOR_YELLOW, szMessage);
			new gQuery[1000];
			mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `VipText`='%s' WHERE `ID`='%d'",TEXTLEANUS132, OwnedVeh(vehicleid));
			mysql_tquery(SQL,gQuery,"","");
		}
		else return SCM(playerid, -1, "You Can't A VIP Text On This Vehicle");
	}
	else return SCM(playerid, -1, "This is not your car.");
	return 1;
}

CMD:vname(playerid, params[])
{
  return cmd_vipname(playerid, params);
}

CMD:removename(playerid, params[])
{
	new szMessage[256];
	new vehicleid = GetPlayerVehicleID(playerid);
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER && GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return SCM(playerid, COLOR_WHITE, "Nu esti intr-un vehicul.");
    if(vehicleid == personalcar[0][playerid] || vehicleid == personalcar[1][playerid] || vehicleid == personalcar[2][playerid] || vehicleid == personalcar[3][playerid] || vehicleid == personalcar[4][playerid] || vehicleid == personalcar[5][playerid])
    {
	    DestroyDynamicObject(vText[OwnedVeh(vehicleid)][playerid]);
	    format(szMessage, sizeof(szMessage), "{F2CF09}The Seted Text On Car Was Successfully Removed");
		SCM(playerid, COLOR_RED, szMessage);
		new gQuery[1000];
		mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `VipText`=' ' WHERE `ID`='%d'",OwnedVeh(vehicleid));
		mysql_tquery(SQL,gQuery,"","");
	}
	else return SCM(playerid, -1, "This is not your car.");
    return 1;
}
CMD:vipwheels(playerid, params[])
{
    new vehicleid = GetPlayerVehicleID(playerid);
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER && GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return SCM(playerid, COLOR_WHITE, "You Are'nt In Vehicle");
    if(vehicleid == personalcar[0][playerid] || vehicleid == personalcar[1][playerid] || vehicleid == personalcar[2][playerid] || vehicleid == personalcar[3][playerid] || vehicleid == personalcar[4][playerid] || vehicleid == personalcar[5][playerid])
    {
        ShowPlayerDialog(playerid, DIALOG_VIPWHEELS, DIALOG_STYLE_LIST, "VIP Wheels", "Gold Wheels\nDollar Wheels\nShadow Wheels", "Set", "Cancel");
	}
	return 1;
}

CMD:vw(playerid, params[])
{
  return cmd_vipwheels(playerid, params);
}

CMD:vipnos(playerid, params[])
{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] == 1)
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
					SendClientMessage(playerid, COLOR_WHITE, "[VIP]: Vehicle NOS Added !");
				}
			}
			else return SendClientMessage(playerid, COLOR_ERROR, VipError);
		}
		return 1;
}

CMD:vn(playerid, params[])
{
  return cmd_vipnos(playerid, params);
}

CMD:vip(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		new szString[2500];
		format( szString, sizeof( szString ), "%sVIP Account Options:\n",szString);
		format( szString, sizeof( szString ), "%s1./vips - Show Your Name In VIP List\n",szString);
		format( szString, sizeof( szString ), "%s2. /vipnos - Add An NOS To Your Vehicle\n",szString);
		format( szString, sizeof( szString ), "%s3. /vipchat - To Chat With Other VIPs\n",szString);
		format( szString, sizeof( szString ), "%s4. /vipcolors - Change Your Color In Normal Chat\n",szString);
		format( szString, sizeof( szString ), "%s5. /vipflip - Flip Your Vehicle\n",szString);
		format( szString, sizeof( szString ), "%s6. /vipfix - Fix Your Vehicle \n",szString);
		format( szString, sizeof( szString ), "%s7. /vipwheels - Change VIP Wheels\n",szString);
		format( szString, sizeof( szString ), "%s8 /vipname - Add Any Text Your Want On Your Vehicle\n",szString);
		format( szString, sizeof( szString ), "%s9 /removename - Remove Your Text On Vehicle\n",szString);
		format( szString, sizeof( szString ), "%s10 /vipneon - Add A Noen Light To Your Personal Vehicle/\n",szString);
		ShowPlayerDialog( playerid, DIALOG_FACTIONS, DIALOG_STYLE_MSGBOX, "VIP Menu", szString, "Ok", "" );
	}
	return 1;
}
CMD:vipchat(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pVIP] >= 1)
    {
		new text[1000], chat[1000], name[25];
		GetPlayerName(playerid, name, 25);
		if(PoateVorbiVIP[playerid] == 0)return SCM(playerid, -1, "You Can Writhe A Message In VIP Chat Each 10Second");
		if(sscanf(params, "s[1000]", text))return SCM(playerid, COLOR_FADE2, "[SYNTAX]: /vipchat <text>");
		foreach(Player, i)
		{
		    if(PlayerInfo[i][pVIP] == 1 || PlayerInfo[i][pAdmin] >= 1)
		    {
		        new ceste[15];
		        if(PlayerInfo[playerid][pAdmin] >= 1) ceste = "Admin";
		        if(PlayerInfo[playerid][pVIP] == 1) ceste = "VIP";
		        format(chat, sizeof(chat), "%s %s: %s", ceste, name, text);
		        SCM(i, COLOR_ORANGE, chat);
		        PoateVorbiVIP[playerid] = 0;
		        SetTimerEx("Dezmute", 10000, false, "i", playerid);
		    }
		}
	}
	else return SCM(playerid, -1, "[ERROR]: {FFFFFF}You Are'nt Allowed To Use This Command | You Are'nt A VIP User");
	return 1;
}

CMD:vc(playerid, params[])
{
  return cmd_vipchat(playerid, params);
}

CMD:vipcolors(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(PlayerInfo[playerid][pVIP] == 1)
    {
        ShowPlayerDialog(playerid, DIALOG_VIPCOLORS, DIALOG_STYLE_LIST, "V.I.P", "V.I.P\nMember V.I.P", "Select", "");
	}
    return 1;
}
CMD:vipflip(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "You Are'nt In Vehicle");
   	if(PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "{CC0033}You Can't Use /VipFlip When You Have Wanted Levels");
    if(PlayerInfo[playerid][pVIP] == 1)
    {
        new Float:angle,
        currentveh = GetPlayerVehicleID(playerid);
    	GetVehicleZAngle(currentveh, angle);
    	SetVehicleZAngle(currentveh, angle);
        SendClientMessage(playerid, COLOR_WHITE, "{660033}[V.I.P]:{FFFFFF} You Flipped Car Successfully !");
    }
	return 1;
}

CMD:vflip(playerid, params[])
{
  return cmd_vipflip(playerid, params);
}

CMD:vipfix(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "You Are'nt In Any Vehicle");
	if(PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "{CC0033}You Can't Use /VipFix When You Have Wanted Levels");
	if(IsPlayerConnected(playerid))
	{
        if (PlayerInfo[playerid][pVIP] == 1)
		{
    		if(IsPlayerInAnyVehicle(playerid))
		    {
			    RepairVehicle(GetPlayerVehicleID(playerid));
			    Gas[GetPlayerVehicleID(playerid)] = 100;
			    SendClientMessage(playerid, COLOR_WHITE, "{660033}[V.I.P]:{FFFFFF} You Fixed Car Successfully !");
		    }
		}
	}
	return 1;
}

CMD:vf(playerid, params[])
{
  return cmd_vipfix(playerid, params);
}

CMD:setvip(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 11)return SCM(playerid, -1, AdminOnly);
	new id,string[128];
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FFFFFF}[SYNTAX]: {FFFFFF}/setvip <Name/Playerid>");
	PlayerInfo[id][pVIP] = 1;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `VIP`='1' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:removevip(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 11)return SCM(playerid, -1, AdminOnly);
	new id,string[128];
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FFFFFF}[SYNTAX]: {FFFFFF}/removevip <Name/Playerid>");
	PlayerInfo[id][pVIP] = 0;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `VIP`='0' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CMD:pcolor(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pPremiumAccount] == 1)
	{
	    ShowPlayerDialog(playerid, 6267, DIALOG_STYLE_LIST, "Premium Colors:" , "{CECECE}White\n{0087FE}Blue{FFFFFF}\n{662BBE}Dark purple{FFFFFF}\n{FFE600}Yellow{FFFFFF}\n{FF00FF}Purple{FFFFFF}\n{3FFF3F}Green{FFFFFF}\n{83D553}Lime green{FFFFFF}\n{187700}Dark green{FFFFFF}\n{FF9A00}Orange{FFFFFF}\n{222222}Black{FFFFFF}\n{FF2C9D}Pink{FFFFFF}" , "Select" , "Cancel");
	}
	else return SendClientMessage(playerid,COLOR_WHITE,"You are not a premium user.");
	return 1;
}
CMD:flip(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(PlayerInfo[playerid][pAdmin] >= 1)
	{
        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "You're not in a vehicle.");

        new Float:angle,
    		currentveh = GetPlayerVehicleID(playerid);
    	GetVehicleZAngle(currentveh, angle);
    	SetVehicleZAngle(currentveh, angle);
        SendClientMessage(playerid, COLOR_WHITE, "Your vehicle has been flipped back over.");
    }
	return 1;
}
CMD:angle(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(PlayerInfo[playerid][pAdmin] >= 1)
	{
        new Float:Angle, string[26];
		GetPlayerFacingAngle(playerid, Angle);
		format(string, sizeof(string), "Your facing angle: %0.2f", Angle);
		SendClientMessage(playerid, COLOR_WHITE, string);
    }
	return 1;
}

CMD:charity(playerid, params[])
{
	if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, LoginOnly);
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new moneycharity,string[100],sendername[30];
		if(sscanf(params, "i", moneycharity)) return SendClientMessage(playerid, 0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF} /Charity <Amount of Money>");
		if(GetPlayerCash(playerid) < moneycharity) return SendClientMessage(playerid, 0xFFFFFFFF,"{FFB870}You Don't Have That Amount Of Money .");
		if(moneycharity < 1 || moneycharity > 1000000) return SendClientMessage(playerid,COLOR_WHITE,"{B8DBFF}Donation Must Be Between $1 And $1.000.000 .");
		GivePlayerCash(playerid, -moneycharity);
		CharityMoney +=	moneycharity;
		format(string, sizeof(string), "{52CC52}Thank You For Your Donation Of %s$ .", FormatNumber(moneycharity));
		SCM(playerid,COLOR_LIGHTGREEN,string);
		GetPlayerName(playerid,sendername,sizeof(sendername));
		format(string, sizeof(string), "{52CC52}%s Donated %s$ For Players With Level Of Between 2-8.", sendername,FormatNumber(moneycharity));
		SendFamilyMessage(7, COLOR_WHITE, string);
		new query[128];
		format(query,128,"UPDATE `charity` SET `CharityMoney`='%d' WHERE `ID`='1'",CharityMoney);
		mysql_query(SQL,query);
		Update(playerid, pCashx);
	}
	return 1;
}
CMD:checkcharity(playerid, params[])
{
	if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, LoginOnly);
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new string[100];
		if(PlayerInfo[playerid][pMember] != 7) return SendClientMessage(playerid, 0xFFFFFFFF,"{FFB870}You're Not A Government Member .");
		//if(!PlayerToPoint(5.0, playerid,347.3933,162.1706,1025.7891)) return SendClientMessage(playerid,COLOR_WHITE,"{3385FF}You Are Not the place where check charity.");
		format(string, sizeof(string), "{52CC52}In The City Hall Safe Are %s$ .", FormatNumber(CharityMoney));
		SCM(playerid,COLOR_LIGHTGREEN,string);
	}
	return 1;
}
CMD:givecharity(playerid, params[])
{
	if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, LoginOnly);
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pLeader] != 7) return SendClientMessage(playerid, 0xFFFFFFFF,"{FFB870}You Are Not President .");
	    if(CharityMoney < 1) return SendClientMessage(playerid, 0xFFFFFFFF,"{FFB870}No Noney In The Safe !");
		new charity = 0,sendername[30],string[100],moneycharity,cmoneycharity;
		if(sscanf(params, "i", moneycharity)) return SendClientMessage(playerid, 0xFFFFFFFF,"[SYNTAX]: {33CCFF}/givecharity <Amount of Money>");
		if(moneycharity < 1 || moneycharity > 200000) return SCM(playerid,COLOR_WHITE,"{FFB870}Amount Of Money $1 - $200,000.");
		foreach(Player,i)
		{
		    if(PlayerInfo[i][pLevel] > 1 && PlayerInfo[i][pLevel] < 9)
		    {
		        charity++;
		        cmoneycharity += moneycharity;
		    }
		}
		if(charity >= 1 && CharityMoney >= cmoneycharity)
		{
			foreach(Player,i)
			{
			     if(PlayerInfo[i][pLevel] > 1 && PlayerInfo[i][pLevel] < 7)
			     {
					GivePlayerCash(i, moneycharity);
					CharityMoney -= moneycharity;
					Update(i, pCashx);
			    }
			}
			GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string, sizeof(string), "{FF9600}[CHARITY]: {FFFFFF}President {BEFDBD}%s {FFFFFF}Given {00AFFF}%s$ {FFFFFF}To All Players Level Between 2-8 !",sendername,FormatNumber(moneycharity));
			SendClientMessageToAll(COLOR_MAYOR, string);
			new query[128];
			format(query,128,"UPDATE `charity` SET `CharityMoney`='%d' WHERE `ID`='1'",CharityMoney);
			mysql_query(SQL,query);
		}
		else return SendClientMessage(playerid, 0xFFFFFFFF,"{FFB870}No Online Players With Level Between 2 And 8 Or Charity Money Is Not In Safe .");
	}
	return 1;
}

CMD:shownews(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pMember] == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not in a faction.");
	if(strlen(DynamicFactions[PlayerInfo[playerid][pMember]][fAnn]) > 0)
	{
	    new factioninfo[128];
		format(factioninfo,sizeof(factioninfo), "(Group) MOTD: {FFFFFF}%s.",DynamicFactions[PlayerInfo[playerid][pMember]][fAnn]);
		SCM(playerid,COLOR_GENANNOUNCE,factioninfo);
	}
	return 1;
}
CMD:showmotd(playerid, params[])
{
	return cmd_shownews(playerid, params);
}
CMD:setacces(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 12)return SCM(playerid, -1, AdminOnly);
	new id,string[128];
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FFFFFF}[SYNTAX]: {FFFFFF}/setacces <Name/Playerid>");
	PlayerInfo[id][pAcces] = 1;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `Acces`='1' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:removeacces(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 12)return SCM(playerid, -1, AdminOnly);
	new id,string[128];
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FFFFFF}[SYNTAX]: {FFFFFF}/removeacces <Name/Playerid>");
	PlayerInfo[id][pAcces] = 0;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `Acces`='0' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:fnews(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pMember] == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not in a faction.");
	if(PlayerInfo[playerid][pRank] < 5) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have rank 5.");
	new newsf[128],string[256],name[30];
	if(sscanf(params, "s[128]",newsf)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/gmotd <Message>");
	if(FindIP(newsf)) /// Anti-Reclama
    {
        new advertiser[MAX_PLAYER_NAME];
        GetPlayerName(playerid, advertiser, sizeof(advertiser));
		format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /fnews.", advertiser, playerid, newsf);
		ABroadCast(COLOR_WHITE,string,1);
    }
    for(new i; i < sizeof(TLD); i++)
	{
		if(strfind(newsf, TLD[i], true) != -1)
		{
			if(strfind(newsf, ".", true) != -1 || strfind(newsf, ".", true) != -1 || strfind(newsf, ".", true) != -1) break;
			new advertiser[MAX_PLAYER_NAME];
			GetPlayerName(playerid, advertiser, sizeof(advertiser));
			format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /fnews.", advertiser, playerid, newsf);
			ABroadCast(COLOR_WHITE,string,1);
		}
	}
	GetPlayerName(playerid, name, sizeof(name));
	strmid(DynamicFactions[PlayerInfo[playerid][pMember]][fAnn], newsf, 0, strlen(newsf), 255);
	format(string,sizeof(string),"You have changed the group MOTD to %s.",DynamicFactions[PlayerInfo[playerid][pMember]][fAnn]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	SendClientMessage(playerid, COLOR_WHITE, "{58FAAC}Use /GMotd Just For Important Subjects");
	format(string,sizeof(string),"%s has changed the group MOTD to '%s'.",name,DynamicFactions[PlayerInfo[playerid][pMember]][fAnn]);
	SendFamilyMessage(PlayerInfo[playerid][pMember],COLOR_GENANNOUNCE,string);
	mysql_format(SQL,string, sizeof(string), "UPDATE `factions` SET `Anunt`='%s' WHERE `ID`='%d'",DynamicFactions[PlayerInfo[playerid][pMember]][fAnn], PlayerInfo[playerid][pMember]);
	mysql_tquery(SQL,string,"","");
	return 1;
}
CMD:gmotd(playerid, params[])
{
	return cmd_fnews(playerid, params);
}
CMD:leaderinfo(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if (PlayerInfo[playerid][pLeader] < 1) return SCM(playerid,COLOR_WHITE,"{FFB870}Only leaders can use this command.");
	new string[184];
	format(string,sizeof(string),"You're the leader on %s.",NameOfFactions(PlayerInfo[playerid][pMember]));
	SCM(playerid,COLOR_WHITE,string);
	format(string,sizeof(string),"You have %d/3 leader warning.",PlayerInfo[playerid][pALeader]);
	SCM(playerid,COLOR_WHITE,string);
	return 1;
}
CMD:removeleaderwarn(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if (PlayerInfo[playerid][pAdmin] < 8) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,sendername[25],giveplayer[25],string[184];
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/removeleaderwarn <Name/Playerid>");
    if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	if(IsPlayerConnected(id))
	{
	    if(PlayerInfo[id][pLeader] < 1) return SCM(playerid,COLOR_WHITE,"{FFB870}This player is not leader.");
		if(PlayerInfo[id][pALeader] < 1) return SCM(playerid,COLOR_WHITE,"{FFB870}This player dosen't have leader warning.");
		GetPlayerName(id, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		PlayerInfo[id][pALeader] -= 1;
		format(string, sizeof(string), "You cleared %s a leader warning.", giveplayer);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Admin %s cleared your leader warning.", sendername);
		SendClientMessage(id, COLOR_LIGHTBLUE, string);
		new str[100];
		mysql_format(SQL,str,sizeof(str),"UPDATE users SET `ALeader`='%d' WHERE `name`='%s'",PlayerInfo[id][pALeader],PlayerInfo[id][pNormalName]);
		mysql_tquery(SQL,str,"","");
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	return 1;
}
CMD:rlw(playerid, params[])
{
  return cmd_removeleaderwarn(playerid, params);
}


CMD:leaderwarn(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if (PlayerInfo[playerid][pAdmin] < 8) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,sendername[25],giveplayer[25],string[184],str[184];
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/leaderwarn <Name/Playerid>");
    if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	if(IsPlayerConnected(id))
	{
		GetPlayerName(id, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		PlayerInfo[id][pALeader]++;
		format(string, sizeof(string), "You received one leader warning by %s, now you have %d/3 leader warns.",sendername,PlayerInfo[id][pALeader]);
		SendClientMessage(id, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "You gave %s one leader warning, now he have %d/3 leader warns.", giveplayer, PlayerInfo[id][pALeader]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		mysql_format(SQL,str,sizeof(str),"UPDATE users SET `ALeader`='%d' WHERE `name`='%s'",PlayerInfo[id][pALeader],PlayerInfo[id][pNormalName]);
		mysql_tquery(SQL,str,"","");
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	return 1;
}
CMD:lw(playerid, params[])
{
  return cmd_leaderwarn(playerid, params);
}

CMD:managearea(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new x_nr[10];
    if(sscanf(params, "s[10]",x_nr)) SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/managearea <Close/Open>");
    if(strcmp(x_nr,"open",true) == 0)
 	{
		Update3DTextLabelText(areap, 0xFFFFFFFF, "{FF0000}New Land Event Area{FFFFFF}\nEvent Area is open\nPress enter to enter");
		SCM(playerid, COLOR_WHITE, "Event Area is open!");
		areape = 1;
	}
    if(strcmp(x_nr,"close",true) == 0)
 	{
		Update3DTextLabelText(areap, 0xFFFFFFFF, "Event Area is closed\nPlease wait...");
		SCM(playerid, COLOR_WHITE, "Event Area is closed!");
		areape = 0;
 	}
	return 1;
}
CMD:auninviteoff(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 8)
	{
		new id[30], fp,sendername[25],string[MAX_STRING],reason[64],rank,ftime,faction,idd,query[500],string2[500];
		if(sscanf(params, "s[25]is[64]", id, fp, reason)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/auninviteoff <Name> <FPunish> <Reason>");
		format(string, sizeof(string), "SELECT `Member` FROM `users` WHERE LOWER(name) = LOWER('%s') LIMIT 1", id);
		new Cache: r = mysql_query ( SQL, string );
		if ( cache_get_row_count ( ) )
		{
			new fostfactiune = cache_get_row_int ( 0, 0 );
			cache_delete ( r );
			if(fostfactiune == 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "That Player Is'nt In Any Faction");
				return 1;
			}
			format(query, sizeof(query), "SELECT * FROM `users` WHERE `name`='%s'",id);
			new Cache: membresult = mysql_query(SQL, query);
			for(new i, j = cache_get_row_count (); i != j; ++i)
			{
				idd = cache_get_field_content_int(i, "id");
				rank = cache_get_field_content_int(i, "Rank");
				ftime = cache_get_field_content_int(i, "FactionTime");
				faction = cache_get_field_content_int(i, "id");
			}
			cache_delete(membresult);
			if(fp == 0)
			{
   				GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "* You Kicked %s From Faction Without FP", id);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				mysql_format(SQL,string,sizeof(string),"UPDATE users SET `Team`='3',`Member`='0',`Leader`='0',`Rank`='0',`Model`='250',`FPunish`='0',`FWarn`='0',`FactionTime`='0',`ALeader`='0' WHERE `name`='%s'",id);
				mysql_tquery(SQL,string,"","");
				format(string2, sizeof(string2), "%s was uninvited by Admin %s from faction %s (rank %d) after %d days, without FP. Reason: %s.",id,sendername,DynamicFactions[faction][fName],rank,ftime,reason);
				mysql_format(SQL, query, sizeof(query), "INSERT INTO faction_logs (`text`,`player`,`leader`) VALUES ('%s','%d','%d')", string2, idd, PlayerInfo[playerid][pSQLID]);
				mysql_tquery(SQL,query,"","");
			}
			else if(fp >= 1)
			{
   				GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "* You Kicked %s From Faction With %d FP", id,fp);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				mysql_format(SQL,string,sizeof(string),"UPDATE users SET `Team`='3',`Member`='0',`Leader`='0',`Rank`='0',`Model`='250',`FPunish`='%d',`FWarn`='0',`FactionTime`='0',`ALeader`='0' WHERE `name`='%s'",fp,id);
				mysql_tquery(SQL,string,"","");
				format(string2, sizeof(string2), "%s was uninvited by Admin %s from faction %s (rank %d) after %d days, with %d FP. Reason: %s.",id,sendername,DynamicFactions[faction][fName],rank,ftime,fp,reason);
				mysql_format(SQL, query, sizeof(query), "INSERT INTO faction_logs (`text`,`player`,`leader`) VALUES ('%s','%d','%d')", string2, idd, PlayerInfo[playerid][pSQLID]);
				mysql_tquery(SQL,query,"","");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "That Player Does'nt Exist");
			cache_delete ( r );
			return 1;
		}
	}
	return 1;
}

CMD:fpko(playerid, params[])
{
	return cmd_auninviteoff(playerid, params);
}

CMD:buymaterials(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pJob] != 9) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not arms dealer.");
	if(!IsPlayerInRangeOfPoint(playerid,4,1449.2723,-1848.4255,13.7721)) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not at materials garage.");
 	ShowPlayerDialog(playerid, DIALOG_MATERIALS, DIALOG_STYLE_LIST, "Select materials:", "1,000,000 Price: $900,000\n2,000,000 Price: $1,700,000", "Select", "Close");
	return 1;
}
CMD:top(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new p=0,t=0,s=0,r=0,string[184];
    for(new i = 1; i < sizeof(Turfs); i++)
	{
		if(TurfInfo[i][zOwned] == 4)
		{
		    t++;
		}
		if(TurfInfo[i][zOwned] == 5)
		{
		    p++;
		}
		if(TurfInfo[i][zOwned] == 6)
		{
		    s++;
		}
		if(TurfInfo[i][zOwned] == 10)
		{
		    r++;
		}
	}
	SCM(playerid,COLOR_WHITE,"--------- TOP GANGS ---------");
	format(string,sizeof(string),"Los Aztecas - %d turfs",t);
	SCM(playerid,COLOR_WHITE,string);
	format(string,sizeof(string),"Grove Street - %d turfs",p);
	SCM(playerid,COLOR_WHITE,string);
	format(string,sizeof(string),"Los Vagos - %d turfs",s);
	SCM(playerid,COLOR_WHITE,string);
	format(string,sizeof(string),"Ballas - %d turfs",r);
	SCM(playerid,COLOR_WHITE,string);
	return 1;
}
CMD:oplace(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 10) return SCM(playerid,COLOR_ERROR, AdminOnly);
	if(eventobjects > 9) return SCM(playerid,COLOR_WHITE,"{FFB870}You can't place more than 10 objects.");
	new objectid,prize,sendername[30],Float:pX,Float:pY,Float:pZ,string[128];
	if(sscanf(params, "dd",objectid,prize))
	{
		SendClientMessage(playerid, COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/oplace <ObjectID> <Prize>");
		SendClientMessage(playerid, COLOR_WHITE,"[OBJECTS] Gift: 19054 - 19058 | Christmas Tree: 19059 - 19063 | Egg Paste: 19341 - 19345");
		return 1;
	}
	if(prize < 50000 || prize > 5000000) return SendClientMessage(playerid, COLOR_WHITE, "Prize must be between $50,000 and $ 5,000,000.");
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerPos(playerid,pX,pY,pZ);
	eventobjects++;
	objectevent[eventobjects] = CreatePickup(objectid, 2, pX+2,pY,pZ, -1);
	eventprizeobj[eventobjects] = prize;
	format(string,sizeof(string),"Admin %s[admin:%d] started an event. Object: %d, prize: $%s.",sendername,PlayerInfo[playerid][pSQLID],objectid,FormatNumber(prize));
	ABroadCast(COLOR_RED2, string,1);
	Adminlog(string);
    return 1;
}
CMD:toga(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not admin.");
	if(togadminchat[playerid] == 0)
	{
	    togadminchat[playerid] = 1;
	    SCM(playerid,COLOR_WHITE,"You disable admin chat.");
	}
	else if(togadminchat[playerid] == 1)
	{
	    togadminchat[playerid] = 0;
	    SCM(playerid,COLOR_WHITE,"You enable admin chat.");
	}
	return 1;
}
CMD:toglc(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pLeader] < 1 && PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not leader/admin.");
	if(toglc[playerid] == 0)
	{
	    toglc[playerid] = 1;
	    SCM(playerid,COLOR_WHITE,"You disable leader chat.");
	}
	else if(toglc[playerid] == 1)
	{
	    toglc[playerid] = 0;
	    SCM(playerid,COLOR_WHITE,"You enable leader chat.");
	}
	return 1;
}
CMD:checkv(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[256];
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, 0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF}/checkv <Name/Playerid>");
	if(PlayerInfo[id][pPcarkey] == 0 && PlayerInfo[id][pmotokey] == 0 && PlayerInfo[id][phelikey] == 0 && PlayerInfo[id][pprcarkey] == 0 && PlayerInfo[id][pprcarkey2] == 0 && PlayerInfo[id][pPPluscarkey] == 0 && PlayerInfo[id][pPPluscarkey2] == 0) return SendClientMessage(playerid,COLOR_WHITE,"{FFB870}This player do not have a vehicle.");
	if(IsPlayerConnected(id))
	{
		if(personalcar[0][id] != 0)
    	{
        	new vid = OwnedVeh(personalcar[0][id]);
        	format(string,sizeof(string),"[ID:%d] %s | age: %d | km: %.0f | colors: %d, %d",personalcar[0][id],CarInfo[vid][cDescription],CarInfo[vid][cDays],CarInfo[vid][cKM],CarInfo[vid][cColorOne],CarInfo[vid][cColorTwo]);
        	SendClientMessage(playerid, COLOR_WHITE, string);
		}
		if(personalcar[1][id] != 0)
    	{
        	new vid = OwnedVeh(personalcar[1][id]);
        	format(string,sizeof(string),"[ID:%d] %s | age: %d | km: %.0f | colors: %d, %d",personalcar[1][id],CarInfo[vid][cDescription],CarInfo[vid][cDays],CarInfo[vid][cKM],CarInfo[vid][cColorOne],CarInfo[vid][cColorTwo]);
        	SendClientMessage(playerid, COLOR_WHITE, string);
		}
		if(personalcar[2][id] != 0)
    	{
        	new vid = OwnedVeh(personalcar[2][id]);
       		format(string,sizeof(string),"[ID:%d] %s | age: %d | km: %.0f | colors: %d, %d",personalcar[2][id],CarInfo[vid][cDescription],CarInfo[vid][cDays],CarInfo[vid][cKM],CarInfo[vid][cColorOne],CarInfo[vid][cColorTwo]);
        	SendClientMessage(playerid, COLOR_WHITE, string);
		}
		if(personalcar[3][id] != 0)
    	{
        	new vid = OwnedVeh(personalcar[3][id]);
        	format(string,sizeof(string),"[ID:%d] %s | age: %d | km: %.0f | colors: %d, %d",personalcar[3][id],CarInfo[vid][cDescription],CarInfo[vid][cDays],CarInfo[vid][cKM],CarInfo[vid][cColorOne],CarInfo[vid][cColorTwo]);
        	SendClientMessage(playerid, COLOR_WHITE, string);
		}
		if(personalcar[4][id] != 0)
		{
        	new vid = OwnedVeh(personalcar[4][id]);
        	format(string,sizeof(string),"[ID:%d] %s | age: %d | km: %.0f | colors: %d, %d",personalcar[4][id],CarInfo[vid][cDescription],CarInfo[vid][cDays],CarInfo[vid][cKM],CarInfo[vid][cColorOne],CarInfo[vid][cColorTwo]);
        	SendClientMessage(playerid, COLOR_WHITE, string);
		}
		if(personalcar[5][id] != 0)
    	{
        	new vid = OwnedVeh(personalcar[5][id]);
        	format(string,sizeof(string),"[ID:%d] %s | age: %d | km: %.0f | colors: %d, %d",personalcar[5][id],CarInfo[vid][cDescription],CarInfo[vid][cDays],CarInfo[vid][cKM],CarInfo[vid][cColorOne],CarInfo[vid][cColorTwo]);
        	SendClientMessage(playerid, COLOR_WHITE, string);
		}
	}
	return 1;
}
CMD:removetunning(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pPcarkey] == 0 && PlayerInfo[playerid][pmotokey] == 0 && PlayerInfo[playerid][phelikey] == 0 && PlayerInfo[playerid][pprcarkey] == 0 && PlayerInfo[playerid][pprcarkey2] == 0 && PlayerInfo[playerid][pPPluscarkey] == 0 && PlayerInfo[playerid][pPPluscarkey2] == 0) return SendClientMessage(playerid,COLOR_WHITE,"{FFB870}You don't have a vehicle.");
	new carid = GetPlayerVehicleID(playerid);
	if(carid == personalcar[0][playerid] || carid == personalcar[1][playerid] || carid == personalcar[2][playerid] || carid == personalcar[3][playerid] || carid == personalcar[4][playerid] || carid == personalcar[5][playerid])
	{
		CarInfo[OwnedVeh(carid)][cPaintJ] = 6;
		CarInfo[OwnedVeh(carid)][mod1] = 0;
		CarInfo[OwnedVeh(carid)][mod2] = 0;
		CarInfo[OwnedVeh(carid)][mod3] = 0;
		CarInfo[OwnedVeh(carid)][mod4] = 0;
		CarInfo[OwnedVeh(carid)][mod5] = 0;
		CarInfo[OwnedVeh(carid)][mod6] = 0;
		CarInfo[OwnedVeh(carid)][mod7] = 0;
		CarInfo[OwnedVeh(carid)][mod8] = 0;
		CarInfo[OwnedVeh(carid)][mod9] = 0;
		CarInfo[OwnedVeh(carid)][mod10] = 0;
		CarInfo[OwnedVeh(carid)][mod11] = 0;
		CarInfo[OwnedVeh(carid)][mod12] = 0;
		CarInfo[OwnedVeh(carid)][mod13] = 0;
		CarInfo[OwnedVeh(carid)][mod14] = 0;
		CarInfo[OwnedVeh(carid)][mod15] = 0;
		CarInfo[OwnedVeh(carid)][mod16] = 0;
		CarInfo[OwnedVeh(carid)][mod17] = 0;
		vUpdate(OwnedVeh(carid), cModsx);
		vUpdate(OwnedVeh(carid), cPaintJx);
		SCM(playerid,COLOR_WHITE,"{FFFF00}You removed the car tuning.");
	}
	else return SendClientMessage(playerid, COLOR_GREY, "You are not in your car.");
	return 1;
}
CMD:switchkey(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(SwitchKey[playerid] == 1)
	{
	    if(HireCar[playerid] != -1)
	    {
	        SwitchKey[playerid] = 2;
			SCM(playerid,COLOR_WHITE,"{FFB870}Now control your rental car.");
	    }
	    else return SCM(playerid,COLOR_WHITE,"{FFB870}You do not have a rental car.");
	}
	else if(SwitchKey[playerid] == 2)
	{
		if(PlayerInfo[playerid][pPcarkey] == 0 && PlayerInfo[playerid][pmotokey] == 0 && PlayerInfo[playerid][phelikey] == 0 && PlayerInfo[playerid][pprcarkey] == 0 && PlayerInfo[playerid][pprcarkey2] == 0 && PlayerInfo[playerid][pPPluscarkey] == 0 && PlayerInfo[playerid][pPPluscarkey2] == 0) return SendClientMessage(playerid,COLOR_WHITE,"{FFB870}You do not have a vehicle.");
        SwitchKey[playerid] = 1;
		SCM(playerid,COLOR_WHITE,"{FFB870}Now control your personal car.");
	}
	return 1;
}
CMD:givekey(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
        new id,giveplayer[30],sendername[30],string[128];
		if(sscanf(params, "u",id)) return SendClientMessage(playerid, 0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF}/givekey <Name/Playerid>");
		if(HireCar[id] != -1) return SCM(playerid,COLOR_WHITE,"{FFB870}This player already has a pair of keys.");
		if(PlayerInfo[playerid][pPcarkey] == 0 && PlayerInfo[playerid][pmotokey] == 0 && PlayerInfo[playerid][phelikey] == 0 && PlayerInfo[playerid][pprcarkey] == 0 && PlayerInfo[playerid][pprcarkey2] == 0 && PlayerInfo[playerid][pPPluscarkey] == 0 && PlayerInfo[playerid][pPPluscarkey2] == 0) return SendClientMessage(playerid,COLOR_WHITE,"{FFB870}You do not have a vehicle.");
		if (IsPlayerConnected(id))
		{
			if(id != INVALID_PLAYER_ID)
			{
				if(ProxDetectorS(5.0, playerid, id))
				{
				    new carid = GetPlayerVehicleID(playerid);
					if(carid == personalcar[0][playerid] || carid == personalcar[1][playerid] || carid == personalcar[2][playerid] || carid == personalcar[3][playerid] || carid == personalcar[4][playerid] || carid == personalcar[5][playerid])
					{
						HireCar[id] = carid;
						GetPlayerName(id, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "{B8FFDB}You have given %s the key to your vehicle", giveplayer);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "{B8FFDB}You have recieved the key to a vehicle from %s", sendername);
						SendClientMessage(id, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s takes out a set of keys, and tosses them to %s.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    					SwitchKey[id] = 2;
					}
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	}
	return 1;
}
CMD:changekey(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pPcarkey] == 0 && PlayerInfo[playerid][pmotokey] == 0 && PlayerInfo[playerid][phelikey] == 0 && PlayerInfo[playerid][pprcarkey] == 0 && PlayerInfo[playerid][pprcarkey2] == 0 && PlayerInfo[playerid][pPPluscarkey] == 0 && PlayerInfo[playerid][pPPluscarkey2] == 0) return SendClientMessage(playerid,COLOR_WHITE,"{FFB870}You do not have a vehicle.");
    	foreach(Player,i)
		{
 			if(HireCar[i] == personalcar[0][playerid] || HireCar[i] == personalcar[1][playerid] || HireCar[i] == personalcar[2][playerid] || HireCar[i] == personalcar[3][playerid] || HireCar[i] == personalcar[4][playerid] || HireCar[i] == personalcar[5][playerid])
			{
				HireCar[i] = -1;
			}
		}
		SCM(playerid,COLOR_WHITE,"{B8FFDB}You change your vehicle key.");
	}
	return 1;
}
CMD:changelock(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	return cmd_changekey(playerid, params);
}
CMD:buycar(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_WHITE,"{FFB870}Please get out of the car.");
	if(IsPlayerInRangeOfPoint(playerid, 7.0, 1310.3213,-1369.3365,13.5612))
	{
		if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You need to be level 3 to buy a vehicle.");
		BuyCar[playerid] = -1;
		ShowPlayerDialog(playerid,DIALOG_CARBUY, DIALOG_STYLE_LIST, "Car Shop {FF3300}New Land RP{FFFFFF}", "Cheap Cars\nNormal Cars\nExpensive Cars", "Select", "Close");
	}
	else return SCM(playerid,COLOR_WHITE,"{FFB870}You Are'nt At Car Shop");
  	return 1;
}
CMD:setcar(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if(PlayerInfo[playerid][pAdmin] < 10) return SCM(playerid,COLOR_ERROR, AdminOnly);
		new model[10],test,tableid,string[64],car[30];
		if(sscanf(params, "s[10]is[30]",model,test,car)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/setcar <Stock/Price> <Ammount> <Car Name>");
		tableid = MySQLCheckCar(car)+1;
		if(tableid == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}Invalid car name.");
		if(strcmp(model,"stock",true) == 0)
     	{
			Stock[tableid][vStock] = test;
			format(string,sizeof(string),"You set the stock to %d for car %s.",test,car);
			SCM(playerid,COLOR_WHITE,string);
	        mysql_format(SQL,string, sizeof(string), "UPDATE stock SET Stock='%d' WHERE `ID`='%d'", Stock[tableid][vStock], tableid);
	        mysql_tquery(SQL,string,"","");
	       	return 1;
        }
        if(strcmp(model,"price",true) == 0)
        {
			Stock[tableid][vPrice] = test;
			format(string,sizeof(string),"You set the price to %s for car %s.",FormatNumber(test),car);
			SCM(playerid,COLOR_WHITE,string);
	        mysql_format(SQL,string, sizeof(string), "UPDATE stock SET `Price`='%d' WHERE `ID`='%d'", Stock[tableid][vPrice], tableid);
	        mysql_tquery(SQL,string,"","");
	        return 1;
        }
 	}
 	return 1;
}
CMD:v(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "You need to login first.");
	new masina[456], masina1[456];
 	if(PlayerInfo[playerid][pPcarkey] != 0)
 	{
 	    if(personalcar[0][playerid] != 0)
 	    {
			format(masina1, sizeof(masina1), "{0C370A}(spawned) {FFFFFF}%s\n",CarInfo[PlayerInfo[playerid][pPcarkey]][cDescription]);
			strcat(masina, masina1);
		}
		else
		{
		    format(masina1, sizeof(masina1), "{FB0404}(despawned) {FFFFFF}%s\n",CarInfo[PlayerInfo[playerid][pPcarkey]][cDescription]);
			strcat(masina, masina1);
		}
 	}
 	else
 	{
 	    format(masina1, sizeof(masina1), "{F3FF73}[ empty ]\n");
		strcat(masina, masina1);
	}
 	if(PlayerInfo[playerid][pmotokey] != 0)
 	{
		if(personalcar[1][playerid] != 0)
 	    {
			format(masina1, sizeof(masina1), "{0C370A}(spawned) {FFFFFF}%s\n",CarInfo[PlayerInfo[playerid][pmotokey]][cDescription]);
			strcat(masina, masina1);
		}
		else
		{
		    format(masina1, sizeof(masina1), "{FB0404}(despawned) {FFFFFF}%s\n",CarInfo[PlayerInfo[playerid][pmotokey]][cDescription]);
			strcat(masina, masina1);
		}
 	}
 	else
 	{
 	    format(masina1, sizeof(masina1), "{F3FF73}[ empty ]\n");
		strcat(masina, masina1);
	}
 	if(PlayerInfo[playerid][pprcarkey] != 0)
 	{
		if(personalcar[2][playerid] != 0)
 	    {
			format(masina1, sizeof(masina1), "{0C370A}(spawned) {FFFFFF}%s\n",CarInfo[PlayerInfo[playerid][pprcarkey]][cDescription]);
			strcat(masina, masina1);
		}
		else
		{
		    format(masina1, sizeof(masina1), "{FB0404}(despawned) {FFFFFF}%s\n",CarInfo[PlayerInfo[playerid][pprcarkey]][cDescription]);
			strcat(masina, masina1);
		}
 	}
 	else if(PlayerInfo[playerid][pprcarkey] == 0 && PlayerInfo[playerid][pPremiumAccount] > 0)
 	{
 	    format(masina1, sizeof(masina1), "{F3FF73}[ empty ]\n");
		strcat(masina, masina1);
	}
 	if(PlayerInfo[playerid][pprcarkey2] != 0)
 	{
		if(personalcar[3][playerid] != 0)
 	    {
			format(masina1, sizeof(masina1), "{0C370A}(spawned) {FFFFFF}%s\n",CarInfo[PlayerInfo[playerid][pprcarkey2]][cDescription]);
			strcat(masina, masina1);
		}
		else
		{
		    format(masina1, sizeof(masina1), "{FB0404}(despawned) {FFFFFF}%s\n",CarInfo[PlayerInfo[playerid][pprcarkey2]][cDescription]);
			strcat(masina, masina1);
		}
 	}
 	else if(PlayerInfo[playerid][pprcarkey2] == 0 && PlayerInfo[playerid][pPremiumAccount] > 0)
 	{
 	    format(masina1, sizeof(masina1), "{F3FF73}[ empty ]\n");
		strcat(masina, masina1);
	}
 	if(PlayerInfo[playerid][pPPluscarkey] != 0)
 	{
		if(personalcar[4][playerid] != 0)
 	    {
			format(masina1, sizeof(masina1), "{0C370A}(spawned) {FFFFFF}%s\n",CarInfo[PlayerInfo[playerid][pPPluscarkey]][cDescription]);
			strcat(masina, masina1);
		}
		else
		{
		    format(masina1, sizeof(masina1), "{FB0404}(despawned) {FFFFFF}%s\n",CarInfo[PlayerInfo[playerid][pPPluscarkey]][cDescription]);
			strcat(masina, masina1);
		}
 	}
 	else if(PlayerInfo[playerid][pPPluscarkey] == 0 && PlayerInfo[playerid][pPlusSlot1] > 0)
 	{
 	    format(masina1, sizeof(masina1), "{F3FF73}[ empty ]\n");
		strcat(masina, masina1);
	}
 	if(PlayerInfo[playerid][pPPluscarkey2] != 0)
 	{
		if(personalcar[5][playerid] != 0)
 	    {
			format(masina1, sizeof(masina1), "{0C370A}(spawned) {FFFFFF}%s\n",CarInfo[PlayerInfo[playerid][pPPluscarkey2]][cDescription]);
			strcat(masina, masina1);
		}
		else
		{
		    format(masina1, sizeof(masina1), "{FB0404}(despawned) {FFFFFF}%s\n",CarInfo[PlayerInfo[playerid][pPPluscarkey2]][cDescription]);
			strcat(masina, masina1);
		}
 	}
 	else if(PlayerInfo[playerid][pPPluscarkey2] == 0 && PlayerInfo[playerid][pPlusSlot2] > 0)
 	{
 	    format(masina1, sizeof(masina1), "{F3FF73}[ empty ]\n");
		strcat(masina, masina1);
	}
 	if(PlayerInfo[playerid][pPcarkey] == 0 && PlayerInfo[playerid][pmotokey] == 0 && PlayerInfo[playerid][pprcarkey] == 0 && PlayerInfo[playerid][pprcarkey2] == 0 && PlayerInfo[playerid][pPPluscarkey] == 0 && PlayerInfo[playerid][pPPluscarkey2] == 0)
 	    return SendClientMessage(playerid, COLOR_WHITE, "You don't own any cars.");
	ShowPlayerDialog(playerid,DIALOG_VEHSPAWN,DIALOG_STYLE_LIST,"Vehicle Spawn",masina,"Select","Exit");
	return 1;
}
CMD:sellhidden(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new id,price,sendername[30],giveplayer[30],string[128],other[128];
	if(sscanf(params, "uiS(NULL)", id,price,other)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/sellhidden <Name/Playerid> <price>");
	if(strcmp(other, "NULL", true)) return SCM(playerid,COLOR_WHITE,"Nu folosi spatii in pret.");
	if(price < 1 || price > 100000000) return SendClientMessage(playerid, COLOR_GREY, "{FFB870}Price not lower then 1 and not higher then $100,000,000.");
	if(GetPlayerCash(id) < price) return SCM(playerid,COLOR_WHITE,"{FFB870}This player don't have money needed.");
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
	if(IsPlayerConnected(id))
	{
	    if(IsPlayerInRangeOfPlayer(playerid, id, 5.0))
	    {
			hiddenoffer[id] = playerid;
			hiddenprice[id] = price;
			format(string, sizeof(string), "* %s offered you a hidden color for $%s. (/accept hidden %d)",sendername,FormatNumber(price),playerid);
			SendClientMessage(id, COLOR_GREEN, string);
			format(string, sizeof(string), "* You offered a hidden color to %s for $%s.",giveplayer,FormatNumber(price));
			SendClientMessage(playerid, COLOR_GREEN, string);
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Player is not near you.");
	}
	return 1;
}
/*
CMD:tradecar(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pPcarkey] == 0 && PlayerInfo[playerid][pmotokey] == 0 && PlayerInfo[playerid][phelikey] == 0 && PlayerInfo[playerid][pprcarkey] == 0 && PlayerInfo[playerid][pprcarkey2] == 0 && PlayerInfo[playerid][pPPluscarkey] == 0 && PlayerInfo[playerid][pPPluscarkey2] == 0) return SendClientMessage(playerid,COLOR_WHITE,"{FFB870}You do not have a vehicle.");
	new id,price,other[128];
	if(sscanf(params, "uiS(NULL)", id,price,other)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/tradecar <Name/Playerid> <difference> You Will Pay The Differnce");
    if(strcmp(other, "NULL", true)) return SCM(playerid,COLOR_WHITE,"Nu folosi spatii in pret.");
	if(id == playerid) return SendClientMessage(playerid,COLOR_WHITE,"Nu iti poti schimba masina singur.");
	new sendername[30],giveplayer[30],VehI = OwnedVeh(GetPlayerVehicleID(playerid)),VehI2 = OwnedVeh(GetPlayerVehicleID(id));
	if(PlayerInfo[id][pPcarkey] == 0 && PlayerInfo[id][pmotokey] == 0 && PlayerInfo[id][phelikey] == 0 && PlayerInfo[id][pprcarkey] == 0 && PlayerInfo[id][pprcarkey2] == 0 && PlayerInfo[id][pPPluscarkey] == 0 && PlayerInfo[id][pPPluscarkey2] == 0) return SendClientMessage(playerid,COLOR_WHITE,"{FFB870}That player don't have a vehicle.");
	if(price < 1 || price > 500000000) return SendClientMessage(playerid, COLOR_GREY, "{FFB870}Price not lower then 1 and not higher then $500,000,000.");
    new vid = GetPlayerVehicleID(playerid),vid2 = GetPlayerVehicleID(id);
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "Nu esti in masina personala.");
	if(!IsPlayerInAnyVehicle(id)) return SendClientMessage(playerid, COLOR_WHITE, "Acel jucator nu este in masina personala.");
	if(vid != personalcar[0][playerid] && vid != personalcar[1][playerid] && vid != personalcar[2][playerid] && vid != personalcar[3][playerid] && vid != personalcar[4][playerid] && vid != personalcar[5][playerid]) return SendClientMessage(playerid, COLOR_WHITE, "Nu esti in masina personala.");
    if(vid2 != personalcar[0][id] && vid2 != personalcar[1][id] && vid2 != personalcar[2][id] && vid2 != personalcar[3][id] && vid2 != personalcar[4][id] && vid2 != personalcar[5][id]) return SendClientMessage(playerid, COLOR_WHITE, "Acel jucator nu este in masina personala.");
	if(GetPlayerCash(id) < price) return SCM(playerid,COLOR_WHITE,"{FFB870}This player don't have money needed.");
	if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't have level 3.");
	if(PlayerInfo[id][pLevel] < 3) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}That player doesn't have level 3.");
	if(VehI != PlayerInfo[playerid][pPcarkey] && VehI != PlayerInfo[playerid][pmotokey] && VehI != PlayerInfo[playerid][pprcarkey] && VehI != PlayerInfo[playerid][pprcarkey2] && VehI != PlayerInfo[playerid][pPPluscarkey] && VehI != PlayerInfo[playerid][pPPluscarkey2])
	    return SendClientMessage(playerid, COLOR_WHITE, "This is not your car.");
 	if(VehI2 != PlayerInfo[id][pPcarkey] && VehI2 != PlayerInfo[id][pmotokey] && VehI2 != PlayerInfo[id][pprcarkey] && VehI2 != PlayerInfo[id][pprcarkey2] && VehI2 != PlayerInfo[id][pPPluscarkey] && VehI2 != PlayerInfo[id][pPPluscarkey2])
	    return SendClientMessage(playerid, COLOR_WHITE, "That player is not in his car.");
    GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
	if(IsPlayerConnected(id))
	{
	    if(IsPlayerInRangeOfPlayer(playerid, id, 5.0))
	    {
	        new vehh = GetPlayerVehicleID(playerid),vehh2 = GetPlayerVehicleID(id),vehhh = OwnedVeh(GetPlayerVehicleID(playerid)),vehhh2 = OwnedVeh(GetPlayerVehicleID(id)),string[256];
	   		if(vehh == personalcar[0][playerid])
	   		{
	   	        tradecars[id] = personalcar[0][playerid];
			}
			if(vehh == personalcar[1][playerid])
	   		{
	   	        tradecars[id] = personalcar[1][playerid];
			}
			if(vehh == personalcar[2][playerid])
	   		{
	   	        tradecars[id] = personalcar[2][playerid];
			}
			if(vehh == personalcar[3][playerid])
	   		{
	   	        tradecars[id] = personalcar[3][playerid];
			}
			if(vehh == personalcar[4][playerid])
	   		{
	   	        tradecars[id] = personalcar[4][playerid];
			}
			if(vehh == personalcar[5][playerid])
	   		{
	   	        tradecars[id] = personalcar[5][playerid];
			}

			if(vehh2 == personalcar[0][id])
	   		{
	   	        tradecars2[id] = personalcar[0][id];
			}
			if(vehh2 == personalcar[1][id])
	   		{
	   	        tradecars2[id] = personalcar[1][id];
			}
			if(vehh2 == personalcar[2][id])
	   		{
	   	        tradecars2[id] = personalcar[2][id];
			}
			if(vehh2 == personalcar[3][id])
	   		{
	   	        tradecars2[id] = personalcar[3][id];
			}
			if(vehh2 == personalcar[4][id])
	   		{
	   	        tradecars2[id] = personalcar[4][id];
			}
			if(vehh2 == personalcar[5][id])
	   		{
	   	        tradecars2[id] = personalcar[5][id];
			}
			tradetype[id] = vehhh;
			tradetype2[id] = vehhh2;
			tradeofferer[id] = playerid;
			tradediff[id] = price;
	        format(string, sizeof(string), "I-ai oferit lui %s masina ta (%s) in schimbul masinii %s [age: %d, KM: %.0f, colors: %d, %d] + $%s diferenta.",giveplayer,CarInfo[vehhh][cDescription],CarInfo[vehhh2][cDescription],CarInfo[vehhh2][cDays],CarInfo[vehhh2][cKM],CarInfo[vehhh2][cColorOne],CarInfo[vehhh2][cColorTwo],FormatNumber(price));
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, sizeof(string), "%s iti ofera masina lui %s [age: %d, KM: %.0f, colors: %d, %d] + $%s pentru masina ta (%s).",sendername,CarInfo[vehhh][cDescription],CarInfo[vehhh][cDays],CarInfo[vehhh][cKM],CarInfo[vehhh][cColorOne],CarInfo[vehhh][cColorTwo],FormatNumber(price),CarInfo[vehhh2][cDescription]);
			SendClientMessage(id, COLOR_GREEN, string);
			format(string, sizeof(string), "Scrie /accept tradecar %d pentru a accepta aceasta oferta",playerid);
			SendClientMessage(id, COLOR_WHITE, string);
			RemovePlayerFromVehicleEx(id);
   		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Player is not near you.");
	}
	return 1;
}
*/
CMD:sellcarto(playerid, params[])
{
	if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "You need to login first.");
	if(PlayerInfo[playerid][pPcarkey] == 0 && PlayerInfo[playerid][pmotokey] == 0 && PlayerInfo[playerid][phelikey] == 0 && PlayerInfo[playerid][pprcarkey] == 0 && PlayerInfo[playerid][pprcarkey2] == 0 && PlayerInfo[playerid][pPPluscarkey] == 0 && PlayerInfo[playerid][pPPluscarkey2] == 0) return SendClientMessage(playerid,COLOR_WHITE,"{FFB870}You do not have a vehicle.");
	new id,price,sendername[30],giveplayer[30],VehI = OwnedVeh(GetPlayerVehicleID(playerid)),other[128];
	if(sscanf(params, "uiS(NULL)", id,price,other)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/sellcarto <Name/Playerid> <price>");
	if(strcmp(other, "NULL", true)) return SCM(playerid,COLOR_WHITE,"Don't Use Spaces In Prize");
	if(id == playerid) return SendClientMessage(playerid,COLOR_WHITE,"You Can't Sell Car To YourSelf");
	if(price < 1 || price > 500000000) return SendClientMessage(playerid, COLOR_GREY, "{FFB870}Price not lower then 1 and not higher then $500,000,000.");
	new vid = GetPlayerVehicleID(playerid);
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "You're Not In Your Personal Car");
	if(vid != personalcar[0][playerid] && vid != personalcar[1][playerid] && vid != personalcar[2][playerid] && vid != personalcar[3][playerid] && vid != personalcar[4][playerid] && vid != personalcar[5][playerid]) return SendClientMessage(playerid, COLOR_WHITE, "Nu esti in masina personala.");
	if(GetPlayerCash(id) < price) return SCM(playerid,COLOR_WHITE,"{FFB870}This player don't have money needed.");
	if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't have level 3.");
	if(PlayerInfo[id][pLevel] < 3) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}That player doesn't have level 3.");
	if(VehI != PlayerInfo[playerid][pPcarkey] && VehI != PlayerInfo[playerid][pmotokey] && VehI != PlayerInfo[playerid][pprcarkey] && VehI != PlayerInfo[playerid][pprcarkey2] && VehI != PlayerInfo[playerid][pPPluscarkey] && VehI != PlayerInfo[playerid][pPPluscarkey2])
	    return SendClientMessage(playerid, COLOR_WHITE, "This is not your car.");
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
	if(IsPlayerConnected(id))
	{
	    if(IsPlayerInRangeOfPlayer(playerid, id, 5.0))
	    {
			new vehh = GetPlayerVehicleID(playerid),string[256];
	   		if(vehh == personalcar[0][playerid])
	   		{
	   	        primesccar[id] = 1;
	   	        CarID[id] = OwnedVeh(personalcar[0][playerid]);
			}
			if(vehh == personalcar[1][playerid])
	   		{
	   	        primesccar[id] = 2;
	   	        CarID[id] = OwnedVeh(personalcar[1][playerid]);
			}
			if(vehh == personalcar[2][playerid])
	   		{
	   	        primesccar[id] = 3;
	   	        CarID[id] = OwnedVeh(personalcar[2][playerid]);
			}
			if(vehh == personalcar[3][playerid])
	   		{
	   	        primesccar[id] = 4;
	   	        CarID[id] = OwnedVeh(personalcar[3][playerid]);
			}
			if(vehh == personalcar[4][playerid])
	   		{
	   	        primesccar[id] = 5;
	   	        CarID[id] = OwnedVeh(personalcar[4][playerid]);
			}
			if(vehh == personalcar[5][playerid])
	   		{
	   	        primesccar[id] = 6;
	   	        CarID[id] = OwnedVeh(personalcar[5][playerid]);
			}
			new vehhh = OwnedVeh(GetPlayerVehicleID(playerid));
			if(vehhh == PlayerInfo[playerid][pPcarkey])
			{
			    cartype[id] = 1;
			}
			if(vehhh == PlayerInfo[playerid][pmotokey])
			{
			    cartype[id] = 2;
			}
			if(vehhh == PlayerInfo[playerid][pprcarkey])
			{
			    cartype[id] = 3;
			}
			if(vehhh == PlayerInfo[playerid][pprcarkey2])
			{
			    cartype[id] = 4;
			}
			if(vehhh == PlayerInfo[playerid][pPPluscarkey])
			{
			    cartype[id] = 5;
			}
			if(vehhh == PlayerInfo[playerid][pPPluscarkey2])
			{
			    cartype[id] = 6;
			}
			ofercar[id] = playerid;
   			carprice[id] = price;
			format(string, sizeof(string), "* You have offered your car(%s) to %s(%d) for $%s.", CarInfo[vehhh][cDescription],giveplayer,id,FormatNumber(price));
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, sizeof(string), "* %s offered his car(%s) to you for $%s (type /accept car %d) to buy.", sendername, CarInfo[vehhh][cDescription], FormatNumber(price),playerid);
			SendClientMessage(id, COLOR_GREEN, string);
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Player is not near you.");
	}
	return 1;
}
CMD:selltods(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pPcarkey] == 0 && PlayerInfo[playerid][pmotokey] == 0 && PlayerInfo[playerid][phelikey] == 0 && PlayerInfo[playerid][pprcarkey] == 0) return SendClientMessage(playerid,COLOR_WHITE,"{FFB870}You do not have a vehicle.");
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1310.3213,-1369.3365,13.5612)) return SCM(playerid,COLOR_WHITE,"{FFB870}You're at the place where you can sell your car.");
		new vehh = GetPlayerVehicleID(playerid);
		if(vehh == personalcar[0][playerid])
		{
		    new idc = OwnedVeh(personalcar[0][playerid]);
		    //if(CarInfo[idc][cModel] == 539 || CarInfo[idc][cModel] == 502 || CarInfo[idc][cModel] == 503 || CarInfo[idc][cModel] == 494 || CarInfo[idc][cModel] == 487 || CarInfo[idc][cModel] == 447) return SendClientMessage(playerid, COLOR_WHITE, "This car can't be sold to the DealerShip.");
			new cashveh,string[80];
			CarID[playerid] = personalcar[0][playerid];
            DestroyNeon(playerid, vehh);
			CarInfo[OwnedVeh(vehh)][cNeon] = 0;
			vUpdate(OwnedVeh(vehh), cNeonx);
            DestryVipTextVehicle(idc, playerid);
            CarInfo[idc][cVIP] = 0;
            vUpdate(idc, cVIPx);
 			cashveh = floatround(floatmul(CarInfo[OwnedVeh(personalcar[0][playerid])][cValue],0.60),floatround_ceil);
			format(string,sizeof(string),"Are you sure you sell your car for $%s?",FormatNumber(cashveh));
			ShowPlayerDialog(playerid, DIALOG_CARSELL, DIALOG_STYLE_MSGBOX, "Sellcar:", string, "Yes", "No");
		}
		if(vehh == personalcar[1][playerid])
		{
		    new idc = OwnedVeh(personalcar[1][playerid]);
		    //if(CarInfo[idc][cModel] == 539 || CarInfo[idc][cModel] == 502 || CarInfo[idc][cModel] == 503 || CarInfo[idc][cModel] == 494 || CarInfo[idc][cModel] == 487 || CarInfo[idc][cModel] == 447) return SendClientMessage(playerid, COLOR_WHITE, "This car can't be sold to the DealerShip.");
			new cashveh,string[80];
			CarID[playerid] = personalcar[1][playerid];
            DestroyNeon(playerid, vehh);
			CarInfo[OwnedVeh(vehh)][cNeon] = 0;
			vUpdate(OwnedVeh(vehh), cNeonx);
            DestryVipTextVehicle(idc, playerid);
            CarInfo[idc][cVIP] = 0;
            vUpdate(idc, cVIPx);
 			cashveh = floatround(floatmul(CarInfo[OwnedVeh(personalcar[1][playerid])][cValue],0.60),floatround_ceil);
			format(string,sizeof(string),"Are you sure you sell your car for $%s?",FormatNumber(cashveh));
			ShowPlayerDialog(playerid, DIALOG_CARSELL, DIALOG_STYLE_MSGBOX, "Sellcar:", string, "Yes", "No");
		}
		if(vehh == personalcar[2][playerid])
		{
		    new idc = OwnedVeh(personalcar[2][playerid]);
		    //if(CarInfo[idc][cModel] == 539 || CarInfo[idc][cModel] == 502 || CarInfo[idc][cModel] == 503 || CarInfo[idc][cModel] == 494 || CarInfo[idc][cModel] == 487 || CarInfo[idc][cModel] == 447) return SendClientMessage(playerid, COLOR_WHITE, "This car can't be sold to the DealerShip.");
			new cashveh,string[80];
			CarID[playerid] = personalcar[2][playerid];
            DestroyNeon(playerid, vehh);
			CarInfo[OwnedVeh(vehh)][cNeon] = 0;
			vUpdate(OwnedVeh(vehh), cNeonx);
            DestryVipTextVehicle(idc, playerid);
            CarInfo[idc][cVIP] = 0;
            vUpdate(idc, cVIPx);
 			cashveh = floatround(floatmul(CarInfo[OwnedVeh(personalcar[2][playerid])][cValue],0.60),floatround_ceil);
			format(string,sizeof(string),"Are you sure you sell your car for $%s?",FormatNumber(cashveh));
			ShowPlayerDialog(playerid, DIALOG_CARSELL, DIALOG_STYLE_MSGBOX, "Sellcar:", string, "Yes", "No");
		}
		if(vehh == personalcar[3][playerid])
		{
		    new idc = OwnedVeh(personalcar[3][playerid]);
		    //if(CarInfo[idc][cModel] == 539 || CarInfo[idc][cModel] == 502 || CarInfo[idc][cModel] == 503 || CarInfo[idc][cModel] == 494 || CarInfo[idc][cModel] == 487 || CarInfo[idc][cModel] == 447) return SendClientMessage(playerid, COLOR_WHITE, "This car can't be sold to the DealerShip.");
			new cashveh,string[80];
			CarID[playerid] = personalcar[3][playerid];
            DestroyNeon(playerid, vehh);
			CarInfo[OwnedVeh(vehh)][cNeon] = 0;
			vUpdate(OwnedVeh(vehh), cNeonx);
            DestryVipTextVehicle(idc, playerid);
            CarInfo[idc][cVIP] = 0;
            vUpdate(idc, cVIPx);
 			cashveh = floatround(floatmul(CarInfo[OwnedVeh(personalcar[3][playerid])][cValue],0.60),floatround_ceil);
			format(string,sizeof(string),"Are you sure you sell your car for $%s?",FormatNumber(cashveh));
			ShowPlayerDialog(playerid, DIALOG_CARSELL, DIALOG_STYLE_MSGBOX, "Sellcar:", string, "Yes", "No");
		}
		if(vehh == personalcar[4][playerid])
		{
		    new idc = OwnedVeh(personalcar[4][playerid]);
		    //if(CarInfo[idc][cModel] == 539 || CarInfo[idc][cModel] == 502 || CarInfo[idc][cModel] == 503 || CarInfo[idc][cModel] == 494 || CarInfo[idc][cModel] == 487 || CarInfo[idc][cModel] == 447) return SendClientMessage(playerid, COLOR_WHITE, "This car can't be sold to the DealerShip.");
			new cashveh,string[80];
			CarID[playerid] = personalcar[4][playerid];
            DestroyNeon(playerid, vehh);
			CarInfo[OwnedVeh(vehh)][cNeon] = 0;
			vUpdate(OwnedVeh(vehh), cNeonx);
            DestryVipTextVehicle(idc, playerid);
            CarInfo[idc][cVIP] = 0;
            vUpdate(idc, cVIPx);
 			cashveh = floatround(floatmul(CarInfo[OwnedVeh(personalcar[4][playerid])][cValue],0.60),floatround_ceil);
			format(string,sizeof(string),"Are you sure you sell your car for $%s?",FormatNumber(cashveh));
			ShowPlayerDialog(playerid, DIALOG_CARSELL, DIALOG_STYLE_MSGBOX, "Sellcar:", string, "Yes", "No");
		}
		if(vehh == personalcar[5][playerid])
		{
		    new idc = OwnedVeh(personalcar[5][playerid]);
		    //if(CarInfo[idc][cModel] == 539 || CarInfo[idc][cModel] == 502 || CarInfo[idc][cModel] == 503 || CarInfo[idc][cModel] == 494 || CarInfo[idc][cModel] == 487 || CarInfo[idc][cModel] == 447) return SendClientMessage(playerid, COLOR_WHITE, "This car can't be sold to the DealerShip.");
			new cashveh,string[80];
			CarID[playerid] = personalcar[5][playerid];
            DestroyNeon(playerid, vehh);
			CarInfo[OwnedVeh(vehh)][cNeon] = 0;
			vUpdate(OwnedVeh(vehh), cNeonx);
            DestryVipTextVehicle(idc, playerid);
            CarInfo[idc][cVIP] = 0;
            vUpdate(idc, cVIPx);
 			cashveh = floatround(floatmul(CarInfo[OwnedVeh(personalcar[5][playerid])][cValue],0.60),floatround_ceil);
			format(string,sizeof(string),"Are you sure you sell your car for $%s?",FormatNumber(cashveh));
			ShowPlayerDialog(playerid, DIALOG_CARSELL, DIALOG_STYLE_MSGBOX, "Sellcar:", string, "Yes", "No");
		}
		else if(vehh != personalcar[0][playerid] && vehh != personalcar[1][playerid] && vehh != personalcar[2][playerid] && vehh != personalcar[3][playerid] && vehh != personalcar[4][playerid] && vehh != personalcar[5][playerid])
			return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You have to sit at your own car to sell it.");
	}
	return 1;
}
CMD:sellcar(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	return cmd_selltods(playerid, params);
}
CMD:vehicles(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	return cmd_v(playerid, params);
}
CMD:cars(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	return cmd_v(playerid, params);
}
CMD:emails(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	return cmd_email(playerid, params);
}
CMD:fly(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	return cmd_flymode(playerid, params);
}
CMD:findhouse(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
	    new houseID;
		if(sscanf(params, "d", houseID)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/findhouse <House ID>");
  		new i = sizeof(HouseInfo) - 1;
		if(houseID > i || houseID < 0) return SendClientMessage(playerid, COLOR_GREY, "Invalid House ID.");
		if(BusinessRob[playerid] > 0) return SendClientMessage(playerid,COLOR_WHITE,"You can't use this while robbing the bank.");
        if(CP[playerid] < 1 && IsCollectingRubbish[playerid] < 1 && !IsATruck(GetPlayerVehicleID(playerid)) && MechanicCallTime[playerid] < 1 && CheckBus[playerid] < 1 && GotoMats[playerid] < 1 && CarJacker[playerid] < 1 && JCurier[playerid][0] < 1)
		{
			SetPlayerCheckpoint(playerid, HouseInfo[houseID][hEntrancex], HouseInfo[houseID][hEntrancey], HouseInfo[houseID][hEntrancez], 4.0);
			CP[playerid] = 43;
			SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
        }
        else
        {
            ShowPlayerDialog(playerid, DIALOG_JOBULETES, DIALOG_STYLE_MSGBOX, "Checkpoint Cancel", "Are You Sure You Want To Cancel CHeckpoint ?", "Yeah", "No");
		}
	}
	return 1;
}
CMD:findbiz(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{

		new houseID;
		if(sscanf(params, "d", houseID)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/findbiz <Business ID>");
	    new i = sizeof(BizzInfo) - 1;
		if(houseID > i || houseID < 0) return SendClientMessage(playerid, COLOR_GREY, "Invalid bizz ID.");
		if(BusinessRob[playerid] > 0) return SendClientMessage(playerid,COLOR_WHITE,"You can't use this while robbing the bank.");
        if(CP[playerid] < 1 && IsCollectingRubbish[playerid] < 1 && !IsATruck(GetPlayerVehicleID(playerid)) && MechanicCallTime[playerid] < 1 && CheckBus[playerid] < 1 && GotoMats[playerid] < 1 && GotoMats[playerid] < 1 && CarJacker[playerid] < 1)
		{
			SetPlayerCheckpoint(playerid, BizzInfo[houseID][bEntranceX], BizzInfo[houseID][bEntranceY], BizzInfo[houseID][bEntranceZ], 4.0);
			CP[playerid] = 43;
			SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
		}
		else
		{
		    ShowPlayerDialog(playerid, DIALOG_JOBULETES, DIALOG_STYLE_MSGBOX, "Checkpoint Cancel", "Are You Sure You Want To Cancel CHeckpoint ?", "Yeah", "No");
		}
	}
	return 1;
}
CMD:carplate(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pPcarkey] == 0 && PlayerInfo[playerid][pmotokey] == 0 && PlayerInfo[playerid][phelikey] == 0 && PlayerInfo[playerid][pprcarkey] == 0 && PlayerInfo[playerid][pprcarkey2] == 0 && PlayerInfo[playerid][pPPluscarkey] == 0 && PlayerInfo[playerid][pPPluscarkey2] == 0) return SendClientMessage(playerid,COLOR_WHITE,"{FFB870}You do not have a vehicle.");
	if(GetPlayerCash(playerid) >= 25000)
 	{
 	    for(new v=0; v<MAX_PVEHS; v++)
 	    {
			if(GetPlayerVehicleID(playerid) == personalcar[v][playerid])
			{
				if(IsPlayerInVehicle(playerid, personalcar[v][playerid]))
	 			{
	   				ShowPlayerDialog(playerid, DIALOG_PLATE, DIALOG_STYLE_INPUT, "Number Plate", "Enter new number plate:", "Change", "Cancel");
				}
			}
		}
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't have the cash for that.");
	return 1;
}
CMD:acarcolor(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 5) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new colorpart,colorid;
	if(IsAnOwnableCar(GetPlayerVehicleID(playerid)))
	{
		new car = GetPlayerVehicleID(playerid);
		if(sscanf(params, "ii", colorpart, colorid)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/carcolor <1 or 2> <color id(0-255)>");
		if(colorpart==1)
		{
			if(colorid < 0 || colorid > 255) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Invalid color ID.");
         	CarInfo[OwnedVeh(car)][cColorOne] = colorid;
       		ChangeVehicleColor(car, colorid, CarInfo[OwnedVeh(car)][cColorTwo]);
			vUpdate(OwnedVeh(car), cColorOnex);
			return 1;
		}
		if(colorpart==2)
		{
			if(colorid < 0 || colorid > 255) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Invalid color ID.");
         	CarInfo[OwnedVeh(car)][cColorTwo] = colorid;
       		ChangeVehicleColor(car, CarInfo[OwnedVeh(car)][cColorOne], colorid);
			vUpdate(OwnedVeh(car), cColorTwox);
			return 1;
		}
	}
	else return SCM(playerid,COLOR_WHITE,"{FFB870}You are not in your vehicle.");
	return 1;
}
CMD:carcolor(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pPcarkey] == 0 && PlayerInfo[playerid][pmotokey] == 0 && PlayerInfo[playerid][phelikey] == 0 && PlayerInfo[playerid][pprcarkey] == 0 && PlayerInfo[playerid][pprcarkey2] == 0 && PlayerInfo[playerid][pPPluscarkey] == 0 && PlayerInfo[playerid][pPPluscarkey2] == 0) return SendClientMessage(playerid,COLOR_WHITE,"{FFB870}You do not have a vehicle.");
	if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid, COLOR_GREY,"{FFB870}You don't have enough money for vehicle respray.");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY,"{FFB870}You are not in a vehicle.");
	new colorpart,colorid,VehI = GetPlayerVehicleID(playerid);
    if(IsPlayerConnected(playerid))
    {
		if(VehI == personalcar[0][playerid] || VehI == personalcar[1][playerid] || VehI == personalcar[2][playerid] || VehI == personalcar[3][playerid] || VehI == personalcar[4][playerid] || VehI == personalcar[5][playerid])
		{
			new car = GetPlayerVehicleID(playerid);
			if(sscanf(params, "ii", colorpart, colorid)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/carcolor <1 or 2> <color id(0-255)>");
			if(colorpart==1)
			{
				if(PlayerInfo[playerid][pHiddenColor] <= 0 && colorid > 127) return SendClientMessage(playerid, COLOR_WHITE, "You Don't Have Enought Premium Points To Use That");
				if(colorid < 0 || colorid > 255) return SendClientMessage(playerid, COLOR_WHITE, "The Color ID Is Between 0 To 255");
 				CarInfo[OwnedVeh(car)][cColorOne] = colorid;
  				GivePlayerCash(playerid, -5000);
  				if(colorid > 127)
  				{
   					PlayerInfo[playerid][pHiddenColor] -= 1;
   					Update(playerid, pHiddenColorx);
				}
   				ChangeVehicleColor(car, colorid, CarInfo[OwnedVeh(car)][cColorTwo]);
				Update(playerid, pCashx);
				vUpdate(OwnedVeh(car), cColorOnex);
  				SendClientMessage(playerid,COLOR_WHITE, "Vehicle color changed!");
  				GameTextForPlayer(playerid, "~r~-$5.000", 5000, 1);
				return 1;
			}
			if(colorpart==2)
			{
				if(PlayerInfo[playerid][pHiddenColor] <= 0 && colorid > 127) return SendClientMessage(playerid, COLOR_WHITE, "You Don't Have Enought Premium Points To Use That");
				if(colorid < 0 || colorid > 255) return SendClientMessage(playerid, COLOR_WHITE, "The Color ID Is Between 0 To 255");
 				CarInfo[OwnedVeh(car)][cColorTwo] = colorid;
  				GivePlayerCash(playerid, -5000);
  				if(colorid > 127)
  				{
   					PlayerInfo[playerid][pHiddenColor] -= 1;
   					Update(playerid, pHiddenColorx);
				}
   				ChangeVehicleColor(car, CarInfo[OwnedVeh(car)][cColorOne], colorid);
				Update(playerid, pCashx);
				vUpdate(OwnedVeh(car), cColorTwox);
				SendClientMessage(playerid,COLOR_WHITE, "Vehicle color changed!");
				GameTextForPlayer(playerid, "~r~-$5.000", 5000, 1);
				return 1;
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "This is not your car.");
	}
	return 1;
}
CMD:swapcolors(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pPcarkey] == 0 && PlayerInfo[playerid][pmotokey] == 0 && PlayerInfo[playerid][phelikey] == 0 && PlayerInfo[playerid][pprcarkey] == 0 && PlayerInfo[playerid][pprcarkey2] == 0 && PlayerInfo[playerid][pPPluscarkey] == 0 && PlayerInfo[playerid][pPPluscarkey2] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You do not have a vehicle.");
		if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid, COLOR_GREY,"You don't have enough money for vehicle respray.");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY,"You are not in a vehicle.");
		new VehI = GetPlayerVehicleID(playerid);
		if(VehI == personalcar[0][playerid] || VehI == personalcar[1][playerid] || VehI == personalcar[2][playerid] || VehI == personalcar[3][playerid] || VehI == personalcar[4][playerid] || VehI == personalcar[5][playerid])
		{
			new color1 = CarInfo[OwnedVeh(VehI)][cColorOne], color2 = CarInfo[OwnedVeh(VehI)][cColorTwo];
			CarInfo[OwnedVeh(VehI)][cColorOne] = color2;
			CarInfo[OwnedVeh(VehI)][cColorTwo] = color1;
			ChangeVehicleColor(VehI, CarInfo[OwnedVeh(VehI)][cColorOne], CarInfo[OwnedVeh(VehI)][cColorTwo]);
			GivePlayerCash(playerid, -5000);
			Update(playerid, pCashx);
			vUpdate(OwnedVeh(VehI), cColorOnex);
			vUpdate(OwnedVeh(VehI), cColorTwox);
			SendClientMessage(playerid,COLOR_WHITE, "Colors Of Car Have Changed");
			GameTextForPlayer(playerid, "~r~-$5.000", 5000, 1);
		}
	}
	return 1;
}
CMD:park(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not in your vehicle.");
	new engine,lights,alarm,doors,bonnet,boot,objective;
	new Float:x,Float:y,Float:z,Float:a,getcarid;
	getcarid = GetPlayerVehicleID(playerid);
	new interiorr = GetPlayerInterior(playerid),
	virtuall = GetPlayerVirtualWorld(playerid);
	GetVehiclePos(getcarid, x, y, z);
	GetVehicleZAngle(getcarid, a);
	if(IsPlayerConnected(playerid))
	{
		if(getcarid == personalcar[0][playerid] || getcarid == personalcar[1][playerid] || getcarid == personalcar[2][playerid] || getcarid == personalcar[3][playerid] || getcarid == personalcar[4][playerid] || getcarid == personalcar[5][playerid])
		{
			new Float:health2;
			GetVehicleHealth(getcarid, health2);
			if(health2 < 500.0 || (vehEngine[getcarid] == 1 && !IsABike(getcarid))) return SCM(playerid,COLOR_GREY,"You need to stop the engine first. Also, your car needs to be reapaired first (more than 500 car health).");
			CarInfo[OwnedVeh(getcarid)][cLocationx] = x;
			CarInfo[OwnedVeh(getcarid)][cLocationy] = y;
			CarInfo[OwnedVeh(getcarid)][cLocationz] = z;
			CarInfo[OwnedVeh(getcarid)][cAngle] = a;
			if(getcarid == personalcar[0][playerid])
			{
				DestroyVehicle(personalcar[0][playerid]);
				new created = OwnedVeh(getcarid);
				OwnedVeh(getcarid) = 0;
				new car = CreateVehicle(CarInfo[created][cModel],CarInfo[created][cLocationx],CarInfo[created][cLocationy],CarInfo[created][cLocationz]+1.0,CarInfo[created][cAngle],CarInfo[created][cColorOne],CarInfo[created][cColorTwo],500000);
				UpdateVehicleDamageStatus(car, CarInfo[created][cDamage1], CarInfo[created][cDamage2], CarInfo[created][cDamage3], CarInfo[created][cDamage4]);
				Gas[car] = CarInfo[created][cGas];
				OwnedVeh(car) = created;
				personalcar[0][playerid] = car;
				SetVehicleNumberPlate(car, CarInfo[OwnedVeh(car)][cLicense]);
				SetVehicleHealth(car, health2);
				LinkVehicleToInterior(car, interiorr);
				SetVehicleVirtualWorld(car, virtuall);
				vehEngine[car] = 0;
				GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(car,VEHICLE_PARAMS_OFF,lights,alarm,CarInfo[PlayerInfo[playerid][pPcarkey]][cLock],bonnet,boot,objective);
				SetPVarInt(playerid, "Engine", 0);
				vUpdate(OwnedVeh(car),cLocationxx);
				vUpdate(OwnedVeh(car),cLocationyx);
				vUpdate(OwnedVeh(car),cLocationzx);
				vUpdate(OwnedVeh(car),cAnglex);
				ModVehicle(car);
				SendClientMessage(playerid, COLOR_WHITE, "The Car Is Parked | Use /V To Tow That");
				Update(playerid, pPcarkeyx);
				return 1;
			}
			else if(getcarid == personalcar[1][playerid])
			{
				DestroyVehicle(personalcar[1][playerid]);
				new created = OwnedVeh(getcarid);
				OwnedVeh(getcarid) = 0;
				new car = CreateVehicle(CarInfo[created][cModel],CarInfo[created][cLocationx],CarInfo[created][cLocationy],CarInfo[created][cLocationz]+1.0,CarInfo[created][cAngle],CarInfo[created][cColorOne],CarInfo[created][cColorTwo],500000);
				UpdateVehicleDamageStatus(car, CarInfo[created][cDamage1], CarInfo[created][cDamage2], CarInfo[created][cDamage3], CarInfo[created][cDamage4]);
				Gas[car] = CarInfo[created][cGas];
				OwnedVeh(car) = created;
				personalcar[1][playerid] = car;
				SetVehicleNumberPlate(car, CarInfo[OwnedVeh(car)][cLicense]);
				SetVehicleHealth(car, health2);
				LinkVehicleToInterior(car, interiorr);
				SetVehicleVirtualWorld(car, virtuall);
				vehEngine[car] = 0;
				GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(car,VEHICLE_PARAMS_OFF,lights,alarm,CarInfo[PlayerInfo[playerid][pPcarkey]][cLock],bonnet,boot,objective);
				SetPVarInt(playerid, "Engine", 0);
				vUpdate(OwnedVeh(car),cLocationxx);
				vUpdate(OwnedVeh(car),cLocationyx);
				vUpdate(OwnedVeh(car),cLocationzx);
				vUpdate(OwnedVeh(car),cAnglex);
				ModVehicle(car);
				SendClientMessage(playerid, COLOR_WHITE, "The Car Is Parked | Use /V To Tow That");
				Update(playerid, pmotokeyx);
				return 1;
			}
			else if(getcarid == personalcar[2][playerid])
			{
				DestroyVehicle(personalcar[2][playerid]);
				new created = OwnedVeh(getcarid);
				OwnedVeh(getcarid) = 0;
				new car = CreateVehicle(CarInfo[created][cModel],CarInfo[created][cLocationx],CarInfo[created][cLocationy],CarInfo[created][cLocationz]+1.0,CarInfo[created][cAngle],CarInfo[created][cColorOne],CarInfo[created][cColorTwo],500000);
				UpdateVehicleDamageStatus(car, CarInfo[created][cDamage1], CarInfo[created][cDamage2], CarInfo[created][cDamage3], CarInfo[created][cDamage4]);
				Gas[car] = CarInfo[created][cGas];
				OwnedVeh(car) = created;
				personalcar[2][playerid] = car;
				SetVehicleNumberPlate(car, CarInfo[OwnedVeh(car)][cLicense]);
				SetVehicleHealth(car, health2);
				LinkVehicleToInterior(car, interiorr);
				SetVehicleVirtualWorld(car, virtuall);
				vehEngine[car] = 0;
				GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(car,VEHICLE_PARAMS_OFF,lights,alarm,CarInfo[PlayerInfo[playerid][pPcarkey]][cLock],bonnet,boot,objective);
				SetPVarInt(playerid, "Engine", 0);
				vUpdate(OwnedVeh(car),cLocationxx);
				vUpdate(OwnedVeh(car),cLocationyx);
				vUpdate(OwnedVeh(car),cLocationzx);
				vUpdate(OwnedVeh(car),cAnglex);
				ModVehicle(car);
				SendClientMessage(playerid, COLOR_WHITE, "The Car Is Parked | Use /V To Tow That");
				Update(playerid, pprcarkeyx);
				return 1;
			}
			else if(getcarid == personalcar[3][playerid])
			{
				DestroyVehicle(personalcar[3][playerid]);
				new created = OwnedVeh(getcarid);
				OwnedVeh(getcarid) = 0;
				new car = CreateVehicle(CarInfo[created][cModel],CarInfo[created][cLocationx],CarInfo[created][cLocationy],CarInfo[created][cLocationz]+1.0,CarInfo[created][cAngle],CarInfo[created][cColorOne],CarInfo[created][cColorTwo],500000);
				UpdateVehicleDamageStatus(car, CarInfo[created][cDamage1], CarInfo[created][cDamage2], CarInfo[created][cDamage3], CarInfo[created][cDamage4]);
				Gas[car] = CarInfo[created][cGas];
				OwnedVeh(car) = created;
				personalcar[3][playerid] = car;
				SetVehicleNumberPlate(car, CarInfo[OwnedVeh(car)][cLicense]);
				SetVehicleHealth(car, health2);
				LinkVehicleToInterior(car, interiorr);
				SetVehicleVirtualWorld(car, virtuall);
				vehEngine[car] = 0;
				GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(car,VEHICLE_PARAMS_OFF,lights,alarm,CarInfo[PlayerInfo[playerid][pPcarkey]][cLock],bonnet,boot,objective);
				SetPVarInt(playerid, "Engine", 0);
				vUpdate(OwnedVeh(car),cLocationxx);
				vUpdate(OwnedVeh(car),cLocationyx);
				vUpdate(OwnedVeh(car),cLocationzx);
				vUpdate(OwnedVeh(car),cAnglex);
				ModVehicle(car);
				SendClientMessage(playerid, COLOR_WHITE, "The Car Is Parked | Use /V To Tow That");
				Update(playerid, pprcarkey2x);
				return 1;
			}
			else if(getcarid == personalcar[4][playerid])
			{
				DestroyVehicle(personalcar[4][playerid]);
				new created = OwnedVeh(getcarid);
				OwnedVeh(getcarid) = 0;
				new car = CreateVehicle(CarInfo[created][cModel],CarInfo[created][cLocationx],CarInfo[created][cLocationy],CarInfo[created][cLocationz]+1.0,CarInfo[created][cAngle],CarInfo[created][cColorOne],CarInfo[created][cColorTwo],500000);
				UpdateVehicleDamageStatus(car, CarInfo[created][cDamage1], CarInfo[created][cDamage2], CarInfo[created][cDamage3], CarInfo[created][cDamage4]);
				Gas[car] = CarInfo[created][cGas];
				OwnedVeh(car) = created;
				personalcar[4][playerid] = car;
				SetVehicleNumberPlate(car, CarInfo[OwnedVeh(car)][cLicense]);
				SetVehicleHealth(car, health2);
				LinkVehicleToInterior(car, interiorr);
				SetVehicleVirtualWorld(car, virtuall);
				vehEngine[car] = 0;
				GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(car,VEHICLE_PARAMS_OFF,lights,alarm,CarInfo[PlayerInfo[playerid][pPcarkey]][cLock],bonnet,boot,objective);
				SetPVarInt(playerid, "Engine", 0);
				vUpdate(OwnedVeh(car),cLocationxx);
				vUpdate(OwnedVeh(car),cLocationyx);
				vUpdate(OwnedVeh(car),cLocationzx);
				vUpdate(OwnedVeh(car),cAnglex);
				ModVehicle(car);
				SendClientMessage(playerid, COLOR_WHITE, "The Car Is Parked | Use /V To Tow That");
				Update(playerid, pPPluscarkeyx);
				return 1;
			}
			else if(getcarid == personalcar[5][playerid])
			{
				DestroyVehicle(personalcar[5][playerid]);
				new created = OwnedVeh(getcarid);
				OwnedVeh(getcarid) = 0;
				new car = CreateVehicle(CarInfo[created][cModel],CarInfo[created][cLocationx],CarInfo[created][cLocationy],CarInfo[created][cLocationz]+1.0,CarInfo[created][cAngle],CarInfo[created][cColorOne],CarInfo[created][cColorTwo],500000);
				UpdateVehicleDamageStatus(car, CarInfo[created][cDamage1], CarInfo[created][cDamage2], CarInfo[created][cDamage3], CarInfo[created][cDamage4]);
				Gas[car] = CarInfo[created][cGas];
				OwnedVeh(car) = created;
				personalcar[5][playerid] = car;
				SetVehicleNumberPlate(car, CarInfo[OwnedVeh(car)][cLicense]);
				SetVehicleHealth(car, health2);
				LinkVehicleToInterior(car, interiorr);
				SetVehicleVirtualWorld(car, virtuall);
				vehEngine[car] = 0;
				GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(car,VEHICLE_PARAMS_OFF,lights,alarm,CarInfo[PlayerInfo[playerid][pPcarkey]][cLock],bonnet,boot,objective);
				SetPVarInt(playerid, "Engine", 0);
				vUpdate(OwnedVeh(car),cLocationxx);
				vUpdate(OwnedVeh(car),cLocationyx);
				vUpdate(OwnedVeh(car),cLocationzx);
				vUpdate(OwnedVeh(car),cAnglex);
				ModVehicle(car);
				SendClientMessage(playerid, COLOR_WHITE, "The Car Is Parked | Use /V To Tow That");
				Update(playerid, pPPluscarkey2x);
				return 1;
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not in your vehicle.");
	}
	return 1;
}
CMD:lock(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new engine,lights,alarm,doors,bonnet,boot,objective;
	    if(SwitchKey[playerid] == 1)
        {
			new string[100];
			for(new v=0; v<MAX_PVEHS; v++)
			{
		 		if(personalcar[v][playerid] != 0)
		  		{
		        	if(CheckPlayerDistanceToVehicle(5.0, playerid, personalcar[v][playerid]))
					{
				 		if(CarInfo[OwnedVeh(personalcar[v][playerid])][cLock] == 1)
				  		{
		    				GetVehicleParamsEx(personalcar[v][playerid],engine,lights,alarm,doors,bonnet,boot,objective);
		      	    		SetVehicleParamsEx(personalcar[v][playerid],engine,lights,alarm,0,bonnet,boot,objective);
							format(string, sizeof(string), "~h~%s~n~~g~Unlocked",CarInfo[OwnedVeh(personalcar[v][playerid])][cDescription]);
							GameTextForPlayer(playerid, string, 4000, 4);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							CarInfo[OwnedVeh(personalcar[v][playerid])][cLock] = 0;
							gCarLock[personalcar[v][playerid]] = 0;
							vUpdate(OwnedVeh(personalcar[v][playerid]), cLockx); //
							return 1;
						}
						else if(CarInfo[OwnedVeh(personalcar[v][playerid])][cLock] == 0)
						{
		    				GetVehicleParamsEx(personalcar[v][playerid],engine,lights,alarm,doors,bonnet,boot,objective);
		      	    		SetVehicleParamsEx(personalcar[v][playerid],engine,lights,alarm,1,bonnet,boot,objective);
							format(string, sizeof(string), "~h~%s~n~~r~Locked",CarInfo[OwnedVeh(personalcar[v][playerid])][cDescription]);
							GameTextForPlayer(playerid, string, 4000, 4);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							CarInfo[OwnedVeh(personalcar[v][playerid])][cLock] = 1;
							gCarLock[personalcar[v][playerid]] = 1;
							vUpdate(OwnedVeh(personalcar[v][playerid]), cLockx); //
				        	return 1;
						}
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Your vehicle not near you.");
		 		}
		    	else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't have a vehicle.");
			}
        }
		else if(SwitchKey[playerid] == 2)
		{
		    new carid,string[128];
			if(HireCar[playerid] == -1) return SCM(playerid,COLOR_WHITE,"{FFB870}You do not have a rental car/boat/bike/scooter already.");
		    if(HireCar[playerid] != -1)
		    {
				carid = HireCar[playerid];
			}
            if(CheckPlayerDistanceToVehicle(5.0, playerid, HireCar[playerid]))
			{
			    if(gCarLock[carid] == 0)
		        {
			        new vehicles = GetVehicleModel(carid) - 400;
				    format(string, sizeof(string), "~h~%s~n~~r~Locked", aVehicleNames[vehicles]);
				    GameTextForPlayer(playerid, string, 4000, 4);
		  	        PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					gCarLock[carid] = 1;
	    			GetVehicleParamsEx(HireCar[playerid],engine,lights,alarm,doors,bonnet,boot,objective);
	      	    	SetVehicleParamsEx(HireCar[playerid],engine,lights,alarm,1,bonnet,boot,objective);
		            return 1;
			    }
				else if(gCarLock[carid] == 1)
				{
					new vehicles = GetVehicleModel(carid) - 400;
					format(string, sizeof(string), "~h~%s~n~~g~Unlocked", aVehicleNames[vehicles]);
				    GameTextForPlayer(playerid, string, 4000, 4);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					gCarLock[carid] = 0;
	    			GetVehicleParamsEx(HireCar[playerid],engine,lights,alarm,doors,bonnet,boot,objective);
	      	    	SetVehicleParamsEx(HireCar[playerid],engine,lights,alarm,0,bonnet,boot,objective);
		            return 1;
				}
			}
		}
	}
    return 1;
}
CMD:premium(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
        new string[556];
        format(string,sizeof(string),"{ffffff}Premium Account Options :\n- 4Slot For Personal Cars\n- Recieve Extra PayCheck\n- Recieve 2Respect Point Each 5PayDay\n- Can Disable Whisper [/togwhisper]\n- Can Buy BoomBox From 24/7 Shop\n- Access Colors On /pcolor.\n- Can Use Hidden Color For Vehicles.\n \nPremium Account Can Be Bought On /Ucp");
		ShowPlayerDialog(playerid, DIALOG_PREMIUM, DIALOG_STYLE_MSGBOX, "Premium Account:", string, "Close", "");
	}
	return 1;
}
CMD:buyparachute(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(!IsPlayerInRangeOfPoint(playerid,5,-2231.2058,-1736.1578,480.8620)) return SCM(playerid,COLOR_WHITE,"{FFB870}You're not in the place where you can get Parachute.");
	if(GetPlayerCash(playerid) < 10000) return SCM(playerid,COLOR_WHITE,"{FFB870}You do not have the money.");
    GivePlayerWeaponEx(playerid, 46, 1);
    GivePlayerCash(playerid,-10000);
    SCM(playerid,COLOR_WHITE,"You bought parachute for 10,000$.");
	Update(playerid, pCashx);
	return 1;
}
CMD:dice(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(!IsPlayerInRangeOfPoint(playerid,50.0,1977.7538,1017.7076,994.4688)) return SCM(playerid,COLOR_WHITE,"You can use this command only in casinos.");
    if(IsPlayerConnected(playerid))
    {
		new id,money,sendername[25],string[184];
		if(sscanf(params, "ud",id,money)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/dice <Name/Playerid> <Money>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		if(money < 1 || money > 1000000) return SCM(playerid,COLOR_WHITE,"{FFB870}Money limit is $1,000,000.");
		if(IsPlayerConnected(id))
		{
			if(GetPlayerCash(playerid) < money) return SCM(playerid,COLOR_WHITE,"You Or Your Contact Have'nt Enough Money For Dice");
		    if(GetPlayerCash(id) < money) return SCM(playerid,COLOR_WHITE,"You Or Your Contact Have'nt Enough Money For Dice");
		    if(id == playerid) return SendClientMessage(playerid, COLOR_WHITE, "You Can't Play Dice With Yourself");
			if(ProxDetectorS(10.0, playerid, id))
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				SendClientMessage(playerid, COLOR_DARKPINK, "Dice Request Sent To Your Contact");
				format(string, sizeof(string), "%s Invited You To A Dice For $%s | Use [/Accept Dice %d] To Accept Invite",sendername,FormatNumber(money),playerid);
				SendClientMessage(id, COLOR_DARKPINK, string);
				Diceid[id] = playerid;
				Dicem[id] = money;
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Player is not near you.");
		}
    }
	return 1;
}
CMD:c(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pClan] < 1) return SendClientMessage(playerid, COLOR_WHITE,"{FFB870}Error: Your are not in a clan.");
	new msj[100],string[150],sendername[25];
    if(PlayerInfo[playerid][pMuted] == 1)
    {
		format(string, sizeof(string), "You can not speak, you have been silenced for %d seconds.",PlayerInfo[playerid][pMuteTime]);
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		return 1;
	}
	if(sscanf(params, "s[100]",msj)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/c <Message>");
	GetPlayerName(playerid,sendername,sizeof(sendername));
	if(PlayerInfo[playerid][pClan] != 0)
	{
		if(PlayerInfo[playerid][pClan] >= 1)
		{
			if(PlayerInfo[playerid][pCRank] == 1)
			{
				format(string,sizeof(string),"{%s}[CLAN] %s %s: %s",ClanInfo[PlayerInfo[playerid][pClan]][cClanColor],ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName1],sendername,msj);
			}
			else if(PlayerInfo[playerid][pCRank] == 2)
			{
				format(string,sizeof(string),"{%s}[CLAN] %s %s: %s",ClanInfo[PlayerInfo[playerid][pClan]][cClanColor],ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName2],sendername,msj);
			}
			else if(PlayerInfo[playerid][pCRank] == 3)
			{
				format(string,sizeof(string),"{%s}[CLAN] %s %s: %s",ClanInfo[PlayerInfo[playerid][pClan]][cClanColor],ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName3],sendername,msj);
			}
			else if(PlayerInfo[playerid][pCRank] == 4)
			{
				format(string,sizeof(string),"{%s}[CLAN] %s %s: %s",ClanInfo[PlayerInfo[playerid][pClan]][cClanColor],ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName4],sendername,msj);
			}
			else if(PlayerInfo[playerid][pCRank] == 5)
			{
				format(string,sizeof(string),"{%s}[CLAN] %s %s: %s",ClanInfo[PlayerInfo[playerid][pClan]][cClanColor],ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName5],sendername,msj);
			}
			else if(PlayerInfo[playerid][pCRank] == 6)
			{
				format(string,sizeof(string),"{%s}[CLAN] %s %s: %s",ClanInfo[PlayerInfo[playerid][pClan]][cClanColor],ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName6],sendername,msj);
			}
			else if(PlayerInfo[playerid][pCRank] >= 7)
			{
				format(string,sizeof(string),"{%s}[CLAN] %s %s: %s",ClanInfo[PlayerInfo[playerid][pClan]][cClanColor],ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName7],sendername,msj);
			}
		}
		SendToClan(PlayerInfo[playerid][pClan], COLOR_WHITE, string);
	}
	return 1;
}
CMD:quitclan(playerid, params[])
{
	if(PlayerInfo[playerid][pClan] != 0)
	{
		if(PlayerInfo[playerid][pCRank] != 7)
		{
		    ShowPlayerDialog(playerid,DIALOG_QUITCLAN,DIALOG_STYLE_MSGBOX,"Are You Sure ?","Do You Want To Leave Your Current Clan ?","Yeah","No");
		}
		else
		{
			ShowPlayerDialog(playerid,DIALOG_QUITCLAN,DIALOG_STYLE_MSGBOX,"Are You Sure ?","Do You Want To Leave Your Current Clan ?\nBecause You Are Leader , Clan Will Deleted Automaticly","Yeah","No");
		}
   	}
   	else return SendClientMessage(playerid, COLOR_WHITE, "You don't have a clan to quit.");
	return 1;
}
CMD:claninfo(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pClan] < 1) return SendClientMessage(playerid, COLOR_WHITE,"{5CAD5C}Error: Your are not in a clan.");
	new string[100];
	format(string,sizeof(string),"Your clan is %s and you have rank %d.",ClanInfo[PlayerInfo[playerid][pClan]][cClanName],PlayerInfo[playerid][pCRank]);
	SCM(playerid,COLOR_YELLOW,string);
	return 1;
}
CMD:cinvite(playerid, params[])
{
    if(PlayerInfo[playerid][pCRank] < 6) return SendClientMessage(playerid, COLOR_WHITE, "Only Rank 6 & Leader Can Invite Members To Clan");
    new userID,giveplayer[25],sendername[25],szMessage[119];
    if(sscanf(params, "u", userID)) return SendClientMessage(playerid, COLOR_WHITE, "Usage: /cinvite [id]");
	{
		if(userID == playerid) return SendClientMessage(playerid, COLOR_WHITE, "You CAn't Invite Yourself To Clan");
		if(IsPlayerConnected(userID))
		{
			if(PlayerInfo[userID][pClan] == 0)
			{
				GetPlayerName(userID,giveplayer,sizeof(giveplayer));
				format(szMessage, sizeof(szMessage), "You have invited %s to join your clan.", giveplayer);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, szMessage);

				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(szMessage, sizeof(szMessage), "%s Invited You To Join Clan %s | Use [/Accept Cinvite %d] To Accept That", sendername, ClanInfo[PlayerInfo[playerid][pClan]][cClanName], playerid);
				SendClientMessage(userID, COLOR_BLUE, "Invitatie noua in clan:");
				SendClientMessage(userID, COLOR_BLUE, szMessage);

				SetPVarInt(userID, "cinvID", PlayerInfo[playerid][pClan]);
				SetPVarInt(userID, "cinvIDD", playerid);
			}
		}
	}
    return 1;
}
CMD:clan(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pClan] >= 1)
	{
		ShowPlayerDialog(playerid, DIALOG_CLAN, DIALOG_STYLE_LIST, "Clan", "Clan Help\nClan Members\nClan Settings\nClan Tag", "Select", "Close");
	}
	return 1;
}
CMD:friends(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new online[1000],offline[1000],query[300],result[30],name[30],idd,mid=1,aim2[2000];
		format(query, sizeof(query), "SELECT * FROM `friends` WHERE `PlayerID` = '%d' AND `Status`='1'",PlayerInfo[playerid][pSQLID]);
		new Cache: membresult = mysql_query(SQL,query);
		for(new i, j = cache_get_row_count (); i != j; ++i)
		{
			idd = cache_get_field_content_int(i, "FriendID");
			cache_get_field_content(i, "FriendName", result); format(name, 30, result);
			Selected[playerid][mid] = idd;
			format(online, sizeof(online), "%s{228404}[online]{FFFFFF} %s\n",online,name);
			mid++;
		}
		cache_delete(membresult);
		format(query, sizeof(query), "SELECT * FROM `friends` WHERE `PlayerID` = '%d' AND `Status`='0'",PlayerInfo[playerid][pSQLID]);
		new Cache: membresult1 = mysql_query(SQL,query);
		for(new i, j = cache_get_row_count (); i != j; ++i)
		{
			idd = cache_get_field_content_int(i, "FriendID");
			cache_get_field_content(i, "FriendName", result); format(name, 30, result);
			Selected[playerid][mid] = idd;
			format(offline, sizeof(offline), "%s{BB172D}[offline]{FFFFFF} %s\n",offline,name);
			mid++;
		}
		cache_delete(membresult1);
		format(aim2,sizeof(aim2),"{F89B0E}[+] Add Friend\n%s%s",online, offline);
		ShowPlayerDialog(playerid, DIALOG_FRIENDS, DIALOG_STYLE_LIST, "Friends", aim2, "Select", "Exit");
	}
	return 1;
}
CMD:togkickafk(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 10) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	if(kickafk == 1)
	{
	    kickafk = 0;
	    SCM(playerid,COLOR_WHITE,"You disable afk kick.");
	    return 1;
	}
	else
	{
	    SCM(playerid,COLOR_WHITE,"You enable afk kick.");
	    kickafk = 1;
	}
	return 1;
}
CMD:serverpass(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 12)
	{
		new pass[64],string[128];
		if(sscanf(params, "s[64]", pass)) return SCM(playerid,COLOR_SERVER,"{A9C4E4}[SYNTAX]: {FFFFFF}/serverpass <Password>");
		{
			format(string,sizeof(string),"password %s",pass);
			SendRconCommand(string);
			format(string,sizeof(string), "{FFFF00}You change the server password in: %s.",pass);
			SendClientMessage(playerid,COLOR_SERVER,string);
		}
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}
CMD:servername(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 12)
	{
		new name[64],string[128];
		if(sscanf(params, "s[64]", name)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/servername <Name>");
		{
			format(string,sizeof(string),"hostname %s",name);
			SendRconCommand(string);
			format(string,sizeof(string), "{FFFF00}Server Name Was Changed To : %s",name);
			SendClientMessage(playerid,COLOR_WHITE,string);
		}
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}
CMD:musicforall(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] > 9)
	{
		new link[358];
		if(sscanf(params, "s[358]",link)) return SCM(playerid,COLOR_SERVER,"{A9C4E4}[SYNTAX]: {FFFFFF}/musicforall <Link>");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			StopAudioStreamForPlayer(i);
			PlayAudioStreamForPlayer(i, link);
		}
	}
	return 1;
}
CMD:speedlimit(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new string[128], speed;
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(IsABike(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_WHITE,"{999999}Command can not be used on bike.");
		if(IsAPlane(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_WHITE,"{999999}Command can not be used on plane.");
		if(sscanf(params, "i", speed)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/speedlimit <speed>");
		{
			if(speed == 0)
			{
				Speedlimit[playerid] = 0;
				format(string, sizeof(string), "{c4faf6}* You have turned your speed limit off.", speed);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			if(!(speed>160 || speed < 90))
			{
				Speedlimit[playerid] = speed-25;
				format(string, sizeof(string), "{c4faf6}* You have set your speed limit to %d KM/H.", speed);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else return SendClientMessage(playerid, COLOR_WHITE,"{FFFFCC}Error: Speed limit must be between 160 and 90 km/h.");
		}
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Error: You are not driving a vehicle.");
	return 1;
}
CMD:togiplog(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,COLOR_ERROR, AdminOnly);
	if(togip[playerid] == 0)
	{
	    togip[playerid] = 1;
	    SCM(playerid,COLOR_WHITE,"You enable IP log.");
	    return 1;
	}
	else if(togip[playerid] == 1)
	{
	    togip[playerid] = 0;
	    SCM(playerid,COLOR_WHITE,"You disable IP log.");
	    return 1;
	}
	return 1;
}
CMD:hmusic(playerid, params[])
{
	if(InHouse[playerid] > -1)
	{
	    new link[358];
	    if(strcmp(PlayerInfo[playerid][pNormalName], HouseInfo[InHouse[playerid]][hOwner]) == 0 || PlayerInfo[playerid][pAdmin] > 0)
	    {
	        if(sscanf(params, "s[358]",link)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/hmusic <Link>");
			format(housestring[InHouse[playerid]], 256, "%s", link);
			foreach(Player, i)
			{
			    if(InHouse[playerid] == InHouse[i])
			    {
			        StopAudioStreamForPlayer(i);
					PlayAudioStreamForPlayer(i, link);
				}
			}
		}
		else return SCM(playerid,COLOR_WHITE,"This is not your house.");
	}
	else return SCM(playerid,COLOR_WHITE,"You are not in a house.");
	return 1;
}
CMD:bmusic(playerid, params[])
{
	if(InBussines[playerid] > -1)
	{
		if(BizzInfo[InBussines[playerid]][bType] != 3) return SCM(playerid,COLOR_WHITE,"You are not in a bar.");
		new link[358];
		if(strcmp(PlayerInfo[playerid][pNormalName], BizzInfo[InBussines[playerid]][bOwner]) == 0 || PlayerInfo[playerid][pAdmin] > 0)
		{
			if(sscanf(params, "s[358]",link)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/bmusic <Link>");
			format(barstring[InBussines[playerid]], 256, "%s", link);
			foreach(Player, i)
			{
			    if(InBussines[playerid] == InBussines[i])
			    {
			        StopAudioStreamForPlayer(i);
					PlayAudioStreamForPlayer(i, link);
				}
			}
		}
		else return SCM(playerid,COLOR_WHITE,"This is not your business.");
	}
	else return SCM(playerid,COLOR_WHITE,"You are not in a bussiness.");
	return 1;
}
CMD:carradio(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
        ShowPlayerDialog(playerid, Dialog_radio, DIALOG_STYLE_LIST, "Car music:","{FFFF00}Radio{FF0000} Kiss FM\n{FFFF00}Radio{FF0000} Pro Fm\n{FFFF00}Radio{FF0000} Taraf{FFFF00}\n{FFFF00}Radio{FF0000} Bandit{FFFF00}\n{FFFF00}Radio{FF0000} Hot Style{FFFF00}\n{FFFF00}Radio{FF0000} Diz{FFFF00}\n{FFFF00}Radio{FF0000} Tequila\nTurn off radio","Ok","Cancel");
    }
    return 1;
}
CMD:myraport(playerid, params[])
{
   if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "You Must To Login First");
   if(PlayerInfo[playerid][pMember] == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not in a faction.");
   if(IsPlayerConnected(playerid))
   {
     if(IsACop(playerid))
     {
      new string1[500], string2[500];
      format(string1, sizeof(string1), "Rank: %d | Days: %d | FW: %d/3 | Runners: %d | Arrests: %d | Tickets: %d | Drugs confiscated: %d | Licences confiscated: %d | Money Deposited: $%s",PlayerInfo[playerid][pRank],PlayerInfo[playerid][pFactionTime],PlayerInfo[playerid][pFACWarns],PlayerInfo[playerid][pRunners],PlayerInfo[playerid][pArrestss],PlayerInfo[playerid][pTickets],PlayerInfo[playerid][pDConfiscate],PlayerInfo[playerid][pLConfiscate],PlayerInfo[playerid][pMoneyD]);
      format(string2, sizeof(string2), "%s",string1);
      ShowPlayerDialog(playerid, DIALOG_COLORID, DIALOG_STYLE_MSGBOX, "Raport - Department", string2, "OK","");
     }
     if(IsAMember(playerid))
     {
      new string1[500], string2[500];
      format(string1, sizeof(string1), "Rank: %d | Days: %d | FW: %d/3 | Deposits: %d drugs / %d mats | Material Used: %d | War kill and deaths: %d kills / %d deaths  | Money Deposited: $%d",PlayerInfo[playerid][pRank],PlayerInfo[playerid][pFactionTime],PlayerInfo[playerid][pFACWarns],PlayerInfo[playerid][pDDeposit],PlayerInfo[playerid][pMDeposit],PlayerInfo[playerid][pMUsed],PlayerInfo[playerid][pWKills],PlayerInfo[playerid][pWDeaths],PlayerInfo[playerid][pMoneyD]);
      format(string2, sizeof(string2), "%s",string1);
      ShowPlayerDialog(playerid, DIALOG_COLORID, DIALOG_STYLE_MSGBOX, "Raport - Mafie", string2, "OK","");
     }
     if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pMember] == 17)
     {
      new string1[500], string2[500];
      format(string1, sizeof(string1), "Rank: %d | Days: %d | FW: %d/3 | Orders: %d  | Money Deposited: $%d",PlayerInfo[playerid][pRank],PlayerInfo[playerid][pFactionTime],PlayerInfo[playerid][pFACWarns],PlayerInfo[playerid][pOrders],PlayerInfo[playerid][pMoneyD]);
      format(string2, sizeof(string2), "%s",string1);
      ShowPlayerDialog(playerid, DIALOG_COLORID, DIALOG_STYLE_MSGBOX, "Raport - Taxi", string2, "OK","");
     }
     if(PlayerInfo[playerid][pMember] == 11)
     {
      new string1[500], string2[500];
      format(string1, sizeof(string1), "Rank: %d | Days: %d | FW: %d/3 | Contracts: %d  | Money Deposited: $%d",PlayerInfo[playerid][pRank],PlayerInfo[playerid][pFactionTime],PlayerInfo[playerid][pFACWarns],PlayerInfo[playerid][pContracts],PlayerInfo[playerid][pMoneyD]);
      format(string2, sizeof(string2), "%s",string1);
      ShowPlayerDialog(playerid, DIALOG_COLORID, DIALOG_STYLE_MSGBOX, "Raport - Hitman", string2, "OK","");
     }
     if(PlayerInfo[playerid][pMember] == 12)
     {
      new string1[500], string2[500];
      format(string1, sizeof(string1), "Rank: %d | Days: %d | FW: %d/3 | Licences given: %d  | Money Deposited: $%d",PlayerInfo[playerid][pRank],PlayerInfo[playerid][pFactionTime],PlayerInfo[playerid][pFACWarns],PlayerInfo[playerid][pLGiven],PlayerInfo[playerid][pMoneyD]);
      format(string2, sizeof(string2), "%s",string1);
      ShowPlayerDialog(playerid, DIALOG_COLORID, DIALOG_STYLE_MSGBOX, "Raport - School Instructor", string2, "OK","");
     }
     if(PlayerInfo[playerid][pMember] == 14)
     {
      new string1[500], string2[500];
      format(string1, sizeof(string1), "Rank: %d | Days: %d | FW: %d/3 | Patiens Healed: %d  | Money Deposited: $%d",PlayerInfo[playerid][pRank],PlayerInfo[playerid][pFactionTime],PlayerInfo[playerid][pFACWarns],PlayerInfo[playerid][pPHeals],PlayerInfo[playerid][pMoneyD]);
      format(string2, sizeof(string2), "%s",string1);
      ShowPlayerDialog(playerid, DIALOG_COLORID, DIALOG_STYLE_MSGBOX, "Raport - Paramedic", string2, "OK","");
     }
     if(PlayerInfo[playerid][pMember] == 9)
     {
      new string1[500], string2[500];
      format(string1, sizeof(string1), "Rank: %d | Days: %d | FW: %d/3 | Lives: %d | News: %d  | Money Deposited: $%d",PlayerInfo[playerid][pRank],PlayerInfo[playerid][pFactionTime],PlayerInfo[playerid][pFACWarns],PlayerInfo[playerid][pLives],PlayerInfo[playerid][pNews],PlayerInfo[playerid][pMoneyD]);
      format(string2, sizeof(string2), "%s",string1);
      ShowPlayerDialog(playerid, DIALOG_COLORID, DIALOG_STYLE_MSGBOX, "Raport - New Reporters", string2, "OK","");
     }
   }
   return 1;
}
CMD:carmusic(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	return cmd_carradio(playerid, params);
}
CMD:jobs(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(CP[playerid] < 1 && IsCollectingRubbish[playerid] < 1 && !IsATruck(GetPlayerVehicleID(playerid)) && MechanicCallTime[playerid] < 1 && CheckBus[playerid] < 1 && GotoMats[playerid] < 1 && CarJacker[playerid] < 1 && JCurier[playerid][0] < 1)
	{
        ShowPlayerDialog(playerid, DIALOG_JOBS, DIALOG_STYLE_LIST,"[13] Jobs:", "Detective\nDrugs Dealer\nPizza Boy\nBus Driver\nMechanic\nArms Dealer\nGarbage\nFisherman\nTrucker\nFarmer\nCar Jacker\nQuarry Worke\nCoal Delivery Man","Select", "Close");
		return 1;
	}
	else
	{
	    ShowPlayerDialog(playerid, DIALOG_JOBULETES, DIALOG_STYLE_MSGBOX, "Checkpoint Cancel", "Are You Sure You Want To Cancel CHeckpoint ?", "Yeah", "No");
	}
	return 1;
}

CMD:event(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(activeevent == 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFFF45}There is currently no active event running.");
   	new string[300],name[MAX_PLAYER_NAME];
   	foreach(Player, i)
   	{
   		if(eventorganizer[i] == 1)
    	{
    		GetPlayerName(i, name, sizeof(name));
    	}
   	}
   	format(string, sizeof(string), "{FFFF00}Event: Title: %s Prize: $%s Location: %s Time: %s",eventtitle,FormatNumber(eventprize), eventlocation, eventtime);
   	SendClientMessage(playerid, 0xFFFFFFFF, string);
   	format(string, sizeof(string), "{FFFF00}Event: Organizer: %s Description: %s",name,eventdescription);
   	SendClientMessage(playerid, 0xFFFFFFFF, string);
   	return 1;
}
CMD:ec(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	new string[300],text[250];
	if(sscanf(params, "s[250]", text)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/ec <Message>");
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	format(string, sizeof(string), "{7094DB}Admin Organizer %s: %s", name, text);
	SendClientMessageToAll(0xFFFFFFFF, string);
	return 1;
}
CMD:e(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(eventorganizer[playerid] == 0) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFFF00}You're not the organizer of the event.");
	new string[300],text[250];
	if(sscanf(params, "s[250]", text)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/e <Message>");
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	format(string, sizeof(string), "{7094DB}Event Organizer %s: %s", name, text);
	SendClientMessageToAll(0xFFFFFFFF, string);
	return 1;
}
CMD:stopevent(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(activeevent == 0 && PlayerInfo[playerid][pAdmin] >= 1) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFB870}There isn't any events to stop.");
	if(eventorganizer[playerid] == 0 && PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFB870}You're not the organizer of the event.");
	foreach(Player, i)
	{
		eventorganizer[i] = 0;
	}
	SendClientMessageToAll(0xFFFFFFFF, "{FFFF00}Event over.");
	activeevent = 0;
	return 1;
}
CMD:acceptevent(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	if(activeevent == 1) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFB870}There's already an active event.");
	new eventid;
	if(sscanf(params, "d", eventid)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/acceptevent <eventid>");
	if(requestingevent[eventid] == 0) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFB870}Invalid event ID.");
	strmid(eventtitle, requestingtitle[eventid], 0, strlen(requestingtitle[eventid]));
	strmid(eventlocation, requestinglocation[eventid], 0, strlen(requestinglocation[eventid]));
	strmid(eventdescription, requestingdescription[eventid], 0, strlen(requestingdescription[eventid]));
	eventprize = requestingprize[eventid];
	strmid(eventtime, requestingtime[eventid], 0, strlen(requestingtime[eventid]));
	new string[300],name[MAX_PLAYER_NAME];
	GetPlayerName(eventid, name, sizeof(name));
 	format(string, sizeof(string), "{FFFF00}Event: Title: %s Prize: $%s Location: %s Time: %s",eventtitle,FormatNumber(eventprize), eventlocation, eventtime);
   	SendClientMessageToAll(0xFFFFFFFF, string);
   	format(string, sizeof(string), "{FFFF00}Event: Organizer: %s Description: %s",name,eventdescription);
	SendClientMessageToAll(0xFFFFFFFF, string);
	eventorganizer[eventid] = 1;
	requestingevent[eventid] = 0;
	activeevent = 1;
	new sendername[25];
	GetPlayerName(playerid,sendername,sizeof(sendername));
	format(string, sizeof(string), "Admin %s accepted %s event request.",sendername,name);
	ABroadCast(COLOR_YELLOW,string,1);
	return 1;
}
CMD:requestevent(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pWantedLevel] > 0) return SCM(playerid,COLOR_WHITE,"{FFB870}You`re being chased by police, you can`t make an event.");
	if(activeevent == 1) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFB870}There's already an active event.");
	if(requestingevent[playerid] == 1) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFB870}You're already requesting an event, cancel it first.");
	new title[50], location[50], description[100], prize, time[50];
	if(sscanf(params, "p<|>s[50]s[50]s[50]s[100]d", title, location, time, description, prize)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/requestevent <Title|Location|Time|Description|Prize>");
	if(strlen(title) < 1 || strlen(title) > 50) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFB870}Invalid amount of characters in title.");
	if(strlen(location) < 1 || strlen(location) > 50) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFB870}Invalid amount of characters in location.");
	if(strlen(time) < 1 || strlen(time) > 50) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFB870}Invalid amount of characters in time.");
	if(strlen(description) < 1 || strlen(description) > 100) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFB870}Invalid amount of characters in description.");
	if(prize < 1 || prize > 5000000) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFB870}Invalid prize amount.");
	new string[1000],name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	requestingevent[playerid] = 1;
	strmid(requestingtitle[playerid], title, 0, strlen(title));
	strmid(requestinglocation[playerid], location, 0, strlen(location));
	strmid(requestingdescription[playerid], description, 0, strlen(description));
	requestingprize[playerid] = prize;
	strmid(requestingtime[playerid], time, 0, strlen(time));
	format(string, sizeof(string), "{FFFF00}Event %d has been requested, details are below.", playerid);
	SendClientMessage(playerid, 0xFFFFFFFF, string);
	format(string, sizeof(string), "{FFFF00}Event: Title: %s Prize: $%s Location: %s Time: %s",title,FormatNumber(prize), location, time);
   	SendClientMessage(playerid, 0xFFFFFFFF, string);
   	format(string, sizeof(string), "{FFFF00}Event: Organizer: %s Description: %s",name,description);
   	SendClientMessage(playerid, 0xFFFFFFFF, string);
	SendClientMessage(playerid, 0xFFFFFFFF, "{FFFF00}Your event is pending approval from an admin, please wait.");
	format(string, sizeof(string), "{FFFF00}Event %d has been requested, details are below.", playerid);
	ABroadCast(0xFFFFFFFF,string,1);
	format(string, sizeof(string), "{FFFF00}Event %d: Title: %s Prize: $%s Location: %s Time: %s",playerid,title,FormatNumber(prize), location, time);
   	ABroadCast(0xFFFFFFFF,string,1);
	format(string, sizeof(string), "{FFFF00}Event %d: Organizer: %s Description: %s",playerid,name,description);
	ABroadCast(0xFFFFFFFF,string,1);
	format(string, sizeof(string), "{FFFF00}Use [/acceptevent %d] to accept this event.", playerid);
	ABroadCast(0xFFFFFFFF,string,1);
	return 1;
}
CMD:rejectevent(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	new id, reason[100],string[300];
	if(sscanf(params, "us[100]", id, reason)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/rejectevent <eventid> <reason>");
	if(requestingevent[id] == 0) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFB870}Invalid event ID.");
	new receivername[MAX_PLAYER_NAME],sendername[MAX_PLAYER_NAME];
	requestingevent[id] = 0;
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerName(id, receivername, sizeof(receivername));
	format(string, sizeof(string), "{FFFF00}Admin %s Has Rejected Your Event | Reason: %s", sendername, reason);
	SendClientMessage(id, 0xFFFFFFFF, string);
	format(string, sizeof(string), "{FFFF00}You rejected %s's event | Reason: %s", receivername, reason);
	SendClientMessage(playerid, 0xFFFFFFFF, string);
	return 1;
}
CMD:events(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
    new string[300],tmpstring[100], titlestring[100], count = 0, name[MAX_PLAYER_NAME];
	foreach(Player, i)
	{
		if(requestingevent[i] == 1)
 		{
  			GetPlayerName(i, name, sizeof(name));
    		format(tmpstring, sizeof(tmpstring), "Name: %s | ID: %d | Title: %s", name, i, requestingtitle[i]);
     		strcat(string, tmpstring);
      		count ++;
       	}
   	}
   	if(count == 0) return ShowPlayerDialog(playerid, DIALOG_PENDEVENT, DIALOG_STYLE_MSGBOX, "Pending Requests: 0", "There are no pending requests.", "Done", "");
   	format(titlestring, sizeof(titlestring), "Pending Requests: %d", count);
   	ShowPlayerDialog(playerid, 5345, DIALOG_STYLE_LIST, titlestring, string, "Close", "");
   	SendClientMessage(playerid, 0xFFFFFFFF, "{FFFF00}Use the command /cevent to check the pending event information.");
   	return 1;
}
CMD:cevent(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	new eventid,string[300];
	if(sscanf(params, "u", eventid)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/checkevent <eventid>");
	if(requestingevent[eventid] == 0) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFB870}Invalid event ID.");
	new name[MAX_PLAYER_NAME];
	GetPlayerName(eventid, name, sizeof(name));
	format(string, sizeof(string), "{FFFF00}Event %d: Title: %s Prize: $%s Location: %s Time: %s",eventid,requestingtitle[eventid],FormatNumber(requestingprize[eventid]), requestinglocation[eventid], requestingtime[eventid]);
   	SendClientMessage(playerid, 0xFFFFFFFF, string);
	format(string, sizeof(string), "{FFFF00}Event %d: Organizer: %s Description: %s",eventid,name,requestingdescription[eventid]);
	SendClientMessage(playerid, 0xFFFFFFFF, string);
	format(string, sizeof(string), "{FFFF00}Use [/acceptevent %d] to accept this event.", eventid);
    SendClientMessage(playerid, 0xFFFFFFFF, string);
   	return 1;
}
CMD:attack(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new hour,minn,sec;
	gettime(hour,minn,sec);
	if(IsPlayerConnected(playerid))
	{
		if(!IsAMember(playerid)) return SCM(playerid,COLOR_WHITE,"You are not a member of a mafia.");
		if(PlayerInfo[playerid][pRank] < 4) return SCM(playerid,COLOR_WHITE,"You don't have rank 4.");
		if(hour == 16 || hour == 17 || hour == 18 || hour == 19 || hour == 20 || hour == 21 || hour == 22)
		{
			new turf,faction,string[128],sendername[MAX_PLAYER_NAME];
			for(new i = 1; i <= sizeof(TurfInfo); i++)
			{
				if(IsPlayerInTurf(playerid, i) == 1)
				{
					turf = i;
					break;
				}
    		}
    		GetPlayerName(playerid, sendername, sizeof(sendername));
    		if(turf == 0) return SCM(playerid, COLOR_WHITE, "You are not on a turf.");
			if(DeelayWar[PlayerInfo[playerid][pMember]] > 0)
			{
				format(string,sizeof(string),"Your mafia can attack another turf in %d seconds.",DeelayWar[PlayerInfo[playerid][pMember]]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
    		faction = PlayerInfo[playerid][pMember];
    		if(TurfInfo[turf][zOwned] == faction) return SCM(playerid, COLOR_WHITE, "You can't attack your own turf.");
			if(WarInfo[turf][wAttacker] != 0) return SCM(playerid, COLOR_WHITE, "Turf is already attacked.");
			if(InWar[faction] == 1) return SCM(playerid, COLOR_WHITE, "You have an active war.");
			if(InWar[TurfInfo[turf][zOwned]] == 1) return SCM(playerid, COLOR_WHITE, "This mafia have active war.");
			new memberss;
			foreach(Player, i)
			{
	    		if(IsPlayerConnected(i))
	    		{
	        		if(PlayerInfo[i][pMember] == TurfInfo[turf][zOwned])
					{
			    		memberss ++;
					}
				}
			}
			if(memberss < 1) return SCM(playerid, COLOR_WHITE, "This mafia don't have members online.");
			WarInfo[turf][wTime] = 720;
			WarInfo[turf][wAttacker] = faction;
			WarInfo[turf][wFaction] = TurfInfo[turf][zOwned];
			format(string,sizeof(string),"[TURF] %s from your group attacked turf %d (owned by %s).",sendername,turf,NameOfFactions(TurfInfo[turf][zOwned]));
			SendFamilyMessage(faction,COLOR_GREEN,string);
			format(string,sizeof(string),"[TURF] %s from %s attacked turf %d owned by you.",sendername,NameOfFactions(WarInfo[turf][wAttacker]),turf);
			SendFamilyMessage(TurfInfo[turf][zOwned],COLOR_GREEN,string);
			mysql_query(SQL, "SELECT * FROM wars");
			mysql_store_result();
			new warid = mysql_num_rows() + 1;
			mysql_free_result();
			format(string, sizeof(string),"[WAR] %s started a war with %s (war id: %d).",NameOfFactions(WarInfo[turf][wAttacker]),NameOfFactions(TurfInfo[turf][zOwned]),warid);
			foreach(Player, i)
			{
				if(PlayerInfo[i][pMember] == TurfInfo[turf][zOwned] || PlayerInfo[i][pMember] == WarInfo[turf][wAttacker])
				{
					SetPlayerVirtualWorld(i, 1024);
					SendClientMessage(i, COLOR_YELLOW, "You have been teleported to a Virtual World where only players participating in the war are present.");
				}
			}
			if(WarInfo[turf][wAttacker] == 4 || TurfInfo[turf][zOwned] == 4)
			{
				for(new veh; veh < sizeof(Aztecasc); veh++)
				{
					SetVehicleVirtualWorld(Aztecasc[veh], 1024);
				}
			}
			if(WarInfo[turf][wAttacker] == 5 || TurfInfo[turf][zOwned] == 5)
			{
				for(new veh; veh < sizeof(Grovec); veh++)
				{
					SetVehicleVirtualWorld(Grovec[veh], 1024);
				}
			}
			if(WarInfo[turf][wAttacker] == 6 || TurfInfo[turf][zOwned] == 6)
			{
				for(new veh; veh < sizeof(Vagosc); veh++)
				{
					SetVehicleVirtualWorld(Vagosc[veh], 1024);
				}
			}
			if(WarInfo[turf][wAttacker] == 10 || TurfInfo[turf][zOwned] == 10)
			{
				for(new veh; veh < sizeof(Ballasc); veh++)
				{
					SetVehicleVirtualWorld(Ballasc[veh], 1024);
				}
			}
			new y,m,d,h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			worstscoreat[turf] = 0;
			worstmemberat[turf] = 999;
			WarBestScore[turf] = 0;
			bestmemberat[turf] = 999;
			worstscoredf[turf] = 0;
			worstmemberdf[turf] = 999;
			bestscoredf[turf] = 0;
			bestmemberdf[turf] = 999;
			InWar[TurfInfo[turf][zOwned]] = 1;
			InWar[faction] = 1;
			waitwar[faction] = 60;
		}
		else return SCM(playerid,COLOR_WHITE,"War must be between 16:00 To 23:00.");
	}
	return 1;
}
CMD:turfs(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(TurfsDisp[playerid] == 0)
	{
		TurfsDisp[playerid] = 1;
		for(new i = 0; i < sizeof(Turfs); i++)
 		{
			if(TurfInfo[i][zOwned] == 4)
			{
				GangZoneShowForPlayerEx(playerid, Turfs[i], 0x18EBD6C8); //Los Aztecas
			}
			if(TurfInfo[i][zOwned] == 5)
			{
				GangZoneShowForPlayerEx(playerid, Turfs[i], 0x40863CAA); //Grove Street
			}
			if(TurfInfo[i][zOwned] == 6)
			{
				GangZoneShowForPlayerEx(playerid, Turfs[i], 0xFFAE00C8); //Los Vagos
			}
			if(TurfInfo[i][zOwned] == 10)
			{
				GangZoneShowForPlayerEx(playerid, Turfs[i], 0xBD1CDEC8); //Ballas
			}
		}
	}
	else
	{
		TurfsDisp[playerid] = 0;
		for(new i = 0; i < sizeof(Turfs); i++)
		{
			GangZoneHideForPlayerEx(playerid, Turfs[i]);
		}
	}
	return 1;
}
CMD:fdeposit(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
	    if(DepositMoney(playerid))
	    {
			new x = PlayerInfo[playerid][pMember],string[100],cashdeposit;
			if(sscanf(params, "d", cashdeposit)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/fdeposit <money>");
			if(cashdeposit < 1 || cashdeposit > 30000000) return SCM(playerid,COLOR_WHITE,"{FFB870}Money limit is $1 - $30,000,000.");
			if(IsPlayerInRangeOfPoint(playerid,50.0,DynamicFactions[x][fcX],DynamicFactions[x][fcY],DynamicFactions[x][fcZ]))
			{
				if(GetPlayerCash(playerid) >= cashdeposit)
				{
					new oldbalance = DynamicFactions[x][fBank];
					DynamicFactions[x][fBank] += cashdeposit;
					GivePlayerCash(playerid, -cashdeposit);
					Update(playerid,pCashx);
					new str[184];
					mysql_format(SQL,str,sizeof(str),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],x);
					mysql_tquery(SQL,str,"","");
					SendClientMessage(playerid, CRISTIAN, "Safeb[OX]:");
					format(string, sizeof(string), " Old Balance: $%s", FormatNumber(oldbalance));
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), " Deposit: +$%s ", FormatNumber(cashdeposit));
					SendClientMessage(playerid, COLOR_WHITE, string);
     				format(string, sizeof(string), " New balance: $%s", FormatNumber(DynamicFactions[x][fBank]));
					SendClientMessage(playerid, COLOR_WHITE, string);
					PlayerInfo[playerid][pMoneyD] += cashdeposit;
					Update(playerid, pMoneyDx);
				 	return 1;
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't have that amount of money.");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not in HQ.");
		}
	}
	return 1;
}
CMD:fwithdraw(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
  		if(PlayerInfo[playerid][pLeader] !=0)
    	{
			if(PlayerInfo[playerid][pLeader] >= 1)
			{
				new cashdwithdraw,x = PlayerInfo[playerid][pLeader],string[100];
				if(sscanf(params, "d", cashdwithdraw)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/fwithdraw <money>");
				if(IsPlayerInRangeOfPoint(playerid,50.0,DynamicFactions[x][fcX],DynamicFactions[x][fcY],DynamicFactions[x][fcZ]))
				{
					if(cashdwithdraw <= DynamicFactions[x][fBank])
					{
						new oldbalance1 = DynamicFactions[x][fBank];
						GivePlayerCash(playerid,cashdwithdraw);
						Update(playerid,pCashx);
						DynamicFactions[x][fBank] -= cashdwithdraw;
						new str[184];
						mysql_format(SQL,str,sizeof(str),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],x);
						mysql_tquery(SQL,str,"","");
				    	SCM(playerid, CRISTIAN, "Safeb[OX]:");
				    	format(string, sizeof(string), "Old Balance: $%s ", FormatNumber(oldbalance1));
				    	SCM(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Withdraw: -$%s ", FormatNumber(cashdwithdraw));
						SCM(playerid, COLOR_WHITE, string);
                        format(string, sizeof(string), "New balance: %s %", FormatNumber(DynamicFactions[x][fBank]));
						SCM(playerid, COLOR_WHITE, string);
						return 1;
					}
					else return SCM(playerid, COLOR_WHITE, "{FFB870}You don't have that amount of money in your faction seif.");
	            }
				else return SCM(playerid,COLOR_WHITE,"{FFB870}You are not in HQ.");
	        }
	    }
    	else return SCM(playerid,COLOR_WHITE, "{5CAD5C}Error: Only leaders can use this command..");
	}
	return 1;
}
CMD:fmats(playerid, params[])
{
	if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "You Must Be Login First");
	if(IsPlayerConnected(playerid))
 	{
  		if(IsAMember(playerid))
    	{
	        new x,x_nr[70],matsam,string[100],sendername[30];
			x = PlayerInfo[playerid][pMember];
  			if(sscanf(params, "s[70]d",x_nr,matsam))
			{
				if(PlayerToPoint(100.0,playerid,DynamicFactions[x][fcX],DynamicFactions[x][fcY],DynamicFactions[x][fcZ]))
				{
						format(string, sizeof(string), "Faction Mats: %d.", DynamicFactions[x][fMats]);
						SendClientMessage(playerid, COLOR_WHITE, string);
				}
				SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[SYNTAX]: {FFFFFF}/fmats <name> <ammount>");
			  	SendClientMessage(playerid, COLOR_WHITE, "Available names: Take, Put.");
				return 1;
			}
			if(matsam < 1 || matsam > 1000000) return SCM(playerid,COLOR_WHITE,"{FFB870}Invalid materials.");
			if(GetPlayerInterior(playerid) == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not in HQ.");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(strcmp(x_nr,"take",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You need to be Rank 6.");
				if(PlayerToPoint(100.0,playerid,DynamicFactions[x][fcX],DynamicFactions[x][fcY],DynamicFactions[x][fcZ]))
				{
					if(matsam <=DynamicFactions[x][fMats])
					{
						PlayerInfo[playerid][pMats] += matsam;
						DynamicFactions[x][fMats]=DynamicFactions[x][fMats]-matsam;
						SendClientMessage(playerid, CRISTIAN, "Faction Mats:");
						format(string, sizeof(string), "You get %d mats.", matsam);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Total Mats: %d .", DynamicFactions[x][fMats]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string),  "%s has just taken %s mats from the HQ.",sendername,FormatNumber(matsam));
						SendFamilyMessage(x, COLOR_LIGHTBLUE, string);
						new str[256];
						mysql_format(SQL,str,sizeof(str),"UPDATE `factions` SET `Mats`='%d' WHERE `ID`='%d'",DynamicFactions[x][fMats],x);
						mysql_tquery(SQL,str,"","");
						mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Materials`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pMats],PlayerInfo[playerid][pNormalName]);
						mysql_tquery(SQL,str,"","");
						return 1;
					}
	 				else
					{
						SendClientMessage(playerid, COLOR_WHITE, "{FFB870}There isn't that much mats in storage.");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not in HQ.");
					return 1;
				}
			}
			else if(strcmp(x_nr,"put",true) == 0)
			{
				if(PlayerToPoint(100.0,playerid,DynamicFactions[x][fcX],DynamicFactions[x][fcY],DynamicFactions[x][fcZ]))
				{
					if(matsam <= PlayerInfo[playerid][pMats])
					{
						PlayerInfo[playerid][pMats] =PlayerInfo[playerid][pMats]-matsam;
						DynamicFactions[x][fMats] +=matsam;
		                SendClientMessage(playerid, CRISTIAN, "Faction Mats:");
						format(string, sizeof(string), "Deposit: %d mats.", matsam);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Total Mats: %d .", DynamicFactions[x][fMats]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						new str[256];
						mysql_format(SQL,str,sizeof(str),"UPDATE `factions` SET `Mats`='%d' WHERE `ID`='%d'",DynamicFactions[x][fMats],x);
						mysql_tquery(SQL,str,"","");
						mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Materials`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pMats],PlayerInfo[playerid][pNormalName]);
						mysql_tquery(SQL,str,"","");

						PlayerInfo[playerid][pMDeposit] += matsam;
						Update(playerid, pMDepositx);
						return 1;
					}
			 		else
					{
						SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't have that much mats on you!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not in HQ.");
					return 1;
				}
			}
	    }
	    else
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a gangster or mafiot.");
	        return 1;
	    }
	}
	return 1;
}
CMD:fdrugs(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
  		if(IsAMember(playerid))
   		{
			new x,x_nr[70],drugsam,string[100],sendername[30];
			x = PlayerInfo[playerid][pMember];
  			if(sscanf(params, "s[70]d",x_nr,drugsam))
			{
				if(PlayerToPoint(100.0,playerid,DynamicFactions[x][fcX],DynamicFactions[x][fcY],DynamicFactions[x][fcZ]))
				{
					format(string, sizeof(string), "Faction Drugs: %d", DynamicFactions[x][fDrugs]);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
				SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/fdrugs <name> <ammount>");
			  	SendClientMessage(playerid, COLOR_WHITE, "Available names: Take, Put.");
				return 1;
			}
			if(drugsam < 1 || drugsam > 100) return SCM(playerid,COLOR_WHITE,"{FFB870}Invalid drugs.");
			if(GetPlayerInterior(playerid) == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not in HQ.");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(strcmp(x_nr,"take",true) == 0)
			{
				if(PlayerToPoint(100.0,playerid,DynamicFactions[x][fcX],DynamicFactions[x][fcY],DynamicFactions[x][fcZ]))
				{
					if(drugsam <=DynamicFactions[x][fDrugs])
					{
						if(PlayerInfo[playerid][pLeader] == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not leader.");
						PlayerInfo[playerid][pDrugs] += drugsam;
						DynamicFactions[x][fDrugs]=DynamicFactions[x][fDrugs]-drugsam;
						SendClientMessage(playerid, CRISTIAN, "Faction Drug:");
						format(string, sizeof(string), "You get %d grams of drugs.", drugsam);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Total Drugs: %d grams.", DynamicFactions[x][fDrugs]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string),  "%s has just taken %d drugs from the HQ.",sendername,drugsam);
						SendFamilyMessage(x, COLOR_LIGHTBLUE, string);
						new str[256];
						mysql_format(SQL,str,sizeof(str),"UPDATE `factions` SET `Drugs`='%d' WHERE `ID`='%d'",DynamicFactions[x][fDrugs],x);
						mysql_tquery(SQL,str,"","");
						mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Drugs`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pDrugs],PlayerInfo[playerid][pNormalName]);
						mysql_tquery(SQL,str,"","");
						return 1;
					}
			 		else
					{
						SendClientMessage(playerid, COLOR_WHITE, "{FFB870}There isn't that much drugs in storage.");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not in HQ.");
					return 1;
				}
			}
    		else if(strcmp(x_nr,"put",true) == 0)
			{
				if(PlayerToPoint(100.0,playerid,DynamicFactions[x][fcX],DynamicFactions[x][fcY],DynamicFactions[x][fcZ]))
				{
					if(drugsam <= PlayerInfo[playerid][pDrugs])
					{
						PlayerInfo[playerid][pDrugs] =PlayerInfo[playerid][pDrugs]-drugsam;
						DynamicFactions[x][fDrugs] +=drugsam;
						SendClientMessage(playerid, CRISTIAN, "Faction Drug:");
						format(string, sizeof(string), "Deposit: %d grams of drugs.", drugsam);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Total Drugs: %d grams.", DynamicFactions[x][fDrugs]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						new str[184];
						mysql_format(SQL,str,sizeof(str),"UPDATE `factions` SET `Drugs`='%d' WHERE `ID`='%d'",DynamicFactions[x][fDrugs],x);
						mysql_tquery(SQL,str,"","");
						mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Drugs`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pDrugs],PlayerInfo[playerid][pNormalName]);
						mysql_tquery(SQL,str,"","");
						PlayerInfo[playerid][pDDeposit] += drugsam;
						Update(playerid, pDDepositx);
						return 1;
					}
			 		else
					{
						SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't have that much drugs on you.");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not in HQ.");
					return 1;
				}
			}
	    }
	    else
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a gangster or mafiot.");
	        return 1;
	    }
	}
	return 1;
}
CMD:government(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pMember] == 14)
		{
    		if(PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You need to be Rank 6 to be able to use this.");
			new string[300],textgov[250],sendername[MAX_PLAYER_NAME];
		    GetPlayerName(playerid, sendername, sizeof(sendername));
			if(sscanf(params, "s[250]", textgov)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/gov <Message>");
			if(FindIP(textgov)) /// Anti-Reclama
	        {
		        new advertiser[MAX_PLAYER_NAME];
		        GetPlayerName(playerid, advertiser, sizeof(advertiser));
		        format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /gov.", advertiser, playerid, textgov);
				ABroadCast(COLOR_WHITE,string,1);
	        }
	        for(new i; i < sizeof(TLD); i++)
			{
				if(strfind(textgov, TLD[i], true) != -1)
				{
					if(strfind(textgov, ".", true) != -1 || strfind(textgov, ".", true) != -1 || strfind(textgov, ".", true) != -1) break;
					new advertiser[MAX_PLAYER_NAME];
					GetPlayerName(playerid, advertiser, sizeof(advertiser));
					format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /gov.", advertiser, playerid, textgov);
					ABroadCast(COLOR_WHITE,string,1);
				}
			}
		    if(PlayerInfo[playerid][pMember] == 1)
		    {
		        SendClientMessageToAll(COLOR_TEAL, "------ Government Announcement (Los Santos Police Department) ------");
				if(PlayerInfo[playerid][pRank] == 7)
				{
			    	format(string, sizeof(string), "* Chief LSPD %s: %s", sendername, textgov);
				}
				if(PlayerInfo[playerid][pRank] == 6)
				{
			    	format(string, sizeof(string), "* Assistant Chief LSPD %s: %s", sendername, textgov);
				}
			}
  			if(PlayerInfo[playerid][pMember] == 2)
		    {
		        SendClientMessageToAll(COLOR_TEAL, "------ Government Announcement (F.B.I) ------");
				if(PlayerInfo[playerid][pRank] == 7)
				{
		        	format(string, sizeof(string), "* Director FBI %s: %s", sendername, textgov);
				}
				if(PlayerInfo[playerid][pRank] == 6)
				{
		        	format(string, sizeof(string), "* Assistant Director FBI %s: %s", sendername, textgov);
				}
		    }
		    if(PlayerInfo[playerid][pMember] == 3)
		    {
		        SendClientMessageToAll(COLOR_TEAL, "------ Government Announcement (National Guard) ------");
				if(PlayerInfo[playerid][pRank] == 7)
				{
		        	format(string, sizeof(string), "* General National Guard %s: %s", sendername, textgov);
				}
				if(PlayerInfo[playerid][pRank] == 6)
				{
		        	format(string, sizeof(string), "* Colonel National Guard %s: %s", sendername, textgov);
				}
		    }
			if(PlayerInfo[playerid][pMember] == 7)
		    {
		        if(PlayerInfo[playerid][pRank] == 7)
				{
			    	format(string, sizeof(string), "{BEFDBD}President %s: {FFFFFF}%s", sendername, textgov);
				}
				if(PlayerInfo[playerid][pRank] == 6)
				{
			    	format(string, sizeof(string), "{BEFDBD}Assistant %s: {FFFFFF}%s", sendername, textgov);
				}
		    }
		    if(PlayerInfo[playerid][pMember] == 8)
		    {
		        SendClientMessageToAll(COLOR_TEAL, "------ Government Announcement (L.V Police Dep) ------");
		        if(PlayerInfo[playerid][pRank] == 7)
				{
			    	format(string, sizeof(string), "* Chief LVPD %s: %s", sendername, textgov);
				}
				if(PlayerInfo[playerid][pRank] == 6)
				{
			    	format(string, sizeof(string), "* Assistant Chief LVPD %s: %s", sendername, textgov);
				}
		    }
		    if(PlayerInfo[playerid][pMember] == 14)
		    {
		        SendClientMessageToAll(COLOR_TEAL, "------ Government Announcement (Paramedic Department) ------");
		        if(PlayerInfo[playerid][pRank] == 7)
				{
			    	format(string, sizeof(string), "* Chief Paramedic %s: %s", sendername, textgov);
				}
				if(PlayerInfo[playerid][pRank] == 6)
				{
			    	format(string, sizeof(string), "* Assistant Chief Paramedic %s: %s", sendername, textgov);
				}
		    }
	    	SendClientMessageToAll(COLOR_BLUE, string);
		}
        else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a Cop/Paramedic.");
 	}
	return 1;
}
CMD:gov(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	return cmd_government(playerid, params);
}
CMD:order(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
        if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5 ||
		PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
        {
			if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid, COLOR_WHITE,"{FFB870}You don't have gun license.");
			if(GetPlayerInterior(playerid) == 0) return SendClientMessage(playerid, COLOR_WHITE,"{3385FF}You are not in place to get guns.");
		    if(IsAtOrderPlace(playerid))
            {
	    	    new x_nr[50],
	    	    	x = PlayerInfo[playerid][pMember];
		        if(sscanf(params, "s[50]",x_nr))
		        {
	    	  	    SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/order 1-5");
		        	SendClientMessage(playerid, COLOR_WHITE, "({FF0000} 1 {FFFFFF}) {FFD200}Deagle");
		        	SendClientMessage(playerid, COLOR_WHITE, "({FF0000} 2 {FFFFFF}) {FFD200}Deagle + M4");
					SendClientMessage(playerid, COLOR_WHITE, "({FF0000} 3 {FFFFFF}) {FFD200}Tec9 + Sawn-Off");
					SendClientMessage(playerid, COLOR_WHITE, "({FF0000} 4 {FFFFFF}) {FFD200}AK47 + M4 + Combat Shotgun");
					SendClientMessage(playerid, COLOR_WHITE, "({FF0000} 5 {FFFFFF}) {FFD200}Deagle + M4 + Combat Shotgun + Tec9");
		        	return 1;
	        	}
                if(strcmp(x_nr,"1",true) == 0)
             	{
                    if(DynamicFactions[x][fMats] <= 199) return SendClientMessage(playerid, COLOR_WHITE,"Your Mafia HQ Have'nt 200 Materials To Create This Gun");
     	        	if(GetPlayerCash(playerid) <= 499) return SendClientMessage(playerid, COLOR_WHITE,"You Have'nt $500.");
					GivePlayerWeaponEx(playerid, 24, 200);
					DynamicFactions[x][fMats] -= 200;
					DynamicFactions[x][fBank] += 500;
					GivePlayerCash(playerid, -500);
					Update(playerid, pCashx);
					new str2[184];
					mysql_format(SQL,str2,sizeof(str2),"UPDATE `factions` SET `Bank`='%d',`Mats`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],DynamicFactions[x][fMats],x);
					mysql_tquery(SQL,str2,"","");
					SendClientMessage(playerid, COLOR_WHITE,"You Bought A {009BFF}Deagle{FFFFFF} With {FF0000}$500 {FFFFFF}| {FF0000}200 {FFFFFF}Materials");
		           	return 1;
      	        }
                if(strcmp(x_nr,"2",true) == 0)
             	{
                    if(DynamicFactions[x][fMats] <= 999) return SendClientMessage(playerid, COLOR_WHITE,"Your Mafia HQ Have'nt 1000 Materials To Create This Gun");
     	        	if(GetPlayerCash(playerid) <= 1119) return SendClientMessage(playerid, COLOR_WHITE,"You Have'nt $1200.");
					GivePlayerWeaponEx(playerid, 24, 200);
					GivePlayerWeaponEx(playerid, 31, 630);
					DynamicFactions[x][fMats] -= 1000;
					DynamicFactions[x][fBank] += 1200;
					GivePlayerCash(playerid, -1200);
					Update(playerid, pCashx);
					new str2[184];
					mysql_format(SQL,str2,sizeof(str2),"UPDATE `factions` SET `Bank`='%d',`Mats`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],DynamicFactions[x][fMats],x);
					mysql_tquery(SQL,str2,"","");
					SendClientMessage(playerid, COLOR_WHITE,"You Bought A {009BFF}Deagle + M4{FFFFFF} With {FF0000}$1200 {FFFFFF}| {FF0000}1000 {FFFFFF}Materials");
		           	return 1;
      	        }
                if(strcmp(x_nr,"3",true) == 0)
             	{
                    if(DynamicFactions[x][fMats] <= 1999) return SendClientMessage(playerid, COLOR_WHITE,"Your Mafia HQ Have'nt 2000 Materials To Create This Gun");
     	        	if(GetPlayerCash(playerid) <= 3799) return SendClientMessage(playerid, COLOR_WHITE,"You Have'nt $3800.");
					GivePlayerWeaponEx(playerid, 32, 550);
					GivePlayerWeaponEx(playerid, 26, 160);
					DynamicFactions[x][fMats] -= 2000;
					DynamicFactions[x][fBank] += 3800;
					GivePlayerCash(playerid, -3800);
					Update(playerid, pCashx);
					new str2[184];
					mysql_format(SQL,str2,sizeof(str2),"UPDATE `factions` SET `Bank`='%d',`Mats`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],DynamicFactions[x][fMats],x);
					mysql_tquery(SQL,str2,"","");
					SendClientMessage(playerid, COLOR_WHITE,"You Bought A {009BFF}Tec9 + Sawn-Off{FFFFFF} With {FF0000}$3800 {FFFFFF}| {FF0000}2000 {FFFFFF}Materials");
		           	return 1;
      	        }
                if(strcmp(x_nr,"4",true) == 0)
             	{
                    if(DynamicFactions[x][fMats] <= 2999) return SendClientMessage(playerid, COLOR_WHITE,"Your Mafia HQ Have'nt 3000 Materials To Create This Gun");
     	        	if(GetPlayerCash(playerid) <= 2999) return SendClientMessage(playerid, COLOR_WHITE,"You Have'nt $3000.");
					GivePlayerWeaponEx(playerid, 30, 550);
					GivePlayerWeaponEx(playerid, 31, 160);
					GivePlayerWeaponEx(playerid, 27, 280);
					DynamicFactions[x][fMats] -= 3000;
					DynamicFactions[x][fBank] += 3000;
					GivePlayerCash(playerid, -3000);
					Update(playerid, pCashx);
					new str2[184];
					mysql_format(SQL,str2,sizeof(str2),"UPDATE `factions` SET `Bank`='%d',`Mats`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],DynamicFactions[x][fMats],x);
					mysql_tquery(SQL,str2,"","");
					SendClientMessage(playerid, COLOR_WHITE,"You Bought A {009BFF}AK47 + M4 + Combat Shotgun{FFFFFF} With {FF0000}$3000 {FFFFFF}| {FF0000}3000 {FFFFFF}Materials");
		           	return 1;
      	        }
                if(strcmp(x_nr,"5",true) == 0)
             	{
                    if(DynamicFactions[x][fMats] <= 4499) return SendClientMessage(playerid, COLOR_WHITE,"Your Mafia HQ Have'nt 4500 Materials To Create This Gun");
     	        	if(GetPlayerCash(playerid) <= 3499) return SendClientMessage(playerid, COLOR_WHITE,"You Have'nt $3500.");
					GivePlayerWeaponEx(playerid, 24, 200);
					GivePlayerWeaponEx(playerid, 31, 630);
					GivePlayerWeaponEx(playerid, 27, 280);
					GivePlayerWeaponEx(playerid, 32, 550);
					DynamicFactions[x][fMats] -= 4500;
					DynamicFactions[x][fBank] += 3500;
					GivePlayerCash(playerid, -3500);
					Update(playerid, pCashx);
					new str2[184];
					mysql_format(SQL,str2,sizeof(str2),"UPDATE `factions` SET `Bank`='%d',`Mats`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],DynamicFactions[x][fMats],x);
					mysql_tquery(SQL,str2,"","");
					SendClientMessage(playerid, COLOR_WHITE,"You Bought A {009BFF}Deagle + M4 + Combat Shotgun + Tec9{FFFFFF} With {FF0000}$3500 {FFFFFF}| {FF0000}4500 {FFFFFF}Materials");
		           	return 1;
      	        }
		        /*if(strcmp(x_nr,"6",true) == 0)
              	{
					if(DynamicFactions[x][fMats] <= 149) return SendClientMessage(playerid, COLOR_WHITE,"Your Mafia HQ Have'nt 150 Materials To Create This Gun");
     	        	if(GetPlayerCash(playerid) <= 1499) return SendClientMessage(playerid, COLOR_WHITE,"You Have'nt $1500.");
                    GivePlayerWeaponEx(playerid, 33, 200);
					DynamicFactions[x][fMats] -= 150;
					DynamicFactions[x][fBank] += 1500;
					GivePlayerCash(playerid, -1500);
					Update(playerid, pCashx);
					new str2[184];
					mysql_format(SQL,str2,sizeof(str2),"UPDATE `factions` SET `Bank`='%d',`Mats`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],DynamicFactions[x][fMats],x);
					mysql_tquery(SQL,str2,"","");
					SendClientMessage(playerid, COLOR_WHITE,"You Bought A Rifle With $1,500. 150 Materials");
		         	return 1;
		        }
		        if(strcmp(x_nr,"7",true) == 0)
              	{
					if(DynamicFactions[x][fMats] <= 99) return SendClientMessage(playerid, COLOR_WHITE,"Your Mafia HQ Have'nt 100 Materials To Create This Gun");
     	        	if(GetPlayerCash(playerid) <= 999) return SendClientMessage(playerid, COLOR_WHITE,"You Have'nt $1000.");
                    GivePlayerWeaponEx(playerid, 8, 1);
					DynamicFactions[x][fMats] -= 100;
					DynamicFactions[x][fBank] += 1000;
					GivePlayerCash(playerid, -1000);
					Update(playerid, pCashx);
					new str2[184];
					mysql_format(SQL,str2,sizeof(str2),"UPDATE `factions` SET `Bank`='%d',`Mats`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],DynamicFactions[x][fMats],x);
					mysql_tquery(SQL,str2,"","");
					SendClientMessage(playerid, COLOR_WHITE,"You Bought A Katana With $1,000. 100 Materials");
		         	return 1;
		        }*/
            }
	        else
	        {
	        	SCM(playerid, COLOR_WHITE,"{3385FF}You Are Not In Order Place To Get Guns .");
	        	return 1;
            }
        }
	    else if(PlayerInfo[playerid][pMember] == 11)
	    {
	        if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid, COLOR_WHITE,"{FFB870}You don't have gun license.");
			if(GetPlayerInterior(playerid) == 0) return SendClientMessage(playerid, COLOR_WHITE,"{3385FF}You are not in place to get guns.");
		    if(IsPlayerInRangeOfPoint(playerid, 50.0, 2323.9993,-1148.0469,1050.7101) && GetPlayerVirtualWorld(playerid) == 2)
            {
                new x_nr[50],
	    	    	x = PlayerInfo[playerid][pMember];
		        if(sscanf(params, "s[50]",x_nr))
		        {
	    	  	    SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/order [item]");
		        	SendClientMessage(playerid, COLOR_WHITE, "{FF9900}1 - sniper, 2 - rifle. price: $1000");
		        	return 1;
	        	}
	        	if(strcmp(x_nr,"1",true) == 0)
             	{
                    if(GetPlayerMoney(playerid) >= 1000)
                    {
                        GivePlayerWeaponEx(playerid, 4, 1);
     	        		GivePlayerWeaponEx(playerid, 23, 50);
     	        		GivePlayerWeaponEx(playerid, 34, 50);
     	        		GivePlayerCash(playerid, -1000);
						DynamicFactions[x][fBank] += 1000;
     	        		Update(playerid, pCashx);
						new str2[184];
						mysql_format(SQL,str2,sizeof(str2),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],x);
						mysql_tquery(SQL,str2,"","");
		        	}
	        		else
	        		{
		        		SCM(playerid, COLOR_WHITE,"You Have'nt $1000.");
                    }
		           	return 1;
      	        }
      	        if(strcmp(x_nr,"2",true) == 0)
             	{
                    if(GetPlayerMoney(playerid) >= 1000)
                    {
                        GivePlayerWeaponEx(playerid, 4, 1);
     	        		GivePlayerWeaponEx(playerid, 23, 50);
     	        		GivePlayerWeaponEx(playerid, 33, 50);
     	        		GivePlayerCash(playerid, -1000);
						DynamicFactions[x][fBank] += 1000;
     	        		Update(playerid, pCashx);
						new str2[184];
						mysql_format(SQL,str2,sizeof(str2),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'",DynamicFactions[x][fBank],x);
						mysql_tquery(SQL,str2,"","");
		        	}
	        		else
	        		{
		        		SCM(playerid, COLOR_WHITE,"You Have'nt $1000.");
                    }
		           	return 1;
      	        }
			}
			else
	        {
	        	SCM(playerid, COLOR_WHITE,"{3385FF}You are not in place to get guns.");
	        	return 1;
            }
		}
	}
    return 1;
}
CMD:megaphone(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new tmpcar = GetPlayerVehicleID(playerid),textmeg[250],sendername[MAX_PLAYER_NAME],string[200];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMuted] == 1)
	    {
			format(string, sizeof(string), "You can not speak, you have been silenced for %d seconds.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		if(sscanf(params, "s[250]", textmeg)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/m <Message>");
		if(FindIP(textmeg)) /// Anti-Reclama
        {
	        new advertiser[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, advertiser, sizeof(advertiser));
	        format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /m.", advertiser, playerid, textmeg);
			ABroadCast(COLOR_WHITE,string,1);
        }
        for(new i; i < sizeof(TLD); i++)
		{
			if(strfind(textmeg, TLD[i], true) != -1)
			{
				if(strfind(textmeg, ".", true) != -1 || strfind(textmeg, ".", true) != -1 || strfind(textmeg, ".", true) != -1) break;
				new advertiser[MAX_PLAYER_NAME];
				GetPlayerName(playerid, advertiser, sizeof(advertiser));
				format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /m.", advertiser, playerid, textmeg);
				ABroadCast(COLOR_WHITE,string,1);
			}
		}
		if(IsACop(playerid))
		{
			if(!Copcar2(tmpcar)) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not in a Police Vehicle.");
			if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1)
			{
				format(string, sizeof(string), "[MegaPhone] PoliceMan %s: %s", sendername, textmeg);
				ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_LIGHTGREEN,COLOR_YELLOW,COLOR_YELLOW);
			}
			else if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2)
			{
				format(string, sizeof(string), "[MegaPhone] Agent %s: %s", sendername, textmeg);
				ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_LIGHTGREEN,COLOR_YELLOW,COLOR_YELLOW);
			}
			else if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
			{
				format(string, sizeof(string), "[MegaPhone] Soldier %s: %s", sendername, textmeg);
				ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_LIGHTGREEN,COLOR_YELLOW,COLOR_YELLOW);
			}
			else if(PlayerInfo[playerid][pMember] == 8||PlayerInfo[playerid][pLeader] == 8)
			{
				format(string, sizeof(string), "[MegaPhone] PoliceMan %s: %s", sendername, textmeg);
				ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_LIGHTGREEN,COLOR_YELLOW,COLOR_YELLOW);
			}
			printf("%s", string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a cop.");
			return 1;
		}
	}
	return 1;
}
CMD:m(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	return cmd_megaphone(playerid, params);
}
CMD:radio(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new radiomsj[250],sendername[MAX_PLAYER_NAME],string[256],member = PlayerInfo[playerid][pMember],leader = PlayerInfo[playerid][pLeader];
	    if(PlayerInfo[playerid][pMuted] == 1)
	    {
			format(string, sizeof(string), "You can not speak, you have been silenced for %d seconds.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(sscanf(params, "s[250]", radiomsj)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/r <Message>");
		if(FindIP(radiomsj)) /// Anti-Reclama
        {
	        new advertiser[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, advertiser, sizeof(advertiser));
	        format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /r.", advertiser, playerid, radiomsj);
			ABroadCast(COLOR_WHITE,string,1);
        }
        for(new i; i < sizeof(TLD); i++)
		{
			if(strfind(radiomsj, TLD[i], true) != -1)
			{
				if(strfind(radiomsj, ".", true) != -1 || strfind(radiomsj, ".", true) != -1 || strfind(radiomsj, ".", true) != -1) break;
				new advertiser[MAX_PLAYER_NAME];
				GetPlayerName(playerid, advertiser, sizeof(advertiser));
				format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /r.", advertiser, playerid, radiomsj);
				ABroadCast(COLOR_WHITE,string,1);
			}
		}
		if(member == 1 || leader == 1 || member == 2 || leader == 2 || member == 3 || leader == 3 || member == 8 || leader == 8 || member == 14 || leader == 14)
		{
			if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "*** %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName7], sendername, radiomsj); }
			else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "*** %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName6], sendername, radiomsj); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName5], sendername, radiomsj); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "* %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName4], sendername, radiomsj); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "* %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName3], sendername, radiomsj); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "* %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName2], sendername, radiomsj); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "* %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName1], sendername, radiomsj); }
            else if(PlayerInfo[playerid][pAdmin] >= 1) { format(string, sizeof(string), "* Admin %s: %s, over.",sendername, radiomsj); }
            else if(PlayerInfo[playerid][pAdmin] >= 1)return SendRadioMessage(SpecFactiune[playerid], COLOR_PURPLE, string);
			else
			{
				format(string, sizeof(string), "* %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName1], sendername, radiomsj);
			}
			SendRadioMessage(member, COLOR_RADIO, string);
			printf("%s", string);
			format(string, sizeof(string), "(radio) ''%s''",params);
    		SetPlayerChatBubble(playerid, string, COLOR_CHATBUBBLE, 10.0, 10000);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Your group data is invalid.");
			return 1;
		}
	}
	return 1;
}
CMD:r(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	return cmd_radio(playerid, params);
}
CMD:duty(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
        if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid, COLOR_WHITE,"{FFB870}You don't have gun license.");
		new house = PlayerInfo[playerid][pPhousekey],string[200],sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsACop(playerid))
		{
			if(PlayerInfo[playerid][pLocal] == house || IsPlayerInRangeOfPoint(playerid, 150.0, 245.8297,112.4436,1003.2188) || IsPlayerInRangeOfPoint(playerid, 150.0, 236.3031,162.9478,1003.0300))
			{
				if(GetPlayerInterior(playerid) != 0)
				{
					if(OnDuty[playerid] == 0)
			        {
	               		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		             	{
				      		format(string, sizeof(string), "* Officer %s took a Badge and a Gun from his locker.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							GivePlayerWeaponEx(playerid, 24, 500);
							GivePlayerWeaponEx(playerid, 3, 1);
							GivePlayerWeaponEx(playerid, 41, 500);
							GivePlayerWeaponEx(playerid, 29, 1000);
							GivePlayerWeaponEx(playerid, 31, 1000);
							SetPlayerArmourEx(playerid, 100);
       						SetPlayerHealthEx(playerid, 100);
							OnDuty[playerid] = 1;
						}
						if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
		            	{
				      		format(string, sizeof(string), "* Officer %s took a Badge and a Gun from his locker.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							GivePlayerWeaponEx(playerid, 24, 500);
							GivePlayerWeaponEx(playerid, 3, 1);
							GivePlayerWeaponEx(playerid, 41, 500);
							GivePlayerWeaponEx(playerid, 29, 1000);
							GivePlayerWeaponEx(playerid, 31, 1000);
							SetPlayerArmourEx(playerid, 100);
							SetPlayerHealthEx(playerid, 100);
							OnDuty[playerid] = 1;
						}
						if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
		            	{
				      		format(string, sizeof(string), "* Officer %s took a Badge and a Gun from his locker.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							GivePlayerWeaponEx(playerid, 24, 500);
							GivePlayerWeaponEx(playerid, 41, 500);
							GivePlayerWeaponEx(playerid, 29, 1000);
							GivePlayerWeaponEx(playerid, 31, 1000);
							SetPlayerArmourEx(playerid, 100);
							SetPlayerHealthEx(playerid, 100);
							OnDuty[playerid] = 1;
						}
						if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
		            	{
				      		format(string, sizeof(string), "* Officer %s took a Badge and a Gun from his locker.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							GivePlayerWeaponEx(playerid, 24, 500);
							GivePlayerWeaponEx(playerid, 3, 1);
							GivePlayerWeaponEx(playerid, 41, 500);
							GivePlayerWeaponEx(playerid, 29, 1000);
							GivePlayerWeaponEx(playerid, 31, 1000);
							SetPlayerArmourEx(playerid, 100);
       						SetPlayerHealthEx(playerid, 100);
							OnDuty[playerid] = 1;
						}
					}
					else if(OnDuty[playerid]==1)
					{
						format(string, sizeof(string), "* Officer %s places his Badge and Gun in his locker.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						OnDuty[playerid] = 0;
						SetPlayerArmourEx(playerid, 0);
						ResetPlayerWeaponsEx(playerid);
						ResetPlayerWeapons(playerid);
					}
	    		}
       			else
		    	{
					SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not in a locker room/your house.");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not in a locker room/your house.");
				return 1;
			}
		}
		else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLocal] == house)
		{
		    if(IsPlayerInRangeOfPoint(playerid, 50.0, 1494.7902,1306.6029,1093.2947))
		    {
		        if(PlayerInfo[playerid][pMember] != 14) return SendClientMessage(playerid, COLOR_LIGHTRED, "You are not a medic.");
		        if(OnDutymedic[playerid] == 0)
			    {
			        format(string, sizeof(string), "* Medic %s took a Health Kit and a Fire Extinguisher from his locker.", sendername);
			        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeaponEx(playerid, 42, 1000);
					OnDutymedic[playerid] = 1;
				}
				else if(OnDutymedic[playerid] > 0)
				{
				    format(string, sizeof(string), "* Medic %s places his Health Kit and Fire Extinguisher in his locker.", sendername);
				    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    OnDutymedic[playerid] = 0;
				}
			}
   		}
	}
	return 1;
}
CMD:departments(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new string[256],sendername[MAX_PLAYER_NAME],depmsj[250],member = PlayerInfo[playerid][pMember],leader = PlayerInfo[playerid][pLeader];
	    if(PlayerInfo[playerid][pMuted] == 1)
	    {
			format(string, sizeof(string), "You can not speak, you have been silenced for %d seconds.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(sscanf(params, "s[250]", depmsj)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/d <Message>");
		if(FindIP(depmsj)) /// Anti-Reclama
        {
	        new advertiser[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, advertiser, sizeof(advertiser));
	        format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /d.", advertiser, playerid, depmsj);
			ABroadCast(COLOR_WHITE,string,1);
        }
        for(new i; i < sizeof(TLD); i++)
		{
			if(strfind(depmsj, TLD[i], true) != -1)
			{
				if(strfind(depmsj, ".", true) != -1 || strfind(depmsj, ".", true) != -1 || strfind(depmsj, ".", true) != -1) break;
				new advertiser[MAX_PLAYER_NAME];
				GetPlayerName(playerid, advertiser, sizeof(advertiser));
				format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /d.", advertiser, playerid, depmsj);
				ABroadCast(COLOR_WHITE,string,1);
			}
		}
		if(member == 2 || leader == 2 || member == 3 || leader == 3 || member == 14 || leader == 14)
		{
  			if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "*** %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName7], sendername, depmsj); }
	  		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "*** %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName6], sendername, depmsj); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName5], sendername, depmsj); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "* %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName4], sendername, depmsj); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "* %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName3], sendername, depmsj); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "* %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName2], sendername, depmsj); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "* %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName1], sendername, depmsj); }
			else
			{
				format(string, sizeof(string), "* %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName1], sendername, depmsj);
			}
			SendTeamMessage(14, COLOR_DEPART, string);
			SendTeamMessage(8, COLOR_DEPART, string);
			SendTeamMessage(3, COLOR_DEPART, string);
			SendTeamMessage(2, COLOR_DEPART, string);
			SendTeamMessage(1, COLOR_DEPART, string);
			printf("%s", string);
			format(string, sizeof(string), "(radio) ''%s''",params);
    		SetPlayerChatBubble(playerid, string, COLOR_CHATBUBBLE, 10.0, 10000);
			return 1;
		}
		if(member == 1 || leader == 1)
		{
			if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "*** LS %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName7], sendername, depmsj); }
	  		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "*** LS %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName6], sendername, depmsj); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** LS %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName5], sendername, depmsj); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "* LS %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName4], sendername, depmsj); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "* LS %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName3], sendername, depmsj); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "* LS %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName2], sendername, depmsj); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "* LS %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName1], sendername, depmsj); }
			else
			{
				format(string, sizeof(string), "* LS %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName1], sendername, depmsj);
			}
			SendTeamMessage(14, COLOR_DEPART, string);
			SendTeamMessage(8, COLOR_DEPART, string);
			SendTeamMessage(3, COLOR_DEPART, string);
			SendTeamMessage(2, COLOR_DEPART, string);
			SendTeamMessage(1, COLOR_DEPART, string);
			printf("%s", string);
			format(string, sizeof(string), "(radio) ''%s''",params);
    		SetPlayerChatBubble(playerid, string, COLOR_CHATBUBBLE, 10.0, 10000);
			return 1;
		}
		if(member == 8 || leader == 8)
		{
			if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "*** LV %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName7], sendername, depmsj); }
	  		else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "*** LV %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName6], sendername, depmsj); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** LV %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName5], sendername, depmsj); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "* LV %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName4], sendername, depmsj); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "* LV %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName3], sendername, depmsj); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "* LV %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName2], sendername, depmsj); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "* LV %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName1], sendername, depmsj); }
			else
			{
				format(string, sizeof(string), "* LV %s %s: %s, over.", DynamicFactions[PlayerInfo[playerid][pMember]][fRankName1], sendername, depmsj);
			}
			SendTeamMessage(14, COLOR_DEPART, string);
			SendTeamMessage(8, COLOR_DEPART, string);
			SendTeamMessage(3, COLOR_DEPART, string);
			SendTeamMessage(2, COLOR_DEPART, string);
			SendTeamMessage(1, COLOR_DEPART, string);
			printf("%s", string);
			format(string, sizeof(string), "(radio) ''%s''",params);
    		SetPlayerChatBubble(playerid, string, COLOR_CHATBUBBLE, 10.0, 10000);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "You are not part of a department.");
			return 1;
		}
	}
	return 1;
}
CMD:d(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	return cmd_departments(playerid, params);
}
CMD:confiscate(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
        if(IsACop(playerid))
        {
            if(OnDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_WHITE, "{3385FF}You are not on Duty.");
	        new x_nr[15],giveplayerid,string[256],giveplayer[25],sendername[25];
			if(sscanf(params, "us[15]",giveplayerid,x_nr))
			{
				SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/confiscate <Name/Playerid> <Item>");
		  		SendClientMessage(playerid, COLOR_WHITE, "Items: Licence, Drugs, Materials, Weapons.");
				return 1;
			}
			GetPlayerName(playerid,sendername,sizeof(sendername));
			GetPlayerName(giveplayerid,giveplayer,sizeof(giveplayer));
		    if(strcmp(x_nr,"licence",true) == 0)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							format(string, sizeof(string), "* %s has confiscated %s's driving license.", sendername, giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							SendTeamMessage(8, COLOR_LIGHTBLUE, string);
							SendTeamMessage(3, COLOR_LIGHTBLUE, string);
							SendTeamMessage(2, COLOR_LIGHTBLUE, string);
							SendTeamMessage(1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "You have confiscated %s's driving license.", giveplayer);
					        SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "%s has confiscated your driving license.", sendername);
					        SendClientMessage(giveplayerid, COLOR_WHITE, string);
							PlayerInfo[giveplayerid][pCarLicSuspend] = 2;
					        PlayerInfo[giveplayerid][pCarLic] = 0;
					        PlayerInfo[giveplayerid][pCarLicT] = 0;
							Update(giveplayerid, pCarLicSuspendx);
							new str[128];
							mysql_format(SQL,str,sizeof(str),"UPDATE users SET `CarLic`='0',`CarLicT`='0' WHERE `name`='%s'",PlayerInfo[giveplayerid][pNormalName]);
							mysql_tquery(SQL,str,"","");
							PlayerInfo[playerid][pLConfiscate] += 1;
							Update(playerid, pLConfiscatex);
						}
						else return SendClientMessage(playerid, COLOR_WHITE,"{FFFFCC}This player is not near you.");
				    }
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
			}
			else if(strcmp(x_nr,"weapons",true) == 0)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							format(string, sizeof(string), "* %s has confiscated %s's weapons.", sendername, giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							SendTeamMessage(8, COLOR_LIGHTBLUE, string);
							SendTeamMessage(3, COLOR_LIGHTBLUE, string);
							SendTeamMessage(2, COLOR_LIGHTBLUE, string);
							SendTeamMessage(1, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "You have confiscated %s's weapons.", giveplayer);
					        SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "%s has confiscated your weapons.", sendername);
					        SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        ResetPlayerWeaponsEx(giveplayerid);
					        ResetPlayerWeapons(giveplayerid);
					        PlayerInfo[playerid][pLConfiscate] += 1;
							Update(playerid, pLConfiscatex);
						}
						else return SendClientMessage(playerid, COLOR_WHITE,"{FFFFCC}This player is not near you.");
				    }
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
			}
			else if(strcmp(x_nr,"materials",true) == 0)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    format(string, sizeof(string), "* %s has confiscated %s's materials.", sendername, giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							SendTeamMessage(8, COLOR_LIGHTBLUE, string);
							SendTeamMessage(3, COLOR_LIGHTBLUE, string);
							SendTeamMessage(2, COLOR_LIGHTBLUE, string);
							SendTeamMessage(1, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "You have confiscated %s's materials.", giveplayer);
					        SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "%s has confiscated your materials.", sendername);
					        SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        PlayerInfo[giveplayerid][pMats] = 0;
							new str[128];
							mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Materials`='0' WHERE `name`='%s'",PlayerInfo[giveplayerid][pNormalName]);
							mysql_tquery(SQL,str,"","");
							PlayerInfo[playerid][pLConfiscate] += 1;
							Update(playerid, pLConfiscatex);
						}
						else return SendClientMessage(playerid, COLOR_WHITE,"{FFFFCC}This player is not near you.");
				    }
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
			}
			else if(strcmp(x_nr,"drugs",true) == 0)
			{
                if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "You need to be Rank 2 or Higher for this action.");
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    format(string, sizeof(string), "* %s has confiscated %s's drugs.", sendername, giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							SendTeamMessage(8, COLOR_LIGHTBLUE, string);
							SendTeamMessage(3, COLOR_LIGHTBLUE, string);
							SendTeamMessage(2, COLOR_LIGHTBLUE, string);
							SendTeamMessage(1, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "You have confiscated %s's drugs.", giveplayer);
					        SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "%s has confiscated your drugs.", sendername);
					        SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        PlayerInfo[giveplayerid][pDrugs] = 0;
							new str[128];
							mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Drugs`='0' WHERE `name`='%s'",PlayerInfo[giveplayerid][pNormalName]);
							mysql_tquery(SQL,str,"","");
							PlayerInfo[playerid][pDConfiscate] += 1;
							Update(playerid, pDConfiscatex);
						}
						else return SendClientMessage(playerid, COLOR_WHITE,"{FFFFCC}This player is not near you.");
				    }
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
			}
			else return SendClientMessage(playerid, COLOR_GRAD1, "Unknown take name.");
        }
        else return SendClientMessage(playerid,  COLOR_WHITE, "{FFB870}You are not a cop.");
    }
    return 1;
}
CMD:placespike(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
 	    if(IsACop(playerid) && PlayerInfo[playerid][pRank] >= 4)
 	    {
 	    	if(GetPlayerState(playerid) == 1)
	 		{
	 	    	new x = -1,string[76];
  	 			for(new i; i < MAX_SPIKES; i++)
		 		{
					if(SpikeInfo[i][sPos][0] == 0 && SpikeInfo[i][sPos][1] == 0 && SpikeInfo[i][sPos][2] == 0) {
						x = i;
						break;
					}
				}
				if(x != -1)
				{
					GetPlayerPos(playerid, SpikeInfo[x][sPos][0], SpikeInfo[x][sPos][1], SpikeInfo[x][sPos][2]);
					GetPlayerFacingAngle(playerid, SpikeInfo[x][sPos][3]);
					SpikeInfo[x][sObjID] = CreateDynamicObject(2899, SpikeInfo[x][sPos][0], SpikeInfo[x][sPos][1], SpikeInfo[x][sPos][2] - 0.8, 0.0, 0.0, SpikeInfo[x][sPos][3], GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 200.0);
					GetPlayerName(playerid, SpikeInfo[x][sDeployer], MAX_PLAYER_NAME);
					format(string, sizeof(string),"You have successfully deployed a spike (ID %d).", x);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
				else
				{
					format(string, sizeof(string), "No more spike strips can be deployed (the limit is %d). Destroy some first.", MAX_SPIKES);
					SendClientMessage(playerid, COLOR_GREY, string);
				}
        	}
			else SendClientMessage(playerid, COLOR_GREY, "You can only deploy spikes while on foot.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "You are not a cop or you don't have rank 4.");
	}
	return 1;
}
CMD:removespike(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
 	    if(IsACop(playerid) && PlayerInfo[playerid][pRank] >= 4)
 	    {
 	    	new targetID,string[75];
 	    	if(!isnull(params))
	 		{
	 	    	targetID = strval(params);
				if(SpikeInfo[targetID][sPos][0] != 0 && SpikeInfo[targetID][sPos][1] != 0 && SpikeInfo[targetID][sPos][2] != 0)
				{
					DestroyDynamicObject(SpikeInfo[targetID][sObjID]);
					for(new i; i < 4; i++) SpikeInfo[targetID][sPos][i] = 0;
					SpikeInfo[targetID][sObjID] = INVALID_OBJECT_ID;
					format(SpikeInfo[targetID][sDeployer], MAX_PLAYER_NAME, "(null)");
					format(string, sizeof(string), "You have successfully destroyed spike ID %d.", targetID);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
				else SendClientMessage(playerid, COLOR_GREY, "Invalid spike specified.");
			}
			else SendClientMessage(playerid, COLOR_GREY, "{FF9900}[SYNTAX]: {33CCFF}/removespoke [spike]");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "You are not a cop or you don't have rank 4.");
	}
	return 1;
}
CMD:spikes(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
 	    if(IsACop(playerid) && PlayerInfo[playerid][pRank] >= 5)
 	    {
        	new dString[128],sZone[MAX_ZONE_NAME],x,y;
       		SendClientMessage(playerid, COLOR_TEAL, "---------------------------------------------------------------------------------------------------------------------------------");
			SendClientMessage(playerid, COLOR_WHITE, "Deployed spike strips:");
			for(new i; i < MAX_SPIKES; i++)
			{
				if(SpikeInfo[i][sPos][0] != 0 && SpikeInfo[i][sPos][1] != 0 && SpikeInfo[i][sPos][2] != 0)
				{
					Get2DPosZone(SpikeInfo[i][sPos][0], SpikeInfo[i][sPos][1], sZone, MAX_ZONE_NAME); // Edited a_zones function (GET INCLUDE FROM SVN!!1)
					y++;
					if(x == 0) format(dString, sizeof(dString), "ID %d (%s, deployed by %s)", i, sZone, SpikeInfo[i][sDeployer]);
					else format(dString, sizeof(dString), "%s | ID %d (%s, deployed by %s)", dString, i, sZone, SpikeInfo[i][sDeployer]);
					x++;
					if(x == 2) {
						SendClientMessage(playerid, COLOR_WHITE, dString);
						x = 0;
					}
				}
			}
			if(x == 1) SendClientMessage(playerid, COLOR_WHITE, dString);
			if(y == 0) SendClientMessage(playerid, COLOR_WHITE, "No spike strips are currently deployed.");
			SendClientMessage(playerid, COLOR_TEAL, "---------------------------------------------------------------------------------------------------------------------------------");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "You are not a cop or you don't have rank 5.");
	}
	return 1;
}
CMD:mdc(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
  		if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a cop.");
		new id,string[256],sendername[MAX_PLAYER_NAME];
		if(sscanf(params, "u", id)) return SCM(playerid,0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF}/mdc <Name/Playerid>");
		{
				if(IsPlayerConnected(id))
				{
    				GetPlayerName(id, sendername, sizeof(sendername));
					if(PlayerInfo[id][pWantedLevel] > 0)
					{
						format(string, sizeof(string), "-- MDC [ID %d - %s][{FFFF00}W:%d{FFFFFF}][Chased by %d cops][Wanted expires in %d mins]",id, sendername, PlayerInfo[id][pWantedLevel], cased[id], wantedlost[id]/60+1);
					}
					else if(PlayerInfo[id][pWantedLevel] < 1)
					{
						format(string, sizeof(string), "-- MDC [ID %d - %s][not wanted]",id, sendername);
					}
					SendClientMessage(playerid, COLOR_WHITE,string);
					if(strcmp(PlayerInfo[id][pCrime1],  "Fara Crima", false) == 0 || strcmp(PlayerInfo[id][pCrime1],  "Fara", false) == 0) { }
					else
					{
						format(string, sizeof(string), "%s", PlayerInfo[id][pCrime1]);
						SendClientMessage(playerid,COLOR_WHITE,string);
					}
					if(strcmp(PlayerInfo[id][pCrime2],  "Fara Crima", false) == 0 || strcmp(PlayerInfo[id][pCrime1],  "Fara", false) == 0) { }
					else
					{
						format(string, sizeof(string), "%s", PlayerInfo[id][pCrime2]);
						SendClientMessage(playerid, COLOR_WHITE,string);
					}
					if(strcmp(PlayerInfo[id][pCrime3], "Fara Crima", false) == 0 || strcmp(PlayerInfo[id][pCrime1],  "Fara", false) == 0) { }
					else
					{
						format(string, sizeof(string), "%s", PlayerInfo[id][pCrime3]);
						SendClientMessage(playerid, COLOR_WHITE,string);
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
				    return 1;
				}
		}
  	}
	return 1;
}
CMD:su(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new id,level,reason[64],giveplayer[30],sendername[25],string[256],ini;
	if(IsACop(playerid))
	{
		if(sscanf(params, "uis[64]", id,level,reason)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/su <Name/Playerid> <level> <reason>");
		if(FindIP(reason)) /// Anti-Reclama
        {
	        new advertiser[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, advertiser, sizeof(advertiser));
	        format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /su.", advertiser, playerid, reason);
			ABroadCast(COLOR_WHITE,string,1);
        }
        for(new i; i < sizeof(TLD); i++)
		{
			if(strfind(reason, TLD[i], true) != -1)
			{
				if(strfind(reason, ".", true) != -1 || strfind(reason, ".", true) != -1 || strfind(reason, ".", true) != -1) break;
				new advertiser[MAX_PLAYER_NAME];
				GetPlayerName(playerid, advertiser, sizeof(advertiser));
				format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /su.", advertiser, playerid, reason);
				ABroadCast(COLOR_WHITE,string,1);
			}
		}
		GetPlayerName(id, giveplayer, sizeof(giveplayer));
  		GetPlayerName(playerid, sendername, sizeof(sendername));
		{
			if(id != INVALID_PLAYER_ID)
			{
				if(level < 7 && level > 0)
				{
					if(OnDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: You aren't on duty.");
					if(IsACop(id)) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: You can't suspect a Cop!");
					ini = PlayerInfo[id][pWantedLevel];
					if(PlayerInfo[id][pJailTime] > 0) return SCM(playerid, COLOR_WHITE, "{FFFFCC}Error: You can't suspect an arrested player!");
					Tigaanel[id] = 1;
					DestroyDynamic3DTextLabel(WantedScris[id]);
					if(level + PlayerInfo[id][pWantedLevel] > 6)
					{
						PlayerInfo[id][pWantedLevel] = 6;
						new str21[256];
        				format(str21,sizeof(str21),"Wanted Level: 6", PlayerInfo[playerid][pWantedLevel]);
        				WantedScris[id] = CreateDynamic3DTextLabel(str21, COLOR_WHITE, 0, 0, -20, 20, id);
						Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL, WantedScris[id] , E_STREAMER_ATTACH_OFFSET_Z, 0.48);
					}
					else
					{
					    new str21[256];
        				format(str21,sizeof(str21),"{FF00FF}Wanted Level: %d", level+PlayerInfo[id][pWantedLevel]);
        				WantedScris[id] = CreateDynamic3DTextLabel(str21, COLOR_WHITE, 0, 0, -20, 20, id);
						Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL, WantedScris[id] , E_STREAMER_ATTACH_OFFSET_Z, 0.48);
						PlayerInfo[id][pWantedLevel] = level+PlayerInfo[id][pWantedLevel];
					}
					format(string, sizeof(string), "Unknown");
					strmid(PlayerInfo[id][pVictim], string, 0, strlen(string), 255);
					Update(id,pVictimx);
					strmid(PlayerInfo[id][pAccused], PlayerInfo[playerid][pNormalName], 0, 25, 255);
					Update(id,pAccusedx);
					new y,m,d,h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					if(strcmp(PlayerInfo[id][pCrime1], "Fara Crima", true) == 0)
					{
		    			format(string,sizeof(string),"%s",reason);
						strmid(PlayerInfo[id][pCrime1], string, 0, strlen(string), 255);
						Update(id,pCrime1x);
					}
					else if(strcmp(PlayerInfo[id][pCrime2], "Fara Crima", true) == 0)
					{
		    			format(string,sizeof(string),"%s",reason);
						strmid(PlayerInfo[id][pCrime2], string, 0, strlen(string), 255);
						Update(id,pCrime2x);
					}
					else if(strcmp(PlayerInfo[id][pCrime3], "Fara Crima", true) == 0)
					{
		    			format(string,sizeof(string),"%s",reason);
					    strmid(PlayerInfo[id][pCrime3], string, 0, strlen(string), 255);
						Update(id,pCrime3x);
					}
					else if(strcmp(PlayerInfo[id][pCrime1],  "Fara Crima", true) == 0 && strcmp(PlayerInfo[id][pCrime2], "Fara Crima", true) == 0 && strcmp(PlayerInfo[id][pCrime3], "Fara Crima", true) == 0) { }
					else
					{
						format(string,sizeof(string),"%s",reason);
					    strmid(PlayerInfo[id][pCrime1], string, 0, strlen(string), 255);
						Update(id,pCrime1x);
						format(string, sizeof(string), "Fara Crima");
						strmid(PlayerInfo[id][pCrime2], string, 0, strlen(string), 255);
						strmid(PlayerInfo[id][pCrime3], string, 0, strlen(string), 255);
						Update(id,pCrime2x);
						Update(id,pCrime3x);
					}
					SetPlayerWantedLevel(id,PlayerInfo[id][pWantedLevel]);
					ini = PlayerInfo[id][pWantedLevel]-ini;
					format(string, sizeof(string), "You Commited A Crime: %s | Reported By : %s. W: +%d | New Wanted Level %d.",reason,sendername,ini,PlayerInfo[id][pWantedLevel]);
					SendClientMessage(id, COLOR_RED2, string);
					format(string, sizeof(string), "[Dispatch]: %s [%d] has commited a crime: %s. Reporter: %s. W: +%d. New wanted level: %d.",giveplayer,id,reason,sendername,ini,PlayerInfo[id][pWantedLevel]);
                    SendTeamMessage(8, COLOR_DBLUE, string);
					SendTeamMessage(3, COLOR_DBLUE, string);
					SendTeamMessage(2, COLOR_DBLUE, string);
					SendTeamMessage(1, COLOR_DBLUE, string);
					wantedlost[id] = 1800;
					Update(id,pWantedLevelx);
					WantedPoints[id] = PlayerInfo[id][pWantedLevel]*2;
					PlayerTextDrawShow(id, WantedText[id]);
					new var100[256],string2[256];
					format(string2,sizeof(string2),"[%02d-%02d-%d %02d:%02d:%02d] %s[user:%d] gave %d wanted points to %s[user:%d], reason: %s.",d,m,y,h,mi,s,sendername,PlayerInfo[playerid][pSQLID],level,giveplayer,PlayerInfo[id][pSQLID],reason);
	    			mysql_format(SQL, var100, sizeof(var100), "INSERT INTO su_logs (`playerid`,`giverid`,`reason`,`sumessage`,`time`) VALUES ('%d','%d','%s','%s','%02d-%02d-%d %02d:%02d:%02d')", PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],reason,string2,d,m,y,h,mi,s);
					mysql_tquery(SQL,var100,"","");
					if(IsPlayerAFK[id] > 0)
					{
						format(string, sizeof(string), "PoliceMan %s Has Given You Wanted Level %d | Reason : %s.",sendername,ini,reason);
						mysql_format(SQL, var100, sizeof(var100), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[id][pSQLID],string);
						mysql_tquery(SQL,var100,"","");
					}
					new str1[256];
        			format(str1,sizeof(str1),"Wanted Clear In : ~r~%d MINUTE",wantedlost[id]/60+1);
					PlayerTextDrawSetString(id, WantedText[id], str1);
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Invalid wanted level.");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a cop.");
	return 1;
}
CMD:members(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pRank] >= 5)
	{
		new aim[5000],
			query[300],
			test[300],
			test1[300],
			test2[300],
			test3[300],
			test4[300],
			aimtotal[5000],
			result[300],
			idd,
			mid=0;
		format(query, sizeof(query), "SELECT * FROM `users` WHERE `users`.`Member` = '%d' ORDER BY `users`.`Rank` DESC LIMIT 50", PlayerInfo[playerid][pMember]);
		new Cache: membresult = mysql_query(SQL, query);
		for(new i, j = cache_get_row_count (); i != j; ++i)
		{
			cache_get_field_content(i, "name", result); format(test, 300, result);
			cache_get_field_content(i, "Rank", result); format(test1, 300, result);
			cache_get_field_content(i, "lastOn", result); format(test2, 300, result);
			cache_get_field_content(i, "FWarn", result); format(test3, 300, result);
			cache_get_field_content(i, "FactionTime", result); format(test4, 300, result);
			idd = cache_get_field_content_int(i, "id");
			Selected[playerid][mid] = idd;
			new id = GetPlayerID(test);
			if(id != INVALID_PLAYER_ID)
			{
				format(aim, sizeof(aim), "%s%s - %s\tonline right now\t%s/3 fw\t%s days\n", aim, test1, test, test3, test4);
			}
			else
			{
				format(aim, sizeof(aim), "%s%s - %s\t%s\t%s/3 fw\t%s days\n", aim, test1, test, test2, test3, test4);
			}
			mid++;
		}
		cache_delete(membresult);
		format(aimtotal, sizeof(aimtotal), "Rank - Name\tLast Login\tFW\tDays in faction\n%s",aim);
		if(PlayerInfo[playerid][pRank] >= 6)
		{
			ShowPlayerDialog(playerid,DIALOG_MEMBERS,DIALOG_STYLE_TABLIST_HEADERS,"Faction members",aimtotal,"Select","Exit");
		}
		else
		{
			ShowPlayerDialog(playerid,DIALOG_MEMBERS,DIALOG_STYLE_TABLIST_HEADERS,"Faction members",aimtotal,"Exit","");
		}
	}
	return 1;
}
CMD:fmembers(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 8)
	{
	    new idd;
	    if(sscanf(params, "i", idd)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/fmembers <FactionID>");
		new aim[5000],
			query[300],
			test[300],
			test1[300],
			test2[300],
			test3[300],
			test4[300],
			aimtotal[5000],
			result[300];
		format(query, sizeof(query), "SELECT * FROM `users` WHERE `users`.`Member` = '%d' ORDER BY `users`.`Rank` DESC LIMIT 50", idd);
		new Cache: membresult = mysql_query(SQL, query);
		for(new i, j = cache_get_row_count (); i != j; ++i)
		{
			cache_get_field_content(i, "name", result); format(test, 300, result);
			cache_get_field_content(i, "Rank", result); format(test1, 300, result);
			cache_get_field_content(i, "lastOn", result); format(test2, 300, result);
			cache_get_field_content(i, "FWarn", result); format(test3, 300, result);
			cache_get_field_content(i, "FactionTime", result); format(test4, 300, result);
			new id = GetPlayerID(test);
			if(id != INVALID_PLAYER_ID)
			{
				format(aim, sizeof(aim), "%s%s - %s\tonline right now\t%s/3 fw\t%s days\n", aim, test1, test, test3, test4);
			}
			else
			{
				format(aim, sizeof(aim), "%s%s - %s\t%s\t%s/3 fw\t%s days\n", aim, test1, test, test2, test3, test4);
			}
		}
		cache_delete(membresult);
		format(aimtotal, sizeof(aimtotal), "Rank - Name\tLast Login\tFW\tDays in faction\n%s",aim);
        if(PlayerInfo[playerid][pAdmin] >= 4)
		{
			ShowPlayerDialog(playerid,DIALOG_MEMBERS,DIALOG_STYLE_TABLIST_HEADERS,"Faction members",aimtotal,"Select","Exit");
		}
		else
		{
			ShowPlayerDialog(playerid,DIALOG_MEMBERS,DIALOG_STYLE_TABLIST_HEADERS,"Faction members",aimtotal,"Exit","");
		}
	}
	return 1;
}

CMD:wanted(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a cop.");
	new iString[512], sendername[MAX_PLAYER_NAME],count,online[50], string[128];
	if(IsPlayerConnected(playerid))
	{
  		foreach(Player, i)
		{
			if(PlayerInfo[i][pWantedLevel] >= 1)
			{
			    GetPlayerName(i, sendername, sizeof(sendername));
				string[0] = 0;
   				Selectat[count][playerid] = i;
   				if(PlayerInfo[i][pSleeping] > 0)
				{
					format(string, sizeof(string), "[W:%d] [%d] [%d] %s (AFK)\n",PlayerInfo[i][pWantedLevel],wantedlost[i]/60,cased[i],sendername);
					count++;
				}
				else if(PlayerInfo[i][pSleeping] == 0)
  				{
					format(string, sizeof(string), "[W:%d] [%d] [%d] %s\n",PlayerInfo[i][pWantedLevel],wantedlost[i]/60,cased[i],sendername);
					count++;
				}
				strcat(iString, string);
			}
		}
		format(online, sizeof(online),"Wanted online: %d",count);
		if(count == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}No wanted online at the moment.");
		ShowPlayerDialog(playerid, DIALOG_WANTEDON, DIALOG_STYLE_LIST, online, iString , "Select", "Close");
	}
	return 1;
}
CMD:nearwanted(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a cop.");
	new iString[512],string[300],sendername[MAX_PLAYER_NAME],count = 0,online[50];
	if(IsPlayerConnected(playerid))
	{
		foreach(Player, i)
		{
			if(PlayerInfo[i][pWantedLevel] >= 1 && ProxDetectorS(200.0, playerid,i))
			{
				GetPlayerName(i, sendername, sizeof(sendername));
				string[0] = 0;
   				Selectat[count][playerid] = i;
   				if(PlayerInfo[i][pSleeping] > 0)
				{
					format(string, sizeof(string), "[W:%d] [%d] [%d] %s (AFK)\n",PlayerInfo[i][pWantedLevel],wantedlost[i]/60,cased[i],sendername);
					count++;
				}
				else if(PlayerInfo[i][pSleeping] == 0)
  				{
					format(string, sizeof(string), "[W:%d] [%d] [%d] %s\n",PlayerInfo[i][pWantedLevel],wantedlost[i]/60,cased[i],sendername);
					count++;
				}
				strcat(iString, string);
			}
		}
	}
	format(online, sizeof(online),"Wanted online: %d",count);
	if(count == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}No wanted neat you at the moment.");
	ShowPlayerDialog(playerid, DIALOG_WANTEDON, DIALOG_STYLE_LIST, online, iString , "Select", "Close");
	return 1;
}
CMD:mechanics(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new iString[512],string[200],sendername[MAX_PLAYER_NAME],count = 0,online[50];
	if(IsPlayerConnected(playerid))
	{
		foreach(Player,i)
		{
			if(PlayerInfo[i][pJob] == 8)
			{
				GetPlayerName(i, sendername, sizeof(sendername));
				string[0] = 0;
				if(PlayerInfo[i][pSleeping] == 1)
				{
					if(PlayerInfo[i][pJob] == 8) format(string, sizeof(string), "Mechanic - %s(%d) - (AFK)\n",sendername,i);
					count++;
				}
				else if(PlayerInfo[i][pSleeping] == 0)
  				{
					if(PlayerInfo[i][pJob] == 8) format(string, sizeof(string), "Mechanic - %s(%d)\n",sendername,i);
					count++;
				}
				strcat(iString,string);
				format(online, sizeof(online),"Mechanics online: %d",count);
			}
		}
		if(count == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}Mechanics not online at the moment.");
		ShowPlayerDialog(playerid, DIALOG_MECHANICS, DIALOG_STYLE_LIST, online, iString , "Close", "");
	}
	return 1;
}
CMD:instructors(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new iString[512],string[200],sendername[MAX_PLAYER_NAME],count = 0,online[50];
	if(IsPlayerConnected(playerid))
	{
		foreach(Player,i)
		{
			if(PlayerInfo[i][pMember] == 12)
			{
				GetPlayerName(i, sendername, sizeof(sendername));
				string[0] = 0;
				if(PlayerInfo[i][pSleeping] == 1)
				{
					if(PlayerInfo[i][pMember] == 12) format(string, sizeof(string), "Instructor - %s(%d) - (AFK) - %d\n",sendername,i,PlayerInfo[i][pPnumber]);
					count++;
				}
				else if(PlayerInfo[i][pSleeping] == 0)
  				{
					if(PlayerInfo[i][pMember] == 12) format(string, sizeof(string), "Instructor - %s(%d) - %d\n",sendername,i,PlayerInfo[i][pPnumber]);
					count++;
				}
				strcat(iString,string);
				format(online, sizeof(online),"Instructors online: %d",count);
			}
		}
		if(count == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}Instructors not online at the moment.");
		ShowPlayerDialog(playerid, DIALOG_INSTRUCTORS, DIALOG_STYLE_LIST, online, iString , "Close", "");
		SCM(playerid,COLOR_WHITE,"Use /requestlicense for take a license.");
	}
	return 1;
}

CMD:collect(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if(CP[playerid] > 0 ||IsATruck(GetPlayerVehicleID(playerid)) || MechanicCallTime[playerid] > 0 || CheckBus[playerid] > 0 || IsAPizza(GetPlayerVehicleID(playerid)) && CarJacker[playerid] < 1)
		{
		    ShowPlayerDialog(playerid, DIALOG_JOBULETES, DIALOG_STYLE_MSGBOX, "Checkpoint Cancel", "Are You Sure You Want To Cancel CHeckpoint ?", "Yeah", "No");
		    return 1;
		}
  		if(PlayerInfo[playerid][pJob] != 10) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a garbage man.");
		new tmpcar = GetPlayerVehicleID(playerid);
		if(IsAGarbageTruck(tmpcar))
  		{
    		if(PlayerInfo[playerid][pGarbageTime] == 0)
   			{
      			if(IsCollectingRubbish[playerid] == 0)
         		{
         		    DisablePlayerCheckpoint(playerid);
          			SendClientMessage(playerid, COLOR_LIGHTBLUE, "INFO: Head to all the check points, then return to the depot for a pay check.");
	           		SetPlayerCheckpoint(playerid, 2255.5676,2520.5898,10.8203, 5.0);
             		IsCollectingRubbish[playerid] = 1;
					PlayerInfo[playerid][pGarbageTime] += 1;
					new str2[128];
					format(str2,sizeof(str2),"~y~Collected Garbages : ~r~0~y~/~r~10");
					PlayerTextDrawSetString(playerid, gunoierr[playerid], str2);
					PlayerTextDrawShow(playerid, gunoierr[playerid]);
					return 1;
     			}
        		else
          		{
            		SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}You are already collecting rubbish.");
            		return 1;
          		}
			}
			else
			{
   				SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Wait until the next garbage run is available.");
			    return 1;
			}
   		}
   		else
     	{
      		SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not in a Garbage Truck.");
        	return 1;
      	}
  	}
   	return 1;
}
CMD:jobduty(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if(PlayerInfo[playerid][pJob] == 8)
		{
			if(JobDuty[playerid] == 1)
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You are now Off Duty from your Car Mechanic Job and will not receive calls anymore.");
			    JobDuty[playerid] = 0;
			    Mechanics -= 1;
			}
		    else
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You are now On Duty with your Car Mechanic Job and will receive calls from people in need.");
			    JobDuty[playerid] = 1;
			    Mechanics += 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "{f03337}You do not have a job.");
			return 1;
		}
	}
	return 1;
}
CMD:buyhouse(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		new Float:oldposx, Float:oldposy, Float:oldposz,string[100],playername[MAX_PLAYER_NAME],stringcasa[128];
		GetPlayerName(playerid, playername, sizeof(playername));
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new h = 1; h < sizeof(HouseInfo); h++)
		{
			if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0)
			{
				if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
				{
					format(string, sizeof(string), "You must be Level %d to purchase this.", HouseInfo[h][hLevel]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					return 1;
				}
				if(PlayerInfo[playerid][pPhousekey] != 999 && strcmp(PlayerInfo[playerid][pNormalName], HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You already own a house, type /sellhouse if you want to buy this one.");
				if(GetPlayerCash(playerid) >= HouseInfo[h][hValue])
				{
                    InHouse[playerid] = h;
					PlayerInfo[playerid][pPhousekey] = h;
     				PlayerInfo[playerid][pRented] = -1;
					HouseInfo[h][hOwned] = 1;
					strmid(HouseInfo[h][hOwner], PlayerInfo[playerid][pNormalName], 0, 25, 255);
					GivePlayerCash(playerid,-HouseInfo[h][hValue]);
					SetPlayerInterior(playerid,HouseInfo[h][hInterior]);
					SetPlayerPosEx(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
					SetPlayerVirtualWorld(playerid,HouseInfo[h][hVirtual]);
					GameTextForPlayer(playerid, "~w~Welcome Home~n~You can exit at any time by moving to this door and press enter", 5000, 3);
					PlayerInfo[playerid][pInt] = HouseInfo[h][hInterior];
					PlayerInfo[playerid][pLocal] = h;
					SendClientMessage(playerid, COLOR_WHITE, "Congratulations, on your new Purchase !");
 					SendClientMessage(playerid, COLOR_WHITE, "Type /help to review the new property help section !");
 					format(stringcasa, sizeof(stringcasa), "{FF0000}[AdmInfo]:{FFFFFF} %s [user:%d]  Bought A House [house:%d] For $%s.",playername,PlayerInfo[playerid][pSQLID],h,FormatNumber(HouseInfo[h][hValue]));
                    ABroadCast(COLOR_YELLOW, stringcasa,1);
                    new var100[256],y,m,d,ho,mi,s,string2[256],string3[256];
					getdate(y,m,d);
					gettime(ho,mi,s);
					format(string2,sizeof(string2),"[%02d-%02d-%d %02d:%02d:%02d] %s",d,m,y,ho,mi,s,stringcasa);
					mysql_real_escape_string(string2, string3);
 					mysql_format(SQL, var100, sizeof(var100), "INSERT INTO playerlogs (`playerid`,`giverid`,`action`,`time`) VALUES ('%d','0','%s','%02d-%02d-%d %02d:%02d:%02d')", PlayerInfo[playerid][pSQLID],string3,d,m,y,ho,mi,s);
					mysql_tquery(SQL,var100,"","");
					Update(playerid,pCashx);
					Update(playerid,pPhousekeyx);
					new str2[256];
					mysql_format(SQL,str2,sizeof(str2),"UPDATE `houses` SET `Owned`='1',`Owner`='%s' WHERE `ID`='%d'",PlayerInfo[playerid][pNormalName],HouseInfo[h][hID]);
					mysql_tquery(SQL,str2,"","");
					OnPropTextdrawUpdate(1,h);
					if(strlen(housestring[InHouse[playerid]]) > 0)
					{
					    StopAudioStreamForPlayer(playerid);
						PlayAudioStreamForPlayer(playerid, housestring[InHouse[playerid]]);
					}
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't have the cash for that.");
					return 1;
				}
			}
		}
	}
	return 1;
}
CMD:renters(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pPhousekey] == 999) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have house or you don't have rentroom.");
 		new count = 0,playername[MAX_PLAYER_NAME],giveplayer[MAX_PLAYER_NAME],string[200];
		GetPlayerName(playerid, playername, sizeof(playername));
		new h = PlayerInfo[playerid][pPhousekey];
		if(PlayerInfo[playerid][pPhousekey] == h)
		{
			foreach(Player,i)
			{
   				if(PlayerInfo[i][pRented] == h)
			    {
		        	GetPlayerName(i,giveplayer,sizeof(giveplayer));
					format(string,sizeof(string),"{FFCC99}* Player %s(%d).",giveplayer,i);
					SendClientMessage(playerid, COLOR_WHITE, string);
			        count++;
				}
			}
		   	if(count == 0)
			{
	    		SendClientMessage(playerid,COLOR_WHITE,"* No renters online.");
			}
			else if(count >= 1)
			{
				format(string, 256, "* There are %d renters online.", count);
				SCM(playerid, COLOR_WHITE, string);
			}
		}
	}
	return 1;
}
CMD:rentroom(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz,playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername, sizeof(playername));
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new h = 1; h < sizeof(HouseInfo); h++)
		{
			if(IsPlayerInRangeOfPoint(playerid,2.0, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 1 &&  HouseInfo[h][hRentabil] == 1)
			{
				if(PlayerInfo[playerid][pPhousekey] != 999 && strcmp(PlayerInfo[playerid][pNormalName], HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0) return SendClientMessage(playerid, COLOR_WHITE, "You already own a house.");
				if(GetPlayerCash(playerid) > HouseInfo[h][hRent])
				{
					PlayerInfo[playerid][pRented] = h;
                    PlayerInfo[playerid][pPhousekey] = h;
					InHouse[playerid] = h;
	    			GivePlayerCash(playerid,-HouseInfo[h][hRent]);
					HouseInfo[h][hTakings] = HouseInfo[h][hTakings]+HouseInfo[h][hRent];
					SetPlayerInterior(playerid,HouseInfo[h][hInterior]);
					SetPlayerPosEx(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
					SetPlayerVirtualWorld(playerid,HouseInfo[h][hVirtual]);
					GameTextForPlayer(playerid, "~w~Welcome Home~n~You can exit at any time by moving to this door and press enter", 5000, 3);
					PlayerInfo[playerid][pInt] = HouseInfo[h][hInterior];
					PlayerInfo[playerid][pLocal] = h;
					SendClientMessage(playerid, COLOR_WHITE, "Congratulations, You can enter and exit here anytime.");
					SendClientMessage(playerid, COLOR_WHITE, "Type /help to review the new property help section.");
					Update(playerid,pCashx);
					new str[128];
					mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Rented`='%d',`House`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pRented],PlayerInfo[playerid][pRented],PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,str,"","");
					SetTimerEx("OnPropTextdrawUpdate", 1000, false, "dd", 1, h);
					if(strlen(housestring[InHouse[playerid]]) > 0)
					{
					    StopAudioStreamForPlayer(playerid);
						PlayAudioStreamForPlayer(playerid, housestring[InHouse[playerid]]);
					}
				 	return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't have the cash for that.");
					return 1;
				}
			}
		}
	}
	return 1;
}
CMD:housename(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pPhousekey],housename[250],string[100];
    	if (PlayerInfo[playerid][pPhousekey] != 999 && strcmp(PlayerInfo[playerid][pNormalName], HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
  		{
			if(sscanf(params, "s[250]", housename)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/housename <Message>");
			new maxc = strlen(housename);
			if(maxc > 20) return SCM(playerid,COLOR_WHITE,"{FFB870}Maximum caracter is 20.");
    		new housename2[250];
    		mysql_real_escape_string(housename, housename2);
			strmid(HouseInfo[bouse][hDiscription], housename2, 0, 64, 255);
   		 	format(string, sizeof(string), "House name set to:{B8DBFF} %s",HouseInfo[bouse][hDiscription]);
    		SendClientMessage(playerid, COLOR_WHITE, string);
			new str[256];
			mysql_format(SQL,str,sizeof(str),"UPDATE houses SET Discription='%s' WHERE ID='%d'",HouseInfo[bouse][hDiscription],PlayerInfo[playerid][pPhousekey]);
			mysql_tquery(SQL,str,"","");
			OnPropTextdrawUpdate(1, bouse);
  		}
    	else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't own a house.");
	}
	return 1;
}
CMD:asellbiz(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
		new house;
		if(sscanf(params, "d", house)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/asellbiz <Biz ID>");
		if (PlayerInfo[playerid][pAdmin] >= 10)
		{
			new ownerh[64],
				field[128],
				str2[256];
			format(field,128,"SELECT `Owner` FROM `bizz` WHERE `ID`='%d'",house);
			mysql_query(SQL,field);
			mysql_store_result();
			if(mysql_retrieve_row())
			{
				mysql_fetch_field_row(ownerh, "Owner");
			}
			mysql_free_result();
			BizzInfo[house][bLocked] = 0;
			BizzInfo[house][bOwned] = 0;
			strmid(BizzInfo[house][bOwner], "AdmBot", 0, strlen("AdmBot"), 255);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~w~You have sold this property", 10000, 3);
			mysql_format(SQL,str2,sizeof(str2),"UPDATE `bizz` SET `Locked`='0',`Owned`='0',`Owner`='AdmBot' WHERE `ID`='%d'",house);
			mysql_tquery(SQL,str2,"","");
    		mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `Bizz`='255' WHERE `name`='%s'",ownerh);
			mysql_tquery(SQL,str2,"","");
			OnPropTextdrawUpdate(2, house);
			return 1;
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{5CAD5C}Error: Your admin level isn't high enough to use this command.");
	}
	return 1;
}
CMD:asellhouse(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
		new house;
		if(sscanf(params, "d", house)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/asellhouse <House ID>");
		if (PlayerInfo[playerid][pAdmin] >= 9)
		{
			new ownerh[64],
				field[128],
				str2[256];
			format(field,128,"SELECT `Owner` FROM `houses` WHERE `ID`='%d'",house);
			mysql_query(SQL,field);
			mysql_store_result();
			if(mysql_retrieve_row())
			{
				mysql_fetch_field_row(ownerh, "Owner");
			}
			mysql_free_result();
			HouseInfo[house][hHel] = 0;
			HouseInfo[house][hArm] = 0;
			HouseInfo[house][hLock] = 0;
			HouseInfo[house][hOwned] = 0;
			strmid(HouseInfo[house][hOwner], "AdmBot", 0, strlen("AdmBot"), 255);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			mysql_format(SQL,str2,sizeof(str2),"UPDATE `houses` SET `Hel`='0',`Arm`='0',`Lockk`='0',`Owned`='0',`Owner`='AdmBot' WHERE `ID`='%d'",house);
			mysql_tquery(SQL,str2,"","");
    		mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `House`='999' WHERE `name`='%s'",ownerh);
			mysql_tquery(SQL,str2,"","");
			OnPropTextdrawUpdate(1, house);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "{5CAD5C}Error: Your admin level isn't high enough to use this command.");
		}
	}
	return 1;
}
CMD:movehouse(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pAdmin] >= 11)
		{
		    if(GetPlayerInterior(playerid) > 0 || GetPlayerVirtualWorld(playerid) > 0) return SendClientMessage(playerid, COLOR_RED, "You can move house only in virtual/interior 0.");
		    new house,Float:pX,Float:pY,Float:pZ,query[256];
		    if(sscanf(params, "d", house)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/movehouse <HouseID>");
		    GetPlayerPos(playerid, pX, pY, pZ);
		    HouseInfo[house][hEntrancex] = pX;
		    HouseInfo[house][hEntrancey] = pY;
		    HouseInfo[house][hEntrancez] = pZ;
		    new i = house;
		    mysql_format(SQL, query, sizeof(query), "UPDATE `houses` SET `Entrancex`='%f',`Entrancey`='%f',`Entrancez`='%f' WHERE `ID`='%d'",HouseInfo[house][hEntrancex],HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez],house);
    		mysql_tquery(SQL,query,"","");
    		format(query,sizeof(query),"You moved house %d to X:%f,Y:%f,Z:%f.",house,pX,pY,pZ);

			OnPropTextdrawUpdate(1, i);
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}

CMD:houseinterior(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pAdmin] >= 11)
		{
		    new house,Float:pX,Float:pY,Float:pZ,query[256];
		    if(sscanf(params, "d", house)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/houseinterior <HouseID>");
		    GetPlayerPos(playerid, pX, pY, pZ);
		    HouseInfo[house][hExitx] = pX;
		    HouseInfo[house][hExity] = pY;
		    HouseInfo[house][hExitz] = pZ;
		    HouseInfo[house][hInterior] = GetPlayerInterior(playerid);
		    HouseInfo[house][hVirtual] = GetPlayerVirtualWorld(playerid);
		    mysql_format(SQL, query, sizeof(query), "UPDATE `houses` SET `Exitx`='%f',`Exity`='%f',`Exitz`='%f',`Interior`='%d',`Virtual`='%d' WHERE `ID`='%d'",HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz],HouseInfo[house][hInterior],HouseInfo[house][hVirtual],house);
    		mysql_tquery(SQL,query,"","");
    		format(query,sizeof(query),"You changed house %d interior.",house);
    		SendClientMessage(playerid, COLOR_YELLOW, query);
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:housewithdraw(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pPhousekey],moneyhouse,string[100];
		if(PlayerInfo[playerid][pPhousekey] != 999 && strcmp(PlayerInfo[playerid][pNormalName], HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			if(sscanf(params, "d",moneyhouse))
			{
				SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/housewithdraw <Amount of Money>");
				format(string, sizeof(string), "{B8FFDB}You Have $%s in your cashbox.", FormatNumber(HouseInfo[bouse][hTakings]));
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
            if(moneyhouse > 10000000) return SCM(playerid,COLOR_WHITE,"{FFB870}Maxim amount of money is $10,000,000.");
			if (moneyhouse >  HouseInfo[bouse][hTakings] || moneyhouse < 1) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You dont have that much.");
			if (!PlayerToPoint(100, playerid,HouseInfo[bouse][hExitx],HouseInfo[bouse][hExity],HouseInfo[bouse][hExitz]))
			{
				SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are to far from your house.");
				return 1;
			}
			else
			{
				GivePlayerCash(playerid,moneyhouse);
				HouseInfo[bouse][hTakings] = HouseInfo[bouse][hTakings]-moneyhouse;
				format(string, sizeof(string), "{B8FFDB}You Have Withdrawn $%s from your cashbox Total: $%s", FormatNumber(moneyhouse),FormatNumber(HouseInfo[bouse][hTakings]));
				Update(playerid, pCashx);
				new str2[184];
				mysql_format(SQL,str2,sizeof(str2),"UPDATE `houses` SET `Takings`='%d' WHERE `ID`='%d'",HouseInfo[bouse][hTakings],HouseInfo[bouse][hID]);
				mysql_tquery(SQL,str2,"","");
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't own a house.");
		}
	}
	return 1;
}
CMD:evict(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pPhousekey],target;
		if (bouse != 999 && strcmp(PlayerInfo[playerid][pNormalName], HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			if(sscanf(params, "u",target)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/evict <Name/Playerid>");
			if (target == playerid) return SendClientMessage(target, COLOR_WHITE, "{FFB870}You cant evict yourself.");
			if(IsPlayerConnected(target))
			{
			    if(target != INVALID_PLAYER_ID)
			    {
					if(PlayerInfo[target][pPhousekey] == PlayerInfo[playerid][pPhousekey])
					{
						SendClientMessage(target, COLOR_WHITE, "You have been evicted.");
						SendClientMessage(playerid, COLOR_WHITE, "Player has been evicted.");
						PlayerInfo[target][pPhousekey] = 999;
						PlayerInfo[target][pRented] = -1;
						new str[100];
						mysql_format(SQL,str,100,"UPDATE users SET `House`='999',`Rented`='-1' WHERE `name`='%s'",PlayerInfo[target][pNormalName]);
						mysql_tquery(SQL,str,"","");
						SetTimerEx("OnPropTextdrawUpdate", 1000, false, "dd", 1, PlayerInfo[playerid][pPhousekey]);
						return 1;
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Player doesn't rent at your House.");
				}
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}You don't own a house.");
	}
	return 1;
}
CMD:evictall(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pPhousekey];
		if (bouse != 999 && strcmp(PlayerInfo[playerid][pNormalName], HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			new str[100];
			mysql_format(SQL,str,100,"UPDATE users SET `House`='999',`Rented`='-1' WHERE `Rented`='%d'",PlayerInfo[playerid][pPhousekey]);
			mysql_tquery(SQL,str,"","");
			foreach(Player, i)
			{
				if(i != playerid)
				{
					if (PlayerInfo[i][pPhousekey] == PlayerInfo[playerid][pPhousekey])
					{
						SendClientMessage(i, COLOR_WHITE, "You have been evicted from your house.");
						PlayerInfo[i][pPhousekey] = 999;
						PlayerInfo[i][pRented] = -1;
						return 1;
					}
				}
			}
			SendClientMessage(playerid, COLOR_WHITE, "Everyone have been evicted.");
			SetTimerEx("OnPropTextdrawUpdate", 1000, false, "dd", 1, PlayerInfo[playerid][pPhousekey]);
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}You don't own a house.");
	}
	return 1;
}
CMD:sellhousetostate(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
		new playername[25],sendername[25];
		GetPlayerName(playerid, playername, sizeof(playername));
		if(PlayerInfo[playerid][pPhousekey] == 999) return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}You don't own a house.");
		if(PlayerInfo[playerid][pPhousekey] != 999 && strcmp(PlayerInfo[playerid][pNormalName], HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			new house = PlayerInfo[playerid][pPhousekey];
			HouseInfo[house][hHel] = 0;
			HouseInfo[house][hArm] = 0;
			HouseInfo[house][hLock] = 0;
			HouseInfo[house][hOwned] = 0;
            PlayerInfo[playerid][pRented] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(HouseInfo[house][hOwner], "AdmBot", 0, strlen("AdmBot"), 255);
			ConsumingMoney[playerid] = 1;
			new cashh = floatround(floatmul(HouseInfo[house][hValue],0.70),floatround_ceil);
			GivePlayerCash(playerid,cashh);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			new string[70];
			format(string, sizeof(string), "~w~Congratulations~n~ You have sold your property for ~n~~g~$%d", cashh);
			GameTextForPlayer(playerid, string, 10000, 3);
			PlayerInfo[playerid][pPhousekey] = 999;
			PlayerInfo[playerid][pRented] = -1;
			if(PlayerInfo[playerid][pLocal] == house)
			{
				SetPlayerInterior(playerid,0);
				SetPlayerPosEx(playerid,HouseInfo[house][hEntrancex],HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]);
				PlayerInfo[playerid][pInt] = 0;
			}
			Update(playerid,pCashx);
			Update(playerid,pRentedx);
			Update(playerid,pPhousekeyx);
			new str2[256];
			mysql_format(SQL,str2,sizeof(str2),"UPDATE `houses` SET `Hel`='0',`Arm`='0',`Lockk`='0',`Owned`='0',`Owner`='AdmBot' WHERE `ID`='%d'",HouseInfo[house][hID]);
			mysql_tquery(SQL,str2,"","");
			OnPropTextdrawUpdate(1,house);
			return 1;
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}You don't own a house.");
	}
	return 1;
}
CMD:sellhouseto(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		new id22 = PlayerInfo[playerid][pPhousekey];
		if(!IsPlayerInRangeOfPoint(playerid, 4,HouseInfo[id22][hEntrancex],HouseInfo[id22][hEntrancey],HouseInfo[id22][hEntrancez])) return SCM(playerid,COLOR_WHITE,"{FFF8C6}You are not near your house.");
		new money,giveplayerid,sendername[25],giveplayer[25],string[150],playername[25],other[128];
		GetPlayerName(playerid, playername, sizeof(playername));
		if(PlayerInfo[playerid][pPhousekey] != 999 && strcmp(PlayerInfo[playerid][pNormalName], HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			if(sscanf(params, "uiS(NULL)",giveplayerid,money,other)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/sellhouseto <Name/Playerid> <Price>");
			if(strcmp(other, "NULL", true)) return SCM(playerid,COLOR_WHITE,"Nu folosi spatii in pret.");
			if(money < 1 || money > 1000000000) return SendClientMessage(playerid, COLOR_GREY, "{FFB870}Price not lower then 1 and not higher then $1,000,000,000.");
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pPhousekey] != 999) return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}This player already own a house or have rent house.");
					if(PlayerInfo[giveplayerid][pLevel] < HouseInfo[PlayerInfo[playerid][pPhousekey]][hLevel]) return SCM(playerid,COLOR_WHITE,"{FFF8C6}This player don't have needed level.");
			        if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}You can't sell House to yourself.");
						if(GetPlayerCash(giveplayerid) < money) return SCM(playerid,COLOR_WHITE,"{FFB870}This player don't have money needed.");
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "{B8FFDB}* You offered to sell your House to %s for $%s.", giveplayer, FormatNumber(money));
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "{B8FFDB}* %s wants to sell his House to you for $%s, (type /accept house %d) to accept.", sendername, FormatNumber(money),playerid);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						HouseID[giveplayerid] = PlayerInfo[playerid][pPhousekey];
						HouseOffer[giveplayerid] = playerid;
						HousePrice[giveplayerid] = money;
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}This player is not near you..");
				}
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}You don't own a House.");
	}
	return 1;
}
CMD:setrent(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pPhousekey],string[25],fee;
		if (bouse != 999 && strcmp(PlayerInfo[playerid][pNormalName], HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			if(sscanf(params, "d",fee)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/setrent <Money>");
			if(fee < 1 || fee > 5000) return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}Minimum rent is $1, maximum rent is $5,000.");
			HouseInfo[bouse][hRent] = fee;
			new str2[64];
			mysql_format(SQL,str2,64,"UPDATE `houses` SET `Rent`='%d' WHERE `ID`='%d'",fee,bouse);
			mysql_tquery(SQL,str2,"","");
			format(string, sizeof(string), "House rent set to $%s.", FormatNumber(HouseInfo[bouse][hRent]));
			SendClientMessage(playerid, COLOR_WHITE, string);
			OnPropTextdrawUpdate(1,PlayerInfo[playerid][pPhousekey]);
			return 1;
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}You don't own a house.");
	}
	return 1;
}
CMD:setrentable(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pPhousekey],test,string[30];
		if (bouse != 999 && strcmp(PlayerInfo[playerid][pNormalName], HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			if(sscanf(params, "d",test)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/setrentable <0(No) - 1(Yes)>");
			if(test < 0 || test > 1) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/setrentable <0(No) - 1(Yes)>");
			HouseInfo[bouse][hRentabil] = test;
			new str2[64];
			mysql_format(SQL,str2,64,"UPDATE `houses` SET `Rentabil`='%d' WHERE `ID`='%d'",test,bouse);
			mysql_tquery(SQL,str2,"","");
			format(string, sizeof(string), "House rentable set to %d.", HouseInfo[bouse][hRentabil]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			OnPropTextdrawUpdate(1,PlayerInfo[playerid][pPhousekey]);
			return 1;
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}You don't own a house.");
	}
	return 1;
}
CMD:hu(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
		new house = PlayerInfo[playerid][pPhousekey],
			playername[25],
			item;
		GetPlayerName(playerid, playername, sizeof(playername));
		if (house != 999 && strcmp(PlayerInfo[playerid][pNormalName], HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			if(sscanf(params, "d",item))
			{
				SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/hu <Item>");
				SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}(1) Health Upgrade $50,000.");
				SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}(2) Armour Upgrade $100,000.");
				return 1;
			}
			switch (item)
			{
				case 1:
				{
					if(GetPlayerCash(playerid) < 50000) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't have the cash to purchase this.");
					HouseInfo[house][hHel] = 1;
					GivePlayerCash(playerid,-50000);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_WHITE, "You can now heal yourself at home, type /heal.");
					new str2[64];
					mysql_format(SQL,str2,64,"UPDATE `houses` SET `Hel`='1' WHERE `ID`='%d'",house);
					mysql_tquery(SQL,str2,"","");
				}
				case 2:
				{
				    if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You can't buy this, you are not a Cop,");
					if(GetPlayerCash(playerid) < 100000) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't have the cash to purchase this.");
					HouseInfo[house][hArm] = 1;
					GivePlayerCash(playerid,-100000);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_WHITE, "You can now get armour at home, Type /heal.");
					new str2[64];
					mysql_format(SQL,str2,64,"UPDATE `houses` SET `Arm`='1' WHERE `ID`='%d'",house);
					mysql_tquery(SQL,str2,"","");
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't own a house.");
	}
	return 1;
}
CMD:aimtest(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >=1)
	{
		if(Spectate[playerid] == -1) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not spectator.");
		new targetplayer = GetPlayerTargetPlayer(Spectate[playerid]);
		if(targetplayer == INVALID_PLAYER_ID) return SCM(playerid,COLOR_WHITE,"{FFB870}There is no player near your target.");
		new Float:x2,Float:y2,Float:z2;
		GetPlayerPos(targetplayer,x2,y2,z2);
		Aimx[targetplayer] = x2;
		Aimy[targetplayer] = y2;
		Aimz[targetplayer] = z2;
		new Float:x,Float:y,Float:z;
  		GetPlayerPos(Spectate[playerid],x,y,z);
	    SetPlayerPosEx(targetplayer, x,y+10,z);
	    SetTimerEx("aimback",3000,0,"d",targetplayer);
	    new string[256],giveplayer[25],executor[25];
	    GetPlayerName(Spectate[playerid], giveplayer, sizeof(giveplayer));
	    GetPlayerName(playerid, executor, sizeof(executor));
	    format(string, sizeof(string), "Admin %s used /aimtest on %s (%d).",executor,giveplayer,Spectate[playerid]);
		ABroadCast(COLOR_YELLOW,string,1);
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}
CMD:fpk(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if (PlayerInfo[playerid][pAdmin] >= 8 || PlayerInfo[playerid][pManagerLideri] == 1)
	{
		new id,string[256],giveplayer[30],sendername[MAX_PLAYER_NAME],reason[64],fpunish;
		if(sscanf(params, "uds[64]", id, fpunish, reason)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/fpk <Name/Playerid> <FPunish> <Reason>");
 		GetPlayerName(id, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(id))
		{
			if(id != INVALID_PLAYER_ID)
    		{
    		    new string2[500],query[500];
    		    if(fpunish > 0)
    		    {
					format(string, sizeof(string), "You've Been Kicked By %s From Faction %s (Rank %d) After %d Days With %d FP | Reason : %s.",sendername,NameOfFactions(PlayerInfo[id][pMember]),PlayerInfo[id][pRank],PlayerInfo[id][pFactionTime],fpunish,reason);
					mysql_format(SQL, query, sizeof(query), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[id][pSQLID],string);
		        	mysql_tquery(SQL,query,"","");
					format(string, sizeof(string), "%s Was Kicked By Admin %s From Faction %s (rank %d) After %d days With %d FP | Reason : %s.",giveplayer,sendername,NameOfFactions(PlayerInfo[id][pMember]),PlayerInfo[id][pRank],PlayerInfo[id][pFactionTime],fpunish,reason);
					ABroadCast(COLOR_LIGHTRED,string,1);
					format(string2, sizeof(string2), "%s was uninvited by Admin %s from faction %s (rank %d) after %d days, without FP. Reason: %s.", giveplayer,sendername,DynamicFactions[PlayerInfo[id][pMember]][fName],PlayerInfo[id][pRank],PlayerInfo[id][pFactionTime],reason);
					mysql_format(SQL, query, sizeof(query), "INSERT INTO faction_logs (`text`,`player`,`leader`) VALUES ('%s','%d','%d')", string2, PlayerInfo[id][pSQLID], PlayerInfo[playerid][pSQLID]);
					mysql_tquery(SQL,query,"","");
					PlayerInfo[id][pFpunish] = fpunish;
				}
				else if(fpunish < 1)
				{
					format(string, sizeof(string), "You've Been Kicked By %s From Faction %s (rank %d) After %d Days Without FP | Reason : %s.",sendername,NameOfFactions(PlayerInfo[id][pMember]),PlayerInfo[id][pRank],PlayerInfo[id][pFactionTime],reason);
					mysql_format(SQL, query, sizeof(query), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[id][pSQLID],string);
		        	mysql_tquery(SQL,query,"","");
					format(string, sizeof(string), "%s Was Kicked By Admin %s From Faction %s (rank %d) After %d days Without FP | Reason : %s.",giveplayer,sendername,NameOfFactions(PlayerInfo[id][pMember]),PlayerInfo[id][pRank],PlayerInfo[id][pFactionTime],reason);
					ABroadCast(COLOR_LIGHTRED,string,1);
					format(string2, sizeof(string2), "%s was uninvited by Admin %s from faction %s (rank %d) after %d days, without FP. Reason: %s.", giveplayer,sendername,DynamicFactions[PlayerInfo[id][pMember]][fName],PlayerInfo[id][pRank],PlayerInfo[id][pFactionTime],reason);
					mysql_format(SQL, query, sizeof(query), "INSERT INTO faction_logs (`text`,`player`,`leader`) VALUES ('%s','%d','%d')", string2, PlayerInfo[id][pSQLID], PlayerInfo[playerid][pSQLID]);
					mysql_tquery(SQL,query,"","");
					PlayerInfo[id][pFpunish] = 0;
				}
    			PlayerInfo[id][pMember] = 0;
                PlayerInfo[id][pLeader] = 0;
                PlayerInfo[id][pRank] = 0;
				PlayerInfo[id][pFACWarns] = 0;
				PlayerInfo[id][pFactionTime] = 0;
				PlayerInfo[id][pModel] = 250;
				PlayerInfo[playerid][pCommands] = 0;
				Update(playerid,pCommandsx);
				new str[256];
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='0' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
				gTeam[id] = 3;
				PlayerInfo[id][pTeam] = 3;
				OnDuty[id] = 0;
				tazer[id] = 0;
				SetPlayerArmourEx(id, 0);
    			SetPlayerSkin(id,PlayerInfo[id][pModel]);
				SpawnPlayer(id);
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Member`='0',`Leader`='0',`Rank`='0',`Model`='250',`FWarn`='0',`FPunish`='%d',`Team`='3', `FactionTime`='0',`ALeader`='0' WHERE `name`='%s'",PlayerInfo[id][pFpunish],PlayerInfo[id][pNormalName]);
				mysql_tquery(SQL,str,"","");
				return 1;
			}
		}
		else
 		{
             SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:last(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
		    new id,list[64],test[300],test2[300],result[300],string[2500],query[500],name[30],name2[30],reasonn,gunname[50],playeridd,actionid,reason[300],actiontime;
		    if(sscanf(params, "us[64]", id,list)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/last <Name/Playerid> <kills/chat/actions/punish(warns, bans, jails)/kicks>");
		    if(strcmp(list,"kills",true) == 0)
			{
			    format(query, sizeof(query), "SELECT * FROM `kill_logs` WHERE `playerid`='%d' OR `killerid`='%d' ORDER BY `ID` DESC LIMIT 10", PlayerInfo[id][pSQLID], PlayerInfo[id][pSQLID]);
				new Cache: resultt = mysql_query(SQL, query);
				for(new i, j = cache_get_row_count (); i != j; ++i)
				{
				    cache_get_field_content(i, "time", result); format(test, 300, result);
				    reasonn						= cache_get_field_content_int(i, "reason");
				    cache_get_field_content(i, "playername", result); format(name2, 30, result);
				    cache_get_field_content(i, "killername", result); format(name, 30, result);
				 	GetWeaponNameEx(reasonn,gunname,sizeof(gunname));
				    format(string,sizeof(string),"%s[%s] %s was killed by %s, reason: %s.\n",string,test,name2,name,gunname);
				}
				cache_delete(resultt);
				ShowPlayerDialog(playerid,DIALOG_LASTS,DIALOG_STYLE_MSGBOX,"kills",string,"Close","");
			}
			if(strcmp(list,"chat",true) == 0)
			{
			    format(query, sizeof(query), "SELECT * FROM `chat_logs` WHERE `playerid`='%d' ORDER BY `ID` DESC LIMIT 10", PlayerInfo[id][pSQLID]);
				new Cache: resultt = mysql_query(SQL, query);
				for(new i, j = cache_get_row_count (); i != j; ++i)
				{
				    cache_get_field_content(i, "time", result); format(test, 300, result);
				    cache_get_field_content(i, "text", result); format(test2, 300, result);
				    playeridd					= cache_get_field_content_int(i, "playerid");
				    GetPlayerName(id, name, sizeof(name));
				    format(string,sizeof(string),"%s[%s] %s[user:%d]: %s\n",string,test,name,playeridd,test2);
				}
				cache_delete(resultt);
				ShowPlayerDialog(playerid,DIALOG_LASTS,DIALOG_STYLE_MSGBOX,"chat",string,"Close","");
			}
			if(strcmp(list,"actions",true) == 0)
			{
			    format(query, sizeof(query), "SELECT * FROM `playerlogs` WHERE `playerid`='%d' ORDER BY `ID` DESC LIMIT 10", PlayerInfo[id][pSQLID]);
				new Cache: resultt = mysql_query(SQL, query);
				for(new i, j = cache_get_row_count (); i != j; ++i)
				{
				    cache_get_field_content(i, "action", result); format(test, 300, result);
				    format(string,sizeof(string),"%s%s\n",string,test);
				}
				cache_delete(resultt);
				ShowPlayerDialog(playerid,DIALOG_LASTS,DIALOG_STYLE_MSGBOX,"actions",string,"Close","");
			}
			if(strcmp(list,"punish",true) == 0)
			{
			    format(query, sizeof(query), "SELECT * FROM `punishlogs` WHERE `playerid`='%d' ORDER BY `ID` DESC LIMIT 10", PlayerInfo[id][pSQLID]);
				new Cache: resultt = mysql_query(SQL, query);
				for(new i, j = cache_get_row_count (); i != j; ++i)
				{
				    cache_get_field_content(i, "time", result); format(test, 300, result);
				    cache_get_field_content(i, "reason", result); format(reason, 300, result);
				    actionid                    = cache_get_field_content_int(i, "actionid");
				    actiontime                  = cache_get_field_content_int(i, "actiontime");
					cache_get_field_content(i, "playername", result); format(name, 30, result);
					cache_get_field_content(i, "givername", result); format(name2, 30, result);
					if(actionid == 1)
					{
				    	format(string,sizeof(string),"%s[%s] Ban: %s has been permanent banned by %s, reason: %s.\n",string,test,name,name2,reason);
					}
					else if(actionid == 2)
					{
				    	format(string,sizeof(string),"%s[%s] Ban: %s has been banned by %s for %d days, reason: %s.\n",string,test,name,name2,actiontime,reason);
					}
					else if(actionid == 3)
					{
				    	format(string,sizeof(string),"%s[%s] IP Ban: %s has been permanent banned by %s, reason: %s.\n",string,test,name,name2,reason);
					}
					else if(actionid == 4)
					{
				    	format(string,sizeof(string),"%s[%s] IP Ban: %s has been banned by %s for %d days, reason: %s.\n",string,test,name,name2,actiontime,reason);
					}
					else if(actionid == 5)
					{
				    	format(string,sizeof(string),"%s[%s] Warn: %s received a warn from admin %s, reason: %s.\n",string,test,name,name2,reason);
					}
					else if(actionid == 6)
					{
				    	format(string,sizeof(string),"%s[%s] Jail: %s was jailed by %s for %d minutes, reason: %s.\n",string,test,name,name2,actiontime,reason);
					}
					else if(actionid == 7)
					{
					    format(string,sizeof(string),"%s[%s] Mute: %s has been muted by %s for %d minutes, reason: %s.\n",string,test,name,name2,actiontime,reason);
					}
				}
				cache_delete(resultt);
				ShowPlayerDialog(playerid,DIALOG_LASTS,DIALOG_STYLE_MSGBOX,"punish",string,"Close","");
			}
			if(strcmp(list,"kicks",true) == 0)
			{
			    format(query, sizeof(query), "SELECT * FROM `kicklogs` WHERE `playerid`='%d' ORDER BY `ID` DESC LIMIT 10", PlayerInfo[id][pSQLID]);
				new Cache: resultt = mysql_query(SQL, query);
				for(new i, j = cache_get_row_count (); i != j; ++i)
				{
				    cache_get_field_content(i, "time", result); format(test, 300, result);
				    cache_get_field_content(i, "playername", result); format(name, 30, result);
				    cache_get_field_content(i, "givername", result); format(name2, 30, result);
				    format(string,sizeof(string),"%s[%s] Kick: %s has been kicked by %s, reason: %s.\n",string,test,name,name2,reason);
				}
				cache_delete(resultt);
				ShowPlayerDialog(playerid,DIALOG_LASTS,DIALOG_STYLE_MSGBOX,"kicks",string,"Close","");
			}
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:lp(playerid, params[])
{
	return cmd_last(playerid, params);
}
/*
CMD:banii(playerid, params[]) // Nu e comanda ascunsa , e comanda ca sa se poata folosi chiar daca acel player are NOTP ON si fara /setacces.
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			new id,reason[128],string[200],giveplayer[30],sendername[30],days,str[1400],playerip[16],year,month,day,hour,minute,second,time;
			if(sscanf(params, "uds[128]", id,days,reason)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/ban <Name/Playerid> <days(0=permanent)> <reason>");
			if(days < 0) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/bani <Name/Playerid> <days(0=permanent)> <reason>");
			if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
			        getdate(year, month, day);
			        gettime(hour, minute, second);
       				GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerIp(id, playerip, sizeof(playerip));
					if(PlayerInfo[id][pAdmin] >= PlayerInfo[playerid][pAdmin]) return SendClientMessage(playerid, COLOR_GREY, "You Can't Use This Command For High Level Admin");
					if(days == 0)
					{
					    format(string,sizeof(string),"[AdmCmd]: Admin %s i-a blocat contul permanent lui %s , motiv: %s",sendername,giveplayer,reason);
					    SendClientMessageToAll(COLOR_LIGHTRED, string);
					    mysql_format(SQL,str,sizeof(str),"INSERT INTO bans (PlayerName, AdminName, Reason, IP, Days, IPBan, Permanent, Active, Time) VALUES('%s', '%s', '%s', '%s', 0, 0, 1, 1, 0)",
						PlayerInfo[id][pNormalName],PlayerInfo[playerid][pNormalName],reason,playerip);
						mysql_tquery(SQL,str,"","");
						new var100[256];
	    				mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`actiontime`,`reason`,`playername`,`givername`) VALUES ('%d','%d','1','0','%s','%s','%s')", PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],reason,giveplayer,sendername);
						mysql_tquery(SQL,var100,"","");
						KickEx(id);
					}
					if(days > 0)
					{
						time = gettime() + (days*86400);
					    format(string,sizeof(string),"AdmBot: Admin %s i-a blocat contul lui %s pentru %d zile , motiv: %s",sendername,giveplayer,days,reason);
					    SendClientMessageToAll(COLOR_LIGHTRED, string);
					    mysql_format(SQL,str,sizeof(str),"INSERT INTO bans (PlayerName, AdminName, Reason, IP, Days, IPBan, Permanent, Active, Time) VALUES('%s', '%s', '%s', '%s', %d, 0, 0, 1, %d)",
						PlayerInfo[id][pNormalName],PlayerInfo[playerid][pNormalName],reason,playerip,days,time);
						mysql_tquery(SQL,str,"","");
						new var100[256];
	    				mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`actiontime`,`reason`,`playername`,`givername`) VALUES ('%d','%d','2','%d','%s','%s','%s')", PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],days,reason,giveplayer,sendername);
						mysql_tquery(SQL,var100,"","");
						KickEx(id);
					}
				}
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
*/
CMD:ban(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
    //if(UseCmdTimer[playerid] == 0)return SCM(playerid, -1, "You Can Use The /Ban Command Every 10 Seconds");
 	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			new id,reason[128],string[200],giveplayer[30],sendername[30],days,str[1400],playerip[16],year,month,day,hour,minute,second,time;
			if(sscanf(params, "uds[128]", id,days,reason)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/ban <Name/Playerid> <days(0=permanent)> <reason>");
			if(days < 0) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/ban <Name/Playerid> <days(0=permanent)> <reason>");
			if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
				    if(PlayerInfo[id][NoTp] == 1)return SendClientMessage(playerid,COLOR_RED,"You Can't Use /slap /goto /gethere /spec /ban On This Player");
			        getdate(year, month, day);
			        gettime(hour, minute, second);
       				GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerIp(id, playerip, sizeof(playerip));
					if(PlayerInfo[id][pAdmin] >= PlayerInfo[playerid][pAdmin]) return SendClientMessage(playerid, COLOR_GREY, "You can not use this command someone with a higher degree than the other.");
					if(days == 0)
					{
					    format(string,sizeof(string),"[AdmCmd]: Admin %s Banned %s Permantly | Reason : %s",sendername,giveplayer,reason);
					    SendClientMessageToAll(COLOR_LIGHTRED, string);
					    mysql_format(SQL,str,sizeof(str),"INSERT INTO bans (PlayerName, AdminName, Reason, IP, Days, IPBan, Permanent, Active, Time) VALUES('%s', '%s', '%s', '%s', 0, 0, 1, 1, 0)",
						PlayerInfo[id][pNormalName],PlayerInfo[playerid][pNormalName],reason,playerip);
						mysql_tquery(SQL,str,"","");
						new var100[256];
	    				mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`actiontime`,`reason`,`playername`,`givername`) VALUES ('%d','%d','1','0','%s','%s','%s')", PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],reason,giveplayer,sendername);
						mysql_tquery(SQL,var100,"","");
						KickEx(id);
					}
					if(days > 0)
					{
						time = gettime() + (days*86400);
					    format(string,sizeof(string),"[AdmBot]: Admin %s Banned %s For %d Days | Reason : %s",sendername,giveplayer,days,reason);
					    SendClientMessageToAll(COLOR_LIGHTRED, string);
					    mysql_format(SQL,str,sizeof(str),"INSERT INTO bans (PlayerName, AdminName, Reason, IP, Days, IPBan, Permanent, Active, Time) VALUES('%s', '%s', '%s', '%s', %d, 0, 0, 1, %d)",
						PlayerInfo[id][pNormalName],PlayerInfo[playerid][pNormalName],reason,playerip,days,time);
						mysql_tquery(SQL,str,"","");
						new var100[256];
	    				mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`actiontime`,`reason`,`playername`,`givername`) VALUES ('%d','%d','2','%d','%s','%s','%s')", PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],days,reason,giveplayer,sendername);
						mysql_tquery(SQL,var100,"","");
						KickEx(id);
						UseCmdTimer[playerid] = 0;
                        SetTimerEx("unmutecommand", 10000, false, "i", playerid);
					}
				}
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:banoff(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			new id[30],reason[128],string[200],sendername[30],days,str[1400],year,month,day,hour,minute,second,time,cont,qstr[500],playeridd,result[500];
			if(sscanf(params, "s[30]ds[128]", id,days,reason)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/banoff <Name> <days(0=permanent)> <reason>");
			if(days < 0) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/banoff <Name> <days(0=permanent)> <reason>");
            cont = MySQLCheckAccount(id);
        	if(cont == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}This name does not exist.");
	        getdate(year, month, day);
	        gettime(hour, minute, second);
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        format(qstr,sizeof(qstr),"SELECT * FROM bans WHERE `PlayerName`='%s' AND `Active`='1'",id);
    		new Cache: banuri = mysql_query(SQL,qstr);
    		if(cache_get_row_count() > 0)
    		{
    		    SendClientMessage(playerid, COLOR_LIGHTRED, "This player is already banned.");
			}
			else
			{
				format(qstr, sizeof(qstr), "SELECT `id` FROM users WHERE `name` = '%s'", id);
				mysql_store_result();
				mysql_query(SQL,qstr);
				if(mysql_retrieve_row())
				{
					mysql_fetch_field_row(result, "id"); playeridd = strval( result );
				}
				mysql_free_result();
				if(days == 0)
				{
					format(string,sizeof(string),"Offline: Ban: %s has been permanent banned by %s, reason: %s.",id,sendername,reason);
   					SendClientMessageToAll(COLOR_LIGHTRED, string);
					mysql_format(SQL,str,sizeof(str),"INSERT INTO bans (PlayerName, AdminName, Reason, IP, Days, IPBan, Permanent, Active, Time) VALUES('%s', '%s', '%s', '0', 0, 0, 1, 1, 0)",
					id,PlayerInfo[playerid][pNormalName],reason);
					mysql_tquery(SQL,str,"","");
					new var100[256];
					mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`actiontime`,`reason`,`playername`,`givername`) VALUES ('%d','%d','1','0','%s','%s','%s')", playeridd,PlayerInfo[playerid][pSQLID],reason,id,sendername);
					mysql_tquery(SQL,var100,"","");
				}
				if(days > 0)
				{
					time = gettime() + (days*86400);
					format(string,sizeof(string),"Offline: Ban: %s has been banned by %s for %d days, reason: %s.",id,sendername,days,reason);
   					SendClientMessageToAll(COLOR_LIGHTRED, string);
					mysql_format(SQL,str,sizeof(str),"INSERT INTO bans (PlayerName, AdminName, Reason, IP, Days, IPBan, Permanent, Active, Time) VALUES('%s', '%s', '%s', '0', %d, 0, 0, 1, %d)",
					id,PlayerInfo[playerid][pNormalName],reason,days,time);
					mysql_tquery(SQL,str,"","");
					new var100[256];
					mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`actiontime`,`reason`,`playername`,`givername`) VALUES ('%d','%d','2','%d','%s','%s','%s')", playeridd,PlayerInfo[playerid][pSQLID],days,reason,id,sendername);
					mysql_tquery(SQL,var100,"","");
				}
			}
			cache_delete(banuri);
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:banip(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
 		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			new id,reason[128],string[200],giveplayer[30],sendername[30],days,str[1400],playerip[16],year,month,day,hour,minute,second,time;
			if(sscanf(params, "uds[128]", id,days,reason)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/banip <Name/Playerid> <days(0=permanent)> <reason>");
			if(days < 0) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/banip <Name/Playerid> <days(0=permanent)> <reason>");
			if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
			        getdate(year, month, day);
			        gettime(hour, minute, second);
       				GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerIp(id, playerip, sizeof(playerip));
					if(PlayerInfo[id][pAdmin] >= PlayerInfo[playerid][pAdmin]) return SendClientMessage(playerid, COLOR_GREY, "You Can't Use This Command For High Level Admin");
					if(days == 0)
					{
					    format(string,sizeof(string),"IP Ban: %s has been permanent banned by %s, reason: %s.",giveplayer,sendername,reason);
					    SendClientMessageToAll(COLOR_LIGHTRED, string);
					    mysql_format(SQL,str,sizeof(str),"INSERT INTO bans (PlayerName, AdminName, Reason, IP, Days, IPBan, Permanent, Active, Time) VALUES('%s', '%s', '%s', '%s', 0, 1, 1, 1, 0)",
						PlayerInfo[id][pNormalName],PlayerInfo[playerid][pNormalName],reason,playerip);
						mysql_tquery(SQL,str,"","");
						new var100[256];
	    				mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`actiontime`,`playername`,`givername`) VALUES ('%d','%d','3','0','%s','%s')", PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],giveplayer,sendername);
						mysql_tquery(SQL,var100,"","");
						KickEx(id);
					}
					if(days > 0)
					{
					    time = gettime() + (days*86400);
					    format(string,sizeof(string),"IP Ban: %s has been banned by %s for %d days, reason: %s.",giveplayer,sendername,days,reason);
					    SendClientMessageToAll(COLOR_LIGHTRED, string);
					    mysql_format(SQL,str,sizeof(str),"INSERT INTO bans (PlayerName, AdminName, Reason, IP, Days, IPBan, Permanent, Active, Time) VALUES('%s', '%s', '%s', '%s', %d, 1, 0, 1, %d)",
						PlayerInfo[id][pNormalName],PlayerInfo[playerid][pNormalName],reason,playerip,days,time);
						mysql_tquery(SQL,str,"","");
						new var100[256];
	    				mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`actiontime`,`playername`,`givername`) VALUES ('%d','%d','4','%d','%s','%s')", PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],days,giveplayer,sendername);
						mysql_tquery(SQL,var100,"","");
						KickEx(id);
					}
				}
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:banipp(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			new ip[16],reason[128],string[200],sendername[30],str[1400],year,month,day,hour,minute,second,playerip[16],qstr[500];
			if(sscanf(params, "s[16]s[128]", ip, reason)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/banipp <IP> <reason>");
			////if(PlayerInfo[id][pAdmin] >= PlayerInfo[playerid][pAdmin] && PlayerInfo[playerid][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GREY, "You Can't Use This Command For High Level Admin");
   			getdate(year, month, day);
      		gettime(hour, minute, second);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(qstr,sizeof(qstr),"SELECT * FROM bans WHERE `IP`='%s' AND `Active`='1'",ip);
    		new Cache: banuri = mysql_query(SQL,qstr);
    		if(cache_get_row_count() > 0)
    		{
    		    SendClientMessage(playerid, COLOR_LIGHTRED, "This IP is already banned.");
			}
			else
			{
				format(string,sizeof(string),"[AdmCmd]: %s has banned IP %s, reason: %s.",sendername,ip,reason);
    			SendClientMessageToAll(COLOR_LIGHTRED, string);
			    mysql_format(SQL,str,sizeof(str),"INSERT INTO bans (AdminName, Reason, IP, Year, Month, Day, Hour, Minute, Second, Days, IPBan, Permanent, Active, Time) VALUES('%s', '%s', '%s', %d, %d, %d, %d, %d, %d, 0, 1, 1, 1, 0)",
				PlayerInfo[playerid][pNormalName],reason,ip,year,month,day,hour,minute,second);
				mysql_tquery(SQL,str,"","");
				foreach(Player, i)
				{
				    GetPlayerIp(i, playerip, sizeof(playerip));
     				if(!strcmp(ip, playerip, true))
     				{
						KickEx(i);
					}
				}
			}
			cache_delete(banuri);
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:unban(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if(PlayerInfo[playerid][pAdmin] >= 11)
		{
		    new id[30],cont,str1[256],string[128],sendername[30],qstr[256];
			if(sscanf(params, "s[30]", id)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/unban <Name>");
			cont = MySQLCheckAccount(id);
	        if(cont == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}This name does not exist.");
	        format(qstr,sizeof(qstr),"SELECT * FROM bans WHERE `PlayerName`='%s' AND `Active`='1'",id);
    		new Cache: banuri = mysql_query(SQL,qstr);
    		if(cache_get_row_count() > 0)
    		{
    		    GetPlayerName(playerid, sendername, sizeof(sendername));
    		    format(string,sizeof(string),"[AdmCmd]: %s has unbanned user %s.",sendername,id);
    		    ABroadCast(COLOR_RED2, string,1);
			    mysql_format(SQL,str1,sizeof(str1),"UPDATE bans SET `Active`='0' WHERE `PlayerName`='%s'",id);
				mysql_tquery(SQL,str1,"","");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "This player is not banned.");
			}
			cache_delete(banuri);
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:unbanip(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if(PlayerInfo[playerid][pAdmin] >= 11)
		{
		    new id,query[500],ip[16],str1[256],string[256],sendername[30],qstr[256];
			if(sscanf(params, "s[16]", ip)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/unbanip <IP>");
	        format(qstr,sizeof(qstr),"SELECT * FROM bans WHERE `IP`='%s' AND `Active`='1'",ip);
    		new Cache: banuri = mysql_query(SQL,qstr);
    		if(cache_get_row_count() > 0)
    		{
    		    GetPlayerName(playerid, sendername, sizeof(sendername));
    		    format(string,sizeof(string),"[AdmCmd]: %s has unbanned IP %s.",sendername,ip);
    		    ABroadCast(COLOR_RED2, string,1);
			    mysql_format(SQL,str1,sizeof(str1),"UPDATE bans SET `Active`='0' WHERE `IP`='%s'",ip);
				mysql_tquery(SQL,str1,"","");
				format(string,sizeof(string),"You Have Been Unbanned By %s [IP]",sendername);
				mysql_format(SQL, query, sizeof(query), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[id][pSQLID],string);
   	            mysql_tquery(SQL,query,"","");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "This IP is not banned.");
			}
			cache_delete(banuri);
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:getip(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new id,playersip[256],giveplayer[30],string[256];
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		if(sscanf(params, "u", id)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/getip <Name/Playerid>");
		{
			GetPlayerName(id, giveplayer, sizeof(giveplayer));
			if(id != INVALID_PLAYER_ID)
	        {
				GetPlayerIp(id,playersip,sizeof(playersip));
				format(string, sizeof(string), "Player: %s (%d) IP: %s",giveplayer,id,playersip);
				SendClientMessage(playerid,COLOR_GRAD2,string);
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}
CMD:agivemats(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if (PlayerInfo[playerid][pAdmin] >= 11)
	{
	   	if(IsPlayerConnected(playerid))
    	{
			new string[256],id,mats,giveplayer[30],sendername[MAX_PLAYER_NAME];
			if(sscanf(params, "ui", id,mats)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/agivemats <Name/Playerid> <Mats>");
			GetPlayerName(id, giveplayer, sizeof(giveplayer));
   			{
		    	PlayerInfo[id][pMats] += mats;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Admin %s has given to %s %d materials.", sendername,giveplayer,mats);
				ABroadCast(COLOR_RED,string,1);
				new str[128];
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Mats`='%d' WHERE `name`='%s'",PlayerInfo[id][pMats],PlayerInfo[id][pNormalName]);
				mysql_tquery(SQL,str,"","");
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:setage(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 10)
		{
			new string[256],id,age,giveplayer[30],sendername[MAX_PLAYER_NAME];
			if(sscanf(params, "ui", id,age)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/setage <Name/Playerid> <age>");
			GetPlayerName(id, giveplayer, sizeof(giveplayer));
			{
			    if(IsPlayerConnected(id))
			    {
			        if(id != INVALID_PLAYER_ID)
			        {
						PlayerInfo[id][pAge] = age;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Admin %s set %s's age to: %d.", sendername,giveplayer,age);
						ABroadCast(COLOR_YELLOW,string,1);
						new str[128];
						mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Age`='%d' WHERE `name`='%s'",PlayerInfo[id][pAge],PlayerInfo[id][pNormalName]);
						mysql_tquery(SQL,str,"","");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}
CMD:spec(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1 || AdminDuty[playerid] == 1)
		{
			new id,giveplayer[25],string[256],sendername[25];
			if(sscanf(params, "u", id)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/spec <Name/Playerid>");
			{
				if(IsPlayerConnected(id))
				{
				    if(id != INVALID_PLAYER_ID)
				    {
						//if(PlayerInfo[id][pAdmin] >= PlayerInfo[playerid][pAdmin] && PlayerInfo[playerid][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GREY, "You Can't Use This Command For High Level Admin");
				        if(PlayerInfo[id][NoTp] == 1)return SendClientMessage(playerid,COLOR_RED,"You Can't Use /slap /goto /gethere /spec /ban For Him|Her");
						if(Spectate[playerid] == -1)
						{
							BeforeSpectate[playerid][pState] = GetPlayerState(playerid);
							BeforeSpectate[playerid][pWorld] = GetPlayerVirtualWorld(playerid);
							BeforeSpectate[playerid][pInt] = GetPlayerInterior(playerid);
							BeforeSpectate[playerid][pSpectating] = true;
							new Float: x, Float: y, Float: z;
							GetPlayerPos(playerid, x, y, z);

							if(!IsPlayerInAnyVehicle(playerid))
							{
								BeforeSpectate[playerid][pOldPos][0] = x;
								BeforeSpectate[playerid][pOldPos][1] = y;
								BeforeSpectate[playerid][pOldPos][2] = z;
							}
							else
								BeforeSpectate[playerid][pInVehicle] = GetPlayerVehicleID(playerid);
						}
				        Spectate[playerid] = id;
						new Float:health;
						GetPlayerHealthEx(Spectate[playerid], health);
						GetPlayerName(Spectate[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(reportreason[id] == 0)
						{
							format(string, sizeof(string), "Admin %s is now spectating %s.",sendername,giveplayer);
						}
						else if(reportreason[id] == 1)
						{
							format(string, sizeof(string), "Admin %s is now spectating %s (reported for being stuck).",sendername,giveplayer);
						}
						else if(reportreason[id] == 2)
						{
							format(string, sizeof(string), "Admin %s is now spectating %s (reported for DM).",sendername,giveplayer);
						}
						else if(reportreason[id] == 3)
						{
							format(string, sizeof(string), "Admin %s is now spectating %s (reported for cheats).",sendername,giveplayer);
						}
						ReportTime[id] = 0;
						format(reporttext[id], 30, "NULL");
						format(cheattext[id], 30, "NULL");
						reportcheater[id] = -1;
						reportreason[id] = 0;
						if(playerreported[id] != -1)
						{
							reportreason[playerreported[id]] = 0;
						}
						playerreported[id] = -1;
						KillTimer(timerreport[id]);
						ABroadCast(COLOR_YELLOW,string,1);
						format(string, sizeof(string), "(%d) %s | Level: %d | Health: %.0f | AFK: %d | Duty: %d | Ping: %d",Spectate[playerid],giveplayer,PlayerInfo[Spectate[playerid]][pLevel],health,IsPlayerAFK[Spectate[playerid]],OnDuty[Spectate[playerid]],GetPlayerPing(Spectate[playerid]));
						SendClientMessage(playerid, COLOR_DARKPINK, string);
						TogglePlayerSpectating(playerid, 1);
						if(IsPlayerInAnyVehicle(Spectate[playerid]))
						{
						    new carid = GetPlayerVehicleID(Spectate[playerid]);
						    PlayerSpectateVehicle(playerid, carid);
							SpectateState[id] = 2;
						}
						else
						{
						    PlayerSpectatePlayer(playerid, Spectate[playerid]);
							SpectateState[id] = 1;
						}
						PlayerTextDrawSetString(playerid, TextDrawSpec[playerid][1], "LOADING...");
						PlayerTextDrawShow(playerid, TextDrawSpec[playerid][1]);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
				}
			}
   		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
			return 1;
		}
	}
	return 1;
}
CMD:specoff(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
		{
			if(Spectate[playerid] != -1)
			{
				TogglePlayerControllable(playerid, 1);
				TogglePlayerSpectating(playerid, 0);
				SetPlayerInterior(playerid,Unspec[playerid][sPint]);
				PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
				PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
				Unspec[playerid][sLocal] = -1;
				gTeam[playerid] = PlayerInfo[playerid][pTeam];
				SetPlayerToTeamColor(playerid);
	        	PlayerTextDrawHide(playerid, TextDrawSpec[playerid][1]);
		    	PlayerTextDrawHide(playerid, TextDrawSpec[playerid][2]);
				PlayerTextDrawHide(playerid, TextDrawSpec[playerid][3]);
		    	PlayerTextDrawHide(playerid, TextDrawSpec[playerid][4]);
		    	PlayerTextDrawHide(playerid, TextDrawSpec[playerid][5]);
				Spectate[playerid] = -1;
				return 1;
			}
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
/*CMD:quest(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new remain = 50,str[128];
		for(new qs=0; qs<50; qs++)
		{
			if(QEvent[playerid][qs] == 1)
			{
				remain--;
			}
		}
		if(PlayerInfo[playerid][pLanguage] == 2)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Quest-ul consta in colectarea a 50 de inimi (25 in Los Santos si 25 in Las Venturas).");
			SendClientMessage(playerid, COLOR_YELLOW, "Dupa ce colectati toate inimile puteti primi 1.5-5kk$, 5-15 rp si daca aveti noroc 10-40 puncte premium.");
			SendClientMessage(playerid, COLOR_YELLOW, "Succes la gasirea celor 50 de inimi!");
			if(remain > 0)
			{
				format(str, sizeof(str),"Mai ai %d inimi de colectat pentru a primi un premiu special.", remain);
				SendClientMessage(playerid, COLOR_YELLOW, str);
			}
			else if(remain == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Ai completat acest quest.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_YELLOW, "On this quest you need to collect 50 hearts (25 in Los Santos and 25 in Las Venturas).");
			SendClientMessage(playerid, COLOR_YELLOW, "After you collect all hearts you will receive 1.5-5kk$, 5-15 rp and if you are lucky 10-40 premium points.");
			SendClientMessage(playerid, COLOR_YELLOW, "Success to find all 50 hearts!");
			if(remain > 0)
			{
				format(str, sizeof(str),"You have %d hearts remaining to collect to receive a special prize.", remain);
				SendClientMessage(playerid, COLOR_YELLOW, str);
			}
			else if(remain == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "You completed this quest.");
			}
		}
	}
	return 1;
}*/
CMD:changeemail(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 8) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,email[64],string[128],sendername[30],query[500];
	if(sscanf(params, "us[64]",id,email)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/changeemail <Name/Playerid> <Email>");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	if(IsPlayerConnected(id))
	{
		strmid(PlayerInfo[playerid][pEmail], email, 0, strlen(email), 255);
		Update(id,pEmailx);
		format(string,sizeof(string),"Your Email Was Changed To %s By Admin %s",email,sendername);
		mysql_format(SQL, query, sizeof(query), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[id][pSQLID],string);
   	    mysql_tquery(SQL,query,"","");
	}
	else return SendClientMessage(playerid,COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	return 1;
}
CMD:changename(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 11)
	{
		new id,changenametext[25],string[456],giveplayer[30],sendername[30];
		if(sscanf(params, "us[25]",id,changenametext)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/changename <player id> <new player name>");
		GetPlayerName(id, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
  		if(IsPlayerConnected(id))
		{
			new newname = MySQLCheckAccount(changenametext);
			if(newname != 0) return SCM(playerid,COLOR_WHITE,"{FFB870}This name exist.");
			if(PlayerInfo[id][pPhousekey] != 999 && strcmp(PlayerInfo[id][pNormalName], HouseInfo[PlayerInfo[id][pPhousekey]][hOwner], true) == 0)
			{
				new houseid = PlayerInfo[id][pPhousekey];
				strmid(HouseInfo[houseid][hOwner], changenametext, 0, strlen(changenametext), 255);
				mysql_format(SQL,string,sizeof(string),"UPDATE `houses` SET `Owner`='%s' WHERE `ID`='%d'",changenametext,houseid);
				mysql_tquery(SQL,string,"","");
				OnPropTextdrawUpdate(1,PlayerInfo[id][pPhousekey]);
	   		}
			if(PlayerInfo[id][pPbiskey] != 255)
			{
				new bizid2 = PlayerInfo[id][pPbiskey];
				strmid(BizzInfo[bizid2][bOwner], changenametext, 0, strlen(changenametext), 255);
				mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Owner`='%s' WHERE `ID`='%d'",changenametext,bizid2);
				mysql_tquery(SQL,string,"","");
				OnPropTextdrawUpdate(2,PlayerInfo[id][pPbiskey]);
	   		}
	   		if(PlayerInfo[id][pPcarkey] != 0)
			{
				new carid = PlayerInfo[id][pPcarkey];
				strmid(CarInfo[carid][cOwner], changenametext, 0, strlen(changenametext), 255);
				vUpdate(carid,cOwnerx);
			}
	   		if(PlayerInfo[id][pmotokey] != 0)
			{
				new carid = PlayerInfo[id][pmotokey];
				strmid(CarInfo[carid][cOwner], changenametext, 0, strlen(changenametext), 255);
				vUpdate(carid,cOwnerx);
			}
			if(PlayerInfo[id][pprcarkey2] != 0)
			{
				new carid = PlayerInfo[id][pprcarkey2];
				strmid(CarInfo[carid][cOwner], changenametext, 0, strlen(changenametext), 255);
				vUpdate(carid,cOwnerx);
			}
			if(PlayerInfo[id][pPPluscarkey] != 0)
			{
				new carid = PlayerInfo[id][pPPluscarkey];
				strmid(CarInfo[carid][cOwner], changenametext, 0, strlen(changenametext), 255);
				vUpdate(carid,cOwnerx);
			}
			if(PlayerInfo[id][pPPluscarkey2] != 0)
			{
				new carid = PlayerInfo[id][pPPluscarkey2];
				strmid(CarInfo[carid][cOwner], changenametext, 0, strlen(changenametext), 255);
				vUpdate(carid,cOwnerx);
			}
	   		if(PlayerInfo[id][pprcarkey] != 0)
			{
				new carid = PlayerInfo[id][pprcarkey];
				strmid(CarInfo[carid][cOwner], changenametext, 0, strlen(changenametext), 255);
				vUpdate(carid,cOwnerx);
			}
			new str[128];
			mysql_format(SQL,str,sizeof(str),"UPDATE users SET `name`='%s' WHERE `name`='%s'",changenametext,PlayerInfo[id][pNormalName]);
			mysql_tquery(SQL,str,"","");
			SetPlayerName(id, changenametext);
			format(string, sizeof(string), "Admin %s changed %s's nickname to: %s.", sendername,giveplayer,changenametext);
			ABroadCast(COLOR_RED,string,1);
			/*SCM(id,COLOR_LIGHTRED,"You kicked for database synchronization, please relogin.");
			KickEx(id);*/
		}
		else return SendClientMessage(playerid,COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}


CMD:sethour(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 11)
		{
			new id,hours,string[256],giveplayer[30],sendername[30];
			if(sscanf(params, "ui",id,hours)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/sethour <Name/Playerid> <Hours played>");
			{
			    if(IsPlayerConnected(id))
			    {
			        if(id != INVALID_PLAYER_ID)
			        {
						GetPlayerName(id, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[id][pConnectTime] = hours;
						format(string, sizeof(string), "Admin %s has set %s's hours to %d.", sendername,giveplayer,hours);
						ABroadCast(COLOR_YELLOW,string,1);
						Update(id,pConnectTimex);
					}
				}
				else return SendClientMessage(playerid,COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
			}
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:setjob(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 10)
		{
			new id,jobid,string[256],giveplayer[30],sendername[30];
			if(sscanf(params, "ui",id,jobid)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/setjob <Name/Playerid> <Job ID>");
			{
			    if(IsPlayerConnected(id))
			    {
			        if(id != INVALID_PLAYER_ID)
			        {
						GetPlayerName(id, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[id][pJob] = jobid;
						format(string, sizeof(string), "Admin %s has changed %s's job to %d.", sendername,giveplayer,jobid);
						ABroadCast(COLOR_YELLOW,string,1);
						format(string, sizeof(string), "Admin %s has changed you job to %d.", sendername,jobid);
						SCM(id,COLOR_LIGHTBLUE, string);
						new str[128];
						mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Job`='%d' WHERE `name`='%s'",PlayerInfo[id][pJob],PlayerInfo[id][pNormalName]);
						mysql_tquery(SQL,str,"","");
					}
				}
				else
				{
  					SendClientMessage(playerid,COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}
CMD:setevent(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 11)
	{
		new giveexpp,recivedexpp,reciveedmoneyy;
		if(sscanf(params, "iii",giveexpp,recivedexpp,reciveedmoneyy)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/setevent <player online> <respect received> <money received>");
		giveexp = giveexpp;
        recivedexp = recivedexpp;
        recivedmoney = reciveedmoneyy;
        eventon = 1;
		new string[256],sendername[25];
	    GetPlayerName(playerid,sendername,sizeof(sendername));
		format(string, sizeof(string), "Admin %s has started an event %d players online, respect points: %d, money: $%s.", sendername,giveexpp,recivedexpp,FormatNumber(reciveedmoneyy));
        SendClientMessageToAll(COLOR_YELLOW,string);
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}
CMD:stopmevent(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 11)
	{
        eventon = 0;
        new string[256];
		format(string, sizeof(string), "Admin %s has closed event much players online.",GetName(playerid));
		ABroadCast(COLOR_YELLOW,string,1);
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}
CMD:giveallmoney(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 11)
	{
		new moneyall,sendername[MAX_PLAYER_NAME],string[100];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(sscanf(params, "i",moneyall)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/giveallmoney <money>");
		if(moneyall >= 99999999) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Error: Too much moneys.");
		else if(moneyall < 99999999)
		{
			format(string, sizeof(string),"{f03337}Admin %s give %s$ to all players online.",sendername,FormatNumber(moneyall));
			SendClientMessageToAll(COLOR_WHITE,string);
			foreach(Player,i)
			{
				GivePlayerCash(i, moneyall);
			}
		}
	}
	else
	{
	     SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	 	 return 1;
	}
	return 1;
}
CMD:areafreeze(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			new range,sendername[MAX_PLAYER_NAME],string[256];
			if(sscanf(params, "i",range)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/areafreeze [Range]");
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmCmd]: %s has frozen all players on range of %d.", sendername, range);
				ABroadCast(COLOR_RED2,string,1);
				for(new i = 0; i < MAX_PLAYERS; i ++)
				{
					if (ProxDetectorS(range, playerid, i))
					{
						TogglePlayerControllable(i, 0);
						arefreeze[i] = 1;
					}
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE,"{5CAD5C}Error: Your admin/help level isn't high enough to use this command.");
	}
	return 1;
}

CMD:afreeze(playerid, params[])
{
  return cmd_areafreeze(playerid, params);
}

CMD:areaunfreeze(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			new range,sendername[MAX_PLAYER_NAME],string[256];
			if(sscanf(params, "i",range)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/areaunfreeze [Range]");
			GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, sizeof(string), "[AdmCmd]: %s has unfrozen all players on range of %d.", sendername, range);
	        ABroadCast(COLOR_RED2,string,1);
			for(new i = 0; i < MAX_PLAYERS; i ++)
			{
				if (ProxDetectorS(range, playerid, i))
				{
					TogglePlayerControllable(i, 1);
					arefreeze[i] = 0;
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE,"{5CAD5C}Error: Your admin/help level isn't high enough to use this command.");
	}
	return 1;
}

CMD:aunfreeze(playerid, params[])
{
  return cmd_areaunfreeze(playerid, params);
}

CMD:areadisarm(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
		new range,string[256],sendername[MAX_PLAYER_NAME];
		if(sscanf(params, "i",range)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/areadisarm <Range>");
		{
		    GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, sizeof(string), "[AdmCmd]: %s has disarmed all players on range of %d.", sendername, range);
	        ABroadCast(COLOR_RED2,string,1);
			for(new i = 0; i < MAX_PLAYERS; i ++)
			{
				if (ProxDetectorS(range, playerid, i))
				{
					ResetPlayerWeaponsEx(i);
		    		ResetPlayerWeapons(i);
			 	}
	  	  	}
		}
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}

CMD:adisarm(playerid, params[])
{
  return cmd_areadisarm(playerid, params);
}

CMD:areagun(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(PlayerInfo[playerid][pAdmin] >= 3)
	{
		new range,gun,ammo,string[256],sendername[25],count=0;
		if(sscanf(params, "iii", range, gun, ammo)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/areagun <Range> <GunID> <Ammo>");
		{
		    GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(gun < 1||gun > 46||gun==19||gun==20||gun==21||gun==45) return SCM(playerid,COLOR_WHITE,"Invalid weapond ID.");
		    if(ammo <1||ammo > 1000) return SCM(playerid,COLOR_WHITE,"Invalid ammo (1-1000).");
		    format(string, sizeof(string), "[AdmCmd]: %s has given gun %d with %d bullets to all players on range %d.", sendername,gun,ammo,range);
			ABroadCast(COLOR_RED2,string,1);
			foreach(Player,i)
			{
				if(IsPlayerConnected(i))
				{
					if(ProxDetectorS(range, playerid, i))
					{
						GivePlayerWeaponEx(i, gun, ammo);
						if(GetPlayerState(i) == PLAYER_STATE_PASSENGER)
						{
				        	new gun2,tmp;
				        	GetPlayerWeaponData(i,5,gun2,tmp);
				        	#pragma unused tmp
				        	if(gun2)SetPlayerArmedWeapon(i,gun2);
				        	else SetPlayerArmedWeapon(i,0);
				        	count++;
						}
					}
				}
			}
		}
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}

CMD:agun(playerid, params[])
{
  return cmd_areagun(playerid, params);
}

CMD:areaarmour(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			new range,armor,string[256],sendername[MAX_PLAYER_NAME];
			if(sscanf(params, "ii", range, armor)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/areaarmour <Range> <Armor>");
			{
			    GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 256, "[AdmCmd]: %s has set to all players on range %d armour to %d.", sendername, range, armor);
    			ABroadCast(COLOR_RED2,string,1);
		  		for(new i = 0; i < MAX_PLAYERS; i ++)
				{
					if (ProxDetectorS(range, playerid, i))
					{
						SetPlayerArmourEx(i, armor);
		    			format(string, sizeof(string), "* Admin %s ti-a setat armura.", sendername);
						SendClientMessage(i, COLOR_DARKPINK, string);
					}
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}

CMD:aarmour(playerid, params[])
{
  return cmd_areaarmour(playerid, params);
}

CMD:areaheal(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			new range,hp,string[256],sendername[MAX_PLAYER_NAME];
			if(sscanf(params, "ii", range, hp)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/areaheal <Range> <Hp>");
			{
			    GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 256, "[AdmCmd]: %s has set to all players in range %d heal to %d.", sendername, range, hp);
    			ABroadCast(COLOR_RED2,string,1);
		  		for(new i = 0; i < MAX_PLAYERS; i ++)
				{
					if (ProxDetectorS(range, playerid, i))
					{
						SetPlayerHealthEx(i, hp);
		    			format(string, sizeof(string), "* Admin %s Set You HP", sendername);
						SendClientMessage(i, COLOR_DARKPINK, string);
					}
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}

CMD:aheal(playerid, params[])
{
  return cmd_areaheal(playerid, params);
}

CMD:givelevelall(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 11)
	{
		new rpall,sendername[MAX_PLAYER_NAME],string[100];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(sscanf(params, "i",rpall)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/givealllevel <Level>");
		if(rpall >= 50) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Error: Too much level(1-50).");
		else if(rpall < 50)
		{
			format(string, sizeof(string),"{f03337}Admin %s give %d level to all players online.",sendername,rpall);
			SendClientMessageToAll(COLOR_WHITE,string);
			foreach(Player,i)
			{
				PlayerInfo[i][pLevel] += rpall;
			}
		}
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}
CMD:giveallrp(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 11)
	{
		new rpall,sendername[MAX_PLAYER_NAME],string[100];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(sscanf(params, "i",rpall)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/giveallrp <respect points>");
		if(rpall >= 50) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Error: Too much respect points(1-50).");
		else if(rpall < 50)
		{
			format(string, sizeof(string),"{f03337}Admin %s give %d respect points to all players online.",sendername,rpall);
			SendClientMessageToAll(COLOR_WHITE,string);
			foreach(Player,i)
			{
				PlayerInfo[i][pExp] += rpall;
			}
		}
	}
	else
	{
	     SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	 	 return 1;
	}
	return 1;
}

CMD:ah(playerid,params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		new x_nr[256], idx;
		x_nr = strtok(params, idx);
		if(!strlen(x_nr))
		{
		    SendClientMessage(playerid, COLOR_RED2, "{ff0000}[SYNTAX]:{ff0000} /ah [1,2,3,4,5,6,7,8,9]");
			return 1;
		}
	   	else if(strcmp(x_nr,"1",true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			SendClientMessage(playerid, COLOR_RED2,"_________________________________________________________[Admin 1]_____________________________________________________________________");
			SendClientMessage(playerid, COLOR_WHITE, "/Last /Spawn /Mute /Muteo /UnMute /Sethp /Setarmour /tp /GoTols /GoTolv /GoTosf /GoBack /GoToin");
			SendClientMessage(playerid, COLOR_WHITE, "/AJailo /AJail /SetInt /Setvw /Down /Slap /RMute /CheckGun /CheckHP /UnFreeze /Freeze /Up /aaa2");
			SendClientMessage(playerid, COLOR_WHITE, "/ha /a /l /SkyDive /VehName /aSkin /VipChat /Flip /Angle /TogIpLog /AcceptEvent /RejectEvent /Events");
			SendClientMessage(playerid, COLOR_WHITE, "/cEvent /AimTest /Ban /BanOff /BanIp /GetIp /Spec /Specoff /Kick /Vre /Warn /Warno /GoTocar /Check");
			SendClientMessage(playerid, COLOR_WHITE, "/Killme /HealMe /Reports /dr /cr /viewnewbie /nr /nre /ndelete /mg /drag /gm /aDuty");
			SendClientMessage(playerid, COLOR_WHITE, "/TogFind /GoTo /GoToJail /GoTom /GoToCars /pm /GoToEventArena /pgt /dm /dmp /aLicenses");
			SendClientMessage(playerid, COLOR_WHITE, "/ShowFreq /MutedPlayers /JailList /CC /disarm /o /Count /dad /BigEars ");
            SendClientMessage(playerid, COLOR_RED2,"_______________________________________________________________________________________________________________________________________");
          	}
			else SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
        else if(strcmp(x_nr,"2",true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
            SendClientMessage(playerid, COLOR_RED2,"___________________________________________[Admin 2]_________________________________________________________________________");
			SendClientMessage(playerid, COLOR_WHITE, "/GoTotw /GoTopeco /AHeal /GoTostad /GoTojet /GoTomark /EnterCar /PutPlayerInVehicle");
			SendClientMessage(playerid, COLOR_WHITE, "/GetCar /OutCar /ClosestCar /Va /Ip /ManageArea /Toga /Checkv /BanIpp /GoToDs /FixVeh /JetPack /Nos");
            SendClientMessage(playerid, COLOR_RED2,"_____________________________________________________________________________________________________________________________");
			}
			else SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
		else if(strcmp(x_nr,"3",true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
                SendClientMessage(playerid, COLOR_RED2,"___________________________________________[Admin 3]__________________________________________________");
				SendClientMessage(playerid, COLOR_WHITE, "/AUnmute /AMute /ARepair /ASpawn /AFreeze /AUnFreeze /AArmour /gg /AfkList /SlapCar /ahat /ADisarm /AGun");
				SendClientMessage(playerid, COLOR_WHITE, "/ggall /Healall /veh (/spawncar - /car) /rsc /davm /CarColorTemp");
				SendClientMessage(playerid, COLOR_RED2,"______________________________________________________________________________________________________");
			}
			else SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
		else if(strcmp(x_nr,"4",true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
                SendClientMessage(playerid, COLOR_RED2,"______________________________________________________[Admin 4]______________________________________________________");
				SendClientMessage(playerid, COLOR_WHITE, "/agl /StartVote /StopVote /MyNameOnCar /Rac");
		        SendClientMessage(playerid, COLOR_RED2,"_____________________________________________________________________________________________________________________");
			}
			else SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
		else if(strcmp(x_nr,"5",true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
                SendClientMessage(playerid, COLOR_RED2,"___________________________________________________________________[Admin 5]________________________________________________________________");
				SendClientMessage(playerid, COLOR_WHITE, "/am /SetHireCar /Stunt /FuelCars /GoToHouse /Houseo /GoToBiz /GoToInt /GoToHInt");
			    SendClientMessage(playerid, COLOR_RED2,"_____________________________________________________________________________________________________________________________________________");
			}
			else SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
        }
		else if(strcmp(x_nr,"6",true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
            SendClientMessage(playerid, COLOR_RED2,"_________________________________________________________[Admin 6]___________________________________________________________________");
			SendClientMessage(playerid, COLOR_WHITE, "/SetSkin /TemporarSkin /ACarColor /GoToxyz");
            SendClientMessage(playerid, COLOR_RED2,"____________________________________________________________________________________________________________________________________");
			}
			else SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
        }
        else if(strcmp(x_nr,"7",true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] >= 7)
			{
                SendClientMessage(playerid, COLOR_RED2,"_________________________________________________________[Donator]______________________________________");
				SendClientMessage(playerid, COLOR_WHITE, "/Muie /FlyMode");
                SendClientMessage(playerid, COLOR_RED2,"_____________________________________________________________________________________________________________________");
			}
			else SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
        }
		else if(strcmp(x_nr,"8",true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] >= 8)
			{
			SendClientMessage(playerid, COLOR_RED2,"_________________________________________________________[SuperVisor]_____________________________________________________________________");
            SendClientMessage(playerid, COLOR_WHITE, "/(r)emove(l)eader(w)arn /(l)eader(w)arn /fpk /fpko /UnJail /UnJailo /GiveFactionP /ml /Setml /Removeml");
			SendClientMessage(playerid, COLOR_WHITE, "/SetmlSupport /RemovemlSupport /Setmd /Removemd /Setmt /Removemt /Setmi /Removemi /Setmm /Removemm /Setmh /Removemh");
			SendClientMessage(playerid, COLOR_WHITE, "/KickAllFactions /Msg /Anno /dAnno /FChat /FSpec /fMembers /ChangeEmail /ResetHelp");
			SendClientMessage(playerid, COLOR_WHITE, "/MinLevel /MaxMembers /dav /CheckSpawnCar /FastEvent ");
            SendClientMessage(playerid, COLOR_RED2,"_______________________________________________________________________________________________________________________________________");
          	}
			else SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
		else if(strcmp(x_nr,"9",true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] >= 9)
			{
			SendClientMessage(playerid, COLOR_RED2,"_________________________________________________________[Operator]_____________________________________________________________________");
            SendClientMessage(playerid, COLOR_WHITE, "/SetAP /RemoveAP");
            SendClientMessage(playerid, COLOR_RED2,"_______________________________________________________________________________________________________________________________________");
          	}
			else SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
		else if(strcmp(x_nr,"10",true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] >= 10)
			{
			SendClientMessage(playerid, COLOR_RED2,"_________________________________________________________[Operator Plus]_____________________________________________________________________");
            SendClientMessage(playerid, COLOR_WHITE, "/AWarn /ASellBiz /ASellHouse /AGiveMats /SetAge /SetJob /SetFP /SetFPo /AClear /GiveMats /SetKey /SetBeta /RemoveBeta");
			SendClientMessage(playerid, COLOR_WHITE, "/HLevel /HPrice /MusicForAll /aShop ");
            SendClientMessage(playerid, COLOR_RED2,"_______________________________________________________________________________________________________________________________________");
          	}
			else SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
		else if(strcmp(x_nr,"11",true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] >= 11)
			{
			SendClientMessage(playerid, COLOR_RED2,"_________________________________________________________[Manager]_____________________________________________________________________");
            SendClientMessage(playerid, COLOR_WHITE, "/SetHour /UnWarn /RemoveKey /mh /Tod /WeatherAll /Money /Bank /GiveLevel /SetLevel /GiveRP /GiveMoney /SetTeam");
			SendClientMessage(playerid, COLOR_WHITE, "/GiveAllRobp /ArenaPl /GiveAllGP /ACover /ShowName /NoTP /UnBanAll /CreateHouse /oPlace /PayDayMoney");
			SendClientMessage(playerid, COLOR_WHITE, "/SetCar /TogKickAFK /MoveHouse /HouseInterior /UnBan /UnBanIp /ChangeName /SetEvent /StopMEvent /GiveAllMoney");
            SendClientMessage(playerid, COLOR_RED2,"_______________________________________________________________________________________________________________________________________");
          	}
			else SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
		else if(strcmp(x_nr,"12",true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] >= 12)
			{
			SendClientMessage(playerid, COLOR_RED2,"_________________________________________________________[Developer]_____________________________________________________________________");
            SendClientMessage(playerid, COLOR_WHITE, "/KickAll /ServerRestart /ma /Setpp /Setppo /SetPremium /RemovePremium /GiveAllpp");
			SendClientMessage(playerid, COLOR_WHITE, "/AddSafeZone /SaveData /Gmx /SetVip /RemoveVip /SetAcces /RemoveAcces /ServerPass /ServerName");
			SendClientMessage(playerid, COLOR_WHITE, "/GiveAllRp /GiveAllLevel /GiftPremium /ResetGift /GiftBox");
			SendClientMessage(playerid, COLOR_RED2,"_______________________________________________________________________________________________________________________________________");
          	}
			else SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
		else if(strcmp(x_nr,"13",true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] >= 13)
			{
			SendClientMessage(playerid, COLOR_RED2,"_________________________________________________________[Owner]_____________________________________________________________________");
            SendClientMessage(playerid, COLOR_WHITE, "All Of /ah Commands !");
			SendClientMessage(playerid, COLOR_RED2,"_______________________________________________________________________________________________________________________________________");
          	}
			else SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
		else if(strcmp(x_nr,"14",true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] >= 14)
			{
			SendClientMessage(playerid, COLOR_RED2,"_________________________________________________________[Founder]_____________________________________________________________________");
            SendClientMessage(playerid, COLOR_WHITE, "All Of /ah Commands !");
			SendClientMessage(playerid, COLOR_RED2,"_______________________________________________________________________________________________________________________________________");
          	}
			else SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}

/*CMD:crash(playerid, params[])
{
	if(EstiFondator(playerid))
	{
	    new id;
	    if(sscanf(params, "u", id))return SCM(playerid, -1, "/crash <id>");
	   	new Float:X,Float:Y,Float:Z;
        GetPlayerPos(id,X,Y,Z);
  		CreatePlayerObject(id,385,X,Y,Z,0,0,0);
	}
	return 1;
}
CMD:crash2(playerid, params[])
{
	if(EstiFondator(playerid))
	{
	    new id;
	    if(sscanf(params, "u", id))return SCM(playerid, -1, "/crash <id>");
	   	SetPlayerPos(id, 9999999.857, 9999999.858, 9999999.857);
	}
	return 1;
}
*/
CMD:kickall(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new reason[128], string[256], sendername[25];
	if (PlayerInfo[playerid][pAdmin] >= 12)
	{
	    if(sscanf(params, "s[128]", reason)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/kickall <reason>");
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[AdmBot]: Administrator %s a Kicked All Players | Reason : %s", sendername, reason);
			Adminlog(string);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
	        foreach(Player, i)
	        {
				KickEx(i);
			}
		}
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}
CMD:kick(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new id, reason[128], string[256], sendername[25], giveplayer[25];
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    if(sscanf(params, "us[128]", id, reason)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/kick <Name/Playerid> <reason>");
	    {
	        if(id != INVALID_PLAYER_ID)
	        {
				//if(PlayerInfo[id][pAdmin] >= PlayerInfo[playerid][pAdmin] && PlayerInfo[playerid][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GREY, "You Can't Use This Command For High Level Admin");
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmCmd]: Admin/Helper %s Kicked %s | Reason : %s", sendername, giveplayer, reason);
				Adminlog(string);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				new var100[300];
	    		mysql_format(SQL, var100, sizeof(var100), "INSERT INTO kicklogs (`playerid`,`giverid`,`playername`,`givername`,`reason`) VALUES ('%d','%d','%s','%s','%s')", PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],giveplayer,sendername,reason);
				mysql_tquery(SQL,var100,"","");
				KickEx(id);
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}
CMD:vre(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	{
		new car,string[128],sendername[30];
	    if(sscanf(params, "d",car)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/vre <Car ID>");
		new bool:unwanted[CAR_AMOUNT];
	    for(new player=0; player<MAX_PLAYERS; player++)
     	{
             if(IsPlayerInAnyVehicle(player))
			 {
			 	unwanted[GetPlayerVehicleID(player)]=true;
			 }
     	}
		if(!unwanted[car])
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			SetVehicleToRespawn(car);
			format(string,sizeof(string),"[AdmCmd]: Admin %s respawned vehicle %d.",sendername,car);
			ABroadCast(COLOR_ADMCOMMANDS,string,1);
		}
	}
	return 1;
}
CMD:rac(playerid, params[])
{
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 4)
            {
                SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
                return 1;
            }
			new string[256], sendername[30];
            SetTimer("RACtime", 10000, 0);
            GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string,sizeof(string),"{FFFFFF}Unused Vehicles Respawn In : {009999}10 {FFFFFF}Seconds By %s !", sendername);
			SendClientMessageToAll(COLOR_WHITE,string);
        }
        return 1;}
	
	
CMD:spawn(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
		{
			new id,sendername[30],giveplayer[30],string[256];
			if(sscanf(params, "u", id)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/respawn <Name/Playerid>");
			{
				if(IsPlayerConnected(id))
    			{
				    if(id != INVALID_PLAYER_ID)
    				{
						//if(PlayerInfo[id][pAdmin] >= PlayerInfo[playerid][pAdmin] && PlayerInfo[playerid][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GREY, "You Can't Use This Command For High Level Admin");
						GetPlayerName(id, giveplayer, sizeof(giveplayer));
						SpawnPlayer(id);
						GetPlayerName(playerid, sendername, sizeof(sendername));
 						format(string, sizeof(string), "You have been respawned by %s.", sendername);
						SendClientMessage(id, COLOR_RED2, string);
						format(string, sizeof(string), "You respawned %s.", giveplayer);
						SendClientMessage(playerid, COLOR_RED2, string);
						format(string, sizeof(string), "{FFA000}[AdmCmd]: {FFFFFF}%s has Spawned %s.",sendername, giveplayer);
						ABroadCast(COLOR_ADMCOMMANDS,string,1);
						HLChat(COLOR_ADMCOMMANDS,string);
						return 1;
					}
				}
                else
                {
                    SCM(playerid,COLOR_WHITE,"{FFFFCC}Error: Player not connected.");
                }
			}
   		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}
CMD:l(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pLeader] >= 1 || PlayerInfo[playerid][pAdmin] >= 1)
		{
			new sendername[30],mesajelc[250],string[250];
	       	GetPlayerName(playerid, sendername, sizeof(sendername));
	    	if(sscanf(params, "s[250]",mesajelc)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/l <Message>");
	    	{
	    		if(FindIP(mesajelc)) /// Anti-Reclama
		        {
			        new advertiser[MAX_PLAYER_NAME];
			        GetPlayerName(playerid, advertiser, sizeof(advertiser));
			        format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /l.", advertiser, playerid, mesajelc);
					ABroadCast(COLOR_WHITE,string,1);
		        }
		        for(new i; i < sizeof(TLD); i++)
				{
					if(strfind(mesajelc, TLD[i], true) != -1)
					{
						if(strfind(mesajelc, ".", true) != -1 || strfind(mesajelc, ".", true) != -1 || strfind(mesajelc, ".", true) != -1) break;
						new advertiser[MAX_PLAYER_NAME];
						GetPlayerName(playerid, advertiser, sizeof(advertiser));
						format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /l.", advertiser, playerid, mesajelc);
						ABroadCast(COLOR_WHITE,string,1);
					}
				}
				if(PlayerInfo[playerid][pAdmin] >= 1)
				{
					format(string, sizeof(string), "{FF9600}[LC]{FF005F} Admin Level %d{2192d8} %s: {FFFFFF}%s",PlayerInfo[playerid][pAdmin],sendername, mesajelc);
				}
				else
				{
					if (PlayerInfo[playerid][pLeader] == 1)
					{
						format(string, sizeof(string), "{FF9600}[LC]{6F9BF2} Leader Los Santos Police Department {FF002D}%s:{FFFFFF} %s",sendername, mesajelc);
					}
					else if (PlayerInfo[playerid][pLeader] == 2)
					{
						format(string, sizeof(string), "{FF9600}[LC]{4179E9} Leader Federal Bureau of Investigation {FF002D}%s:{FFFFFF} %s",sendername, mesajelc);
					}
					else if (PlayerInfo[playerid][pLeader] == 3)
					{
						format(string, sizeof(string), "{FF9600}[LC]{466FC0} Leader National Guard {FF002D}%s:{FFFFFF} %s",sendername, mesajelc);
					}
					else if (PlayerInfo[playerid][pLeader] == 4)
					{
						format(string, sizeof(string), "{FF9600}[LC]{2192d8} Leader Los Aztecas {FF002D}%s:{FFFFFF} %s",sendername, mesajelc);
					}
					else if (PlayerInfo[playerid][pLeader] == 5)
					{
						format(string, sizeof(string), "{FF9600}[LC]{19AF23} Leader Grove Street {FF002D}%s:{FFFFFF} %s",sendername, mesajelc);
					}
					else if (PlayerInfo[playerid][pLeader] == 6)
					{
						format(string, sizeof(string), "{FF9600}[LC]{F3A32A} Leader Los Vagos {FF002D}%s:{FFFFFF} %s",sendername, mesajelc);
					}
					else if (PlayerInfo[playerid][pLeader] == 7)
					{
						format(string, sizeof(string), "{FF9600}[LC]{BEFDBD} Leader Government {FF002D}%s:{FFFFFF} %s",sendername, mesajelc);
					}
					else if (PlayerInfo[playerid][pLeader] == 8)
					{
						format(string, sizeof(string), "{FF9600}[LC]{6400FF} Leader L.V Police Dep {FF002D}%s:{FFFFFF} %s",sendername, mesajelc);
					}
					else if (PlayerInfo[playerid][pLeader] == 9)
					{
						format(string, sizeof(string), "{FF9600}[LC]{FF8200} Leader News Reporters {FF002D}%s:{FFFFFF} %s",sendername, mesajelc);
					}
					else if (PlayerInfo[playerid][pLeader] == 10)
					{
						format(string, sizeof(string), "{FF9600}[LC]{B32CF6} Leader Ballas {FF002D}%s:{FFFFFF} %s",sendername, mesajelc);
					}
					else if (PlayerInfo[playerid][pLeader] == 11)
					{
						format(string, sizeof(string), "{FF9600}[LC]{AF1919} Leader Hitman Agency {FF0000}%s:{FFFFFF} %s",sendername, mesajelc);
					}
					else if (PlayerInfo[playerid][pLeader] == 12)
					{
						format(string, sizeof(string), "{FF9600}[LC]{0974C6} Leader School Instructors {FF002D}%s:{FFFFFF} %s",sendername, mesajelc);
					}
					else if (PlayerInfo[playerid][pLeader] == 13)
					{
						format(string, sizeof(string), "{FF9600}[LC]{FFFF00} Leader Taxi LS {FF002D}%s:{FFFFFF} %s",sendername, mesajelc);
					}
					else if (PlayerInfo[playerid][pLeader] == 14)
					{
						format(string, sizeof(string), "{FF9600}[LC]{F2926F} Leader Paramedic Department LV {FF002D}%s:{FFFFFF} %s",sendername, mesajelc);
					}
				}
		    	if (PlayerInfo[playerid][pLeader] >= 1 || PlayerInfo[playerid][pAdmin] >= 1)
		    	{
		     		LeaderChat(COLOR_TEAL, string);
		    	}
            }
        }
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Only leaders/admins can use this command.");
			return 1;
		}
	}
	return 1;
}
CMD:fvrs(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pAdmin] >= 2)
	{
		new bool:unwanted[CAR_AMOUNT];
		for(new player=0; player<MAX_PLAYERS; player++)
		{
    		if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
		}
		for(new v = helpercars[1]; v <= helpercars[5]; v++)
		{
			if(!unwanted[v]) SetVehicleToRespawn(v);
			Gas[v] = 100;
		}
		for(new v = admincars[1]; v <= admincars[5]; v++)
		{
			if(!unwanted[v]) SetVehicleToRespawn(v);
			Gas[v] = 100;
		}
		SCM(playerid,COLOR_WHITE,"{FFFFCC}All Admins / Helpers cars respawn.");
		return 1;
	}
	else return SCM(playerid, COLOR_RED,"You Have'nt Access To This Command");
}

CMD:fvr(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
   	{
      	if(PlayerInfo[playerid][pLeader] >= 1 ||PlayerInfo[playerid][pRank] >=5)
      	{
      		if(PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] >=5)//PD
      		{
				new bool:unwanted[CAR_AMOUNT];
				for(new player=0; player<MAX_PLAYERS; player++)
      			{
            		if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
      			}
				for(new v = Copcar[1]; v <= Copcar[32]; v++)
				{
					if(!unwanted[v]) SetVehicleToRespawn(v);
					Gas[v] = 100;
				}
				SCM(playerid,COLOR_WHITE,"{FFFFCC}All faction cars respawn.");
      		}
      		if(PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >=5)//FBI
      		{
				new bool:unwanted[CAR_AMOUNT];
				for(new player=0; player<MAX_PLAYERS; player++)
      			{
	            	if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
	      		}
				for(new v = Fbicar[1]; v <= Fbicar[16]; v++)
				{
					if(!unwanted[v]) SetVehicleToRespawn(v);
					Gas[v] = 100;
				}
				SCM(playerid,COLOR_WHITE,"{FFFFCC}All faction cars respawn.");
      		}
      		if(PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pRank] >=5)// NG
      		{
				new bool:unwanted[CAR_AMOUNT];
				for(new player=0; player<MAX_PLAYERS; player++)
      			{
            		if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
      			}
				for(new v = Ngcar[1]; v <= Ngcar[11]; v++)
				{
					if(!unwanted[v]) SetVehicleToRespawn(v);
					Gas[v] = 100;
				}
				SCM(playerid,COLOR_WHITE,"{FFFFCC}All faction cars respawn.");
      		}
      		if(PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pRank] >=5)//Los Aztecas
      		{
				new bool:unwanted[CAR_AMOUNT];
				for(new player=0; player<MAX_PLAYERS; player++)
      			{
           		 	if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
      			}
				for(new v = Aztecasc[1]; v <= Aztecasc[14]; v++)
				{
					if(!unwanted[v]) SetVehicleToRespawn(v);
					Gas[v] = 100;
				}
				SCM(playerid,COLOR_WHITE,"{FFFFCC}All faction cars respawn.");
      		}
      		if(PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] >=5)//GP
      		{
				new bool:unwanted[CAR_AMOUNT];
				for(new player=0; player<MAX_PLAYERS; player++)
      			{
            		if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
      			}
				for(new v = Grovec[1]; v <= Grovec[12]; v++)
				{
					if(!unwanted[v]) SetVehicleToRespawn(v);
					Gas[v] = 100;
				}
				SCM(playerid,COLOR_WHITE,"{FFFFCC}All faction cars respawn.");
      		}
      		if(PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] >=5)//LSC
      		{
				new bool:unwanted[CAR_AMOUNT];
				for(new player=0; player<MAX_PLAYERS; player++)
      			{
          	 	 	if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
      			}
				for(new v = Vagosc[1]; v <= Vagosc[11]; v++)
				{
					if(!unwanted[v]) SetVehicleToRespawn(v);
					Gas[v] = 100;
				}
				SCM(playerid,COLOR_WHITE,"{FFFFCC}All faction cars respawn.");
      		}
			if(PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pRank] >=6)// Government
      		{
				new bool:unwanted[CAR_AMOUNT];
				for(new player=0; player<MAX_PLAYERS; player++)
      			{
          	 	 	if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
      			}
				for(new v = Govc[1]; v <= Govc[4]; v++)
				{
					if(!unwanted[v]) SetVehicleToRespawn(v);
					Gas[v] = 100;
				}
				SCM(playerid,COLOR_WHITE,"{FFFFCC}All faction cars respawn.");
      		}
      		if(PlayerInfo[playerid][pMember] == 8 && PlayerInfo[playerid][pRank] >=5)//LVPD
      		{
				new bool:unwanted[CAR_AMOUNT];
				for(new player=0; player<MAX_PLAYERS; player++)
      			{
            		if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
      			}
				for(new v = LVpdcar[1]; v <= LVpdcar[40]; v++)
				{
					if(!unwanted[v]) SetVehicleToRespawn(v);
					Gas[v] = 100;
				}
				SCM(playerid,COLOR_WHITE,"{FFFFCC}All faction cars respawn.");
      		}
      		if(PlayerInfo[playerid][pMember] == 9 && PlayerInfo[playerid][pRank] >=5)// NR
      		{
				new bool:unwanted[CAR_AMOUNT];
				for(new player=0; player<MAX_PLAYERS; player++)
      			{
            		if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
      			}
				for(new v = news[1]; v <= news[17]; v++)
				{
					if(!unwanted[v]) SetVehicleToRespawn(v);
					Gas[v] = 100;
				}
				SCM(playerid,COLOR_WHITE,"{FFFFCC}All faction cars respawn.");
      		}
      		if(PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pRank] >=5)// Ballas
     	 	{
				new bool:unwanted[CAR_AMOUNT];
				for(new player=0; player<MAX_PLAYERS; player++)
      			{
         	 	  	if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
      			}
				for(new v = Ballasc[1]; v <= Ballasc[14]; v++)
				{
					if(!unwanted[v]) SetVehicleToRespawn(v);
					Gas[v] = 100;
				}
				SCM(playerid,COLOR_WHITE,"{FFFFCC}All faction cars respawn.");
      		}
      		if(PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] >=5)// HITMAN
      		{
				new bool:unwanted[CAR_AMOUNT];
				for(new player=0; player<MAX_PLAYERS; player++)
      			{
            		if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
      			}
				for(new v = thea[1]; v <= thea[16]; v++)
				{
					if(!unwanted[v]) SetVehicleToRespawn(v);
					Gas[v] = 100;
				}
				SCM(playerid,COLOR_WHITE,"{FFFFCC}All faction cars respawn.");
      		}
      		if(PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] >=5)// SI
      		{
				new bool:unwanted[CAR_AMOUNT];
				for(new player=0; player<MAX_PLAYERS; player++)
      			{
            		if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
      			}
				for(new v = si[1]; v <= si[13]; v++)
				{
					if(!unwanted[v]) SetVehicleToRespawn(v);
					Gas[v] = 100;
				}
				SCM(playerid,COLOR_WHITE,"{FFFFCC}All faction cars respawn.");
      		}
      		if(PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] >=5)//taxi
      		{
				new bool:unwanted[CAR_AMOUNT];
				for(new player=0; player<MAX_PLAYERS; player++)
      			{
            		if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
      			}
				for(new v = taxic[1]; v <= taxic[10]; v++)
				{
					if(!unwanted[v]) SetVehicleToRespawn(v);
					Gas[v] = 100;
				}
				SCM(playerid,COLOR_WHITE,"{FFFFCC}All faction cars respawn.");
      		}
      		if(PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] >=5)//fp
      		{
				new bool:unwanted[CAR_AMOUNT];
				for(new player=0; player<MAX_PLAYERS; player++)
      			{
            		if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
      			}
				for(new v = ambcars[1]; v <= ambcars[10]; v++)
				{
					if(!unwanted[v]) SetVehicleToRespawn(v);
					Gas[v] = 100;
				}
				SCM(playerid,COLOR_WHITE,"{FFFFCC}All faction cars respawn.");
      		}
      	}
	  	else
      	{
        	SendClientMessage(playerid,COLOR_WHITE,"{FFB870}You are not a leader/subleader or rank 5 of a team.");
        	return 1;
      	}
	}
    return 1;
}
CMD:quitgroup(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
	    new query[256];
	    if(PlayerInfo[playerid][pLeader] > 0)
		{
			ShowPlayerDialog(playerid,DIALOG_QUITGROUP,DIALOG_STYLE_MSGBOX,"Are You Sure ?","Do You Want To Leave This Faction\nYou Will Recieve 50 FP","Yeah","No");
		}
	    if(PlayerInfo[playerid][pMember] < 1) return SendClientMessage(playerid, COLOR_WHITE, "You are not a member of a group.");
        else if(PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pLeader] == 0)
		{
		    format(query, 256, "SELECT * FROM `users` WHERE `Member` = '%d' AND `Rank` = '7'", PlayerInfo[playerid][pMember]);
		    new Cache: masta = mysql_query(SQL, query);
			if(cache_get_row_count() >= 1)
			{
				ShowPlayerDialog(playerid,DIALOG_QUITGROUP,DIALOG_STYLE_MSGBOX,"Are You Sure ?","Vrei sa parasesti factiunea curenta?\nYou Will Recieve 40 FP Because Faction Have A Leader","Yeah","No");
			}
			else
			{
				ShowPlayerDialog(playerid,DIALOG_QUITGROUP,DIALOG_STYLE_MSGBOX,"Are You Sure ?","Vrei sa parasesti factiunea curenta?\nYou Will Recieve 0 FP Because Faction Have'nt Leader","Yeah","No");
			}
			cache_delete(masta);
   		}
	}
	return 1;
}
CMD:checkdays(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
        if(PlayerInfo[playerid][pMember] >= 1)
		{
			new string[256];
			format(string, sizeof(string), "You have %d days in this faction.",PlayerInfo[playerid][pFactionTime]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
	}
	return 1;
}

CMD:chdays(playerid, params[])
{
  return cmd_checkdays(playerid, params);
}

CMD:warn(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			new id,reason[128],string[200],giveplayer[30],sendername[30],time,playerip[16];
			if(sscanf(params, "us[128]", id, reason)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/warn <Name/Playerid> <reason>");
			{
			    if(IsPlayerConnected(id))
			    {
			        new ip[25];
				    GetPlayerIp(id, ip, sizeof(ip));
				    if(PlayerInfo[id][pAdmin] >= PlayerInfo[playerid][pAdmin]) return SendClientMessage(playerid, COLOR_GREY, "You Can't Use This Command For High Level Admin");
			        if(id != INVALID_PLAYER_ID)
			        {

					    GetPlayerName(id, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[id][pWarns] += 1;
						format(string, sizeof(string), "You warned %s, reason: %s", giveplayer, reason);
						SendClientMessage(playerid, COLOR_LIGHTRED, string);
						format(string, sizeof(string), "You were warned by %s, reason: %s", sendername, reason);
						SendClientMessage(id, COLOR_LIGHTRED, string);
						format(string, sizeof(string), "Warn: %s received a warn from admin %s, reason: %s.", giveplayer, sendername, reason);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
	                    new var100[256];
	    				mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`reason`,`playername`,`givername`) VALUES ('%d','%d','5','%s','%s','%s')", PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],reason,giveplayer,sendername);
						mysql_tquery(SQL,var100,"","");
						Adminlog(string);
						Update(id,pWarnsx);
						if(PlayerInfo[id][pWarns] >= 3)
						{
						    new str[500];
						    GetPlayerIp(id, playerip, sizeof(playerip));
						    time = gettime() + (3*86400);
						    mysql_format(SQL,str,sizeof(str),"INSERT INTO bans (PlayerName, AdminName, Reason, IP, Days, IPBan, Permanent, Active, Time) VALUES('%s', 'AdmBot', '3/3 warns', '%s', 3, 0, 0, 1, %d)",
							PlayerInfo[id][pNormalName],playerip,time);
							mysql_tquery(SQL,str,"","");
							PlayerInfo[id][pWarns] = 0;
							Update(id,pWarnsx);
							format(string, sizeof(string), "[AdmBot]: %s Has Been Banned By AdmBot For 3 Days Reason: 3/3 Warns .", giveplayer);
							SendClientMessageToAll(COLOR_LIGHTRED, string);
	    					mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`reason`,`playername`,`givername`) VALUES ('%d','0','2','3/3 warns','%s','AdmBot')", PlayerInfo[id][pSQLID], PlayerInfo[id][pNormalName]);
							mysql_tquery(SQL,var100,"","");
							KickEx(id);
						}
					}
				}
			    else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
			}
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:warno(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			new id[25],reason[128],string[200],sendername[30],cont,time,playeridd;
			if(sscanf(params, "s[25]s[128]", id, reason)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/warn <Name> <reason>");
	        cont = MySQLCheckAccount(id);
	        if(cont == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}This name does not exist.");
			new intid,strid[32],str1[500],result[500];
			format(str1, sizeof(str1), "SELECT `Warnings` FROM users WHERE `name` = '%s'",id);
			mysql_query(SQL,str1);
			mysql_store_result();
			mysql_fetch_row(strid);
			intid = strval(strid);
		    mysql_free_result();
		    format(str1, sizeof(str1), "SELECT `id` FROM users WHERE `name` = '%s'", id);
			mysql_store_result();
			mysql_query(SQL,str1);
			if(mysql_retrieve_row())
			{
				mysql_fetch_field_row(result, "id"); playeridd = strval( result );
			}
			mysql_free_result();
		    intid++;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[AdmBot]: %s Received A Warn From Admin %s | Reason: %s .",id, sendername, reason);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			new var100[256];
			mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`reason`,`playername`,`givername`) VALUES ('%d','%d','5','%s','%s','%s')", playeridd,PlayerInfo[playerid][pSQLID],reason,id,sendername);
			mysql_tquery(SQL,var100,"","");
			format(string, sizeof(string), "You Recieved un warn de la adminul %s, motiv: %s.",sendername, reason);
			mysql_format(SQL, var100, sizeof(var100), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",playeridd,string);
			mysql_tquery(SQL,var100,"","");
			if(intid >= 3)
			{
			    new str[500];
			    time = gettime() + (3*86400);
                mysql_format(SQL,str,sizeof(str),"INSERT INTO bans (PlayerName, AdminName, Reason, IP, Days, IPBan, Permanent, Active, Time) VALUES('%s', 'AdmBot', '3/3 warns', '0', 3, 0, 0, 1, %d)",
				id,time);
				mysql_tquery(SQL,str,"","");
				format(string, sizeof(string), "[AdmBot]: %s Has Been Banned By AdmBot For 3 Days | Reason: 3/3 Warns .", id);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`reason`,`playername`,`givername`) VALUES ('%d','0','2','%s','%s','%s')", playeridd,reason,id,sendername);
				mysql_tquery(SQL,var100,"","");
				intid = 0;
			}
			mysql_format(SQL,str1,sizeof(str1),"UPDATE users SET `Warnings`='%d' WHERE `name`='%s'",intid,id);
			mysql_tquery(SQL,str1,"","");
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:unwarn(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 11)
		{
			new id,string[200],giveplayer[30],sendername[30];
			if(sscanf(params, "u", id)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/unwarn <Name/Playerid>");
			{
			    if(IsPlayerConnected(id))
			    {
			        if(id != INVALID_PLAYER_ID)
			        {
						if(PlayerInfo[id][pWarns] > 0)
						{
					    	GetPlayerName(id, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[id][pWarns] -= 1;
							format(string, sizeof(string), "You unwarned %s.", giveplayer);
				            SendClientMessage(playerid, COLOR_LIGHTRED, string);
					        format(string, sizeof(string), "You were unwarned by %s.", sendername);
					        SendClientMessage(id, COLOR_LIGHTRED, string);
				            format(string, sizeof(string), "{FFA000}[AdmCmd]: {FFFFFF}%s was unwarn by %s.", giveplayer, sendername);
				            Adminlog(string);
                            Update(id,pWarnsx);
							return 1;
						}
						else return SCM(playerid, COLOR_WHITE, "{FFFFCC}Error: Player does not have warn.");
					}
				}
	     		else
    			{
                    SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		    	}
			}
		}
		else
		{
  			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}
CMD:setfpo(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
        if (PlayerInfo[playerid][pAdmin] < 10) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
        new id[25],cont,fp;
        if(sscanf(params, "s[25]i",id,fp)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/setfp <Name> <FP>");
        cont = MySQLCheckAccount(id);
        if(cont == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}This name does not exist.");
		new str1[128];
		mysql_format(SQL,str1,sizeof(str1),"UPDATE users SET `FPunish`='%d' WHERE `name`='%s'",fp,id);
		mysql_tquery(SQL,str1,"","");
	}
	return 1;
}
CMD:setfp(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if (PlayerInfo[playerid][pAdmin] < 10) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,fp;
	if(sscanf(params, "ud",id,fp)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/setfp <Name/Playerid> <FP>");
	PlayerInfo[id][pFpunish] = fp;
    Update(id,pFpunishx);
    return 1;
}
CMD:removekey(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
        if (PlayerInfo[playerid][pAdmin] < 11) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
        new id,x_nr[15];
        if(sscanf(params, "us[15]", id,x_nr)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/removekey <Name/Playerid> <House/Bussines>");
    	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
        if(strcmp(x_nr,"house",true) == 0)
     	{
			new str1[158];
			mysql_format(SQL,str1,sizeof(str1),"UPDATE users SET `House`='999' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
			mysql_tquery(SQL,str1,"","");
   			SCM(playerid,COLOR_LIGHTRED,"Please enter in a minute to database updates.");
   			KickEx(id);
			return 1;
     	}
        if(strcmp(x_nr,"bussines",true) == 0)
     	{
			new str1[158];
			mysql_format(SQL,str1,sizeof(str1),"UPDATE users SET `Bizz`='255' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
			mysql_tquery(SQL,str1,"","");
   			SCM(playerid,COLOR_LIGHTRED,"Please enter in a minute to database updates.");
   			KickEx(id);
			return 1;
		}
	}
	return 1;
}
CMD:muteo(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
        if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
        new id[25],cont,msg[80],time,playeridd,result[500];
        if(sscanf(params, "s[25]is[80]", id,time,msg)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/muteo <Name> <Time(minutes)> <Reason>");
		cont = MySQLCheckAccount(id);
        if(cont == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}This name does not exist.");
        if(time <= 0) return SCM(playerid,COLOR_WHITE,"{FFB870}Invalid mute time.");
        new sendername[25],string[184];
        GetPlayerName(playerid,sendername,sizeof(sendername));
        format(string, sizeof(string), "{FFA000}[AdmCmd]: {FFFFFF}%s was muted by %s for %d minutes, reason: %s", id, sendername,time,msg);
		SendClientMessageToAll(COLOR_LIGHTRED, string);
		new timem = time*60,
			str1[168];
		mysql_format(SQL,str1,sizeof(str1),"UPDATE users SET `Muted`='1',`MuteTime`='%d' WHERE `name`='%s'",timem,id);
		mysql_tquery(SQL,str1,"","");
		format(str1, sizeof(str1), "SELECT `id` FROM users WHERE `name` = '%s'", id);
		mysql_store_result();
		mysql_query(SQL,str1);
		if(mysql_retrieve_row())
		{
			mysql_fetch_field_row(result, "id"); playeridd = strval( result );
		}
		mysql_free_result();
		new var100[256];
		mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`actiontime`,`reason`,`playername`,`givername`) VALUES ('%d','%d','7','%d','%s','%s','%s')", playeridd,PlayerInfo[playerid][pSQLID],time,msg,id,sendername);
		mysql_tquery(SQL,var100,"","");
		format(string, sizeof(string), "You Muted By %s For %d Minutes | Reason : %s.", sendername,time,msg);
		mysql_format(SQL, var100, sizeof(var100), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",playeridd,string);
		mysql_tquery(SQL,var100,"","");
	}
	return 1;
}
CMD:persian(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    PlayerInfo[playerid][pLanguage] = 2;
    new str[356];
	mysql_format(SQL,str,356,"UPDATE users SET `Language`='2' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
	mysql_tquery(SQL,str,"","");
    SendClientMessage(playerid, COLOR_WHITE, "Zabane Shoma Taghir Yaft");
    return 1;
}
CMD:english(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    PlayerInfo[playerid][pLanguage] = 1;
    new str[356];
	mysql_format(SQL,str,356,"UPDATE users SET `Language`='1' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
	mysql_tquery(SQL,str,"","");
    SendClientMessage(playerid, COLOR_WHITE, "You have set your language english.");
    return 1;
}
CMD:giveallgun(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	new weaponid,ammo,string[256],sendername[30];
	if(sscanf(params, "ii", weaponid, ammo)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/giveallgun <Weapon ID> <Ammo>");
	GetPlayerName(playerid, sendername, sizeof(sendername));
	format(string, sizeof(string), "{FFA000}[AdmCmd]: {FFFFFF}%s has given to all players weapon: %d.",sendername,weaponid);
	ABroadCast(COLOR_RED2,string,1);
  	for(new i = 0; i <= MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			GivePlayerWeaponEx(i, weaponid, ammo);
		}
	}
	return 1;
}

CMD:ggall(playerid, params[])
{
  return cmd_giveallgun(playerid, params);
}

CMD:fuelcars(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
	    {
			new gasvehicle,sendername[30],string[256];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(sscanf(params, "i", gasvehicle)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/fuelcars <procent>");
		   	for(new c=0;c<CAR_AMOUNT;c++)
			{
				Gas[c] = gasvehicle;
			}
			format(string, sizeof(string), "{FFFFCC}All cars filled with %d procent fuel.",gasvehicle);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "{FFA000}{FFA000}[AdmCmd]: {FFFFFF}:{FFFFFF} %s has refuelled all vehicles with %d liters.",sendername,gasvehicle);
			ABroadCast(COLOR_RED2,string,1);
	    }
	    else
	    {
	        SendClientMessage(playerid,COLOR_ERROR, AdminOnly);
	        return 1;
	    }
	}
	return 1;
}
CMD:givegun(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
	   	if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			new id,gun,ammo,string[256],sendername[30],giveplayer[30];
			if(sscanf(params, "uii",id,gun,ammo))
   			{
   				SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/givegun <Name/Playerid> <Weapon ID> <Ammo>");
			    SCM(playerid,COLOR_WHITE,"1-Brass Knuckles; 2-Golf Club; 3-Nightstick; 4-Knife; 5-Baseball Bat; 6-Shovel; 7-Pool Cue; 8-Katana;");
		    	SCM(playerid,COLOR_WHITE,"9-Chainsaw; 10-Double-ended Dildo; 11-Dildo; 12-Vibrator; 13-Silver Vibrator; 14-Flowers; 15-Cane;");
		    	SCM(playerid,COLOR_WHITE,"16-Grenade; 17-Tear Gas; 18-Molotov Cocktail; 22-9mm; 23-Silenced 9mm; 24-Desert Eagle; 25-Shotgun;");
		    	SCM(playerid,COLOR_WHITE,"26-Sawnoff Shotgun; 27-Combat Shotgun; 28-Micro SMG/Uzi; 29-MP5; 30-AK-47; 31-M4; 32-Tec-9; 33-Country Rifle;");
		    	SCM(playerid,COLOR_WHITE,"34-Sniper Rifle; 35-RPG; 36-HS Rocket; 37-Flamethrower; 38-Minigun; 39-Satchel Charge; 40-Detonator;");
		    	SCM(playerid,COLOR_WHITE,"41-Spraycan; 42-Fire Extinguisher; 43-Camera; 44-Night Vis Goggles; 46-Parachute;");
			    return 1;
	    	}
	  	    if(gun < 1||gun > 46||gun==19||gun==20||gun==21||gun==45) return SCM(playerid,COLOR_WHITE,"Invalid weapond ID.");
		    if(ammo <1||ammo > 1000) return SCM(playerid,COLOR_WHITE,"Invalid ammo (1-1000).");
			if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
					GivePlayerWeaponEx(id, gun, ammo);
					GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "{FFA000}[AdmCmd]: {FFFFFF}%s has given weapon %d to %s with %d bullets.",sendername,gun,giveplayer,ammo);
            		ABroadCast(COLOR_RED2,string,1);
					if(GetPlayerState(id) == PLAYER_STATE_PASSENGER)
					{
				        new gun2,tmp;
				        GetPlayerWeaponData(id,5,gun2,tmp);
				        #pragma unused tmp
				        if(gun2)SetPlayerArmedWeapon(id,gun2);
				        else SetPlayerArmedWeapon(id,0);
					}
				}
			}
		    else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SendClientMessage(playerid,COLOR_ERROR, AdminOnly);
	}
	return 1;
}

CMD:gg(playerid, params[])
{
  return cmd_givegun(playerid, params);
}

CMD:killme(playerid, params[])
{
 	 if(PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "{CC0033}You Can't Use This Command When You Have Wanted Level");
     if(IsPlayerConnected(playerid))
         {
          SetPlayerHealthEx(playerid, -1);

          SCM(playerid, COLOR_LIGHTRED, "{FFFFFF}You Have Used Command {FF0000}/killme");
         }
     return 1;
}
CMD:healme(playerid, params[])
{
  	 if(PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "{CC0033}You Can't Use This Command When You Have Wanted");
     if(PlayerInfo[playerid][pAdmin] >= 1)
         {
          SetPlayerHealthEx(playerid, 100);

          SCM(playerid, COLOR_LIGHTRED, "You Healed Yourself");
         }
         else
         {
             SCM(playerid, COLOR_LIGHTRED, "You Have'nt Access To This Command");
         }
     return 1;
}
CMD:healall(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new sendername[25],string[256];
    GetPlayerName(playerid, sendername, sizeof(sendername));
    if(IsPlayerConnected(playerid))
    {
        if(PlayerInfo[playerid][pAdmin] >= 3)
        {
    		format(string, sizeof(string), "{FFA000}[AdmCmd]: {FFFFFF}%s has given to all players full hp.",sendername);
            ABroadCast(COLOR_RED,string,1);
            foreach(Player,i)
			{
				SetPlayerHealthEx(i, 100);
			}
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:serverrestart(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 12)
		{
	  		SCM(playerid, COLOR_WHITE, "You've Set A Timer For Restarting Server");
			OOCOff(COLOR_GENANNOUNCE,"Server Will Be Restarted After 30 Seconds");
			serverrestart2 = 30;
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:sethp(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new id,hp,string[256],giveplayer[30],sendername[30];
			if(sscanf(params, "ui", id, hp)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/sethp <Name/Playerid> <hp>");
	  		if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
					//if(PlayerInfo[id][pAdmin] >= PlayerInfo[playerid][pAdmin] && PlayerInfo[playerid][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GREY, "You Can't Use This Command For High Level Admin");
					SetPlayerHealthEx(id, hp);
					GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "{FFA000}[AdmCmd]: {FFFFFF}%s has set %s heal to %d.",sendername,giveplayer,hp);
            		ABroadCast(COLOR_RED2,string,1);
				}
			}
		    else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:setarmour(playerid, params[])
{
 	if(PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "{CC0033}You Can't Use This Command When You Have Wanted Level");
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new id,armor,string[100],giveplayer[30],sendername[30];
			if(sscanf(params, "ui", id, armor)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/setarmor <Name/Playerid> <armor>");
	  		if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
					SetPlayerArmourEx(id, armor);
					GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "{f03337}[WARNING]: Admin %s has set %s's armor to %d.", sendername,giveplayer,armor);
					ABroadCast(COLOR_WHITE,string,2);
				}
			}
		    else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:stats(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pLevel] < 1) return SCM(playerid,COLOR_WHITE,"{FFB870}Command currently inaccessible.");
	if(IsPlayerConnected(playerid))
	{
		ShowStats(playerid,playerid);
	}
	return 1;
}
CMD:colors(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
	    new string1[500], string2[500], string3[500], string4[500], string5[500], string6[500], string7[500], string8[500], string9[500], string10[500], string11[500], string12[500], string13[500], string14[500], string15[500], string16[500], string17[5000];
	    format(string1, sizeof(string1), "{FFFFFF}Normal colors:");
 		format(string2, sizeof(string2), "{000000}000 {FFFFFF}001 {33BDCC}002 {FB0404}003 {5C6C62}004 {B07384}005 {E8A33B}006 {6F92A8}007 {C8C2AC}008 {727F6D}009 {707A7B}010 {7A7C71}011 {669999}012 {706E61}013 {D4D0AB}014 {A7A78F}015 {658A5F}016 {9A4042}017 {AA4354}018 {C8C09C}019");
		format(string3, sizeof(string3), "{6B7B8A}020 {995B5E}021 {884C56}022 {B2A88F}023 {66685D}024 {5C5E53}025 {ABAA8E}026 {787065}027 {C7C2A9}028 {9E987E}029 {60453C}030 {704743}031 {C7C2A9}032 {A8A890}033 {94947C}034 {8B856F}035 {595B50}036 {5C6957}037 {ACB28E}038 {959B8F}039");
 		format(string4, sizeof(string4), "{403D34}040 {C7C2A9}041 {924648}042 {6F3039}043 {C7C2A9}044 {6F3E3A}045 {AA9E6E}046 {89815D}047 {C9C097}048 {D5D0B0}049 {A5A58D}050 {5D7962}051 {869284}052 {43505F}053 {535561}054 {988066}055 {A09F8D}056 {A2906C}057 {843C3D}058 {657373}059");
        format(string5, sizeof(string5), "{A6A086}060 {997E53}061 {74393B}062 {9DA188}063 {CEC9A9}064 {B6AF61}065 {69524C}066 {979C96}067 {D4CE9C}068 {C8B191}069 {9E4849}070 {919C94}071 {706F5D}072 {A2A980}073 {6F3C3B}074 {414141}075 {ACA384}076 {AEA07B}077 {8C4541}078 {325068}079");
        format(string6, sizeof(string6), "{935558}080 {AB9E77}081 {974C4C}082 {525F59}083 {735D52}084 {A84F63}085 {577C46}086 {5C7883}087 {804547}088 {AAA27E}089 {B2AC92}090 {565A59}091 {7C7B69}092 {337B7A}093 {3F6167}094 {4D5B5B}095 {BEB999}096 {99A99F}097 {92A298}098 {D6BB8C}099");
        format(string7, sizeof(string7), "{6B9192}100 {525659}101 {C6A67D}102 {3D6473}103 {A38F6C}104 {838673}105 {376879}106 {AEA07B}107 {54697E}108 {686964}109 {8F7B60}110 {989785}111 {879691}112 {7A6957}113 {6E8467}114 {9E424F}115 {9C414E}116 {904446}117 {BEC0B2}118 {88735E}119");
        format(string8, sizeof(string8), "{AB977C}120 {80373E}121 {767966}122 {715C40}123 {8E4244}124 {43586D}125 {E27791}126 {202020}127");
        format(string9, sizeof(string9), "{FFFFFF}Hidden colors:");
        format(string10, sizeof(string10), "{177318}128 {220605}129 {11537A}130 {452A0D}131 {561E1D}132 {020700}133 {252259}134 {2C89AA}135 {894DBE}136 {36973A}137 {B7B7B7}138 {474C8E}139 {84878C}140 {817867}141 {817B27}142 {69506E}143 {593D6F}144 {8DB96E}145 {825076}146 {6B286D}147");
        format(string11, sizeof(string11), "{1D1D14}148 {1F1307}149 {202519}150 {2C4530}151 {1F4C97}152 {2E5F43}153 {1B9A4A}154 {1C9A97}155 {999977}156 {7C8499}157 {992E1E}158 {2E1E08}159 {122507}160 {9A3E4D}161 {1E4C99}162 {198182}163 {1A2A28}164 {156171}165 {1E6582}166 {6C4099}167");
        format(string12, sizeof(string12), "{49190B}168 {79739A}169 {746D99}170 {53397B}171 {21230B}172 {3F190C}173 {46210E}174 {991F1E}175 {8D4C8E}176 {7F5B7F}177 {7B3E81}178 {3C1738}179 {723518}180 {7A1819}181 {833419}182 {8C301B}183 {7F3E54}184 {7B6D7E}185 {020C03}186 {072406}187");
        format(string13, sizeof(string13), "{143112}188 {182F1A}189 {652A4E}190 {348456}191 {999691}192 {808C98}193 {99991D}194 {7E994C}195 {839393}196 {76831E}197 {2C3D99}198 {3B3A0A}199 {8A794E}200 {0E1F4A}201 {16371B}202 {15273B}203 {385774}204 {06081F}205 {071427}206 {203A4B}207");
        format(string14, sizeof(string14), "{2C508A}208 {15426C}209 {0F3252}210 {26175D}211 {692115}212 {8C8C94}213 {526015}214 {090F03}215 {8D573B}216 {53888E}217 {985C52}218 {99581E}219 {993A62}220 {99904F}221 {9A311E}222 {0C1842}223 {521F1E}224 {42420C}225 {4D991D}226 {082A1C}227");
        format(string15, sizeof(string15), "{95821C}228 {197F19}229 {3C141F}230 {745118}231 {893F8E}232 {7D1A6C}233 {0C370A}234 {28450D}235 {071E24}236 {784472}237 {8A6539}238 {732518}239 {319491}240 {57941D}241 {58163C}242 {1B8A2E}243 {38160D}244 {031904}245 {355D8E}246 {2E3F5A}247");
        format(string16, sizeof(string16), "{531C2A}248 {4E0E29}249 {706D67}250 {3C3E43}251 {2E2D33}252 {7B7E7D}253 {4A4542}254 {28334F}255");
		format(string17, sizeof(string17), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",string1,string2,string3,string4, string5, string6, string7, string8, string9, string10, string11, string12, string13, string14, string15, string16);
		ShowPlayerDialog(playerid, DIALOG_COLORID, DIALOG_STYLE_MSGBOX, "Vehicle Colors list - /carcolor", string17, "Close","");
	}
	return 1;
}
CMD:report(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
        ShowPlayerDialog(playerid, DIALOG_REPORT_AP1, DIALOG_STYLE_INPUT, "Another Problem", "Type Your Problem\nDon't Write I Need An Admin ! Write Your Problem Correctly", "Submit","");
	}
	return 1;
}
CMD:reports(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new string[128],cheaters=0,count=0;
		if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		SendClientMessage(playerid, COLOR_YELLOW, "|____________ REPORTS ____________|");
		foreach(Player, i)
		{
		   if(strcmp(cheattext[i], "NULL", true))
		   {
				SendClientMessage(playerid, COLOR_BLUE, cheattext[i]);
				count++;
           }
	    }
		foreach(Player, i)
		{
			if(strcmp(reporttext[i], "NULL", true))
			{
				SendClientMessage(playerid, COLOR_RED, reporttext[i]);
				count++;
			}
			if(reportcheater[i] != -1)
			{
				cheaters++;
			}
		}
		if(cheaters != 0)
		{
			format(string,sizeof(string),"Cheaters: %d",cheaters);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
		}
		if(count == 0 && cheaters == 0)
		{
			SendClientMessage(playerid, COLOR_WHITE, "No Reports Available At This Time");
		}
 	}
	return 1;
}
CMD:dr(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			new string[256],id,sendername[30];
			if(sscanf(params, "u",id)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/dr <Name/Playerid>");
			if(!strcmp(reporttext[id], "NULL", true)) return SendClientMessage(playerid, COLOR_WHITE, "This player don't have an active report.");
			ReportTime[id] = 0;
			reportcheater[id] = -1;
			reportreason[id] = 0;
			if(playerreported[id] != -1)
			{
				reportreason[playerreported[id]] = 0;
			}
			playerreported[id] = -1;
			KillTimer(timerreport[id]);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string,sizeof(string),"[AdmWarn]: {05D600}%s {FFFFFF}Deleted [ {009BFF}%s {FFFFFF}]",sendername,reporttext[id]);
			ABroadCast(COLOR_AdminWarn,string,1);
			format(string,sizeof(string),"{FFFFFF}Your Report Has Been Deleted By Admin {00FF00}%s {FFFFFF}| Use /Report For Important Subjects",sendername);
			SendClientMessage(id, COLOR_ADMIN, string);
			format(reporttext[id], 30, "NULL");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, AdminOnly);
	}
	return 1;
}
CMD:cr(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			new string[128],id,sendername[30],reason[128],giveplayer[30];
			if(sscanf(params, "uS(NULL)[128]",id,reason)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/cr <Name/Playerid> <Text(Optional)>");
			if(!strcmp(reporttext[id], "NULL", true)) return SendClientMessage(playerid, COLOR_WHITE, "This player don't have an active report.");
			ReportTime[id] = 0;
			reportcheater[id] = -1;
			reportreason[id] = 0;
			if(playerreported[id] != -1)
			{
				reportreason[playerreported[id]] = 0;
			}
			playerreported[id] = -1;
			KillTimer(timerreport[id]);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(id, giveplayer, sizeof(giveplayer));
			format(string,sizeof(string),"[AdmWarn]: {00FF00}%s {FFFFFF}Closed [{009BFF}%s]",sendername,reporttext[id]);
			ABroadCast(COLOR_AdminWarn,string,1);
			format(string,sizeof(string),"Your Report Was Closed By {00FF00}%s {FFFFFF}| Use /Report For Important Subjects",sendername);
			SendClientMessage(id, COLOR_ADMIN, string);
			if(strcmp(reason, "NULL", true))
			{
				format(string,sizeof(string),"{FF0000}[/cr] {00FF00}%s {FFFFFF}==>{009BFF} %s :{FFFFFF} %s",sendername,giveplayer,reason);
				ABroadCast(COLOR_YELLOW,string,1);
				format(string,sizeof(string),"{FFFFFF}Admin {00FF00}%s : {009BFF}%s",sendername,reason);
				SendClientMessage(id, COLOR_ADMIN, string);
			}
			format(reporttext[id], 30, "NULL");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, AdminOnly);
	}
	return 1;
}
CMD:n(playerid, params[])
{
    if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "You Must To Login First");
    if(IsPlayerConnected(playerid))
	{
	    new message[128], string[256];
	    if(sscanf(params, "s[128]",message))
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FF0000}[SYNTAX]: {FFFFFF}/newbie <Message>");
			return 1;
		}
		else
		{
			if(FindIP(message)) /// Anti-Reclama
	        {
		        new advertiser[MAX_PLAYER_NAME];
		        GetPlayerName(playerid, advertiser, sizeof(advertiser));
		        format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /n.", advertiser, playerid, message);
				ABroadCast(COLOR_WHITE,string,1);
	        }
	        for(new i; i < sizeof(TLD); i++)
			{
				if(strfind(message, TLD[i], true) != -1)
				{
					if(strfind(message, "www.", true) != -1 || strfind(message, "87.", true) != -1 || strfind(message, "lfg", true) != -1 || strfind(message, "tzone", true) != -1 || strfind(message, "rpg", true) != -1 || strfind(message, "ip", true) != -1) break;
					new advertiser[MAX_PLAYER_NAME];
					GetPlayerName(playerid, advertiser, sizeof(advertiser));
					format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /n.", advertiser, playerid, message);
					ABroadCast(COLOR_WHITE,string,1);
				}
			}
	    	if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] <= 0)
			{
			    new sendername[30],stringmut[200];
		    	if(PlayerInfo[playerid][pNewbieTimeout] == 0)
				{
      				if(PlayerInfo[playerid][pNMuted] == 0)
					{
   	 					GetPlayerName(playerid, sendername, sizeof(sendername));
				    	format(string, sizeof(string), "* (%d) %s - lvl %d: %s", playerid, sendername, PlayerInfo[playerid][pLevel], message);
				    	HLChat(COLOR_NEWBIE,string);
				    	ABroadCast(COLOR_NEWBIE, string,1);
				    	format(string, sizeof(string), "* Newbie %s: %s", sendername, message);
				    	format(PlayerInfo[playerid][pNMessage],256,string);
						format(PlayerInfo[playerid][pNMessage2],256,message);
						SendClientMessage(playerid,COLOR_NEWBIE,PlayerInfo[playerid][pNMessage]);
						PlayerInfo[playerid][pNewbieTimeout] = 60;
						PlayerInfo[playerid][pFirstAnswer] = 1;
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "You are muted from the newbie chat!");
				}
				else
				{
			    	format(stringmut, sizeof(stringmut), "You Can Use /N Each %d Seconds", PlayerInfo[playerid][pNewbieTimeout]);
                	SendClientMessage(playerid,COLOR_WHITE,stringmut);
				}
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "You are an admin/helper.");
		}
	}
	return 1;
}
CMD:togn(playerid, params[])
{
	if(PlayerInfo[playerid][pNewbieEnabled] == 1)
	{
	    PlayerInfo[playerid][pNewbieEnabled] = 0;
	    SendClientMessage(playerid, COLOR_WHITE, "You will no longer see newbie chat.");
	}
	else
	{
	    PlayerInfo[playerid][pNewbieEnabled] = 1;
	    SendClientMessage(playerid, COLOR_WHITE, "You will now see newbie chat.");
	}
	return 1;
}
CMD:viewnewbie(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
	{
        SendClientMessage(playerid, COLOR_TEAL, "---------------------------------------------------------------------------------------------------------------------------------");
        foreach(Player, x)
		{
			if(PlayerInfo[x][pNMessage2] != 0)
			{
			    new string[256];
				format(string, sizeof(string), "Requested by: %s | Problem: %s", PlayerInfo[x][pNormalName], PlayerInfo[x][pNMessage2]);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
        SendClientMessage(playerid, COLOR_TEAL, "---------------------------------------------------------------------------------------------------------------------------------");
	}
	return 1;
}
CMD:nre(playerid, params[])
{
    new id,sendername[30],giveplayer[30],string[256];
    if(sscanf(params, "u", id))
	{
		SendClientMessage(playerid, COLOR_WHITE, "{FF0000}[SYNTAX]: {FFFFFF}/nre <Name/Playerid>");
		return 1;
	}
	else
	{
	    if(IsPlayerConnected(id))
		{
	        if(PlayerInfo[id][pNMessage] == 0) return SendClientMessage(playerid, COLOR_WHITE, "This player doesn't have a question.");
	        if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
			{
         		GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
    			PlayerInfo[playerid][pNRE] = id;
    			PlayerInfo[playerid][pHelpedPlayers]++;
   				Update(playerid,pHelpedPlayersx);
    			format(string, sizeof(string), "Admin/Helper %s has accepted %s question.",sendername,giveplayer);
                ABroadCast(COLOR_ADMCHAT, string,1);
	     		HLChat(COLOR_ADMCHAT,string);
			}
			else return SendClientMessage(playerid, COLOR_WHITE,"You aren't an admin/helper.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "The specified player ID is either not connected or has not authenticated.");
	}
	return 1;
}
CMD:nr(playerid, params[])
{
    if(PlayerInfo[playerid][pHelper] >= 1 || PlayerInfo[playerid][pAdmin] >= 1)
	{
	    new sendername[30],giveplayer[30],message[128],string[256];
	    if(sscanf(params, "s[128]",message))
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FF0000}[SYNTAX]: {FFFFFF}/nr <Message>");
			return 1;
		}
		else
		{
		    GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(PlayerInfo[playerid][pNRE] != -1)
		    {
		        GetPlayerName(PlayerInfo[playerid][pNRE], giveplayer, sizeof(giveplayer));
    			if(PlayerInfo[playerid][pAdmin] >= 1)
				{
       				format(string, sizeof(string), "* Admin %s: @%s, %s", sendername, giveplayer, message);
				}
				else if(PlayerInfo[playerid][pHelper] >= 1)
				{
					format(string, sizeof(string), "* Helper %s: @%s, %s", sendername, giveplayer, message);
				}
				foreach(Player,x)
				{
    				if(PlayerInfo[x][pNewbieEnabled] == 1)
					{
        				if(PlayerInfo[x][pAdmin] >= 1 || PlayerInfo[x][pHelper] >= 1 || x == PlayerInfo[playerid][pNRE])
						{
							SendClientMessage(x,COLOR_YELLOW,string);
						}
						else
						{
  							if(PlayerInfo[PlayerInfo[playerid][pNRE]][pFirstAnswer] != 0)
							  {
								SendClientMessage(x,COLOR_NEWBIE,PlayerInfo[PlayerInfo[playerid][pNRE]][pNMessage]);
								SendClientMessage(x,COLOR_NEWBIE,string);
							}
							else
							{
							    SendClientMessage(x,COLOR_NEWBIE,string);
							}
						}
					}
				}
				PlayerInfo[PlayerInfo[playerid][pNRE]][pNMessage] = 0;
				PlayerInfo[PlayerInfo[playerid][pNRE]][pNMessage2] = 0;
				PlayerInfo[PlayerInfo[playerid][pNRE]][pFirstAnswer] = 0;
				PlayerInfo[playerid][pNRE] = -1;
			}
			else
			{
		    	if(PlayerInfo[playerid][pAdmin] >= 1)
				{
		    		format(string,sizeof(string),"* Admin %s: %s",sendername,message);
				}
				else if(PlayerInfo[playerid][pHelper] >= 1)
				{
		    		format(string,sizeof(string),"* Helper %s: %s",sendername,message);
				}
		    	foreach(Player,x)
				{
					if(PlayerInfo[x][pNewbieEnabled] == 1)
					{
						SendClientMessage(x,COLOR_NEWBIE,string);
					}
				}
			}
		}
	}
	return 1;
}
CMD:ndelete(playerid, params[])
{
	if(PlayerInfo[playerid][pHelper] >= 1 || PlayerInfo[playerid][pAdmin] >= 1)
	{
		new sendername[30],giveplayer[30],message[128],string[256],string2[256];
		if(sscanf(params, "s[128]",message))
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FF0000}[SYNTAX]: {FFFFFF}/ndelete <Message>");
			return 1;
		}
		else
		{
		    GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(PlayerInfo[playerid][pNRE] != -1)
		    {
		        GetPlayerName(PlayerInfo[playerid][pNRE], giveplayer, sizeof(giveplayer));
    			if(PlayerInfo[playerid][pAdmin] >= 1)
				{
       				format(string, sizeof(string), "* Admin %s: @%s, %s (/ndelete)", sendername, giveplayer, message);
					format(string2, sizeof(string2), "* Admin %s: @%s, %s", sendername, giveplayer, message);
				}
				else if(PlayerInfo[playerid][pHelper] >= 1)
				{
					format(string, sizeof(string), "* Helper %s: @%s, %s (/ndelete)", sendername, giveplayer, message);
					format(string2, sizeof(string2), "* Helper %s: @%s, %s", sendername, giveplayer, message);
				}
				foreach(Player,x)
				{
    				if(PlayerInfo[x][pNewbieEnabled] == 1)
					{
        				if(PlayerInfo[x][pAdmin] >= 1 || PlayerInfo[x][pHelper] >= 1)
						{
							SendClientMessage(x,COLOR_YELLOW,string);
						}
						if(x == PlayerInfo[playerid][pNRE])
						{
							SendClientMessage(x,COLOR_YELLOW,string2);
						}
					}
				}
				PlayerInfo[PlayerInfo[playerid][pNRE]][pNMessage] = 0;
				PlayerInfo[PlayerInfo[playerid][pNRE]][pNMessage2] = 0;
				PlayerInfo[PlayerInfo[playerid][pNRE]][pFirstAnswer] = 0;
				PlayerInfo[playerid][pNRE] = -1;
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "This player don't have an active newbie question.");
		}
	}
	return 1;
}
CMD:nmute(playerid, params[])
{
    if(PlayerInfo[playerid][pHelper] >= 1 || PlayerInfo[playerid][pAdmin] >= 1)
	{
        new id,time,sendername[30],giveplayer[30],string[256];
    	if(sscanf(params, "ud", id, time))
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/nmute <Name/Playerid> <Minutes>");
			return 1;
		}
		else
		{
		    if(IsPlayerConnected(id))
			{
		        GetPlayerName(playerid, sendername, sizeof(sendername));
		        GetPlayerName(id, giveplayer, sizeof(giveplayer));
		        PlayerInfo[id][pNMuted] = time * 60;
		        Update(id,pNMutedx);
		        format(string, sizeof(string), "%s has muted you on /n for %d minutes.", sendername, time);
		        SendClientMessage(id,COLOR_WHITE,string);
		        format(string, sizeof(string), "%s has been muted from /n by %s for %d minutes.", giveplayer, sendername, time);
                ABroadCast(COLOR_RED,string,1);
				HLChat(COLOR_RED,string);
				format(string, sizeof(string), "You have muted %s for %d minutes.", giveplayer, time);
		        SendClientMessage(playerid,COLOR_WHITE,string);
			}
			else return SendClientMessage(playerid, COLOR_GREY, "The specified player ID is either not connected or has not authenticated.");
		}
	}
	return 1;
}
CMD:cheats(playerid, params[])
{
    new string1[128],id,reason[300],sendername[30],giveplayer[30],string[256];
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(ReportTime[playerid] == 2) return SCM(playerid, COLOR_WHITE,"{f03337}After 3Minutes You Can Use This Command");
    if(IsPlayerConnected(playerid))
    {
   		if(sscanf(params, "us[300]", id, reason)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/cheats <id cheater> <reason>");
	    if(IsPlayerConnected(id))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        GetPlayerName(id, giveplayer, sizeof(giveplayer));
			SendClientMessage(playerid, COLOR_YELLOW, "Report submitted.");
	        format(string, sizeof(string), "%s [%d] was reported for cheating by %s: %s.",giveplayer,id,sendername,reason);
	        format(cheattext[playerid], sizeof(string1), string1);
            reportcheater[playerid] = id;
			ABroadCast(COLOR_REPORT,string,1);
			reportreason[id] = 3;
			ReportTime[playerid] = 3;
 			timerreport[playerid] = SetTimerEx("Reportul", 180000, 0, "%d", playerid);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "The specified player ID is either not connected or has not authenticated.");
	}
	return 1;
}
CMD:resethelp(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 8)
	{
        new
            id;
        if(sscanf(params, "u", id))
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/resethelp <Name/Playerid>");
			return 1;
		}
		else
		{
	    	if(IsPlayerConnected(id))
			{
	        	if(PlayerInfo[id][pHelpedPlayers] >= 1)
				{
				    new sendername[30],giveplayer[30],string[256];
	            	PlayerInfo[id][pHelpedPlayers] = 0;
	            	Update(id,pHelpedPlayersx);
	            	GetPlayerName(playerid, sendername, sizeof(sendername));
	            	GetPlayerName(id, giveplayer, sizeof(giveplayer));
	            	format(string, sizeof(string), "Your helped players has been reseted by admin %s.", sendername);
					SendClientMessage(id, COLOR_YELLOW, string);
			 		format(string, sizeof(string), "You have reseted %s helped players.", giveplayer);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "This player doesn't have helped players.");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "The specified player ID is either not connected or has not authenticated.");
		}
	}
	return 1;
}
CMD:email(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
	    new result[300],message[300],string[5000],read,message2[40],finalmessage[40],query[500],emailid,idd=0;
	    format(query, sizeof(query), "SELECT * FROM `emails` WHERE `playerid` = '%d' ORDER BY `ID` DESC LIMIT 10", PlayerInfo[playerid][pSQLID]);
		new Cache: emailresult = mysql_query(SQL, query);
		if(cache_get_row_count() > 0)
		{
			for(new i, j = cache_get_row_count (); i != j; ++i)
			{
		    	cache_get_field_content(i, "Message", result); format(message, sizeof(message), result);
		    	read                    = cache_get_field_content_int(i, "EmailRead");
		    	emailid                 = cache_get_field_content_int(i, "ID");
		    	EmailId[playerid][idd] = emailid;
		    	idd++;
		    	if(strlen(message) > 28)
		    	{
		    		strmid(message2, message, 0, 29, sizeof(message2));
      				format(finalmessage,sizeof(finalmessage), "%s...",message2);
				}
		   	 	if(read > 0)
		    	{
		    		format(string, sizeof(string), "%s[NEW]%s\n", string, finalmessage);
				}
				else
				{
			    	format(string, sizeof(string), "%s%s\n", string, finalmessage);
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "You don't have a email!");
		cache_delete(emailresult);
        ShowPlayerDialog(playerid,DIALOG_EMAILS,DIALOG_STYLE_LIST,"Emails",string,"Read","Exit");
	}
	return 1;
}
CMD:admins(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
        new string[200],sendername[30];
		SendClientMessage(playerid, COLOR_RED2, "{FF0000}|________ {B98300}New Land Online Admins {FF0000}________|");
		foreach(Player,i)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[i][pAdmin] == 1)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{00FF00} (%d) %s - {FF0000}Admin Level 1", i, sendername);
					SendClientMessage(playerid, -1, string);

				}
			    if(PlayerInfo[i][pAdmin] == 2)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{00FF00} (%d) %s - {FF0000}Admin Level 2", i, sendername);
					SendClientMessage(playerid, -1, string);

				}
			    if(PlayerInfo[i][pAdmin] == 3)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{00FF00} (%d) %s - {FF0000}Admin Level 3", i, sendername);
					SendClientMessage(playerid, -1, string);

				}
			    if(PlayerInfo[i][pAdmin] == 4)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{00FF00} (%d) %s - {FF0000}Admin Level 4", i, sendername);
					SendClientMessage(playerid, -1, string);

				}
			    if(PlayerInfo[i][pAdmin] == 5)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{00FF00} (%d) %s - {FF0000}Admin Level 5", i, sendername);
					SendClientMessage(playerid, -1, string);

				}
				if(PlayerInfo[i][pAdmin] == 6)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{00FF00} (%d) %s - {FF0000}Admin Level 6", i, sendername);
					SendClientMessage(playerid, -1, string);

				}
				if(PlayerInfo[i][pAdmin] == 7 && EsteListat[i] == 1)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{00FF00} (%d) %s - {FF0000}Donater", i, sendername);
					SendClientMessage(playerid, -1, string);

				}
				if(PlayerInfo[i][pAdmin] == 8 && EsteListat[i] == 1)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{00FF00} (%d) %s - {FF0000}SuperVisor", i, sendername);
					SendClientMessage(playerid, -1, string);

				}
				if(PlayerInfo[i][pAdmin] == 9)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{00FF00} (%d) %s - {FF0000}Operator", i, sendername);
					SendClientMessage(playerid, -1, string);

				}
				if(PlayerInfo[i][pAdmin] == 10)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{00FF00} (%d) %s - {FF0000}Operator Plus", i, sendername);
					SendClientMessage(playerid, -1, string);

				}
				if(PlayerInfo[i][pAdmin] == 11 && EsteListat[i] == 1)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{00FF00} (%d) %s - {FF0000}Manager", i, sendername);
					SendClientMessage(playerid, -1, string);

				}
				if(PlayerInfo[i][pAdmin] == 12 && EsteListat[i] == 1)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{00FF00} (%d) %s - {FF0000}Developer", i, sendername);
					SendClientMessage(playerid, -1, string);

				}
				if(PlayerInfo[i][pAdmin] == 13 && EsteListat[i] == 1)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{00FF00} (%d) %s - {FF0000}Owner", i, sendername);
					SendClientMessage(playerid, -1, string);

				}
				if(PlayerInfo[i][pAdmin] == 14 && EsteListat[i] == 1)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "{00FF00} (%d) %s - {FF0000}Founder", i, sendername);
					SendClientMessage(playerid, -1, string);

				}
			}
	    }
 	}
	return 1;
}
CMD:helpers(playerid, params[])
{

	if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_ERROR, "You Have'nt Logged In");
    if(IsPlayerConnected(playerid))
	{
        new string[200],sendername[30];
		SendClientMessage(playerid, 0x95C730FF, "{FF0000}|________ {B98300}New Land Online Helpers {FF0000}________|");
		foreach(Player,i)
		{
		    if(IsPlayerConnected(i))
			{
				if(PlayerInfo[i][pHelper] == 1)
			    {
			    	GetPlayerName(i, sendername, sizeof(sendername));
				    format(string, 256, "{FF6347}ID: %d Nick: %s {FF9600}Helper Level: 1", i, sendername);
			        SendClientMessage(playerid,-1, string);
			    }
       			if(PlayerInfo[i][pHelper] == 2)
			    {
			    	GetPlayerName(i, sendername, sizeof(sendername));
				    format(string, 256, "{FF6347}ID: %d Nick: %s {FF9600}Helper Level: 2", i, sendername);
			        SendClientMessage(playerid,-1, string);
			    }
       			if(PlayerInfo[i][pHelper] == 3)
			    {
			    	GetPlayerName(i, sendername, sizeof(sendername));
				    format(string, 256, "{FF6347}ID: %d Nick: %s {FF9600}Helper Level: 3", i, sendername);
			        SendClientMessage(playerid,-1, string);
			    }
			}
	    }
 	}
 	SendClientMessage(playerid, 0x95C730FF, "______________________________________________________");
	return 1;
}
CMD:hduty(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if (PlayerInfo[playerid][pHelper] >= 1)
	{
	    if(HelperDuty[playerid] == 1)
	    {
	        new sendername[MAX_PLAYER_NAME], string[256];
  			HelperDuty[playerid] = 0;
	       	SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "{FFFFFF}Helper{FE6156} %s {FFFFFF} Is Now Off Duty !", sendername);
			SendClientMessageToAll(COLOR_DBLUE,string);
	       	SetPlayerHealthEx(playerid,100);
	       	SetPlayerArmourEx(playerid,0);
			//SetPlayerSkin(playerid, 217);
		}
		else
	    {
	    	new sendername[MAX_PLAYER_NAME], string[256];
			HelperDuty[playerid] = 1;
			SetPlayerHealthEx(playerid,999);
			SetPlayerArmourEx(playerid,999);
			//SetPlayerSkin(playerid, 217);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "{FFFFFF}Helper{FE6156} %s {FFFFFF}Is Now On Duty | You Can Use /N Command", sendername);
			SendClientMessageToAll(COLOR_DBLUE,string);
	    }
	}
	else
	{
		SendClientMessage(playerid,COLOR_GREY,"Error: You're not helper.");
	}
	return 1;
}
CMD:minigun(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}{FFFFFF}You Account Is {ff0000}Locked{ffffff} | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		GivePlayerWeaponEx(playerid, 38, 1000);
	    SendClientMessage(playerid, COLOR_YELLOW, "You Recieved Minigun !");
	}
	return 1;
}

CMD:mg(playerid, params[])
{
  return cmd_minigun(playerid, params);
}

CMD:drag(playerid, params[]) 
{ 
    new name[MAX_PLAYER_NAME], sendername[MAX_PLAYER_NAME], id; 
    GetPlayerName(id, name,sizeof(name)); 
    if(IsPlayerConnected(playerid)) 
	{ 
        if(PlayerInfo[playerid][pAdmin] < 1) 
        { 
        SCM(playerid,COLOR_ERROR,"Error: Your admin level isn't high enough to use this command"); 
        return 1; 
        } 
		if(sscanf(params,"i",id)) 
		{ 
        SendClientMessage(playerid, COLOR_YELLOW, "Syntax: /drag <PlayerID>"); 
        return 1; 
		} 
		new newcar = GetPlayerVehicleID(playerid); 
		if(!newcar) { SCM(playerid,COLOR_ERROR,"You are not in a vehicle."); return 1; } 
		if(IsPlayerConnected(id)) 
		{ 
            if(id != INVALID_PLAYER_ID) 
            { 
                PutPlayerInVehicle(id,newcar,1); 
                GetPlayerName(playerid, sendername, sizeof(sendername)); 
                new sttr[256]; 
                format(sttr,256,"{FFFFFF}Admin {00FF00}%s{FFFFFF} Drags You To His/Her Vehicle .",sendername); 
                SCM(id,COLOR_AdminWarn,sttr); 
                SCM(playerid,COLOR_ERROR,"Player Dragged ."); 
            } 
        } 
    }
	return 1;
}  

CMD:gotoint(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}{FFFFFF}You Account Is {ff0000}Locked{ffffff} | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		new idx, tmp[256];
		tmp = strtok(params, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD5, "{FF9900}[SYNTAX]: {33CCFF} /gotoint [ID 0-146]");
			return 1;
		}
		new playa, string[512];
		playa = strval(tmp);
		if(playa < 146 && playa >= 0)
		{
			format(string, sizeof(string), "Interior %d: %s", playa, IntName[playa]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			SetPlayerInterior(playerid, IntArray2[playa][0]);
			SetPlayerPos(playerid, IntArray[playa][0], IntArray[playa][1], IntArray[playa][2]);
			SetPlayerFacingAngle(playerid, IntArray[playa][3]);
			return 1;
		}
	}
	return 1;
}

CMD:gotohint(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}{FFFFFF}You Account Is {ff0000}Locked{ffffff} | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pAdmin] >= 5)
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_LIGHTBLUE,"Get Out Of Car !");
	new idx, tmp[256];
	tmp = strtok(params,idx);
	if(!strlen(tmp)) return SCM(playerid,COLOR_LIGHTBLUE,"{FF9900}[SYNTAX]: {33CCFF} /gotohint <Interior ID(1-27)>");
	new numehouse = strval(tmp);
	new Float:entx,Float:enty,Float:entz,inth;
	if(numehouse == 1)
	{
		entx = 2468.365966;
		enty = -1698.416625;
		entz = 1013.507812;
		inth = 2;
	}
	if(numehouse == 2)
	{
		entx = 2495.723876;
		enty = -1693.244995;
		entz = 1014.742187;
		inth = 3;
	}
	if(numehouse == 3)
	{
		entx = 2233.672363;
		enty = -1114.459106;
		entz = 1050.882812;
		inth = 5;
	}
	if(numehouse == 4)
	{
		entx = 2195.893310;
		enty = -1204.445678;
		entz = 1049.023437;
		inth = 6;
	}
	if(numehouse == 5)
	{
		entx = 2317.994384;
		enty = -1025.836425;
		entz = 1050.210937;
		inth = 9;
	}
	if(numehouse == 6)
	{
		entx = 2260.268310;
		enty = -1136.028930;
		entz = 1050.632812;
		inth = 10;
	}
	if(numehouse == 7)
	{
		entx = 235.288238;
		enty = 1187.125488;
		entz = 1080.257812;
		inth = 3;
	}
	if(numehouse == 8)
	{
		entx = 225.314559;
		enty = 1239.864135;
		entz = 1082.140625;
		inth = 2;
	}
	if(numehouse == 9)
	{
		entx = 222.998306;
		enty = 1287.692382;
		entz = 1082.140625;
		inth = 1;
	}
	if(numehouse == 10)
	{
		entx = 226.973403;
		enty = 1114.219360;
		entz = 1080.996459;
		inth = 5;
	}
	if(numehouse == 11)
	{
		entx = 295.228607;
		enty = 1472.994995;
		entz = 1080.257812;
		inth = 15;
	}
	if(numehouse == 12)
	{
		entx = 447.062316;
		enty = 1397.541625;
		entz = 1084.304687;
		inth = 2;
	}
	if(numehouse == 13)
	{
		entx = 226.921157;
		enty = 1114.367797;
		entz = 1080.996093;
		inth = 5;
	}
	if(numehouse == 14)
	{
		entx = 260.931701;
		enty = 1284.655761;
		entz = 1080.257812;
		inth = 4;
	}
	if(numehouse == 15)
	{
		entx = 24.113548;
		enty = 1340.711914;
		entz = 1084.375000;
		inth = 10;
	}
	if(numehouse == 16)
	{
		entx = 221.947799;
		enty = 1140.788696;
		entz = 1082.609375;
		inth = 4;
	}
	if(numehouse == 17)
	{
		entx = 2324.500976;
		enty = -1148.895507;
		entz = 1050.710083;
		inth = 12;
	}
	if(numehouse == 18)
	{
		entx = 22.807277;
		enty = 1403.864746;
		entz = 1084.429687;
		inth = 5;
	}
	if(numehouse == 19)
	{
		entx = 140.445510;
		enty = 1366.469726;
		entz = 1083.859375;
		inth = 5;
	}
	if(numehouse == 20)
	{
		entx = 234.098831;
		enty = 1064.388549;
		entz = 1084.211303;
		inth = 6;
	}
	if(numehouse == 21)
	{
		entx = 2217.460449;
		enty = -1076.410522;
		entz = 1050.484375;
		inth = 1;
	}
	if(numehouse == 22)
	{
		entx = 2365.198974;
		enty = -1135.136596;
		entz = 1050.875000;
		inth = 8;
	}
	if(numehouse == 23)
	{
		entx = -42.693019;
		enty = 1406.028686;
		entz = 1084.429687;
		inth = 8;
	}
	if(numehouse == 24)
	{
		entx = 2285.795166;
		enty = -1137.499755;
		entz = 1050.898437;
		inth = 11;
	}
	if(numehouse == 25)
	{
		entx = 83.098403;
		enty = 1322.736083;
		entz = 1083.866210;
		inth = 9;
	}
	if(numehouse == 26)
	{
		entx = 260.850860;
		enty = 1238.124633;
		entz = 1084.257812;
		inth = 9;
	}
	if(numehouse == 27)
	{
		entx = 225.625717;
		enty = 1022.504638;
		entz = 1084.014648;
		inth = 7;
	}
	SetPlayerPos(playerid,entx,enty,entz);
	SetPlayerInterior(playerid,inth);
	return 1;
}

/*
CMD:asus(playerid, params[])
{
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 3)
            {
                new x_nr[256], idx;
                x_nr = strtok(params, idx);
                if(!strlen(x_nr)) 
				{
                    SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/asus [Driving|Weapons] [Playerid] [Jours]");
                    return true;
                }
                else if(strcmp(x_nr,"Weapons",true) == 0)
                {
					new tmp[256], sendername[128], giveplayer[128], giveplayerid[128];
                    tmp = strtok(params, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/asus Weapons [Playerid] [Hours]");
                        return true;
                    }
                    giveplayerid = ReturnUser(tmp);
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    new stime = 1;
                    tmp = strtok(params, idx);
                    stime = strval(tmp);

                    if(stime < 1 || stime > 5)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "Suspend Time Must Be Between 1 To 5 Hours");
                        return true;
                    }

                    if (PlayerInfo[giveplayerid][pGunLic] == 0)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "Target Player Has'nt Weapon Licesne");
                        return true;
                    }

                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                                format(string, sizeof(string), "You Have Suspended %s's Weapons License For %d Hours", giveplayer, stime);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "[AdmCmd]:  {00A5FF}%s {FFFFFF}Suspended %s's Weapons License For {FF0000}%d {FFFFFF}Hours", sendername, giveplayer, stime);
								ABroadCast(COLOR_AdminWarn, string,1);
                                format(string, sizeof(string), "Admin %s Has Suspended Your Weapons License For %d Hours", sendername, stime);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                PlayerInfo[giveplayerid][pGunLic] = 0;
                                PlayerInfo[giveplayerid][pGunLicSuspend] = stime;
								Update(giveplayerid, pGunLicSuspendx);
                                new str[128];
								mysql_format(SQL,str,128,"UPDATE users SET `GunLic`='0' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
								mysql_tquery(SQL,str,"","");
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That Player Is Offline");
                        return true;
                    }
                }
                else if(strcmp(x_nr,"driving",true) == 0)
                {
					new idx, tmp[256], sendername[128], giveplayer[128], giveplayerid[128];
                    tmp = strtok(params, idx);
                    if(!strlen(tmp)) {
                        SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/asus Driving [Playerid] [Hours]");
                        return true;
                    }
                    giveplayerid = ReturnUser(tmp);
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    new stime = 1;
                    tmp = strtok(params, idx);
                    stime = strval(tmp);

                    if(stime < 1 || stime > 5)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "Suspend Time Must Be Between 1 To 5 Hours");
                        return true;
                    }

                    if (PlayerInfo[giveplayerid][pCarLic] == 0)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "Target Player Has'nt Driving License");
                        return true;
                    }
                    if(IsPlayerConnected(giveplayerid))
                    {
                        if(giveplayerid != INVALID_PLAYER_ID)
                        {
                                format(string, sizeof(string), "You Have Suspended %s's Weapons License For %d Hours", giveplayer, stime);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "[AdmCmd]:  {00A5FF}%s {FFFFFF}Suspended %s's Driving License For {FF0000}%d {FFFFFF}Hours", sendername, giveplayer, stime);
								ABroadCast(COLOR_AdminWarn, string,1);
                                format(string, sizeof(string), "Admin %s Has Suspended Your Weapons License For %d Hours", sendername, stime);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                PlayerInfo[giveplayerid][pCarLic] = 0;
                                PlayerInfo[giveplayerid][pCarLicSuspend] = stime;
								Update(giveplayerid, pCarLicSuspend);
                                new str[128];
								mysql_format(SQL,str,128,"UPDATE users SET `GunLic`='0' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
								mysql_tquery(SQL,str,"","");
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "That Player Is Offline");
                        return true;
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_LIGHTRED, "Unknown Suspend Name");
                    return true;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
                return true;
            }
        }
        return true;
}
*/

CMD:camera(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
        if(IsACop(playerid))
        {
            if(!PlayerToPoint(8.0,playerid,211.6222,1811.9565,21.8594))
			{
				SendClientMessage(playerid, COLOR_GREY, "   You are not at the Area51 Security Panel !");
				return 1;
			}
			new idx,tmp[512];
			tmp = strtok(params, idx);
			if(!strlen(tmp)) 
			{
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /camera [number 1 - 6]  (6 = OFF)");
				return 1;
			}
			new number = strval(tmp);
			if(number < 1 || number > 6) { SendClientMessage(playerid, COLOR_GREY, "   Camera Number can't be below 1 or above 6 !"); return 1; }
			TogglePlayerControllable(playerid, 0);
			GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
			if(number == 1) { SetPlayerCameraPos(playerid, 118.1011,1931.3221,22.5527); SetPlayerCameraLookAt(playerid, 98.9656,1920.9819,18.2180); }
			else if(number == 2) { SetPlayerCameraPos(playerid, 213.5340,1875.3075,17.6406); SetPlayerCameraLookAt(playerid, 213.8679,1884.1714,13.8945); }
			else if(number == 3) { SetPlayerCameraPos(playerid, 266.0640,1894.8856,38.6459); SetPlayerCameraLookAt(playerid, 224.0039,1887.1532,17.6406); }
			else if(number == 4) { SetPlayerCameraPos(playerid, 260.8112,1808.0175,38.6303); SetPlayerCameraLookAt(playerid, 227.5645,1818.4778,17.6406); }
			else if(number == 5) { SetPlayerCameraPos(playerid, 114.5196,1814.3483,38.6029); SetPlayerCameraLookAt(playerid, 123.6176,1846.4792,17.6549); }
			else if(number == 6)
			{
				TogglePlayerControllable(playerid, 1);
				SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pModel], Unspec[playerid][Coords][0], Unspec[playerid][Coords][1], Unspec[playerid][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
				SpawnPlayer(playerid);
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "You Are'nt A Cop !");
			return 1;
		}
	}
	return 1;
}

CMD:aguns(playerid, params[])
{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pAdmin] < 7)
			{
			    SendClientMessage(playerid, 0xA8A8FFFF, AdminOnly);
			    return 1;
			}
			SetPlayerHealth(playerid, 100);
			SetPlayerArmour(playerid, 100);
			GivePlayerWeaponEx(playerid, 1, 1);
			GivePlayerWeaponEx(playerid, 24, 1000);
			GivePlayerWeaponEx(playerid, 32, 1000);
			GivePlayerWeaponEx(playerid, 31, 1000);
			GivePlayerWeaponEx(playerid, 26, 1000);
			SendClientMessage(playerid, COLOR_YELLOW2, "You Got All The Guns");
		}
		return 1;
}

//ADMIN ATTACHS
CMD:ahold(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 7)
	{
    	SendClientMessage(playerid, COLOR_GREEN, "Commands : /admindeagle, /adminwatch, /admintec9, /adminwatch, /adminafro, /adminturtle /admindick");
	}
}

CMD:adeagle(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 7)
	{
		SetPlayerAttachedObject( playerid, 0, 348, 5, 0.024322, 0.062726, 0.000000, 151.196212, 348.565155, 354.224334, 1.000000, 1.000000, 1.000000 ); // desert_eagle - deagle
		SendClientMessage(playerid, COLOR_GREEN, "You attached an object : Deagle");
	}
}

CMD:awatch(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 7)
	{
		SetPlayerAttachedObject( playerid, 0, 19039, 6, -0.039509, 0.000000, 0.000000, 153.910430, 279.452178, 0.000000, 1.000000, 1.000000, 1.000000 ); // WatchType1 - ceas
		SendClientMessage(playerid, COLOR_GREEN, "You attached an object : ceas.");
	}
}

CMD:atec9(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 7)
	{
		SetPlayerAttachedObject( playerid, 0, 372, 5, 0.021118, 0.065548, 0.000000, 167.166549, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // tec9 - /admintec9
		SendClientMessage(playerid, COLOR_GREEN, "You attached an object : TEC9.");
	}
}

CMD:aafro(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 7)
	{
		SetPlayerAttachedObject( playerid, 0, 19090, 1, 0.384204, 0.029377, 0.039419, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // PomPomBlue - /adminafro
		SendClientMessage(playerid, COLOR_GREEN, "You attached an afro.");
	}
}

CMD:aturtle(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 7)
	{
		SetPlayerAttachedObject( playerid, 0, 1609, 1, 0.000000, 0.000000, 0.000000, 359.867279, 86.037574, 0.000000, 1.000000, 1.000000, 1.000000 ); // turtle - /adminbroasca
		SendClientMessage(playerid, COLOR_GREEN, "You transformed into a turtle");
	}
}

CMD:adick(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 7)
	{
		SetPlayerAttachedObject( playerid, 0, 19086, 11, -0.469141, -0.108566, -0.113227, 261.423095, 233.571746, 0.645050, 1.000000, 1.000000, 1.000000 ); // ChainsawDildo1 - /admindick
		SendClientMessage(playerid, COLOR_GREEN, "You attached a Dick !");
	}
}	

CMD:gm(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}{FFFFFF}You Account Is {ff0000}Locked{ffffFf} | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(IsPlayerConnected(playerid))
	{
	    if(gPlayerLogged[playerid] == 0)
	    {
	        SendClientMessage(playerid, COLOR_GREY, "{ffffff}You Are'nt Logged In To Use This Command");
			return 1;
	    }
	    if(PlayerInfo[playerid][pAdmin] > 0)
	    {
	        if(GodMode[playerid] == 0)
	        {
				new sendername[MAX_PLAYER_NAME], string[256];
	            GodMode[playerid] = 1;
	            SetPlayerArmourEx(playerid, 1000000);
				SetPlayerHealthEx(playerid, 1000000);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "{B90000}[AdmWarn]: {FFFFFF}Admin{FE6156} %s {FFFFFF} Has {00FF00}Enabled{FFFFFF} GodMode Feature !", sendername);
				ABroadCast(COLOR_AdminWarn,string,1);
				if(PlayerInfo[playerid][pAdmin] >= 0)
				{
				    for(new i = 0; i < sizeof(CarInfo); i++)
					{
						SetVehicleParamsForPlayer(i,playerid,0,0);
					}
				}
				return 1;
	        }
	        else if(GodMode[playerid] == 1)
	        {	
				new sendername[MAX_PLAYER_NAME], string[256];
	            GodMode[playerid] = 0;
	            SetPlayerArmourEx(playerid, 0);
				SetPlayerHealthEx(playerid, 100);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "{B90000}[AdmWarn]: {FFFFFF}Admin{FE6156} %s {FFFFFF}Has {FF0000}Disabled{FFFFFF} GodMode Feature !", sendername);
				ABroadCast(COLOR_AdminWarn,string,1);
				return 1;
	        }
	    }
	    else
	    {
	        SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	    }
	}
    return 1;
}

CMD:relog(playerid, params[])
{
	new string[30];
    isRelogging[playerid] = true;
    GetPlayerIp(playerid, relogPlayerIP[playerid], 17);
    format(string, sizeof(string), "banip %s", relogPlayerIP[playerid]);
	SetTimerEx("reloging",11000,0,"i",playerid);
    SendRconCommand(string);
	SetPlayerInterior(playerid, 0);
	SetPlayerCameraPos(playerid, 1020.8905, -1782.4042, 90.0785);
	SetPlayerCameraLookAt(playerid, 556.1578, -1441.9774, 80.5746);
	InterpolateCameraLookAt(playerid, 1020.8905, -1782.4042, 90.0785, 556.1578, -1441.9774, 80.5746, 20000, CAMERA_MOVE);
	InterpolateCameraPos(playerid, 1020.8905, -1782.4042, 90.0785, 556.1578, -1441.9774, 80.5746, 25000, CAMERA_MOVE);
	GetPlayerTag(playerid);
    SendClientMessage(playerid, COLOR_LIGHTGREEN, "You've Been Used /Relog Command");
    return 1;
}

CMD:aduty(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}{FFFFFF}You Account Is {ff0000}Locked{fffffF} | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(IsPlayerConnected(playerid))
	{
	    if(gPlayerLogged[playerid] == 0)
	    {
	        SendClientMessage(playerid, COLOR_GREY, "{ffffff}You Are'nt Logged In To Use This Command");
			return 1;
	    }
	    if(PlayerInfo[playerid][pAdmin] > 0)
	    {
	        if(AdminDuty[playerid] == 0)
	        {
	            new sendername[MAX_PLAYER_NAME], string[256];
	            AdminDuty[playerid] = 1;
	            SetPlayerArmourEx(playerid, 1000000);
				SetPlayerHealthEx(playerid, 1000000);
			    SetPlayerSkin(playerid, 217);
				GivePlayerWeaponEx(playerid, 24, 1000);
				GivePlayerWeaponEx(playerid, 31, 1000);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "{FFFFFF}Admin{FE6156} %s {FFFFFF}Is Now On-Duty | You Can Use /Report", sendername);
				SendClientMessageToAll(COLOR_DBLUE,string);
				if(PlayerInfo[playerid][pAdmin] >= 5)
				{
				    for(new i = 0; i < sizeof(CarInfo); i++)
					{
						SetVehicleParamsForPlayer(i,playerid,0,0);
					}
				}
				return 1;
	        }
	        else if(AdminDuty[playerid] == 1)
	        {
	            new sendername[MAX_PLAYER_NAME], string[256];
	            AdminDuty[playerid] = 0;
	            SetPlayerArmourEx(playerid, 0);
				SetPlayerHealthEx(playerid, 100);
			    ResetPlayerWeaponsEx(playerid);
			    ResetPlayerWeapons(playerid);
				SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "{FFFFFF}Admin {FE6156}%s{FFFFFF} Is Now Off-Duty!", sendername);
				SendClientMessageToAll(COLOR_DBLUE,string);
				return 1;
	        }
	    }
	    else
	    {
	        SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	    }
	}
    return 1;
}

CMD:setadmin(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {FF0000}Locked{ffffff} Use {FF0000}/Pin{FFFFFF} ");
	if(IsPlayerConnected(playerid))
	{
		new id,adminlevel,sendername[30],giveplayer[30],string[200],escape[200];
		if(sscanf(params, "ui",id,adminlevel)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}Type: {33CCFF}/setadmin <Name/Playerid> <Admin Level 0-8>");
		if(adminlevel >= 12) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Error: Type Admin Level");
		else if(adminlevel < 12)
		if(IsPlayerConnected(id))
		{
		    if(id != INVALID_PLAYER_ID)
		    {
                SetPlayerSkin(id, 217);
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				printf("AdmCmd: %s has promoted %s to a level %d admin.", sendername, giveplayer, adminlevel);
				format(string, sizeof(string), "You've Been Promoted To Level %d Admin By %s", adminlevel, sendername);
				SendClientMessage(id, COLOR_YELLOW, string);
				format(string, sizeof(string), "You Have Promoted %s To A Level %d Admin", giveplayer,adminlevel);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "[AdmCmd]: Admin %s Set %s's Admin Level To %d", sendername,giveplayer,adminlevel);
				ABroadCast(COLOR_ADMIN,string,1);
				HLChat(COLOR_ADMCHAT,string);
				format(string, sizeof(string), "Admin %s Set %s's Admin Level To %d", sendername,giveplayer,adminlevel);
				mysql_real_escape_string(string, escape);
				PlayerInfo[id][pAdmin] = adminlevel;
				if(adminlevel == 0)
				{
					AdminDuty[id] = 0;
					PlayerInfo[id][pAcces] = 0;
				    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `Acces`='0' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
				    mysql_tquery(SQL,string,"","");
				    SetPlayerSkin(id, 55);
				}
				new str[256];
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Admin`='%d' WHERE `name`='%s'",PlayerInfo[id][pAdmin],PlayerInfo[id][pNormalName]);
				mysql_tquery(SQL,str,"","");
				mysql_format(SQL,str, sizeof(str), "INSERT INTO staff_logs (`text`) VALUES ('%s')", escape);
				mysql_tquery(SQL,str,"","");
			}
		}
    	else
	   	{
		   	SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}

CMD:ma(playerid, params[])
{
  return cmd_setadmin(playerid, params);
}

CMD:sethelper(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
        if (PlayerInfo[playerid][pAdmin] >= 11)
		{
			new id,helperlevel,sendername[30],giveplayer[30],string[200],escape[200];
			if(sscanf(params, "ui",id,helperlevel)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/sethelper <Name/Playerid> <Helper Level 0-3>");
		    if(helperlevel >= 4) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Error: Helper Level Must Be Between 0-3");
		    else if(helperlevel < 4)
			if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
                    SetPlayerSkin(id, 217);
					GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					printf("{FFA000}[AdmCmd]: {FFFFFF}%s Has Promoted %s To Helper %d", sendername, giveplayer,helperlevel);
					format(string, sizeof(string), "Administrator %s Has Promoted You To A Level %d Helper", sendername,helperlevel);
					SendClientMessage(id, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "You Have Promoted %s To Helper %d", giveplayer,helperlevel);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "[AdmCmd]: Admin %s Set %s's Helper Level To %d", sendername,giveplayer,helperlevel);
					ABroadCast(COLOR_ADMIN,string,1);
					HLChat(COLOR_ADMIN,string);
					mysql_real_escape_string(string, escape);
					PlayerInfo[id][pHToken] = 0;
		 			Update(id, pHTokenx);
					PlayerInfo[id][pHelper] = helperlevel;
					new str[256];
					mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Helper`='%d' WHERE `name`='%s'",PlayerInfo[id][pHelper],PlayerInfo[id][pNormalName]);
					mysql_tquery(SQL,str,"","");
					mysql_format(SQL,str, sizeof(str), "INSERT INTO staff_logs (`text`) VALUES ('%s')", escape);
					mysql_tquery(SQL,str,"","");
				}
			}
    		else
	    	{
		    	SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		    }
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}

CMD:mh(playerid, params[])
{
  return cmd_sethelper(playerid, params);
}

CMD:togfind(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
		if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,COLOR_ERROR, AdminOnly);
 	    if(togfind[playerid] == 1)
 	    {
 	        togfind[playerid] = 0;
 	        SCM(playerid,COLOR_WHITE,"Disable tog find.");
 	    }
 	    else
 	    {
 	    	togfind[playerid] = 1;
            SCM(playerid,COLOR_WHITE,"Enable tog find.");
	    }
	}
	return 1;
}
CMD:find(playerid, params[])
{
	if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "You Have'nt Logged In");
	if(IsPlayerConnected(playerid))
 	{
		if(CP[playerid] < 1 && IsCollectingRubbish[playerid] < 1 && !IsATruck(GetPlayerVehicleID(playerid)) && MechanicCallTime[playerid] < 1 && CheckBus[playerid] < 1 && GotoMats[playerid] < 1 && CarJacker[playerid] < 1)
		{
			new id,giveplayer[30],string[100];
			if(BusinessRob[playerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "You Can't Use This Command When You Are Robbing A Bussiness");
			if(PlayerInfo[playerid][pJob] != 1 && !IsACop(playerid) && PlayerInfo[playerid][pMember] != 11)	return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a Detective/Cop/Hitman.");
			if(sscanf(params, "u",id)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFFFFF}[SYNTAX]: {FFFFFF}/find <Name/Playerid>");
			if(IsPlayerConnected(id))
			{
				if(id != INVALID_PLAYER_ID)
				{
				    if(Undercover[id] == 1 && !IsACop(playerid))return SCM(playerid, -1, "You Can't Find An UnderCover HitMan");
				    if(id == playerid) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You Can't Find Yourself");
					if(togfind[id] == 1) return SCM(playerid,COLOR_WHITE,"{FFFF00}Checkpoint disabled. That admin is busy!");
					UsedFind[playerid] = 1;
	    			GetPlayerName(id, giveplayer, sizeof(giveplayer));
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(id, X,Y,Z);
					DisablePlayerCheckpoint(playerid);
					SetPlayerCheckpoint(playerid, X,Y,Z, 3.5);
					targetfind[playerid] = id;
					foreach(Player, i)
					{
					    if(IsACop(playerid))
					    {
					        if(caser[playerid] == i)
					        {
					            cased[i] --;
							}
						}
					}
					if(IsACop(playerid))
					{
					    cased[id] ++;
					    caser[playerid] = id;
					}
					format(string,sizeof(string),"{FFFF00}Checkpoint For Player %s | Distance To Player %.0f.",giveplayer,GetDistanceBetweenPlayers(playerid, id));
					SCM(playerid,COLOR_WHITE,string);
				}
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else
		{
		    ShowPlayerDialog(playerid, DIALOG_JOBULETES, DIALOG_STYLE_MSGBOX, "Checkpoint Cancel", "Are You Sure You Want To Cancel CHeckpoint ?", "Yeah", "No");
		}
	}
 	return 1;
}
CMD:gethere(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new plo,sendername[30],giveplayer[30],string[256];
			if(sscanf(params, "u",plo)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/gethere <Name/Playerid>");
	    	new Float:plocx,Float:plocy,Float:plocz;
		    if (IsPlayerConnected(plo))
		    {
		     	if(plo != INVALID_PLAYER_ID)
			    {
					////if(PlayerInfo[id][pAdmin] >= PlayerInfo[playerid][pAdmin] && PlayerInfo[playerid][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GREY, "You Can't Use This Command For High Level Admin");
			        if(PlayerInfo[plo][NoTp] == 1)return SendClientMessage(playerid,COLOR_RED,"You Can't Use /slap /goto /gethere /spec /ban For Him|Her");
					GetPlayerPos(playerid, plocx, plocy, plocz);
					SetPlayerInterior(plo,GetPlayerInterior(playerid));
					PlayerInfo[plo][pInt] = PlayerInfo[playerid][pInt];
					PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
					if (GetPlayerState(plo) == 2)
					{
						TelePos[plo][0] = 0.0;
						TelePos[plo][1] = 0.0;
						new tmpcar = GetPlayerVehicleID(plo);
						SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
					}
					else
					{
						SetPlayerPosEx(plo,plocx,plocy+2, plocz);
					}
					if(InHouse[playerid] > 0)
					{
						InHouse[plo] = InHouse[playerid];
						if(strlen(housestring[InHouse[plo]]) > 0)
						{
					    	StopAudioStreamForPlayer(plo);
							PlayAudioStreamForPlayer(plo, housestring[InHouse[plo]]);
						}
					}
					if(InHQ[playerid] > 0)
					{
						InHQ[plo] = InHQ[playerid];
					}
					if(InBussines[playerid] > 0)
					{
						InBussines[plo] = InBussines[playerid];
					}
					SetPlayerVirtualWorld(plo, GetPlayerVirtualWorld(playerid));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(plo, giveplayer, sizeof(giveplayer));
					format(string,sizeof(string),"You Have Teleported %s To You",giveplayer);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string,sizeof(string),"You've Been Teleported By Admin %s",sendername);
					SendClientMessage(plo, COLOR_GRAD1, string);
					format(string,sizeof(string),"{FFA000}[AdmCmd]: {FFFFFF}%s Teleported %s To Him/Her",sendername,giveplayer);
					if(PlayerInfo[plo][pAdmin] > 0 || PlayerInfo[plo][pHelper] > 0)
					{
						ABroadCast(COLOR_YELLOW,string,1);
					}
				    Adminlog(string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
			}
		}
		else
		{
				SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}

CMD:tp(playerid, params[])
{
  return cmd_gethere(playerid, params);
}

CMD:gotoxyz(playerid, params[])
{
    if(PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "{CC0033}You Can't Use This Command When You Have Wanted Level");
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		new string[128],interior,vw;
		new Float:x, Float:y, Float:z;
		if(sscanf(params, "fffii", x,y,z,interior,vw)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/gotoxyz <x> <y> <z> <interior> <virtual world>");
		{
			SetPlayerPosEx(playerid, x, y, z);
			format(string,sizeof(string),"You've teleported to x = %f, y = %f, z = %f, interior %d.",x,y,z,interior);
			SendClientMessage(playerid,COLOR_WHITE, string);
			SetPlayerVirtualWorld(playerid, vw);
			SetPlayerInterior(playerid,interior);
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
   			StopAudioStreamForPlayer(playerid);
		}
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}
CMD:gotolv(playerid, params[])
{
 	if(PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "{CC0033}You Can't Use This Command When You Have Wanted Level");
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		new string[64],sendername[25];
		if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 2  || PlayerInfo[playerid][pYoutuber] == 1)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1699.2, 1435.1, 10.7);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, 1699.2,1435.1, 10.7);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Los Venturas");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[WARNING]: Admin %s Teleported to LV.", sendername);
			Adminlog(string);
			if(InHouse[playerid] > -1)
			{
			    StopAudioStreamForPlayer(playerid);
			}
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}
CMD:gotosf(playerid, params[])
{
 	if(PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "{CC0033}You Can't Use This Command When You Have Wanted Level");
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		new string[64],sendername[25];
		if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 2 || PlayerInfo[playerid][pYoutuber] == 1)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, -1417.0,-295.8,14.1);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, -1417.0,-295.8,14.1);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To San Fierro");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to SF.", sendername);
			Adminlog(string);
			if(InHouse[playerid] > -1)
			{
   				StopAudioStreamForPlayer(playerid);
			}
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}
CMD:gotostad(playerid, params[])
{
 	if(PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "{CC0033}You Can't Use This Command When You Have Wanted Level");
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 2 || PlayerInfo[playerid][pYoutuber] == 1)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, -1435.75, -652.664, 1054.94);
			}
			else
			{
				SetPlayerPosEx(playerid, -1435.75, -652.664, 1054.94);
			}
			SetPlayerInterior(playerid,4);
			SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Stad");
			if(InHouse[playerid] > -1)
			{
			    StopAudioStreamForPlayer(playerid);
			}
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}
CMD:gotojet(playerid, params[])
{
 	if(PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "{CC0033}You Can't Use This Command When You Have Wanted Level");
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1.71875, 30.4062, 1200.34);
			}
			else
			{
				SetPlayerPosEx(playerid, 1.71875, 30.4062, 1200.34);
			}
			SetPlayerInterior(playerid,1);
			SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Jet");
			if(InHouse[playerid] > -1)
			{
   				StopAudioStreamForPlayer(playerid);
			}
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}
CMD:so(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
        if(IsACop(playerid))
        {
            if(SomatePermission[playerid] == 0) return SendClientMessage(playerid, COLOR_WHITE, "{3385FF}Wait 5 seconds to use again /so.");
            {
                new id,string[256];
                if(sscanf(params, "u", id)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/so <Name/Playerid>");
                {
                    if (!ProxDetectorS(40.0, playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, "That Player Is Too Far From You");
                    if(id != INVALID_PLAYER_ID)
                    {
                        new sendername[25],numelee[25];
                        GetPlayerName(id,numelee,sizeof(numelee));
                        GetPlayerName(playerid,sendername,sizeof(sendername));
                        if (GetPlayerState(id) == 2)
						{
						    new speed = Carspeed(id);
						    if(speed > 1)
						    {
								format(string, sizeof(string), "{FFFF00}[MegaPhone] PoliceMan %s: {1560BD}%s{FFFF00} Shoma Tahte Taghib Hastid , Bezanid Baghal", sendername, numelee);
								ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
								timersoo[playerid] = SetTimerEx("SetSomate", 5000, 1, "i", playerid);
								somatee[playerid] = 0;
								SomatePermission[playerid] = 0;
								somated[id] = playerid;
								format(somatename[id], 30, sendername);
								soexpire[playerid] = SetTimerEx("SomateExpire", 180000, 0, "i", id);
							}
							else if(speed == 0)
							{
							    if(PlayerInfo[id][pWantedLevel] == 0)
							    {
							    	format(string, sizeof(string), "{FFFF00}[MegaPhone] PoliceMan %s: {1560BD}%s{FFFF00} Shoma Tahte Taghib Hastid , BeIstid", sendername, numelee);
									ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
									timersoo[playerid] = SetTimerEx("SetSomate", 5000, 1, "i", playerid);
									somatee[playerid] = 0;
									SomatePermission[playerid] = 0;
									somated[id] = playerid;
									format(somatename[id], 30, sendername);
									soexpire[playerid] = SetTimerEx("SomateExpire", 180000, 0, "i", id);
								}
								else if(PlayerInfo[id][pWantedLevel] > 0)
								{
								    format(string, sizeof(string), "{FFFF00}[MegaPhone] PoliceMan %s: {1560BD}%s{FFFF00} Shoma Tahte Taghib Hastid , Taslim Shavid", sendername, numelee);
									ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
									timersoo[playerid] = SetTimerEx("SetSomate", 5000, 1, "i", playerid);
									somatee[playerid] = 0;
									SomatePermission[playerid] = 0;
									somated[id] = playerid;
									format(somatename[id], 30, sendername);
									soexpire[playerid] = SetTimerEx("SomateExpire", 180000, 0, "i", id);
								}
							}
						}
						else
						{
							if(PlayerInfo[id][pWantedLevel] > 0)
							{
							    format(string, sizeof(string), "{FFFF00}[MegaPhone] PoliceMan %s: {1560BD}%s{FFFF00} Shoma Tahte Taghib Hastid , Taslim Shavid", sendername, numelee);
								ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
								timersoo[playerid] = SetTimerEx("SetSomate", 5000, 1, "i", playerid);
								somatee[playerid] = 0;
								SomatePermission[playerid] = 0;
								somated[id] = playerid;
								format(somatename[id], 30, sendername);
								soexpire[playerid] = SetTimerEx("SomateExpire", 180000, 0, "i", id);
							}
							else if(PlayerInfo[id][pWantedLevel] == 0)
							{
							    format(string, sizeof(string), "{FFFF00}[MegaPhone] PoliceMan %s: {1560BD}%s{FFFF00} Shoma Tahte Taghib Hastid , BeIstid", sendername, numelee);
								ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
								timersoo[playerid] = SetTimerEx("SetSomate", 5000, 1, "i", playerid);
								somatee[playerid] = 0;
								SomatePermission[playerid] = 0;
								somated[id] = playerid;
								format(somatename[id], 30, sendername);
								soexpire[playerid] = SetTimerEx("SomateExpire", 180000, 0, "i", id);
							}
						}
                    }
                    else return SendClientMessage(playerid, COLOR_WHITE, "Player not connected.");
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_LIGHTRED, "You are not a cop.");
	}
	return 1;
}
CMD:goto(playerid, params[])
{
 	if(PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "{CC0033}You Can't Use This Command When You Have Wanted Level");
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1 || AdminDuty[playerid] == 1)
	{
		new id,string[256],sendername[30],giveplayer[30];
		if(sscanf(params, "u", id)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/goto <Name/Playerid>");
		{
			if(id != INVALID_PLAYER_ID)
	        {
				//if(PlayerInfo[id][pAdmin] >= PlayerInfo[playerid][pAdmin] && PlayerInfo[playerid][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GREY, "You Can't Use This Command For High Level Admin");
				if(PlayerInfo[id][NoTp] == 1)return SendClientMessage(playerid,COLOR_RED,"You Can't Use /slap /goto /gethere /spec /ban For Him|Her");
				new Float:ax,Float:ay,Float:az;
				GetPlayerPos(playerid,ax,ay,az);
				posxxx[playerid] = ax;
				posyyy[playerid] = ay;
				poszzz[playerid] = az;
				new Float:x, Float:y, Float:z;
				GetPlayerPos(id, x, y, z);
				new tmpcar = GetPlayerVehicleID(playerid);
				if (GetPlayerState(playerid) == 2)
				{
					SetVehiclePos(tmpcar, x, y+4, z);
				}
				else
				{
					SetPlayerPosEx(playerid,x,y+2, z);
				}
				new Float:PpX,Float:PpY,Float:PpZ;
				GetPlayerPos(id,PpX,PpY,PpZ);
				if(IsPlayerInAnyVehicle(id)) GetVehiclePos(GetPlayerVehicleID(id),PpX,PpY,PpZ);
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(id));
				SetPlayerInterior(playerid, GetPlayerInterior(id));
				if(InHouse[id] > 0)
				{
					InHouse[playerid] = InHouse[id];
					if(strlen(housestring[InHouse[playerid]]) > 0)
					{
					    StopAudioStreamForPlayer(playerid);
						PlayAudioStreamForPlayer(playerid, housestring[InHouse[playerid]]);
					}
				}
				if(InHQ[id] > 0)
				{
					InHQ[playerid] = InHQ[id];
				}
				if(InBussines[id] > 0)
				{
					InBussines[playerid] = InBussines[id];
				}
				GetPlayerName(playerid,sendername,sizeof(sendername));
				GetPlayerName(id,giveplayer,sizeof(giveplayer));
				format(string,sizeof(string),"You have been teleported to %s.",giveplayer);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				format(string,sizeof(string),"Admin %s teleported to you.",sendername);
				SendClientMessage(id, COLOR_GRAD1, string);
				format(string,sizeof(string),"{FFA000}{FFA000}[AdmCmd]: {FFFFFF}:{FFFFFF} %s used /goto on %s.",sendername,giveplayer);
				if(PlayerInfo[id][pAdmin] > 0 || PlayerInfo[id][pHelper] > 0)
				{
				ABroadCast(COLOR_YELLOW,string,1);
				}
				if(IsPlayerInAnyVehicle(playerid))
				{
					SetVehiclePos(GetPlayerVehicleID(playerid),PpX+0.5,PpY+0.5,PpZ);
					LinkVehicleToInterior(GetPlayerVehicleID(playerid),GetPlayerInterior(id));
					SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetPlayerVirtualWorld(id));
					return 1;
				}
				SetPlayerPos(playerid,PpX+0.3,PpY+0.3,PpZ);
    			Adminlog(string);
			}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "{5CAD5C}Error: Your admin/helper level isn't high enough to use this command.");
	}
	return 1;
}

CMD:goback(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 3)
	{
	    if (posxxx[playerid] != 0 )
	    {
	        SetPlayerPosEx(playerid,posxxx[playerid],posyyy[playerid],poszzz[playerid]);
	        SendClientMessage(playerid, COLOR_GRAD1, "You have been teleported.");
	 		return 1;
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "You haven't go anywhere yet.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "{5CAD5C}Error: Your admin/helper level isn't high enough to use this command.");
	}
	return 1;
}

CMD:gotols(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		//if(UseCmdTimer[playerid] == 0)return SCM(playerid, -1, "You Can Use /GoToLs Next 10 Seconds");
		if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 2 || PlayerInfo[playerid][pYoutuber] == 1)
		{
			new string[100],sendername[30];
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1529.6,-1691.2,13.3);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, 1529.6,-1691.2,13.3);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Los Santos");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[WARNING]: Admin %s Teleported to LS.", sendername);
			Adminlog(string);
			if(InHouse[playerid] > -1)
			{
				StopAudioStreamForPlayer(playerid);
			}
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
			UseCmdTimer[playerid] = 0;
            SetTimerEx("unmutecommand", 10000, false, "i", playerid);
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}
CMD:gotods(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	//if(UseCmdTimer[playerid] == 0)return SCM(playerid, -1, "You Can Use /GoToDs Next 10 Seconds");
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			new string[100],sendername[30];
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1310.3213,-1369.3365,13.5612);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, 1310.3213,-1369.3365,13.5612);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported Tp Dealership");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[WARNING]: Admin %s teleported to Dealership.", sendername);
			Adminlog(string);
			if(InHouse[playerid] > -1)
			{
   				StopAudioStreamForPlayer(playerid);
			}
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
			UseCmdTimer[playerid] = 0;
            SetTimerEx("unmutecommand", 10000, false, "i", playerid);
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}
CMD:gotojail(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			new string[100],sendername[30],jail[64];
			if(sscanf(params, "s[64]", jail)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/gotojail <ls/lv/admin>");
			if(strcmp(jail,"admin",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 227.6104,114.6985,1000.0156);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, 227.6104,114.6985,1000.0156);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Admin Jail.");
				SetPlayerInterior(playerid,10);
				PlayerInfo[playerid][pInt] = 10;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[WARNING]: Admin %s teleported to Admin Jail.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
					StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(strcmp(jail,"ls",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 268.7461,76.8184,1001.0391);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, 268.7461,76.8184,1001.0391);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Los Santos Jail.");
				SetPlayerInterior(playerid,6);
				PlayerInfo[playerid][pInt] = 6;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[WARNING]: Admin %s teleported to LS Jail.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
					StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(strcmp(jail,"lv",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 268.7461,76.8184,1001.0391);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, 268.7461,76.8184,1001.0391);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Los Venturas Jail");
				SetPlayerInterior(playerid,6);
				PlayerInfo[playerid][pInt] = 6;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[WARNING]: Admin %s teleported to LV Jail.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
					StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,3);
			}
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
/*
CMD:gotoint(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			new string[512],sendername[30],int[512];
			if(sscanf(params, "s[512]", int)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/gotoint <1-10>");
			if(strcmp(int,"1",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2259.38, -1135.77, 1050.64);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, 2259.38, -1135.77, 1050.64);
				}
				new string[64],sendername[25];
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Interior 1");
				SetPlayerInterior(playerid,1);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Int 1.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
			    StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(strcmp(int,"2",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 343.81, 304.86, 999.15);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, 343.81, 304.86, 999.15);
				}
				new string[64],sendername[25];
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Interior 2");
				SetPlayerInterior(playerid,1);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Int 2.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
			    StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(strcmp(int,"3",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -42.59, 1405.47, 1084.43);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, -42.59, 1405.47, 1084.43);
				}
				new string[64],sendername[25];
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Interior 3");
				SetPlayerInterior(playerid,1);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Int 3.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
			    StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(strcmp(int,"4",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 223.20, 1287.08, 1082.14);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, 223.20, 1287.08, 1082.14);
				}
				new string[64],sendername[25];
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Interior 4");
				SetPlayerInterior(playerid,1);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Int 4.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
			    StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(strcmp(int,"5",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2237.59, -1081.64, 1049.02);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, 2237.59, -1081.64, 1049.02);
				}
				new string[64],sendername[25];
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Interior 5");
				SetPlayerInterior(playerid,1);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Int 5.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
			    StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(strcmp(int,"6",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2270.38, -1210.35, 1047.56);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, 2270.38, -1210.35, 1047.56);
				}
				new string[64],sendername[25];
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Interior 6");
				SetPlayerInterior(playerid,1);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Int 6.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
			    StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(strcmp(int,"7",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2317.89, -1026.76, 1050.22);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, 2317.89, -1026.76, 1050.22);
				}
				new string[64],sendername[25];
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Interior 7");
				SetPlayerInterior(playerid,1);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Int 7.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
			    StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(strcmp(int,"8",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 83.03, 1322.28, 1083.87);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, 83.03, 1322.28, 1083.87);
				}
				new string[64],sendername[25];
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Interior 8");
				SetPlayerInterior(playerid,1);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Int 8.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
			    StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(strcmp(int,"9",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -260.49, 1456.75, 1084.37);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, -260.49, 1456.75, 1084.37);
				}
				new string[64],sendername[25];
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Interior 9");
				SetPlayerInterior(playerid,1);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Int 9.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
			    StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(strcmp(int,"10",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -283.44, 1470.93, 1084.38);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, -283.44, 1470.93, 1084.38);
				}
				new string[64],sendername[25];
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Interior 10");
				SetPlayerInterior(playerid,1);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Int 10.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
			    StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(strcmp(int,"11",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 235.34, 1186.68, 1080.26);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, 235.34, 1186.68, 1080.26);
				}
				new string[64],sendername[25];
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Interior 11");
				SetPlayerInterior(playerid,1);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Int 11.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
			    StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(strcmp(int,"12",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 226.30, 1114.24, 1080.99);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, 226.30, 1114.24, 1080.99);
				}
				new string[64],sendername[25];
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Interior 12");
				SetPlayerInterior(playerid,1);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Int 12.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
			    StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(strcmp(int,"13",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 234.19, 1063.73, 1084.21);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, 234.19, 1063.73, 1084.21);
				}
				new string[64],sendername[25];
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Interior 13");
				SetPlayerInterior(playerid,1);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Int 13.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
			    StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(strcmp(int,"14",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 225.68, 1021.45, 1084.02);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, 225.68, 1021.45, 1084.02);
				}
				new string[64],sendername[25];
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Interior 14");
				SetPlayerInterior(playerid,1);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Int 14.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
			    StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(strcmp(int,"15",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2324.53, -1149.54, 1050.71);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, 2324.53, -1149.54, 1050.71);
				}
				new string[64],sendername[25];
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Interior 15");
				SetPlayerInterior(playerid,1);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Int 15.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
			    StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(strcmp(int,"16",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 140.17, 1366.07, 1083.65);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, 140.17, 1366.07, 1083.65);
				}
				new string[64],sendername[25];
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Interior 16");
				SetPlayerInterior(playerid,1);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Int 16.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
			    StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(strcmp(int,"17",true) == 0)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1299.3335,-794.3231,1084.0078);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPosEx(playerid, 1299.3335,-794.3231,1084.0078);
				}
				new string[64],sendername[25];
				SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Interior 17");
				SetPlayerInterior(playerid,1);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Int 17.", sendername);
				Adminlog(string);
				if(InHouse[playerid] > -1)
				{
			    StopAudioStreamForPlayer(playerid);
				}
				InHQ[playerid] = -1;
				InHouse[playerid] = -1;
				InBussines[playerid] = -1;
				SetPlayerVirtualWorld(playerid,0);
			}
			
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
*/

CMD:mark(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
			SendClientMessage(playerid, COLOR_GRAD1, "Teleporter Destination Set");
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}

CMD:gotom(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    //if(UseCmdTimer[playerid] == 0)return SCM(playerid, -1, "You Can Use /GoToM Next 10 Seconds");
    {
		new string[64],sendername[25];
		if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 3 || PlayerInfo[playerid][pYoutuber] == 1)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, -2317.8091,-1637.5575,483.7031);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, -2317.8091,-1637.5575,483.7031);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Chilliad Mountain");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Mountain.", sendername);
			Adminlog(string);
			if(InHouse[playerid] > -1)
			{
				StopAudioStreamForPlayer(playerid);
			}
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
			UseCmdTimer[playerid] = 0;
            SetTimerEx("unmutecommand", 10000, false, "i", playerid);
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}
CMD:gotocars(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		new string[64],sendername[25];
		if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
		{
			SetPlayerPosEx(playerid, 1267.663208,-781.323242,1091.906250);
			SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Cars");
			SetPlayerInterior(playerid,5);
			PlayerInfo[playerid][pInt] = 5;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Cars.", sendername);
			Adminlog(string);
			StopAudioStreamForPlayer(playerid);
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,696969);
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}
CMD:gotoeventarena(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		new string[64],sendername[25];
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 8124.4839,-7558.7246,15.3666);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, 8124.4839,-7558.7246,15.3666);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Event Arena");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Event Arena.", sendername);
			Adminlog(string);
			if(InHouse[playerid] > -1)
			{
			    StopAudioStreamForPlayer(playerid);
			}
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}
CMD:gotomark(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		new string[64],sendername[25];
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Mark");
			SetPlayerInterior(playerid,0);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to Mark.", sendername);
			Adminlog(string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "{5CAD5C}Error: Your admin level isn't high enough to use this command.");
		}
	}
	return 1;
}
CMD:gotoin(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 3)
		{
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1416.107000,0.268620,1000.926000);
			}
			else
			{
				SetPlayerPosEx(playerid, 1416.107000,0.268620,1000.926000);
			}
			new string[64],sendername[25];
			SendClientMessage(playerid, COLOR_GRAD1, "You Have Been Teleported To Event Arena 2");
			SetPlayerInterior(playerid,1);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[AdmWarn]: Admin %s Teleported to In.", sendername);
			Adminlog(string);
			if(InHouse[playerid] > -1)
			{
			    StopAudioStreamForPlayer(playerid);
			}
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE,"{5CAD5C}Error: Your admin/helper level isn't high enough to use this command.");
		}
	}
	return 1;
}
CMD:gotocar(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
	  	{
			new testcar,string[128],sendername[30];
			if(sscanf(params, "d",testcar)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/gotocar <Car ID>");
			new Float:cwx2,Float:cwy2,Float:cwz2;
			GetVehiclePos(testcar, cwx2, cwy2, cwz2);
			if (GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, cwx2, cwy2, cwz2);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, cwx2, cwy2, cwz2);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "You have been teleported.");
			SetPlayerInterior(playerid,0);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[WARNING]: Admin %s Teleported to Gotocar.", sendername);
			Adminlog(string);
			if(InHouse[playerid] > -1)
			{
			    StopAudioStreamForPlayer(playerid);
			}
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}
CMD:check(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_ERROR, "You Have'nt Logged In");
	if(IsPlayerConnected(playerid))
 	{
		if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
		{
			new id;
			if(sscanf(params, "u",id)) return SendClientMessage(playerid, 0xFFFFFFFF, "{A9C4E4}[SYNTAX]: {FFFFFF}/check <Name/Playerid>");
			if(IsPlayerConnected(id))
			{
				if(id != INVALID_PLAYER_ID)
				{
					ShowStats(playerid,id);
				}
			}
			else return SendClientMessage(playerid, COLOR_SERVER, "{C1F589}Error: Player not connected.");
		}
		else return SendClientMessage(playerid, COLOR_SERVER, "{5CAD5C}Error: Your admin/helper level isn't high enough to use this command.");
	}
	return 1;
}
CMD:pm(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new id,message[128], string[256], sendername[25], giveplayer[25];
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		if(sscanf(params, "us[128]", id, message)) return SendClientMessage(playerid, 0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF}/pm <Name/Playerid> <Message>");
		{
			if(id != INVALID_PLAYER_ID)
	        {
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "> [PM] From %s: %s", sendername, message);
				SendClientMessage(id, COLOR_YELLOW, string);
				format(string, sizeof(string), "[PM] Sent To %s: %s", giveplayer , message);
				SendClientMessage(playerid,  COLOR_YELLOW, string);
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "{5CAD5C}Error: Your admin/helper level isn't high enough to use this command.");
	return 1;
}
CMD:id(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new id[30], giveplayer[150], sstring[256], name[30], find=0, idd;
		if(sscanf(params, "s[30]", id)) return SendClientMessage(playerid, 0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF}/id <Name/Playerid>");
		{
			if(IsNumeric(id))
			{
				idd = strval(id);
				if(IsPlayerConnected(idd))
				{
					if(idd != INVALID_PLAYER_ID)
					{
						if(PlayerInfo[idd][pSleeping] == 1)
						{
							if(PlayerInfo[idd][pClanTag] == 0)
							{
								format(giveplayer, sizeof(giveplayer),"%s", PlayerInfo[idd][pNormalName]);
							}
							if(PlayerInfo[idd][pClanTag] == 1)
							{
								format(giveplayer, sizeof(giveplayer),"{FFFF00}%s{CECECE}%s", ClanInfo[PlayerInfo[idd][pClan]][cClanTag], PlayerInfo[idd][pNormalName]);
							}
							if(PlayerInfo[idd][pClanTag] == 2)
							{
								format(giveplayer, sizeof(giveplayer),"%s{FFFF00}%s{CECECE}", PlayerInfo[idd][pNormalName], ClanInfo[PlayerInfo[idd][pClan]][cClanTag]);
							}
							if(PlayerInfo[idd][pRank] > 0)
							{
								format(sstring, sizeof(sstring), "(%d) %s | Level: %d | Faction: %s (rank %d) | Ping: %d | FPS: %d",idd,giveplayer,PlayerInfo[idd][pLevel],NameOfFactions(PlayerInfo[idd][pMember]),PlayerInfo[idd][pRank],GetPlayerPing(idd),PlayerInfo[idd][pFPS]);
								SendClientMessage(playerid, COLOR_GREY, sstring);
							}
							else
							{
								format(sstring, sizeof(sstring), "(%d) %s | Level: %d | Faction: None | Ping: %d | FPS: %d",idd,giveplayer,PlayerInfo[idd][pLevel],GetPlayerPing(idd),PlayerInfo[idd][pFPS]);
								SendClientMessage(playerid, COLOR_GREY, sstring);
							}
						}
						else
						{
							if(PlayerInfo[idd][pClanTag] == 0)
							{
								format(giveplayer, sizeof(giveplayer),"%s", PlayerInfo[idd][pNormalName]);
							}
							if(PlayerInfo[idd][pClanTag] == 1)
							{
								format(giveplayer, sizeof(giveplayer),"{FFFF00}%s{FFFFFF}%s", ClanInfo[PlayerInfo[idd][pClan]][cClanTag], PlayerInfo[idd][pNormalName]);
							}
							if(PlayerInfo[idd][pClanTag] == 2)
							{
								format(giveplayer, sizeof(giveplayer),"%s{FFFF00}%s{FFFFFF}", PlayerInfo[idd][pNormalName], ClanInfo[PlayerInfo[idd][pClan]][cClanTag]);
							}
							if(PlayerInfo[idd][pRank] > 0)
							{
								format(sstring, sizeof(sstring), "(%d) %s | Level: %d | Faction: %s (rank %d) | Ping: %d | FPS: %d",idd,giveplayer,PlayerInfo[idd][pLevel],NameOfFactions(PlayerInfo[idd][pMember]),PlayerInfo[idd][pRank],GetPlayerPing(idd),PlayerInfo[idd][pFPS]);
								SendClientMessage(playerid, COLOR_WHITE, sstring);
							}
							else
							{
								format(sstring, sizeof(sstring), "(%d) %s | Level: %d | Faction: None | Ping: %d | FPS: %d",idd,giveplayer,PlayerInfo[idd][pLevel],GetPlayerPing(idd),PlayerInfo[idd][pFPS]);
								SendClientMessage(playerid, COLOR_WHITE, sstring);
							}
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "Player not connected.");
			}
			else
			{
				foreach(Player, i)
				{
					if(IsPlayerConnected(i))
					{
						if(find < 10)
						{
							GetPlayerName(i, name, sizeof(name));
							if(strfind(name, id, true) != -1)
							{
								if(PlayerInfo[i][pSleeping] == 1)
								{
									if(PlayerInfo[i][pClanTag] == 0)
									{
										format(giveplayer, sizeof(giveplayer),"%s", PlayerInfo[i][pNormalName]);
									}
									if(PlayerInfo[i][pClanTag] == 1)
									{
										format(giveplayer, sizeof(giveplayer),"{FFFF00}%s{CECECE}%s", ClanInfo[PlayerInfo[i][pClan]][cClanTag], PlayerInfo[i][pNormalName]);
									}
									if(PlayerInfo[i][pClanTag] == 2)
									{
										format(giveplayer, sizeof(giveplayer),"%s{FFFF00}%s{CECECE}", PlayerInfo[i][pNormalName], ClanInfo[PlayerInfo[i][pClan]][cClanTag]);
									}
									if(PlayerInfo[i][pRank] > 0)
									{
										format(sstring, sizeof(sstring), "(%d) %s | Level: %d | Faction: %s (rank %d) | Ping: %d | FPS: %d",i,giveplayer,PlayerInfo[i][pLevel],NameOfFactions(PlayerInfo[i][pMember]),PlayerInfo[i][pRank],GetPlayerPing(i),PlayerInfo[i][pFPS]);
										SendClientMessage(playerid, COLOR_GREY, sstring);
									}
									else
									{
										format(sstring, sizeof(sstring), "(%d) %s | Level: %d | Faction: None | Ping: %d | FPS: %d",i,giveplayer,PlayerInfo[i][pLevel],GetPlayerPing(i),PlayerInfo[i][pFPS]);
										SendClientMessage(playerid, COLOR_GREY, sstring);
									}
								}
								else
								{
									if(PlayerInfo[i][pClanTag] == 0)
									{
										format(giveplayer, sizeof(giveplayer),"%s", PlayerInfo[i][pNormalName]);
									}
									if(PlayerInfo[i][pClanTag] == 1)
									{
										format(giveplayer, sizeof(giveplayer),"{FFFF00}%s{FFFFFF}%s", ClanInfo[PlayerInfo[i][pClan]][cClanTag], PlayerInfo[i][pNormalName]);
									}
									if(PlayerInfo[i][pClanTag] == 2)
									{
										format(giveplayer, sizeof(giveplayer),"%s{FFFF00}%s{FFFFFF}", PlayerInfo[i][pNormalName], ClanInfo[PlayerInfo[i][pClan]][cClanTag]);
									}
									if(PlayerInfo[i][pRank] > 0)
									{
										format(sstring, sizeof(sstring), "(%d) %s | Level: %d | Faction: %s (rank %d) | Ping: %d | FPS: %d",i,giveplayer,PlayerInfo[i][pLevel],NameOfFactions(PlayerInfo[i][pMember]),PlayerInfo[i][pRank],GetPlayerPing(i),PlayerInfo[i][pFPS]);
										SendClientMessage(playerid, COLOR_WHITE, sstring);
									}
									else
									{
										format(sstring, sizeof(sstring), "(%d) %s | Level: %d | Faction: None | Ping: %d | FPS: %d",i,giveplayer,PlayerInfo[i][pLevel],GetPlayerPing(i),PlayerInfo[i][pFPS]);
										SendClientMessage(playerid, COLOR_WHITE, sstring);
									}
								}
								find ++;
							}
						}
					}
				}
				if(find == 0) return SendClientMessage(playerid, COLOR_WHITE, "Player not connected.");
			}
		}
	}
	return 1;
}
CMD:pblock(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
	    new playername3[MAX_PLAYER_NAME];
     	GetPlayerName(playerid,playername3,sizeof(playername3));
	    if(PlayerInfo[playerid][pPhoneBlock] == 1)
	    {
			new id, string[256];
			if(sscanf(params, "u", id)) return SendClientMessage(playerid, 0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF}/pblock <Name/ID>");
			{
	            if(IsPlayerConnected(id))
	            {
					if(id != INVALID_PLAYER_ID)
					{
					    if(BlockPhone[playerid][bpNume1] != PlayerInfo[id][pNormalName] &&
						 	BlockPhone[playerid][bpNume2] != PlayerInfo[id][pNormalName] &&
						 	BlockPhone[playerid][bpNume3] != PlayerInfo[id][pNormalName] &&
						 	BlockPhone[playerid][bpNume4] != PlayerInfo[id][pNormalName] &&
						 	BlockPhone[playerid][bpNume5] != PlayerInfo[id][pNormalName] &&
						 	BlockPhone[playerid][bpNume6] != PlayerInfo[id][pNormalName] &&
						 	BlockPhone[playerid][bpNume7] != PlayerInfo[id][pNormalName] &&
						 	BlockPhone[playerid][bpNume8] != PlayerInfo[id][pNormalName] &&
						 	BlockPhone[playerid][bpNume9] != PlayerInfo[id][pNormalName] &&
						 	BlockPhone[playerid][bpNume10] != PlayerInfo[id][pNormalName])
						{
						    new playername[MAX_PLAYER_NAME];
		    				GetPlayerName(id,playername,sizeof(playername));
							if(BlockPhone[playerid][bpNumar1] == 0)
							{
								format(string, sizeof(string), "* You Added %s In Your BlockList | You Can Use [/UnBlock] To Unlock", playername);
								SCM(playerid, COLOR_LIGHTBLUE, string);
	                            BlockPhone[playerid][bpNumar1] = 1;

	                            new var[256];
	                            mysql_format(SQL, var, sizeof(var), "UPDATE `blocklist` SET `Nume1`='%s', `Numar1`='%d' WHERE `Name`='%s'",playername, BlockPhone[playerid][bpNumar1],playername3);
								mysql_tquery(SQL,var,"","");
							}
							else if(BlockPhone[playerid][bpNumar2] == 0)
							{
							    format(string, sizeof(string), "* You Added %s In Your BlockList | You Can Use [/UnBlock] To Unlock", playername);
								SCM(playerid, COLOR_LIGHTBLUE, string);
							    BlockPhone[playerid][bpNumar2] = 1;

							    new var[256];
	                            mysql_format(SQL, var, sizeof(var), "UPDATE `blocklist` SET `Nume2`='%s', `Numar2`='%d' WHERE `Name`='%s'",playername, BlockPhone[playerid][bpNumar2],playername3);
								mysql_tquery(SQL,var,"","");
							}
							else if(BlockPhone[playerid][bpNumar3] == 0)
							{
							    format(string, sizeof(string), "* You Added %s In Your BlockList | You Can Use [/UnBlock] To Unlock", playername);
								SCM(playerid, COLOR_LIGHTBLUE, string);
							    BlockPhone[playerid][bpNumar3] = 1;

							    new var[256];
	                            mysql_format(SQL, var, sizeof(var), "UPDATE `blocklist` SET `Nume3`='%s', `Numar3`='%d' WHERE `Name`='%s'",playername, BlockPhone[playerid][bpNumar3],playername3);
								mysql_tquery(SQL,var,"","");
							}
							else if(BlockPhone[playerid][bpNumar4] == 0)
							{
							    format(string, sizeof(string), "* You Added %s In Your BlockList | You Can Use [/UnBlock] To Unlock", playername);
								SCM(playerid, COLOR_LIGHTBLUE, string);
							    BlockPhone[playerid][bpNumar4] = 1;

							    new var[256];
	                            mysql_format(SQL, var, sizeof(var), "UPDATE `blocklist` SET `Nume4`='%s', `Numar4`='%d' WHERE `Name`='%s'",playername, BlockPhone[playerid][bpNumar4],playername3);
								mysql_tquery(SQL,var,"","");
							}
							else if(BlockPhone[playerid][bpNumar5] == 0)
							{
							    format(string, sizeof(string), "* You Added %s In Your BlockList | You Can Use [/UnBlock] To Unlock", playername);
								SCM(playerid, COLOR_LIGHTBLUE, string);
							    BlockPhone[playerid][bpNumar5] = 1;

							    new var[256];
	                            mysql_format(SQL, var, sizeof(var), "UPDATE `blocklist` SET `Nume5`='%s', `Numar5`='%d' WHERE `Name`='%s'",playername, BlockPhone[playerid][bpNumar5],playername3);
								mysql_tquery(SQL,var,"","");
							}
							else if(BlockPhone[playerid][bpNumar6] == 0)
							{
							    format(string, sizeof(string), "* You Added %s In Your BlockList | You Can Use [/UnBlock] To Unlock", playername);
								SCM(playerid, COLOR_LIGHTBLUE, string);
							    BlockPhone[playerid][bpNumar6] = 1;

							    new var[256];
	                            mysql_format(SQL, var, sizeof(var), "UPDATE `blocklist` SET `Nume6`='%s', `Numar6`='%d' WHERE `Name`='%s'",playername, BlockPhone[playerid][bpNumar6],playername3);
								mysql_tquery(SQL,var,"","");
							}
							else if(BlockPhone[playerid][bpNumar7] == 0)
							{
							    format(string, sizeof(string), "* You Added %s In Your BlockList | You Can Use [/UnBlock] To Unlock", playername);
								SCM(playerid, COLOR_LIGHTBLUE, string);
							    BlockPhone[playerid][bpNumar7] = 1;

							    new var[256];
	                            mysql_format(SQL, var, sizeof(var), "UPDATE `blocklist` SET `Nume7`='%s', `Numar7`='%d' WHERE `Name`='%s'",playername, BlockPhone[playerid][bpNumar7],playername3);
								mysql_tquery(SQL,var,"","");
							}
							else if(BlockPhone[playerid][bpNumar8] == 0)
							{
							    format(string, sizeof(string), "* You Added %s In Your BlockList | You Can Use [/UnBlock] To Unlock", playername);
								SCM(playerid, COLOR_LIGHTBLUE, string);
							    BlockPhone[playerid][bpNumar8] = 1;

							    new var[256];
	                            mysql_format(SQL, var, sizeof(var), "UPDATE `blocklist` SET `Nume8`='%s', `Numar8`='%d' WHERE `Name`='%s'",playername, BlockPhone[playerid][bpNumar8],playername3);
								mysql_tquery(SQL,var,"","");
							}
							else if(BlockPhone[playerid][bpNumar9] == 0)
							{
							    format(string, sizeof(string), "* You Added %s In Your BlockList | You Can Use [/UnBlock] To Unlock", playername);
								SCM(playerid, COLOR_LIGHTBLUE, string);
							    BlockPhone[playerid][bpNumar9] = 1;

							    new var[256];
	                            mysql_format(SQL, var, sizeof(var), "UPDATE `blocklist` SET `Nume9`='%s', `Numar9`='%d' WHERE `Name`='%s'",playername, BlockPhone[playerid][bpNumar9],playername3);
								mysql_tquery(SQL,var,"","");
							}
							else if(BlockPhone[playerid][bpNumar10] == 0)
							{
							    format(string, sizeof(string), "* You Added %s In Your BlockList | You Can Use [/UnBlock] To Unlock", playername);
								SCM(playerid, COLOR_LIGHTBLUE, string);
							    BlockPhone[playerid][bpNumar10] = 1;

							    new var[256];
	                            mysql_format(SQL, var, sizeof(var), "UPDATE `blocklist` SET `Nume10`='%s', `Numar10`='%d' WHERE `Name`='%s'",playername, BlockPhone[playerid][bpNumar10],playername3);
								mysql_tquery(SQL,var,"","");
							}
							else
							{
							    SCM(playerid, COLOR_RED, "BlockList Is Full | Use [/UnBlock]");
							}
						}
						else return SCM(playerid, COLOR_WHITE, "{FFFFCC}Error: That Player Is Already Blocked");
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
				}
			    else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
			}
		}
		else
		{
		    new Str[200],
				qstr[256];
			mysql_format(SQL,Str,sizeof(Str),"INSERT INTO `blocklist` (`Name`) VALUES ('%s')",playername3);
			mysql_tquery(SQL,Str,"","");
		    format(qstr,100,"SELECT * FROM blocklist WHERE `Name`='%s'",playername3);
		    //new Cache: pass = mysql_query(SQL,qstr);
		    if(cache_get_row_count() > 0)
		    {
				cache_get_field_content(0, "Name", BlockPhone[playerid][bpName], SQL, 130);
                BlockPhone[playerid][bpNumar1] = cache_get_field_content_int(0, "Numar1");
                BlockPhone[playerid][bpNumar2] = cache_get_field_content_int(0, "Numar2");
                BlockPhone[playerid][bpNumar3] = cache_get_field_content_int(0, "Numar3");
                BlockPhone[playerid][bpNumar4] = cache_get_field_content_int(0, "Numar4");
                BlockPhone[playerid][bpNumar5] = cache_get_field_content_int(0, "Numar5");
                BlockPhone[playerid][bpNumar6] = cache_get_field_content_int(0, "Numar6");
                BlockPhone[playerid][bpNumar7] = cache_get_field_content_int(0, "Numar7");
                BlockPhone[playerid][bpNumar8] = cache_get_field_content_int(0, "Numar8");
                BlockPhone[playerid][bpNumar9] = cache_get_field_content_int(0, "Numar9");
                BlockPhone[playerid][bpNumar10] = cache_get_field_content_int(0, "Numar10");
				cache_get_field_content(0, "Nume1", BlockPhone[playerid][bpNume1], SQL, 130);
				cache_get_field_content(0, "Nume2", BlockPhone[playerid][bpNume2], SQL, 130);
				cache_get_field_content(0, "Nume3", BlockPhone[playerid][bpNume3], SQL, 130);
				cache_get_field_content(0, "Nume4", BlockPhone[playerid][bpNume4], SQL, 130);
				cache_get_field_content(0, "Nume5", BlockPhone[playerid][bpNume5], SQL, 130);
				cache_get_field_content(0, "Nume6", BlockPhone[playerid][bpNume6], SQL, 130);
				cache_get_field_content(0, "Nume7", BlockPhone[playerid][bpNume7], SQL, 130);
				cache_get_field_content(0, "Nume8", BlockPhone[playerid][bpNume8], SQL, 130);
				cache_get_field_content(0, "Nume9", BlockPhone[playerid][bpNume9], SQL, 130);
				cache_get_field_content(0, "Nume10", BlockPhone[playerid][bpNume10], SQL, 130);

				strmid(BlockPhone[playerid][bpNume1], "Liber", 0, strlen("Liber"), 999);
				strmid(BlockPhone[playerid][bpNume2], "Liber", 0, strlen("Liber"), 999);
				strmid(BlockPhone[playerid][bpNume3], "Liber", 0, strlen("Liber"), 999);
				strmid(BlockPhone[playerid][bpNume4], "Liber", 0, strlen("Liber"), 999);
				strmid(BlockPhone[playerid][bpNume5], "Liber", 0, strlen("Liber"), 999);
				strmid(BlockPhone[playerid][bpNume6], "Liber", 0, strlen("Liber"), 999);
				strmid(BlockPhone[playerid][bpNume7], "Liber", 0, strlen("Liber"), 999);
				strmid(BlockPhone[playerid][bpNume8], "Liber", 0, strlen("Liber"), 999);
				strmid(BlockPhone[playerid][bpNume9], "Liber", 0, strlen("Liber"), 999);
				strmid(BlockPhone[playerid][bpNume10], "Liber", 0, strlen("Liber"), 999);
			}
			SCM(playerid, COLOR_YELLOW2, "BlockList Successfully Opened | You Can Now Use /Pblock");
			PlayerInfo[playerid][pPhoneBlock] = 1;

			new var[512];
			mysql_format(SQL, var, sizeof(var), "UPDATE `blocklist` SET `Nume1`='%s', `Nume2`='%s', `Nume3`='%s', `Nume4`='%s',`Nume5`='%s' WHERE `Name`='%s'",BlockPhone[playerid][bpNume1], BlockPhone[playerid][bpNume2], BlockPhone[playerid][bpNume3], BlockPhone[playerid][bpNume4], BlockPhone[playerid][bpNume5],playername3);
			mysql_tquery(SQL,var,"","");
			mysql_format(SQL, var, sizeof(var), "UPDATE `blocklist` SET `Nume6`='%s',`Nume7`='%s',`Nume8`='%s',`Nume9`='%s',`Nume10`='%s' WHERE `Name`='%s'",BlockPhone[playerid][bpNume6],BlockPhone[playerid][bpNume7], BlockPhone[playerid][bpNume8], BlockPhone[playerid][bpNume9], BlockPhone[playerid][bpNume10],playername3);
			mysql_tquery(SQL,var,"","");
   			mysql_format(SQL, var, sizeof(var), "UPDATE `users` SET `PhoneBlock`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPhoneBlock],playername3);
			mysql_tquery(SQL,var,"","");

		}
	}
	return 1;
}
CMD:sleep(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(InHouse[playerid] > 0)
    {
        if(PlayerInfo[playerid][pWantedLevel] == 0)
		{
            if(PlayerInfo[playerid][pSleeping] == 0)
			{
   				PlayerInfo[playerid][pSleeping] = 1;
				TogglePlayerControllable(playerid,0);
     			SendClientMessage(playerid, COLOR_WHITE, "Now you can stay AFK without getting kicked. Use / sleep again when you want to come back in the game.");
				SendClientMessage(playerid, COLOR_WHITE, "Minimizing the game (alt-tab) can cause some bugs. It is recommended to press ESC before minimizing the game.");
                LoopingAnim(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
				SetPlayerColor(playerid,COLOR_GRAD2);
			}
			else
			{
				PlayerInfo[playerid][pSleeping] = 0;
				TogglePlayerControllable(playerid,1);
				ClearAnimations(playerid);
                SendClientMessage(playerid, COLOR_WHITE, "Welcome Back !");
				SetPlayerToTeamColor(playerid);
		    }
        }
        else
		{
            SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You can not sleep, because you have wanted.");
			return 1;
        }
    }
    else return SendClientMessage(playerid, COLOR_WHITE, "You're not in a house. You can only sleep in the houses.");
	return 1;
}
CMD:fixveh(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		{
    		if(IsPlayerInAnyVehicle(playerid))
		    {
			    RepairVehicle(GetPlayerVehicleID(playerid));
			    Gas[GetPlayerVehicleID(playerid)] = 100;
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Car was repaired successfully.");
		    }
		}
	}
	return 1;
}
CMD:jetpack(playerid, params[])
{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 2)
			{
                SetPlayerSpecialAction(playerid, 2);
			}
			else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
		return 1;
}
CMD:flymode(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pAdmin] >= 7 || PlayerInfo[playerid][pHelper] >= 3 || PlayerInfo[playerid][pYoutuber] == 1)
		{
			new sendername[30],string[256];
		    if(flymode[playerid] == 0)
		    {
		        GetPlayerName(playerid, sendername, sizeof(sendername));
	            flymode[playerid] = 1;
	    		format(string,sizeof(string),"%s Activated /flymode.", sendername);
				InitFly(playerid);
				StartFly(playerid);
				SetPlayerHealth(playerid, 100000);
				SetPlayerArmour(playerid, 100000);
			}
			else
			{
			    GetPlayerName(playerid, sendername, sizeof(sendername));
                flymode[playerid] = 0;
	    		format(string,sizeof(string),"%s Deactivated /flymode.", sendername);
				StopFly(playerid);
				SetPlayerHealth(playerid, 100);
				SetPlayerArmour(playerid, 0);
			}
			ABroadCast(COLOR_YELLOW,string,1);
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:nos(playerid, params[])
{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 2)
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
					SendClientMessage(playerid, COLOR_WHITE, "Vehicle NOS Added !");
				}
			}
			else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
		return 1;
}
CMD:service(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new x_nr[256],string[300],sendername[30];
		if(sscanf(params, "s[256]",x_nr))
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/service <Name>");
		  	SendClientMessage(playerid, COLOR_WHITE, "Available names:{B8DBFF} Taxi, Medic, Mechanic, Pizza");
			return 1;
		}
		if(strcmp(x_nr,"taxi",true) == 0)
		{
			if(TaxiDrivers < 1) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}There are no Taxi Drivers On Duty at the moment, try again later.");
		    if(TransportDuty[playerid] > 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You can't call for a Taxi now.");
		    GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsPlayerInArea(playerid, -2997.40, -1115.50, -1213.90, 1659.60))
            {
				format(string, sizeof(string), "{B8FFDB}** %s is in need of a Taxi Driver, Location: %s (SF). (use /accept taxi %d to accept the call)", sendername ,GetPlayerZone(playerid),playerid);
		    	SendFamilyMessage(13, COLOR_WHITE, string);
			}
			if(IsPlayerInArea(playerid, 44.60, -2892.90, 2997.00, -768.00))
            {
				format(string, sizeof(string), "{B8FFDB}** %s is in need of a Taxi Driver, Location: %s (LS). (use /accept taxi %d to accept the call)", sendername ,GetPlayerZone(playerid),playerid);
		    	SendFamilyMessage(13, COLOR_WHITE, string);
			}
			if(IsPlayerInArea(playerid, 869.40, 596.30, 2997.00, 2993.80))
            {
				format(string, sizeof(string), "{B8FFDB}** %s is in need of a Taxi Driver, Location: %s (LV). (use /accept taxi %d to accept the call)", sendername ,GetPlayerZone(playerid),playerid);
		    	SendFamilyMessage(13, COLOR_WHITE, string);
			}
		    SendClientMessage(playerid, COLOR_WHITE, "{3385FF}* You have called for a Taxi Driver, wait for a reply.");
		    TaxiCall[playerid] = playerid;
		    return 1;
		}
		else if(strcmp(x_nr,"medic",true) == 0)
		{
		    GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsPlayerInArea(playerid, -2997.40, -1115.50, -1213.90, 1659.60))
            {
				format(string, sizeof(string), "{B8FFDB}** %s is in need of a Medic, Location: %s (SF). (use /accept medic %d to accept the call)", sendername,GetPlayerZone(playerid),playerid);
		    	SendFamilyMessage(14, COLOR_WHITE, string);
			}
			if(IsPlayerInArea(playerid, 44.60, -2892.90, 2997.00, -768.00))
            {
				format(string, sizeof(string), "{B8FFDB}** %s is in need of a Medic, Location: %s (LS). (use /accept medic %d to accept the call)", sendername,GetPlayerZone(playerid),playerid);
		    	SendFamilyMessage(14, COLOR_WHITE, string);
			}
			if(IsPlayerInArea(playerid, 869.40, 596.30, 2997.00, 2993.80))
            {
				format(string, sizeof(string), "{B8FFDB}** %s is in need of a Medic, Location: %s (LV). (use /accept medic %d to accept the call)", sendername,GetPlayerZone(playerid),playerid);
		    	SendFamilyMessage(14, COLOR_WHITE, string);
			}
		    SendClientMessage(playerid, COLOR_WHITE, "{3385FF}* You have called for a Medic, wait for a reply.");
		    MedicCall[playerid] = playerid;
		    return 1;
		}
		else if(strcmp(x_nr,"mechanic",true) == 0)
		{
			if(Mechanics < 1) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}There are no Car Mechanics On Duty at the moment, try again later.");
		    GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsPlayerInArea(playerid, -2997.40, -1115.50, -1213.90, 1659.60))
            {
				format(string, sizeof(string), "{B8FFDB}** %s is in need of a Car Mechanic, Location: %s (SF). (use /accept mechanic %d to accept the call)", sendername,GetPlayerZone(playerid),playerid);
		    	SendJobMessage(8, COLOR_WHITE, string);
			}
			if(IsPlayerInArea(playerid, 44.60, -2892.90, 2997.00, -768.00))
            {
				format(string, sizeof(string), "{B8FFDB}** %s is in need of a Car Mechanic, Location: %s (LS). (use /accept mechanic %d to accept the call)", sendername,GetPlayerZone(playerid),playerid);
		    	SendJobMessage(8, COLOR_WHITE, string);
			}
			if(IsPlayerInArea(playerid, 869.40, 596.30, 2997.00, 2993.80))
            {
				format(string, sizeof(string), "{B8FFDB}** %s is in need of a Car Mechanic, Location: %s (LV). (use /accept mechanic %d to accept the call)", sendername,GetPlayerZone(playerid),playerid);
		    	SendJobMessage(8, COLOR_WHITE, string);
			}
		    SendClientMessage(playerid, COLOR_WHITE, "{3385FF}* You have called for a Car Mechanic, wait for a reply.");
		    MechanicCall[playerid] = playerid;
		    return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Available names:{B8DBFF} Taxi, Medic, Mechanic, Pizza");
			return 1;
		}
	}
	return 1;
}
CMD:free(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new id,moneyfree,giveplayer[30],sendername[30],string[200];
		if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a cop.");
		if(sscanf(params, "ui", id,moneyfree)) return SendClientMessage(playerid, 0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF}/free <Name/Playerid> <Amount of Money>");
		if(PlayerInfo[id][pJailed] < 1) return SCM(playerid,COLOR_WHITE, "{FFB870}The player is not in jail.");
		if(PlayerInfo[id][pJailed] == 2) return SCM(playerid,COLOR_WHITE,"{FFB870}This player have admin jail.");
		if(playerid == id) return SCM(playerid,COLOR_WHITE,"{FFB870}Please chose another player.");
		if(TimerFree[playerid] >=1) return SCM(playerid,COLOR_WHITE,"{FFB870}You have already offered a free, please wait 20 seconds to offer another free.");
		if(PlayerInfo[playerid][pRob] < 3) return SCM(playerid, COLOR_WHITE, "{FFB870}You need at least 3 robbed points to be able to offer free.");
		if(moneyfree < 10000 || moneyfree > 300000) return SCM(playerid,COLOR_WHITE,"{FFB870}Invalid amount of money($10,000-$300,000).");
		if(ProxDetectorS(10.0, playerid, id))
		{
            if(IsPlayerConnected(id))
            {
                if(id != INVALID_PLAYER_ID)
                {
	 				FreeOffer[id] = playerid;
	 				FreePlayer[playerid] = id;
					FreePrice[id] = moneyfree;
					SetTimerEx("SetSomate1", 20000, 0, "i", playerid);
					TimerFree[playerid] = 2;
	 				GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "You Sent An Free Offer To %s For $%s.",giveplayer,FormatNumber(moneyfree));
					SendClientMessage(playerid, COLOR_DARKPINK, string);
					format(string, sizeof(string), "> %s Offered You A Free $%s | Use [/Accept Free %d] For Accept",sendername,FormatNumber(moneyfree),playerid);
					SendSplitMessage(id, COLOR_DBLUE, string);
				}
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SCM(playerid,COLOR_WHITE,"{FFB870}The player is not near you.");
	}
	return 1;
}
CMD:minlevel(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 8)
 	{
 	    new fid,maxmembers,string[MAX_STRING];
 	    if(sscanf(params, "dd",fid,maxmembers)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/minlevel <FactionID> <Level>");
 	    if(maxmembers > 0 && maxmembers <= 20)
 	    {
 	        if(fid > 0 && fid <= 14)
 	        {
 	        	DynamicFactions[fid][fMinLevel] = maxmembers;
 	        	mysql_format(SQL, string, sizeof(string), "UPDATE `factions` SET `MinLevel`='%d' WHERE `ID`='%d'",DynamicFactions[fid][fMinLevel], fid);
				mysql_tquery(SQL,string,"","");
				format(string, sizeof(string), "Faction %s Minimum Required Level Is %d",DynamicFactions[fid][fName], DynamicFactions[fid][fMinLevel]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "FactionID must be between 1 and 14.");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "Level must be between 5 and 20.");
	}
	else
	{
 		SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:maxmembers(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 8)
 	{
 	    new fid,maxmembers,string[MAX_STRING];
 	    if(sscanf(params, "dd",fid,maxmembers)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/maxmembers <FactionID> <Members>");
 	    if(maxmembers > 0 && maxmembers <= 20)
 	    {
 	        if(fid > 0 && fid <= 14)
 	        {
 	        	DynamicFactions[fid][fMaxMembers] = maxmembers;
 	        	mysql_format(SQL, string, sizeof(string), "UPDATE `factions` SET `MaxMembers`='%d' WHERE `ID`='%d'",DynamicFactions[fid][fMaxMembers], fid);
				mysql_tquery(SQL,string,"","");
				format(string, sizeof(string), "Faction %s MaxMembers Is Now %d Members",DynamicFactions[fid][fName], DynamicFactions[fid][fMaxMembers]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "FactionID must be between 1 and 14.");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "Max members must be between 1 and 20.");
	}
	else
	{
 		SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:paydaymoney(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 11)
 	{
 	    new fid,money,string[MAX_STRING];
 	    if(sscanf(params, "dd",fid,money)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/paydaymoney <FactionID> <Money>");
 	    if(money > 0 && money <= 500000)
 	    {
 	        if(fid > 0 && fid <= 14)
 	        {
 	            DynamicFactions[fid][fPaydayMoney] = money;
 	            mysql_format(SQL, string, sizeof(string), "UPDATE `factions` SET `PaydayMoney`='%d' WHERE `ID`='%d'",DynamicFactions[fid][fPaydayMoney], fid);
				mysql_tquery(SQL,string,"","");
				format(string, sizeof(string), "Faction %s Now Recieve $%s Each PayDay",DynamicFactions[fid][fName], FormatNumber(DynamicFactions[fid][fPaydayMoney]));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "FactionID must be between 1 and 14.");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "Money must be between $1 and $500,000.");
    }
	else
	{
 		SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:placegotoevent(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1)
 	{
 	    new Float:x, Float:y, Float:z, sendername[25], string[256];
     	GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerPos(playerid, x, y, z);
 	    if(!eventenabled)
	    {
   			pickup_event = CreatePickup(1314, 23, x, y, z, GetPlayerVirtualWorld(playerid));
   			evex = x;
   			evey = y;
   			evez = z;
   			eventenabled = 1;
   			interiorevent = GetPlayerInterior(playerid);
		   	virtuallevent = GetPlayerVirtualWorld(playerid);
   			dynamicevent3DText = CreateStreamed3DTextLabel("New Land Event Teleport",COLOR_LIGHTRED, x, y, z+0.25,8.0,GetPlayerVirtualWorld(playerid));
   			format(string, sizeof(string), "{7094DB}[EVENT]: {FFFFFF}Admin {FF8C00}%s {00FF00}Activated {FFFFFF}Event Teleport | Use {FF8C00}/gotoe", sendername);
			SendClientMessageToAll(COLOR_ADMCOMMANDS,string);
			return 1;
		}
		else
		{
			DestroyPickup(pickup_event);
			evex = 0.0;
			evey = 0.0;
			evez = 0.0;
			eventenabled = 0;
			interiorevent = 0;
			virtuallevent = 0;
			DestroyDynamic3DTextLabel(dynamicevent3DText);
			format(string, sizeof(string), "{7094DB}[EVENT]: {FFFFFF}Admin {FF8C00}%s {FF0000}Deactivated {FFFFFF}Event Teleport", sendername);
			SendClientMessageToAll(COLOR_LIGHTRED,string);
		}
		return 1;
	}
	else
	{
 		SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}

CMD:pgt(playerid, params[])
{
  return cmd_placegotoevent(playerid, params);
}

CMD:gotoe(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(PlayerInfo[playerid][pPaintBallG] > 0) return SendClientMessage(playerid, COLOR_WHITE, "You can't use this command at Paintball.");
	if(IsPlayerConnected(playerid))
	{
	    if(eventenabled)
	    {
	        SetPlayerInterior(playerid, interiorevent);
	        SetPlayerVirtualWorld(playerid, virtuallevent);
			SetPlayerPosEx(playerid, evex, evey, evez);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "You Have Been Teleported At Event");
		}
		else return SendClientMessage(playerid, COLOR_LIGHTBLUE, "No Event Teleport Activated");
	}
	return 1;
}
CMD:lightfw(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
		new x_job[256],distance;
		if(sscanf(params, "s[256]",x_job))
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/lightfw <firework1-firework2-firework3>");
			return 1;
		}
		if(strcmp(x_job,"firework1",true) == 0)
		{
			if(PlayerInfo[playerid][pFWorks] > 0)
			{
			    if(firerockettime[playerid] == 0)
		    	{
		        	new Float:X,
						Float:Y,
						Float:Z,
		        		string[128],
						sendername[30];
		        	PlayerInfo[playerid][pFWorks] -= 1;
		        	firerockettime[playerid] = 1;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s takes some fireworks out of his pocket and places them on the ground.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GetPlayerPos(playerid,X,Y,Z);
					GetXYInFrontOfPlayer(playerid, X,Y, distance);
					Firerocket[playerid] = CreateObject(354, X,Y,(Z), 0, 0, 0);
					rocketsmoke[playerid] = CreateObject(2780, X,Y,(Z), 0, 0, 0);
					MoveObject(Firerocket[playerid], X, Y, Z+30, 10);
					MoveObject(rocketsmoke[playerid], X, Y, Z+30, 10);
					SetTimerEx("FirerocketTime", 3000, 0, "i", playerid);
					Update(playerid, pFWorksx);
					return 1;
				}
				else return SendClientMessage(playerid, COLOR_LIGHTRED, "You already lighted a firerocket.");
        	}
			else return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have fireworks.");
		}
		else if(strcmp(x_job,"firework2",true) == 0)
		{
		    if(PlayerInfo[playerid][pFWorks] > 0)
		    {
		        if(firerockettime[playerid] == 0)
				{
			    	new Float:X,
						Float:Y,
						Float:Z,
			    		string[128],
						sendername[30];
			    	PlayerInfo[playerid][pFWorks] -= 1;
			    	firerockettime[playerid] = 2;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s takes some fireworks out of his pocket and places them on the ground.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GetPlayerPos(playerid,X,Y,Z);
					GetXYInFrontOfPlayer(playerid, X,Y, distance);
					Firerocket[playerid] = CreateObject(354, X,Y,(Z), 0, 0, 0);
					rocketsmoke[playerid] = CreateObject(2780, X,Y,(Z), 0, 0, 0);
					MoveObject(Firerocket[playerid], X, Y, Z+50, 15);
					MoveObject(rocketsmoke[playerid], X, Y, Z+50, 15);
					SetTimerEx("FirerocketTime", 3000, 0, "i", playerid);
					Update(playerid, pFWorksx);
					return 1;
				}
				else return SendClientMessage(playerid, COLOR_LIGHTRED, "You already lighted a firerocket.");
			}
			else return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have fireworks.");
		}
		else if(strcmp(x_job,"firework3",true) == 0)
		{
		    if(PlayerInfo[playerid][pFWorks] > 0)
		    {
		        if(RocketBoxTime[playerid] == 0)
				{
			    	new Float:X,
						Float:Y,
						Float:Z,
			    		string[128],
						sendername[30];
			    	PlayerInfo[playerid][pFWorks] -= 1;
			    	RocketBoxTime[playerid] = 1;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s takes some fireworks out of his pocket and places them on the ground.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GetPlayerPos(playerid,X,Y,Z);
					GetXYInFrontOfPlayer(playerid, X,Y, distance);
					RBX[playerid] = X;
					RBY[playerid] = Y;
					RBZ[playerid] = (Z-1.0);
					RocketBox[playerid] = CreateObject(354, X,Y,(Z-1.0), 0, 0, 0);
					RocketBoxSmoke[playerid] = CreateObject(2780, X,Y,(Z-1.0), 0, 0, 0);
					SetTimerEx("RocketBoxTimer", 3000, 0, "i", playerid);
					Update(playerid, pFWorksx);
					return 1;
				}
				else return SendClientMessage(playerid, COLOR_LIGHTRED, "You already lighted a firework RocketBox.");
			}
			else return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have fireworks.");
		}
	}
	return 1;
}
CMD:killcp(playerid, params[])
{
    if(CP[playerid] != 0)
 	{
  		DisablePlayerCheckpoint(playerid);
  		SendClientMessage(playerid,COLOR_WHITE,"You have disabled the checkpoint.");
  		CP[playerid] = 0;
 	}
    else if(UsedFind[playerid] == 1)
	{
		UsedFind[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
		foreach(Player, i)
		{
			if(IsACop(playerid))
			{
   				if(caser[playerid] == i)
			    {
					cased[i] --;
					caser[playerid] = 1001;
				}
			}
		}
	}
	else if(BusinessRob[playerid] > 0)
	{
		SendClientMessage(playerid,COLOR_WHITE,"You can't use this while robbing the bank.");
		return 1;
	}
 	else if(Trucker[playerid] >= 1 || InCoal[playerid] >= 1)
 	{
   		ShowPlayerDialog(playerid, DIALOG_CANCELJOB, DIALOG_STYLE_MSGBOX, "Are You Sure ?", "Do you want to cancel your current job?", "Yeah", "No");
 	}
 	return 1;
}
CMD:lll(playerid, params[])
{
	new giveplayerid, splayer[25];
	if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_ERROR, "You are not logged in.");
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_ERROR, "Your admin level is not high enough to use this command.");
	if(sscanf(params,"s[25]", splayer)) return SendClientMessage(playerid, COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/lll <Name/PlayerID>");
	{
	    if(GetPlayers(splayer) == INVALID_PLAYER_ID) return InvalidPlayer(playerid);
		else if(GetPlayers(splayer) == 1000) return ToManyResults(playerid);
		else if(GetPlayers(splayer) == 1001) return ShowResults(playerid, splayer);
		else giveplayerid = GetPlayers(splayer);
	    IsBot[giveplayerid] = 1;
	    SetPlayerVirtualWorld(giveplayerid, giveplayerid);
	}
	return 1;
}
CMD:cancel(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
		new x_job[256],string[300];
		if(sscanf(params, "s[256]",x_job))
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/cancel <Name>");
			SendClientMessage(playerid, COLOR_WHITE, "Available name: Drugs, Repair, Free, Live, House, Deal.");
			SendClientMessage(playerid, COLOR_WHITE, "Available name: Taxi, Medic, Mechanic, Ticket.");
			SendClientMessage(playerid, COLOR_WHITE, "Available name: Refill, Materials, Requestevent.");
			return 1;
		}
		if(strcmp(x_job,"requestevent",true) == 0)
		{
			if(requestingevent[playerid] == 0) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFB870}You're not requesting an event.");
			requestingevent[playerid] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Your event request has been cancelled.");
		}
		else if(strcmp(x_job,"free",true) == 0)
		{
			if(FreeOffer[playerid] == -1) return SCM(playerid,COLOR_WHITE,"{FFB870}No one offered you a free.");
			FreeOffer[playerid] = -1;
			FreePrice[playerid] = 0;
		}
		else if(strcmp(x_job,"drugs",true) == 0)
		{
			if(DrugOffer[playerid] == 999) return SCM(playerid,COLOR_WHITE,"{FFB870}No one offered you drugs.");
			DrugOffer[playerid] = 999;
			DrugPrice[playerid] = 0;
			DrugGram[playerid] = 0;
		}
		else if(strcmp(x_job,"repair",true) == 0)
		{
			if(RepairOffer[playerid] == 999) return SCM(playerid,COLOR_WHITE,"{FFB870}No one offered you repair.");
			RepairOffer[playerid] = 999;
			RepairPrice[playerid] = 0;
			RepairCar[playerid] = 0;
		}
		else if(strcmp(x_job,"accept",true) == 0)
		{
			if(AcceptOffer[playerid] == -1) return SCM(playerid,COLOR_WHITE,"{FFB870}No one offered you accept.");
			AcceptOffer[playerid] = -1;
			AcceptPrice[playerid] = 0;
		}
		else if(strcmp(x_job,"materials",true) == 0)
		{
			if(MatsOffer[playerid] == -1) return SCM(playerid,COLOR_WHITE,"{FFB870}No one offered you materials.");
			MatsOffer[playerid] = -1;
			MatsPrice[playerid] = 0;
			MatsAmmo[playerid] = 0;
		}
		else if(strcmp(x_job,"gun",true) == 0)
		{
			if(SellgunOffer[playerid] == -1) return SCM(playerid,COLOR_WHITE,"{FFB870}No one offered you gun.");
			SellgunOffer[playerid] = -1;
			SellgunPrice[playerid] = 0;
			SellgunMats[playerid] = 0;
			SellgunAmmo[playerid] = 0;
			SellgunID[playerid] = 0;
		}
		else if(strcmp(x_job,"find",true) == 0)
		{
			if(UsedFind[playerid] == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}At the moment you have not searched for anyone.");
			if(UsedFind[playerid] == 1)
			{
				UsedFind[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				GameTextForPlayer(playerid, "~r~redmarker gone", 2500, 1);
				foreach(Player, i)
				{
					if(IsACop(playerid))
					{
					    if(caser[playerid] == i)
					    {
							cased[i] --;
							caser[playerid] = 1001;
						}
					}
				}
			}
		}
		else if(strcmp(x_job,"live",true) == 0)
		{
			if(LiveOffer[playerid] == 999) return SCM(playerid,COLOR_WHITE,"{FFB870}No one will offered a live.");
			LiveOffer[playerid] = 999;
		}
		else if(strcmp(x_job,"refill",true) == 0)
		{
			if(RefillOffer[playerid] == 999) return SCM(playerid,COLOR_WHITE,"{FFB870}No one offered you refill.");
			RefillOffer[playerid] = 999;
			RefillPrice[playerid] = 0;
		}
		else if(strcmp(x_job,"ticket",true) == 0)
		{
			if(TicketOffer[playerid] == 999) return SCM(playerid,COLOR_WHITE,"{FFB870}No one offered you ticket.");
			TicketOffer[playerid] = 999;
			TicketMoney[playerid] = 0;
		}
		else if(strcmp(x_job,"medic",true) == 0)
		{
			if(MedicCall[playerid] == playerid)
			{
				MedicCall[playerid] = -1;
			}
			else return SendClientMessage(playerid,COLOR_WHITE,"{FFB870}You are not the current caller.");
		}
		else if(strcmp(x_job,"mechanic",true) == 0)
		{
			if(MechanicCall[playerid] == playerid)
			{
				MechanicCall[playerid] = -1;
				new sendername[30];
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, sizeof(string), "** %s has canceled the call to a mechanic.", sendername);
		    	SendFamilyMessage(8, TEAM_AZTECAS_COLOR, string);
			}
			else return SendClientMessage(playerid, COLOR_WHITE,"{FFB870}You are not the current caller.");
		}
  		else if(strcmp(x_job,"House",true) == 0)
		{
			if(HouseOffer[playerid] == 999) return SCM(playerid,COLOR_WHITE,"{FFB870}No one offered you house.");
			HouseID[playerid] = 0;
			HouseOffer[playerid] = 999;
			HousePrice[playerid] = 0;
		}
		else if(strcmp(x_job,"taxi",true) == 0)
		{
			if(TaxiCall[playerid] == playerid)
			{
			    if(TransportDuty[playerid] == 1 && TaxiCallTime[playerid] > 0)
			    {
			        TaxiAccepted[playerid] = 999;
			        SCM(playerid,COLOR_LIGHTBLUE,"You have canceled the call.");
					TaxiCallTime[playerid] = 0;
					DisablePlayerCheckpoint(playerid);
					TaxiCall[playerid] = -1;
			    }
			    else
			    {
					if(IsPlayerConnected(TaxiCall[playerid]))
					{
						if(TaxiCall[playerid] == playerid)
						{
							TaxiCall[playerid] = -1;
						}
					}
					foreach(Player,i)
					{
						 if(IsPlayerConnected(i))
						 {
						     if(TaxiAccepted[i] < 999)
						     {
							     if(TaxiAccepted[i] == playerid)
							     {
							         TaxiAccepted[i] = 999;
							         SCM(i,COLOR_LIGHTBLUE,"Taxi caller canceled the call.");
							         TaxiCallTime[i] = 0;
							         DisablePlayerCheckpoint(i);
							     }
						    }
						}
					}
				}
			}
			else return SendClientMessage(playerid,COLOR_WHITE,"{FFB870}You are not the current caller.");
		}
	}
	return 1;
}
CMD:accept(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new x_job[256],
			id,
			sendername[25],
			giveplayer[25],
			string[300],
			tmpcar = GetPlayerVehicleID(playerid),
			ccar = IsPlayerInAnyVehicle(playerid);
		if(sscanf(params, "s[256]u",x_job,id))
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/accept <Name> <Name/Playerid>");
			SendClientMessage(playerid, COLOR_WHITE, "Available names: Drugs, Repair, House, Materials, Dice, Fight.");
			SendClientMessage(playerid, COLOR_WHITE, "Available names: Vehicle, Taxi, Medic, Live, Lawyer, Carrace.");
			SendClientMessage(playerid, COLOR_WHITE, "Available names: Mechanic, Ticket, Refill, Invite, Free.");
			return 1;
		}
		if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		if(strcmp(x_job,"dice",true) == 0)
		{
			if(Diceid[playerid] == 999) return SCM(playerid,COLOR_WHITE,"No player invited you to play Dice");
			if(Diceid[playerid] != id) return SCM(playerid,COLOR_WHITE,"That player did not invite you to play with him");
			if(GetPlayerCash(playerid) < Dicem[playerid]) return SCM(playerid,COLOR_WHITE,"You or your opponent do not have enough money to play Dice");
		    if(GetPlayerCash(id) < Dicem[playerid]) return SCM(playerid,COLOR_WHITE,"You or your opponent do not have enough money to play Dice");
			if(ProxDetectorS(10.0, playerid, Diceid[playerid]))
			{
			   	new dice1[MAX_PLAYERS],dice2[MAX_PLAYERS],total[MAX_PLAYERS];
			    dice1[playerid] = random(6) + 1;
				dice2[playerid] = random(6) + 1;
				total[playerid] = dice1[playerid] + dice2[playerid];
			    dice1[Diceid[playerid]] = random(6) + 1;
				dice2[Diceid[playerid]] = random(6) + 1;
				total[Diceid[playerid]] = dice1[Diceid[playerid]] + dice2[Diceid[playerid]];
			    GetPlayerName(playerid,sendername,sizeof(sendername));
			    GetPlayerName(Diceid[playerid],giveplayer,sizeof(giveplayer));
			    if(total[playerid] > total[Diceid[playerid]])
			    {
					format(string,sizeof(string),"%s rolls %d %d. %s rolls %d %d. %s won $%s.",sendername,dice1[playerid],dice2[playerid],giveplayer,dice1[Diceid[playerid]],dice2[Diceid[playerid]],sendername,FormatNumber(Dicem[playerid]));
					ProxDetector(10.0,playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid,Dicem[playerid]);
					GivePlayerCash(Diceid[playerid],-Dicem[playerid]);
					format(string,sizeof(string),"(+) You Won $%s!",FormatNumber(Dicem[playerid]));
					SendClientMessage(playerid, COLOR_GREEN, string);
					format(string,sizeof(string),"(-) Yo Lost $%s!",FormatNumber(Dicem[playerid]));
					SendClientMessage(Diceid[playerid], COLOR_GREEN, string);
				}
				if(total[Diceid[playerid]] > total[playerid])
				{
					format(string,sizeof(string),"%s rolls %d %d. %s rolls %d %d. %s won $%s.",sendername,dice1[playerid],dice2[playerid],giveplayer,dice1[Diceid[playerid]],dice2[Diceid[playerid]],giveplayer,FormatNumber(Dicem[playerid]));
					ProxDetector(10.0,playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid,-Dicem[playerid]);
					GivePlayerCash(Diceid[playerid],Dicem[playerid]);
					format(string,sizeof(string),"(+) You Won $%s!",FormatNumber(Dicem[playerid]));
					SendClientMessage(Diceid[playerid], COLOR_GREEN, string);
					format(string,sizeof(string),"(-) You Lost $%s!",FormatNumber(Dicem[playerid]));
					SendClientMessage(playerid, COLOR_GREEN, string);
				}
				if(total[Diceid[playerid]] == total[playerid])
				{
					format(string,sizeof(string),"%s rolls %d %d. %s rolls %d %d. No one won.",sendername,dice1[playerid],dice2[playerid],giveplayer,dice1[Diceid[playerid]],dice2[Diceid[playerid]]);
					ProxDetector(10.0,playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				Update(playerid, pCashx);
				Update(Diceid[playerid], pCashx);
				Diceid[playerid] = 999;
				Dicem[playerid] = 0;
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "You're not that player");
			return 1;
		}
		else if(strcmp(x_job,"invite",true) == 0)
		{
		    if(FactionOffer[playerid] != 999)
		    {
		        new str[256],d,m,y,h,mi,s;
				gettime(h,mi,s);
				getdate(y,m,d);
		        GetPlayerName(FactionOffer[playerid], sendername, sizeof(sendername));
		        GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
				new para1 = playerid, ftext[50];
				if(PlayerInfo[FactionOffer[playerid]][pMember] == 1) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; ftext = "Los Santos Police Department"; ChosenSkin[para1] = 71; SetPlayerSkin(para1, 71); }
				else if(PlayerInfo[FactionOffer[playerid]][pMember] == 2) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; ftext = "F.B.I"; ChosenSkin[para1] = 163; SetPlayerSkin(para1, 163); }
				else if(PlayerInfo[FactionOffer[playerid]][pMember] == 3) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; ftext = "National Guard"; ChosenSkin[para1] = 287; SetPlayerSkin(para1, 287); }
				else if(PlayerInfo[FactionOffer[playerid]][pMember] == 4) { PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; ftext = "Los Aztecas"; ChosenSkin[para1] = 116; SetPlayerSkin(para1, 116); }
				else if(PlayerInfo[FactionOffer[playerid]][pMember] == 5) { PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; ftext = "Grove Street"; ChosenSkin[para1] = 106; SetPlayerSkin(para1, 106); }
				else if(PlayerInfo[FactionOffer[playerid]][pMember] == 6) { PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; ftext = "Los Vagos"; ChosenSkin[para1] = 176; SetPlayerSkin(para1, 176); }
				else if(PlayerInfo[FactionOffer[playerid]][pMember] == 7) { PlayerInfo[para1][pTeam] = 4; gTeam[para1] = 5; ftext = "Government"; ChosenSkin[para1] = 249; SetPlayerSkin(para1, 249); }
				else if(PlayerInfo[FactionOffer[playerid]][pMember] == 8) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; ftext = "L.V Police Dep"; ChosenSkin[para1] = 71; SetPlayerSkin(para1, 71); }
				else if(PlayerInfo[FactionOffer[playerid]][pMember] == 9) { PlayerInfo[para1][pTeam] = 4; gTeam[para1] = 4; ftext = "N.R.E"; ChosenSkin[para1] = 17; SetPlayerSkin(para1, 17); }
				else if(PlayerInfo[FactionOffer[playerid]][pMember] == 10) { PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; ftext = "Ballas"; ChosenSkin[para1] = 104; SetPlayerSkin(para1, 104); }
				else if(PlayerInfo[FactionOffer[playerid]][pMember] == 11) { PlayerInfo[para1][pTeam] = 11; gTeam[para1] = 11; ftext = "Hitman Agency"; ChosenSkin[para1] = 208; SetPlayerSkin(para1, 208); }
				else if(PlayerInfo[FactionOffer[playerid]][pMember] == 12) { PlayerInfo[para1][pTeam] = 4; gTeam[para1] = 4; ftext = "School Instructors"; ChosenSkin[para1] = 153; SetPlayerSkin(para1, 153); }
				else if(PlayerInfo[FactionOffer[playerid]][pMember] == 13) { PlayerInfo[para1][pTeam] = 4; gTeam[para1] = 4; ftext = "Taxi LS"; ChosenSkin[para1] = 253; SetPlayerSkin(para1, 253); }
				else if(PlayerInfo[FactionOffer[playerid]][pMember] == 14) { PlayerInfo[para1][pTeam] = 4; gTeam[para1] = 4; ftext = "Paramedic Department LV"; ChosenSkin[para1] = 276; SetPlayerSkin(para1, 276); }
				else { return 1; }
                PlayerInfo[para1][pMember] = PlayerInfo[FactionOffer[playerid]][pMember];
				PlayerInfo[para1][pRank] = 1;
				PlayerInfo[para1][pModel] = ChosenSkin[para1];
				SetPlayerVirtualWorld(para1,0);
				SetSpawnInfo(playerid, PlayerInfo[para1][pTeam], PlayerInfo[para1][pModel],0.0,0.0,0.0,0,0,0,0,0,0,0);
		    	gTeam[para1] = PlayerInfo[para1][pTeam];
				SetPlayerToTeamColor(para1);
				SpawnPlayer(para1);
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Team`='%d',`Member`='%d',`Rank`='1',`Model`='%d',`FactionJoin`='%02d-%02d-%d %02d:%02d:%02d' WHERE `name`='%s'",PlayerInfo[para1][pTeam],PlayerInfo[para1][pMember],PlayerInfo[para1][pModel],d,m,y,h,mi,s,PlayerInfo[para1][pNormalName]);
				mysql_tquery(SQL,str,"","");
				new string2[500],query[500];
				format(string,sizeof(string),"You are now a member of the %s.",ftext);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string),"%s has joined the group (invited by %s).",giveplayer,sendername);
				SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_GENANNOUNCE, string);
				format(string2, sizeof(string2), "%s has joined the group %s (invited by %s).", giveplayer, ftext, sendername);
				mysql_format(SQL, query, sizeof(query), "INSERT INTO faction_logs (`text`, `player`,`leader`) VALUES ('%s','%d','%d')", string2, PlayerInfo[para1][pSQLID],PlayerInfo[FactionOffer[playerid]][pSQLID]);
				mysql_tquery(SQL,query,"","");
				format(string2,sizeof(string2),"%s[user:%d] has joined the group %s (invited by %s[user:%d]).",giveplayer,PlayerInfo[para1][pSQLID],ftext,sendername,PlayerInfo[FactionOffer[playerid]][pSQLID]);
				Factionlog(PlayerInfo[para1][pMember],PlayerInfo[para1][pSQLID],PlayerInfo[FactionOffer[playerid]][pSQLID],string2);
			}
		}
	 	else if(strcmp(x_job,"free",true) == 0)
		{
            if(FreeOffer[playerid] > -1)
			{
                if(FreeOffer[playerid] != id) return SCM(playerid,COLOR_WHITE,"{FFB870}This player has not offered you free.");
			    if(GetPlayerCash(playerid) < FreePrice[playerid]) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have money needed.");
			    GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(FreeOffer[playerid], sendername, sizeof(sendername));
				format(string, sizeof(string), "(+) %s Accepted You Free Offer For $%s", giveplayer, FormatNumber(FreePrice[playerid]));
				SendClientMessage(FreeOffer[playerid], COLOR_GREEN, string);
				PlayerInfo[FreeOffer[playerid]][pRob] -= 3;
				format(string, sizeof(string), "You Paid $%s For Free Offer", FormatNumber(FreePrice[playerid]));
				SendClientMessage(playerid, COLOR_DARKPINK, string);
				JailPrice[playerid] = 0;
				PlayerInfo[playerid][pJailTime] = 1;
				GivePlayerCash(playerid, -FreePrice[playerid]);
				GivePlayerCash(FreeOffer[playerid],FreePrice[playerid]);
				PlayerInfo[playerid][pJailed] = 1;
				new str[356];
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `JailTime`='0',`Money`='%d',`Jailed`='0' WHERE `name`='%s'",GetPlayerCash(playerid),PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Money`='%d' WHERE `name`='%s'",GetPlayerCash(FreeOffer[playerid]),PlayerInfo[FreeOffer[playerid]][pNormalName]);
				mysql_tquery(SQL,str,"","");
                FreeOffer[playerid] = -1;
                FreePlayer[playerid] = -1;
				FreePrice[playerid] = 0;
				return 1;
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}No-one offerd you free.");
		}
		else if(strcmp(x_job,"cinvite",true) == 0)
		{
	        if(GetPVarInt(playerid, "cinvID") >= 1)
			{
	            new messageString[128],str33[184],iddd,name2[30],strings[128];
	            PlayerInfo[playerid][pClan] = GetPVarInt(playerid, "cinvID");
				iddd = GetPVarInt(playerid, "cinvIDD");
				GetPlayerName(iddd,name2,sizeof(name2));
				PlayerInfo[playerid][pCRank] = 1;
				DeletePVar(playerid, "cinvID");
				DeletePVar(playerid, "cinvIDD");
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(messageString, sizeof(messageString), "{%s}[CLAN] %s joined the clan (invited by %s).",ClanInfo[PlayerInfo[playerid][pClan]][cClanColor],sendername,name2);
				SendToClan(PlayerInfo[playerid][pClan], COLOR_YELLOW, messageString);
				new y,m,d,h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				mysql_format(SQL,str33,sizeof(str33),"UPDATE users SET `Clan`='%d',`CRank`='1',`ClanJoin`='%02d-%02d-%d %02d:%02d:%02d' WHERE `name`='%s'",PlayerInfo[playerid][pClan],d,m,y,h,mi,s,PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str33,"","");
				format(messageString, sizeof(messageString), "%s joined the clan (invited by %s).",sendername,name2);
				mysql_real_escape_string(messageString, strings);
				mysql_format(SQL,str33,sizeof(str33),"INSERT INTO clan_logs (`action`,`clanid`) VALUES ('%s','%d')",strings,PlayerInfo[playerid][pClan]);
				mysql_tquery(SQL,str33,"","");

	        }
	        else {
				return SendClientMessage(playerid, COLOR_GREY, "You don't have an active clan invite request.");
			}
	    }
		else if(strcmp(x_job,"lawyer",true) == 0)
		{
			if(AcceptOffer[playerid] > -1)
			{
			    if(AcceptOffer[playerid] != id) return SCM(playerid,COLOR_WHITE,"{FFB870}This player has not offered you accept.");
			    if(GetPlayerCash(playerid) < AcceptPrice[playerid]) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have money needed.");
			    PlayerInfo[playerid][pLawyer] += 15;
			    PlayerInfo[AcceptOffer[playerid]][pLawyer] -= 15;
			    GivePlayerCash(playerid, - AcceptPrice[playerid]);
			    GivePlayerCash(AcceptOffer[playerid], AcceptPrice[playerid]);
			    new wakaname[25],
			    	str[356],
			    	wakaname2[25],
			    	str2[356];
				GetPlayerName(playerid,wakaname,25);
				mysql_format(SQL,str,356,"UPDATE users SET `Money`='%d',`Acceptpoints`='%d' WHERE `name`='%s'",GetPlayerCash(playerid),PlayerInfo[playerid][pLawyer],wakaname);
				mysql_tquery(SQL,str,"","");
				GetPlayerName(AcceptOffer[playerid],wakaname2,25);
				mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `Money`='%d',`Acceptpoints`='%d' WHERE `name`='%s'",GetPlayerCash(AcceptOffer[playerid]),PlayerInfo[AcceptOffer[playerid]][pLawyer],wakaname2);
				mysql_tquery(SQL,str2,"","");
				format(string,sizeof(string),"{B8FFDB}%s bought your accept.",wakaname);
			    SCM(AcceptOffer[playerid],COLOR_WHITE,string);
				format(string,sizeof(string),"{B8FFDB}You bought accept from %s.",wakaname2);
			    SCM(playerid,COLOR_WHITE,string);
			    AcceptOffer[playerid] = -1;
			    AcceptPrice[playerid] = 0;
			    return 1;
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}No-one offerd you accept.");
		}
		else if(strcmp(x_job,"materials",true) == 0)
		{
			if(MatsOffer[playerid] > -1)
			{
			    if(MatsOffer[playerid] != id) return SCM(playerid,COLOR_WHITE,"{FFB870}This player has not offered you materials.");
			    if(GetPlayerCash(playerid) < MatsPrice[playerid]) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have money needed.");
				PlayerInfo[playerid][pMats] += MatsAmmo[playerid];
				PlayerInfo[MatsOffer[playerid]][pMats] -= MatsAmmo[playerid];
			    GivePlayerCash(playerid, - MatsPrice[playerid]);
			    GivePlayerCash(MatsOffer[playerid], MatsPrice[playerid]);
			    GetPlayerName(MatsOffer[playerid],giveplayer,sizeof(giveplayer));
			    GetPlayerName(playerid,sendername,sizeof(sendername));
			    format(string,sizeof(string),"{B8FFDB}You buy %d materials for $%s from %s.",MatsAmmo[playerid],FormatNumber(MatsPrice[playerid]),giveplayer);
				SCM(playerid,COLOR_WHITE,string);
			    format(string,sizeof(string),"{B8FFDB}%s bought your materials for $%s.",sendername,FormatNumber(MatsPrice[playerid]));
				SCM(MatsOffer[playerid],COLOR_WHITE,string);
		        Update(playerid,pMatsx);
		        Update(MatsOffer[playerid],pMatsx);
		        Update(MatsOffer[playerid],pCashx);
				Update(playerid,pCashx);
				MatsOffer[playerid] = -1;
				MatsAmmo[playerid] = 0;
				MatsPrice[playerid] = 0;
				return 1;
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}No-one offerd you materials.");
		}
		else if(strcmp(x_job,"gun",true) == 0)
		{
			if(SellgunOffer[playerid] > -1)
			{
			    if(SellgunOffer[playerid] != id) return SCM(playerid,COLOR_WHITE,"{FFB870}This player has not offered you gun.");
			    if(GetPlayerCash(playerid) < SellgunPrice[playerid]) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have money needed.");
			    new weaponid,ammo,price,mats,gunname[60],idoffer;
			    weaponid = SellgunID[playerid];
			    ammo = SellgunAmmo[playerid];
				price = SellgunPrice[playerid];
				mats = SellgunMats[playerid];
				idoffer = SellgunOffer[playerid];
			    GivePlayerWeaponEx(playerid,weaponid,ammo);
				PlayerInfo[idoffer][pMats] -= mats;
				GivePlayerCash(playerid, -price);
			    GivePlayerCash(idoffer, price);
				Update(playerid, pCashx);
				Update(idoffer,pMatsx);
				Update(idoffer, pCashx);
				GetPlayerName(idoffer,giveplayer,sizeof(giveplayer));
			    GetPlayerName(playerid,sendername,sizeof(sendername));
				GetWeaponNameEx(weaponid,gunname,sizeof(gunname));
				format(string, sizeof(string), "You have given %s, a %s with %d ammo, for %d Materials.", sendername,gunname, ammo,mats);
				SendClientMessage(idoffer, COLOR_GRAD1, string);
				format(string, sizeof(string), "You have recieved a %s with %d ammo from %s.", gunname, ammo, giveplayer);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				format(string, sizeof(string), "* %s created a Gun from Materials, and hands it to %s.", giveplayer ,sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SellgunOffer[playerid] = -1;
				SellgunPrice[playerid] = 0;
				SellgunMats[playerid] = 0;
				SellgunAmmo[playerid] = 0;
				SellgunID[playerid] = 0;
				if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
				{
			        new gun2,tmp;
			        GetPlayerWeaponData(playerid,5,gun2,tmp);
			        #pragma unused tmp
			        if(gun2)SetPlayerArmedWeapon(playerid,gun2);
			        else SetPlayerArmedWeapon(playerid,0);
				}
				return 1;
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}No-one offerd you materials.");
		}
  		else if(strcmp(x_job,"biz",true) == 0)
		{
			if(bizoffer[playerid] < 999)
			{
				if(bizoffer[playerid] != id) return SCM(playerid,COLOR_WHITE,"{FFB870}This player has not offered you a bussines.");
				if(GetPlayerCash(playerid) >= bizprice[playerid])
				{
					if(IsPlayerConnected(bizoffer[playerid]))
					{
					    if(ProxDetectorS(5.0, playerid, bizoffer[playerid]))
					    {
					        GetPlayerName(bizoffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "{B8FFDB}* You accepted to buy the Bussines for $%d from %s.",bizprice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "{B8FFDB}* %s accepted to buy your Bussines, and the $%d was added to your account.",sendername,bizprice[playerid]);
							SendClientMessage(bizoffer[playerid], COLOR_WHITE, string);
							format(string, sizeof(string), "[AdmInfo]: {FFFFFF}%s [user:%d]  Bought Biz (/sellbizto) [bizz:%d] From %s [user:%d] For $%s.",sendername,PlayerInfo[playerid][pSQLID],bizid[playerid],giveplayer,PlayerInfo[bizoffer[playerid]][pSQLID],FormatNumber(bizprice[playerid]));
                            ABroadCast(COLOR_YELLOW,string,1);
                            new var100[256],y,m,d,h,mi,s,string2[256],string3[256];
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string2,sizeof(string2),"[%02d-%02d-%d %02d:%02d:%02d] %s[user:%d] bought bizz %d from %s[user:%d] for $%s.",d,m,y,h,mi,s,sendername,PlayerInfo[playerid][pSQLID],bizid[playerid],giveplayer,PlayerInfo[bizoffer[playerid]][pSQLID],FormatNumber(bizprice[playerid]));
	    					mysql_real_escape_string(string2, string3);
							mysql_format(SQL, var100, sizeof(var100), "INSERT INTO playerlogs (`playerid`,`giverid`,`action`,`time`) VALUES ('%d','%d','%s','%02d-%02d-%d %02d:%02d:%02d')", PlayerInfo[playerid][pSQLID],PlayerInfo[HouseOffer[playerid]][pSQLID],string3,d,m,y,h,mi,s);
							mysql_tquery(SQL,var100,"","");
							GivePlayerCash(playerid, -bizprice[playerid]);
						    GivePlayerCash(bizoffer[playerid], bizprice[playerid]);
						    new str[356];
							PlayerInfo[playerid][pPbiskey] = bizid[playerid];
							strmid(BizzInfo[bizid[playerid]][bOwner], PlayerInfo[playerid][pNormalName], 0, 25, 999);
							mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Bizz`='%d',`Money`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPbiskey],GetPlayerCash(playerid),PlayerInfo[playerid][pNormalName]);
							mysql_tquery(SQL,str,"","");
							mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Owner`='%s' WHERE `ID`='%d'",BizzInfo[bizid[playerid]][bOwner],bizid[playerid]);
							mysql_tquery(SQL,str,"","");
							OnPropTextdrawUpdate(2,bizid[playerid]);
							PlayerInfo[bizoffer[playerid]][pPbiskey] = 255;
							mysql_format(SQL,string,sizeof(string),"UPDATE users SET `Bizz`='255',`Money`='%d' WHERE `name`='%s'",GetPlayerCash(bizoffer[playerid]),PlayerInfo[bizoffer[playerid]][pNormalName]);
							mysql_tquery(SQL,string,"","");
							bizid[playerid] = 0;
							bizprice[playerid] = 0;
							bizoffer[playerid] = 999;
							return 1;
						}
						else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You're too far away.");
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't have money needed.");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Nobody offered you any bussines.");
		}
   		else if(strcmp(x_job,"house",true) == 0)
		{
			if(HouseOffer[playerid] < 999)
			{
				if(HouseOffer[playerid] != id) return SCM(playerid,COLOR_WHITE,"{FFB870}This player has not offered you a house.");
				if(GetPlayerCash(playerid) >= HousePrice[playerid])
				{
					if(IsPlayerConnected(HouseOffer[playerid]))
					{
					    if(ProxDetectorS(3.0, playerid, HouseOffer[playerid]))
					    {
					        GetPlayerName(HouseOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "{B8FFDB}* You accepted to buy the House for $%d from %s.",HousePrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "{B8FFDB}* %s accepted your to buy your House, and the $%s was added to your Account.",sendername,FormatNumber(HousePrice[playerid]));
							SendClientMessage(HouseOffer[playerid], COLOR_WHITE, string);
							format(string, sizeof(string), "[AdmInfo]: {FFFFFF}%s [user:%d]  Bought House (/sellhouseto) [house:%d] From %s [user:%d] For $%s.",sendername,PlayerInfo[playerid][pSQLID],HouseID[playerid],giveplayer,PlayerInfo[HouseOffer[playerid]][pSQLID],FormatNumber(HousePrice[playerid]));
                            ABroadCast(COLOR_YELLOW,string,1);
                            new var100[256],y,m,d,h,mi,s,string2[256],string3[256];
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string2,sizeof(string2),"[%02d-%02d-%d %02d:%02d:%02d] %s[user:%d] bought house %d from %s[user:%d] for $%s.",d,m,y,h,mi,s,sendername,PlayerInfo[playerid][pSQLID],HouseID[playerid],giveplayer,PlayerInfo[HouseOffer[playerid]][pSQLID],FormatNumber(HousePrice[playerid]));
	    					mysql_real_escape_string(string2, string3);
							mysql_format(SQL, var100, sizeof(var100), "INSERT INTO playerlogs (`playerid`,`giverid`,`action`,`time`) VALUES ('%d','%d','%s','%02d-%02d-%d %02d:%02d:%02d')", PlayerInfo[playerid][pSQLID],PlayerInfo[HouseOffer[playerid]][pSQLID],string3,d,m,y,h,mi,s);
							mysql_tquery(SQL,var100,"","");
							PlayerInfo[playerid][pPhousekey] = HouseID[playerid];
							PlayerInfo[HouseOffer[playerid]][pPhousekey] = 999;
		    				GivePlayerCash(playerid, -HousePrice[playerid]);
						    GivePlayerCash(HouseOffer[playerid], HousePrice[playerid]);
							strmid(HouseInfo[HouseID[playerid]][hOwner], PlayerInfo[playerid][pNormalName], 0, 25, 999);
							Update(playerid,pCashx);
							Update(playerid,pPhousekeyx);
							Update(HouseOffer[playerid],pPhousekeyx);
							Update(HouseOffer[playerid],pCashx);
							new str2[256];
							mysql_format(SQL,str2,sizeof(str2),"UPDATE `houses` SET `Owner`='%s' WHERE `ID`='%d'",HouseInfo[HouseID[playerid]][hOwner],HouseID[playerid]);
							mysql_tquery(SQL,str2,"","");
							OnPropTextdrawUpdate(1,HouseID[playerid]);
							RemovePlayerMapIcon(HouseOffer[playerid], 1);
							HouseOffer[playerid] = 999;
							HousePrice[playerid] = 0;
							HouseID[playerid] = 0;
							return 1;
						}
						else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You're too far away.");
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't have money needed.");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Nobody offered you any house.");
		}
		else if(strcmp(x_job,"ticket",true) == 0)
		{
			if(TicketOffer[playerid] < 999)
			{
				if(TicketOffer[playerid] != id) return SCM(playerid,COLOR_WHITE,"{FFB870}This player has not offered you ticket.");
			    if(IsPlayerConnected(TicketOffer[playerid]))
			    {
			        if (ProxDetectorS(5.0, playerid, TicketOffer[playerid]))
					{
				        GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(GetPlayerCash(playerid) < TicketMoney[playerid]) return SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You don't have enough money.");
						format(string, sizeof(string), "{B8FFDB}* You have paid the Ticket of $%d to Officer %s.", TicketMoney[playerid], giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "{B8FFDB}* %s has paid your Ticket of $%d.", sendername, TicketMoney[playerid]);
						SendClientMessage(TicketOffer[playerid], COLOR_WHITE, string);
						GivePlayerCash(playerid, - TicketMoney[playerid]);
						GivePlayerCash(TicketOffer[playerid], TicketMoney[playerid]);
						Update(playerid, pCashx);
						Update(TicketOffer[playerid], pCashx);
						PlayerInfo[TicketOffer[playerid]][pTickets] += 1;
						Update(TicketOffer[playerid], pTicketsx);
						TicketOffer[playerid] = 999;
						TicketMoney[playerid] = 0;
						return 1;
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}The officer is not near you.");
			    }
			    else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}No-one offered you a ticket.");
		}
		else if(strcmp(x_job,"taxi",true) == 0)
		{
            if(PlayerInfo[playerid][pMember] != 13) return SCM(playerid,COLOR_WHITE,"{FFB870}You're not a taxi driver.");
			if(TransportDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a taxi driver on duty.");
	        if(TaxiCallTime[playerid] > 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You have already accepted a taxi call.");
	        if(!ccar && IsAnTaxi(tmpcar)) return SCM(playerid,COLOR_WHITE,"{FFB870}You're not in taxi car.");
	        if(TaxiCall[id] != id) return SCM(playerid,COLOR_WHITE,"{FFB870}This player has not called taxi.");
	        if(TaxiCall[id] == id)
	        {
				if(IsPlayerConnected(TaxiCall[id]))
	            {
	                GetPlayerName(playerid, sendername, sizeof(sendername));
	                GetPlayerName(TaxiCall[id], giveplayer, sizeof(giveplayer));
	                format(string, sizeof(string), "{B8FFDB}* You have accepted the Taxi Call from %s, you will see the marker untill you have reached it.",giveplayer);
					SendClientMessage(playerid, COLOR_WHITE, string);
                    format(string, sizeof(string), "{B8FFDB}* Taxi Driver %s has accepted your Taxi Call please wait at your current Position.",sendername);
					SendClientMessage(TaxiCall[id], COLOR_WHITE, string);
					format(string, sizeof(string), "{FFFF00}* Taxi Driver %s has accepted %s Taxi Call.",sendername,giveplayer);
					SendFamilyMessage(13, COLOR_WHITE, string);
					TaxiCallTime[playerid] = 1;
					TaxiAccepted[playerid] = TaxiCall[id];
					TaxiCall[id] = -1;
					return 1;
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	        }
	        else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}No-one called for a taxi yet.");
		}
		else if(strcmp(x_job,"medic",true) == 0)
		{
			if(PlayerInfo[playerid][pMember] == 14)
			{
				if(MedicCallTime[playerid] > 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You have already accepted a medic call.");
				if(!ccar && IsAnAmbulance(tmpcar)) return SCM(playerid,COLOR_WHITE,"{FFB870}You're not in ambulance car.");
				if(OnDutymedic[playerid] == 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a Paramedic on duty.");
                if(MedicCall[id] != id) return SCM(playerid,COLOR_WHITE,"{FFB870}This player has not called ambulance.");
			    if(MedicCall[id] == id)
		        {
					if(IsPlayerConnected(MedicCall[id]))
		            {
		                GetPlayerName(playerid, sendername, sizeof(sendername));
		                GetPlayerName(MedicCall[id], giveplayer, sizeof(giveplayer));
		                format(string, sizeof(string), "{B8FFDB}* You have accepted the Medic Call from %s, you have 5 minutes to get there.",giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SendClientMessage(playerid, COLOR_WHITE, "{B8FFDB}* After the 5 minutes the Red Marker will dissapear.");
	                    format(string, sizeof(string), "{B8FFDB}* Medic %s has accepted your Medic Call please wait at your current Position.",sendername);
						SendClientMessage(MedicCall[id], COLOR_WHITE, string);
						new Float:X,Float:Y,Float:Z;
						GetPlayerPos(MedicCall[id], X, Y, Z);
						SetPlayerCheckpoint(playerid, X, Y, Z, 5);
						MedicCallTime[playerid] = 1;
						MedicCall[id] = -1;
						return 1;
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		        }
		        else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}No-one called for a medic yet.");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a Paramedic.");
		}
		else if(strcmp(x_job,"mechanic",true) == 0)
		{
			if(PlayerInfo[playerid][pJob] != 8) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a car mechanic.");
	        if(MechanicCallTime[playerid] == 1) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You have already accepted a Mechanic Call.");
	        if(JobDuty[playerid] == 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a mechanic on duty.");
			if(MechanicCall[id] != id) return SCM(playerid,COLOR_WHITE,"{FFB870}This player has not called a mechanic.");
			if(MechanicCall[id] == id)
	        {
			    if(IsPlayerConnected(MechanicCall[id]))
	            {
	                GetPlayerName(playerid, sendername, sizeof(sendername));
                	GetPlayerName(MechanicCall[id], giveplayer, sizeof(giveplayer));
                	format(string, sizeof(string), "{B8FFDB}* You have accepted the Mechanic Call from %s, you have 5 minutes to get there.",giveplayer);
					SendClientMessage(playerid, COLOR_WHITE, string);
					SendClientMessage(playerid, COLOR_WHITE, "{B8FFDB}* After the 5 minutes the Red Marker will dissapear.");
     				format(string, sizeof(string), "{B8FFDB}* Car Mechanic %s has accepted your Mechanic Call please wait at your current Position.",sendername);
					SendClientMessage(MechanicCall[id], COLOR_WHITE, string);
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(MechanicCall[id], X, Y, Z);
					SetPlayerCheckpoint(playerid, X, Y, Z, 5);
					MechanicCallTime[playerid] = 1;
					MechanicCall[id] = -1;
					return 1;
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	        }
	        else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}No-one called for a car Mechanic yet.");
		}
		else if(strcmp(x_job,"refill",true) == 0)
		{
			if(RefillOffer[playerid] < 999)
			{
				if(RefillOffer[playerid] != id) return SCM(playerid,COLOR_WHITE,"{FFB870}This player has not offered you refill.");
				if(IsPlayerConnected(RefillOffer[playerid]))
			    {
			        if(GetPlayerCash(playerid) > RefillPrice[playerid])
			        {
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(RefillOffer[playerid], giveplayer, sizeof(giveplayer));
			            new car = gLastCar[playerid];
      					format(string, sizeof(string), "{B8FFDB}* You refilled your car for $%d by Car Mechanic %s.",RefillPrice[playerid],giveplayer);
						SendClientMessage(playerid,COLOR_WHITE, string);
						format(string, sizeof(string), "{B8FFDB}* You refilled %s's car and you received $%d.",sendername,RefillPrice[playerid]);
						SendClientMessage(RefillOffer[playerid], COLOR_WHITE, string);
						GivePlayerCash(RefillOffer[playerid],RefillPrice[playerid]);
						GivePlayerCash(playerid, -RefillPrice[playerid]);
						if(Gas[car] < 110) { Gas[car] = 100; }
			 	 		new str[256];
						mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Money`='%d' WHERE `name`='%s'",GetPlayerCash(RefillOffer[playerid]),PlayerInfo[RefillOffer[playerid]][pNormalName]);
						mysql_tquery(SQL,str,"","");
						Update(playerid, pCashx);
					    RefillOffer[playerid] = 999;
						RefillPrice[playerid] = 0;
						return 1;
			        }
					else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You cant afford the refill.");
			    }
			    else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}No-one offered to refill your car.");
		}
		else if(strcmp(x_job,"live",true) == 0)
		{
			if(LiveOffer[playerid] < 999)
			{
				if(LiveOffer[playerid] != id) return SCM(playerid,COLOR_WHITE,"This player has not offered you live.");
			    if(IsPlayerConnected(LiveOffer[playerid]))
			    {
				    if (ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
					{
						new strs[128],namee[30];
						GetPlayerName(playerid, namee, sizeof(namee));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "You are now in a live interview! Respect the rules or you will get kicked!");
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "Everything you say will be seen by everyone on the server!");
						SendClientMessage(playerid, COLOR_DARKPINK, "You got freeze. You will be able to move after the end of the live.");
						format(strs,sizeof(strs),"%s accepted live interview.", namee);
						SendClientMessage(LiveOffer[playerid], COLOR_LIGHTBLUE, strs);
						SendClientMessage(LiveOffer[playerid], COLOR_DARKPINK, "You got freeze. You will be able to move after you finish the live.");
						TogglePlayerControllable(playerid, 0);
						TogglePlayerControllable(LiveOffer[playerid], 0);
						TalkingLive[playerid] = 1;
						TalkingLive[LiveOffer[playerid]] = 1;
						LiveOffer[playerid] = 999;
						return 1;
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "You are to far away from the News Reporter.");
				}
                else return SendClientMessage(playerid, COLOR_WHITE, "Error: Player not connected.");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "No-one gave you a live conversation offer.");
		}
		else if(strcmp(x_job,"drugs",true) == 0)
		{
			if(DrugOffer[playerid] < 999)
			{
				if(DrugOffer[playerid] != id) return SCM(playerid,COLOR_WHITE,"{FFB870}This player has not offered you drugs.");
				if(GetPlayerCash(playerid) > DrugPrice[playerid])
				{
				    if(PlayerInfo[playerid][pDrugs] <= 50)
				    {
					    if(IsPlayerConnected(DrugOffer[playerid]))
					    {
					        GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "{B8FFDB}* You bought %d gram for $%d from Drug Dealer %s.",DrugGram[playerid],DrugPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "{B8FFDB}* %s has bought your %d gram, the $%d was added to your PayCheck.",sendername,DrugGram[playerid],DrugPrice[playerid]);
							SendClientMessage(DrugOffer[playerid], COLOR_WHITE, string);
							GivePlayerCash(DrugOffer[playerid],DrugPrice[playerid]);
							GivePlayerCash(playerid, -DrugPrice[playerid]);
							PlayerInfo[playerid][pDrugs] += DrugGram[playerid];
							PlayerInfo[DrugOffer[playerid]][pDrugs] -= DrugGram[playerid];
							new str[456];
							mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Money`='%d',`Drugs`='%d' WHERE `name`='%s'",GetPlayerCash(playerid),PlayerInfo[playerid][pDrugs],PlayerInfo[playerid][pNormalName]);
							mysql_tquery(SQL,str,"","");
							mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Money`='%d',`Drugs`='%d' WHERE `name`='%s'",GetPlayerCash(DrugOffer[playerid]),PlayerInfo[DrugOffer[playerid]][pDrugs],PlayerInfo[DrugOffer[playerid]][pNormalName]);
							mysql_tquery(SQL,str,"","");
						    DrugOffer[playerid] = 999;
							DrugPrice[playerid] = 0;
							DrugGram[playerid] = 0;
							return 1;
						}
						else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are fully loaded with drugs, use them first.");
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You can't afford those drugs.");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}No-one offerd you any drugs.");
		}
		else if(strcmp(x_job,"repair",true) == 0)
		{
			if(RepairOffer[playerid] < 999)
			{
				if(RepairOffer[playerid] != id) return SCM(playerid,COLOR_WHITE,"{FFB870}This player has not offered you repair.");
			    if(GetPlayerCash(playerid) > RepairPrice[playerid])
				{
					if(IsPlayerInAnyVehicle(playerid))
					{
					    if(IsPlayerConnected(RepairOffer[playerid]))
					    {
						    GetPlayerName(RepairOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
       						RepairCar[playerid] = GetPlayerVehicleID(playerid);
						    SetVehicleHealth(RepairCar[playerid], 1000.0);
						    RepairVehicle(RepairCar[playerid]);
							format(string, sizeof(string), "{B8FFDB}* You repaired your car for $%d by Car Mechanic %s.",RepairPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "{B8FFDB}* You fixed %s's car, the $%d has been added to your PayCheck.",sendername,RepairPrice[playerid]);
							SendClientMessage(RepairOffer[playerid], COLOR_WHITE, string);
							GivePlayerCash(RepairOffer[playerid],RepairPrice[playerid]);
							GivePlayerCash(playerid, -RepairPrice[playerid]);
							Update(playerid, pCashx);
							Update(RepairOffer[playerid],pCashx);
							RepairOffer[playerid] = 999;
							RepairPrice[playerid] = 0;
							return 1;
						}
						else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
					}
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You can't afford the repair.");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}No-one offerd you to repair your car.");
		}
		else if(strcmp(x_job,"hidden",true) == 0)
		{
		    if(IsPlayerConnected(hiddenoffer[playerid]))
		    {
		        if(hiddenoffer[playerid] != id) return SCM(playerid,COLOR_WHITE,"This player has not offered you a hidden color.");
		        if(PlayerInfo[hiddenoffer[playerid]][pPremiumPoints] <= 9) return SCM(playerid,COLOR_WHITE,"That player don't have 10 premium points.");
		        if(GetPlayerCash(playerid) >= hiddenprice[playerid])
		        {
		            new string23[128],sendername2[30],giveplayer2[30];
		            GetPlayerName(playerid, sendername2, sizeof(sendername2));
		            GetPlayerName(hiddenoffer[playerid], giveplayer2, sizeof(giveplayer2));
		            PlayerInfo[hiddenoffer[playerid]][pHiddenColor] -= 1;
		            PlayerInfo[playerid][pHiddenColor] += 1;
		            Update(hiddenoffer[playerid], pHiddenColorx);
		            Update(playerid, pHiddenColorx);
		            GivePlayerCash(playerid, -hiddenprice[playerid]);
		            GivePlayerCash(hiddenoffer[playerid], hiddenprice[playerid]);
		            Update(playerid, pCashx);
		            Update(hiddenoffer[playerid], pCashx);
		            format(string23,sizeof(string23),"You have bought a hidden color from %s for $%s.",giveplayer2,FormatNumber(hiddenprice[playerid]));
		            SendClientMessage(playerid, COLOR_GREEN, string23);
		            format(string23,sizeof(string23),"%s bought your hidden color for $%s.",sendername2,FormatNumber(hiddenprice[playerid]));
		            SendClientMessage(hiddenoffer[playerid], COLOR_GREEN, string23);
		            hiddenoffer[playerid] = 999;
		            hiddenprice[playerid] = 0;
				}
				else return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have money needed.");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else if(strcmp(x_job,"tradecar",true) == 0)
		{
		    if(IsPlayerConnected(tradeofferer[playerid]))
		    {
		        if(tradeofferer[playerid] != id) return SCM(playerid,COLOR_WHITE,"{FFB870}This player has not offered you a car.");
		        if(GetPlayerCash(tradeofferer[playerid]) >= tradediff[playerid])
		        {
		            new tid = tradeofferer[playerid],string21[256],sendername21[30],giveplayer21[30];
		            GetPlayerName(tradeofferer[playerid],sendername21,sizeof(sendername21));
		            GetPlayerName(playerid,giveplayer21,sizeof(giveplayer21));
		            if(tradetype2[playerid] != PlayerInfo[playerid][pPcarkey] && tradetype2[playerid] != PlayerInfo[playerid][pmotokey] && tradetype2[playerid] != PlayerInfo[playerid][pprcarkey] && tradetype2[playerid] != PlayerInfo[playerid][pprcarkey2] && tradetype2[playerid] != PlayerInfo[playerid][pPPluscarkey] && tradetype2[playerid] != PlayerInfo[playerid][pPPluscarkey])
						return SendClientMessage(playerid, COLOR_WHITE, "Masina oferita numai este detinuta de tine.");
					if(tradetype[playerid] != PlayerInfo[tid][pPcarkey] && tradetype[playerid] != PlayerInfo[tid][pmotokey] && tradetype[playerid] != PlayerInfo[tid][pprcarkey] && tradetype[playerid] != PlayerInfo[tid][pprcarkey2] && tradetype[playerid] != PlayerInfo[tid][pPPluscarkey] && tradetype[playerid] != PlayerInfo[tid][pPPluscarkey2])
					    return SendClientMessage(playerid, COLOR_WHITE, "Acel jucator numai detine aceasta masina.");

					if(tradecars2[playerid] == personalcar[0][playerid])
					{
	    				personalcar[0][playerid] = tradecars[playerid];
					}
					if(tradecars2[playerid] == personalcar[1][playerid])
					{
	    				personalcar[1][playerid] = tradecars[playerid];
					}
					if(tradecars2[playerid] == personalcar[2][playerid])
					{
	    				personalcar[2][playerid] = tradecars[playerid];
					}
					if(tradecars2[playerid] == personalcar[3][playerid])
					{
	    				personalcar[3][playerid] = tradecars[playerid];
					}
					if(tradecars2[playerid] == personalcar[4][playerid])
					{
	    				personalcar[4][playerid] = tradecars[playerid];
					}
					if(tradecars2[playerid] == personalcar[5][playerid])
					{
	    				personalcar[5][playerid] = tradecars[playerid];
					}

					if(tradecars[playerid] == personalcar[0][tradeofferer[playerid]])
					{
	    				personalcar[0][tradeofferer[playerid]] = tradecars2[playerid];
					}
					if(tradecars[playerid] == personalcar[1][tradeofferer[playerid]])
					{
	    				personalcar[1][tradeofferer[playerid]] = tradecars2[playerid];
					}
					if(tradecars[playerid] == personalcar[2][tradeofferer[playerid]])
					{
	    				personalcar[2][tradeofferer[playerid]] = tradecars2[playerid];
					}
					if(tradecars[playerid] == personalcar[3][tradeofferer[playerid]])
					{
	    				personalcar[3][tradeofferer[playerid]] = tradecars2[playerid];
					}
					if(tradecars[playerid] == personalcar[4][tradeofferer[playerid]])
					{
	    				personalcar[4][tradeofferer[playerid]] = tradecars2[playerid];
					}
					if(tradecars[playerid] == personalcar[5][tradeofferer[playerid]])
					{
	    				personalcar[5][tradeofferer[playerid]] = tradecars2[playerid];
					}

					if(tradetype2[playerid] == PlayerInfo[playerid][pPcarkey])
					{
					    PlayerInfo[playerid][pPcarkey] = tradetype[playerid];
					    Update(playerid,pPcarkeyx);
					}
					if(tradetype2[playerid] == PlayerInfo[playerid][pmotokey])
					{
					    PlayerInfo[playerid][pmotokey] = tradetype[playerid];
					    Update(playerid,pmotokeyx);
					}
					if(tradetype2[playerid] == PlayerInfo[playerid][pprcarkey])
					{
					    PlayerInfo[playerid][pprcarkey] = tradetype[playerid];
					    Update(playerid,pprcarkeyx);
					}
					if(tradetype2[playerid] == PlayerInfo[playerid][pprcarkey])
					{
					    PlayerInfo[playerid][pprcarkey] = tradetype[playerid];
					    Update(playerid,pprcarkey2x);
					}
					if(tradetype2[playerid] == PlayerInfo[playerid][pPPluscarkey])
					{
					    PlayerInfo[playerid][pPPluscarkey] = tradetype[playerid];
					    Update(playerid,pPPluscarkeyx);
					}
					if(tradetype2[playerid] == PlayerInfo[playerid][pPPluscarkey2])
					{
					    PlayerInfo[playerid][pPPluscarkey2] = tradetype[playerid];
					    Update(playerid,pPPluscarkey2x);
					}

					if(tradetype[playerid] == PlayerInfo[tradeofferer[playerid]][pPcarkey])
					{
					    PlayerInfo[tradeofferer[playerid]][pPcarkey] = tradetype2[playerid];
					    Update(tradeofferer[playerid],pPcarkeyx);
					}
					if(tradetype[playerid] == PlayerInfo[tradeofferer[playerid]][pmotokey])
					{
					    PlayerInfo[tradeofferer[playerid]][pmotokey] = tradetype2[playerid];
					    Update(tradeofferer[playerid],pmotokeyx);
					}
					if(tradetype[playerid] == PlayerInfo[tradeofferer[playerid]][pprcarkey])
					{
					    PlayerInfo[tradeofferer[playerid]][pprcarkey] = tradetype2[playerid];
					    Update(tradeofferer[playerid],pprcarkeyx);
					}
					if(tradetype[playerid] == PlayerInfo[tradeofferer[playerid]][pprcarkey2])
					{
					    PlayerInfo[tradeofferer[playerid]][pprcarkey2] = tradetype2[playerid];
					    Update(tradeofferer[playerid],pprcarkey2x);
					}
					if(tradetype[playerid] == PlayerInfo[tradeofferer[playerid]][pPPluscarkey])
					{
					    PlayerInfo[tradeofferer[playerid]][pPPluscarkey] = tradetype2[playerid];
					    Update(tradeofferer[playerid],pPPluscarkeyx);
					}
					if(tradetype[playerid] == PlayerInfo[tradeofferer[playerid]][pPPluscarkey2])
					{
					    PlayerInfo[tradeofferer[playerid]][pPPluscarkey2] = tradetype2[playerid];
					    Update(tradeofferer[playerid],pPPluscarkey2x);
					}
					GivePlayerCash(tradeofferer[playerid], - tradediff[playerid]);
					GivePlayerCash(playerid, tradediff[playerid]);
					Update(tradeofferer[playerid], pCashx);
					Update(playerid, pCashx);
					strmid(CarInfo[tradetype[playerid]][cOwner], PlayerInfo[playerid][pNormalName], 0, 25, 999);
	    			vUpdate(tradetype[playerid],cOwnerx);
	    			strmid(CarInfo[tradetype2[playerid]][cOwner], PlayerInfo[tradeofferer[playerid]][pNormalName], 0, 25, 999);
	    			vUpdate(tradetype2[playerid],cOwnerx);
					format(string21,sizeof(string21),"Ai acceptat schimbul de masini cu %s, acum ai %s in loc de %s + diferenta $%s.",sendername21,CarInfo[tradetype[playerid]][cDescription],CarInfo[tradetype2[playerid]][cDescription],FormatNumber(tradediff[playerid]));
					SendClientMessage(playerid, COLOR_GREEN, string21);
					RemovePlayerFromVehicleEx(id);
					format(string21,sizeof(string21),"Ai acceptat schimbul de masini cu %s, acum ai %s in loc de %s - diferenta $%s.",giveplayer21,CarInfo[tradetype2[playerid]][cDescription],CarInfo[tradetype[playerid]][cDescription],FormatNumber(tradediff[playerid]));
					SendClientMessage(tradeofferer[playerid], COLOR_GREEN, string21);
					RemovePlayerFromVehicleEx(id);
					format(string21, sizeof(string21), "($) %s traded his car (%s - %d) + $%s for %s's car (%s - %d).",giveplayer21,CarInfo[tradetype[playerid]][cDescription],CarInfo[tradetype[playerid]][cID],FormatNumber(tradediff[playerid]),sendername21,CarInfo[tradetype2[playerid]][cDescription],CarInfo[tradetype2[playerid]][cID]);
					ABroadCast(COLOR_YELLOW, string21,1);
					new var100[256],y,m,d,h,mi,s,string2[256],string3[256];
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string2,sizeof(string2),"[%02d-%02d-%d %02d:%02d:%02d] %s[user:%d] traded his car (%s - %d) + $%s for %s[user:%d] car (%s - %d)",d,m,y,h,mi,s,giveplayer21,PlayerInfo[playerid][pSQLID],CarInfo[tradetype[playerid]][cDescription],CarInfo[tradetype[playerid]][cID],FormatNumber(tradediff[playerid]),sendername21,PlayerInfo[tradeofferer[playerid]][pSQLID],CarInfo[tradetype2[playerid]][cDescription],CarInfo[tradetype2[playerid]][cID]);
	    			mysql_real_escape_string(string2, string3);
					mysql_format(SQL, var100, sizeof(var100), "INSERT INTO playerlogs (`playerid`,`giverid`,`action`,`time`) VALUES ('%d','%d','%s','%02d-%02d-%d %02d:%02d:%02d')", PlayerInfo[playerid][pSQLID],PlayerInfo[tradeofferer[playerid]][pSQLID],string3,d,m,y,h,mi,s);
					mysql_tquery(SQL,var100,"","");
					tradeofferer[playerid] = -1;
					tradediff[playerid] = 0;
					tradetype[playerid] = -1;
					tradetype2[playerid] = - 1;
					tradecars[playerid] = -1;
					tradecars2[playerid] = -1;
				}
				else return SCM(playerid,COLOR_WHITE,"{FFB870}That player don't have the difference.");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else if(strcmp(x_job,"car",true) == 0)
		{
		    if(IsPlayerConnected(ofercar[playerid]))
		    {
		        if(ofercar[playerid] != id) return SCM(playerid,COLOR_WHITE,"{FFB870}This player has not offered you a car.");
		        if(GetPlayerCash(playerid) >= carprice[playerid])
		        {
		            new vehh = GetPlayerVehicleID(id),tipmasina,myvehh = GetPlayerVehicleID(playerid),vehiculprimit;
					if(primesccar[playerid] == 1)
					{
					    if(vehh != personalcar[0][ofercar[playerid]]) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Vehicle seller needs to be at his selling car.");
					    if(myvehh != personalcar[0][ofercar[playerid]]) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You need to be in the offered vehicle.");
					    tipmasina = 1;
					}
					if(primesccar[playerid] == 2)
					{
					    if(vehh != personalcar[1][ofercar[playerid]]) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Vehicle seller needs to be at his selling car.");
					    if(myvehh != personalcar[1][ofercar[playerid]]) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You need to be in the offered vehicle.");
					    tipmasina = 2;
					}
					if(primesccar[playerid] == 3)
					{
					    if(vehh != personalcar[2][ofercar[playerid]]) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Vehicle seller needs to be at his selling car.");
					    if(myvehh != personalcar[2][ofercar[playerid]]) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You need to be in the offered vehicle.");
					    tipmasina = 3;
					}
					if(primesccar[playerid] == 4)
					{
					    if(vehh != personalcar[3][ofercar[playerid]]) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Vehicle seller needs to be at his selling car.");
					    if(myvehh != personalcar[3][ofercar[playerid]]) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You need to be in the offered vehicle.");
					    tipmasina = 4;
					}
					if(primesccar[playerid] == 5)
					{
					    if(vehh != personalcar[4][ofercar[playerid]]) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Vehicle seller needs to be at his selling car.");
					    if(myvehh != personalcar[4][ofercar[playerid]]) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You need to be in the offered vehicle.");
					    tipmasina = 5;
					}
					if(primesccar[playerid] == 6)
					{
					    if(vehh != personalcar[5][ofercar[playerid]]) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Vehicle seller needs to be at his selling car.");
					    if(myvehh != personalcar[5][ofercar[playerid]]) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You need to be in the offered vehicle.");
					    tipmasina = 6;
					}

         			if(PlayerInfo[playerid][pPremiumAccount] == 0 && PlayerInfo[playerid][pPlusSlot1] == 0 && PlayerInfo[playerid][pPlusSlot2] == 0)
 					{
    					if(PlayerInfo[playerid][pPcarkey] == 0)
		    			{
		    			    if(cartype[playerid] == 1)
		    			    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pPcarkey];
 								PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
	    						Update(playerid,pPcarkeyx);
		    					Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
							{
							    PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pmotokey];
 								PlayerInfo[ofercar[playerid]][pmotokey] = 0;
	    						Update(playerid,pPcarkeyx);
		    					Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
							{
							    PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pprcarkey];
 								PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
	    						Update(playerid,pPcarkeyx);
		    					Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
							{
							    PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
 								PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
	    						Update(playerid,pPcarkeyx);
		    					Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
							{
							    PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
 								PlayerInfo[ofercar[playerid]][pPPluscarkey] = 0;
	    						Update(playerid,pPcarkeyx);
		    					Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
							{
							    PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
 								PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
	    						Update(playerid,pPcarkeyx);
		    					Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 1;
						}
						else if(PlayerInfo[playerid][pmotokey] == 0)
  						{
  						    if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 2;
						}
						else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You already have 2 cars.");
					}
					if(PlayerInfo[playerid][pPremiumAccount] > 0 && PlayerInfo[playerid][pPlusSlot1] == 0 && PlayerInfo[playerid][pPlusSlot2] == 0)
  					{
	    				if(PlayerInfo[playerid][pPcarkey] == 0)
			    		{
							if(cartype[playerid] == 1)
		    			    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pPcarkey];
 								PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
	    						Update(playerid,pPcarkeyx);
		    					Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
							{
							    PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pmotokey];
 								PlayerInfo[ofercar[playerid]][pmotokey] = 0;
	    						Update(playerid,pPcarkeyx);
		    					Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
							{
							    PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pprcarkey];
 								PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
	    						Update(playerid,pPcarkeyx);
		    					Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
							{
							    PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
 								PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
	    						Update(playerid,pPcarkeyx);
		    					Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
							{
							    PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
 								PlayerInfo[ofercar[playerid]][pPPluscarkey] = 0;
	    						Update(playerid,pPcarkeyx);
		    					Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
							{
							    PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
 								PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
	    						Update(playerid,pPcarkeyx);
		    					Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 1;
						}
						else if(PlayerInfo[playerid][pmotokey] == 0)
  						{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 2;
						}
						else if(PlayerInfo[playerid][pprcarkey] == 0)
  						{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pprcarkey] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pprcarkeyx);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pprcarkey] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pprcarkeyx);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pprcarkey] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pprcarkeyx);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pprcarkey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pprcarkeyx);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pprcarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pprcarkeyx);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pprcarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pprcarkeyx);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 3;
						}
						else if(PlayerInfo[playerid][pprcarkey2] == 0)
  						{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pprcarkey2] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pprcarkey2x);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pprcarkey2] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pprcarkey2x);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pprcarkey2] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pprcarkey2x);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pprcarkey2] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pprcarkey2x);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pprcarkey2] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pprcarkey2x);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pprcarkey2] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pprcarkey2x);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 4;
						}
						else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You already have 2 cars + 2 premium cars.");
					}
					if(PlayerInfo[playerid][pPremiumAccount] > 0 && PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPlusSlot2] == 0)
  					{
	    				if(PlayerInfo[playerid][pPcarkey] == 0)
			    		{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 1;
						}
						else if(PlayerInfo[playerid][pmotokey] == 0)
  						{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 2;
						}
						else if(PlayerInfo[playerid][pprcarkey] == 0)
  						{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pprcarkey] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pprcarkeyx);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pprcarkey] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pprcarkeyx);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pprcarkey] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pprcarkeyx);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pprcarkey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pprcarkeyx);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pprcarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pprcarkeyx);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pprcarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pprcarkeyx);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 3;
						}
						else if(PlayerInfo[playerid][pprcarkey2] == 0)
  						{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pprcarkey2] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pprcarkey2x);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pprcarkey2] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pprcarkey2x);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pprcarkey2] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pprcarkey2x);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pprcarkey2] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pprcarkey2x);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pprcarkey2] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pprcarkey2x);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pprcarkey2] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pprcarkey2x);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 4;
						}
						else if(PlayerInfo[playerid][pPPluscarkey] == 0)
  						{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 5;
						}
						else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You already have 2 cars + 2 premium cars + 1 plus car.");
					}
					if(PlayerInfo[playerid][pPremiumAccount] > 0 && PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPlusSlot2] == 1)
  					{
	    				if(PlayerInfo[playerid][pPcarkey] == 0)
				    	{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 1;
						}
						else if(PlayerInfo[playerid][pmotokey] == 0)
  						{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 2;
						}
						else if(PlayerInfo[playerid][pprcarkey] == 0)
  						{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pprcarkey] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pprcarkeyx);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pprcarkey] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pprcarkeyx);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pprcarkey] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pprcarkeyx);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pprcarkey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pprcarkeyx);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pprcarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pprcarkeyx);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pprcarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pprcarkeyx);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 3;
						}
						else if(PlayerInfo[playerid][pprcarkey2] == 0)
  						{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pprcarkey2] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pprcarkey2x);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pprcarkey2] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pprcarkey2x);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pprcarkey2] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pprcarkey2x);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pprcarkey2] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pprcarkey2x);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pprcarkey2] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pprcarkey2x);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pprcarkey2] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pprcarkey2x);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 4;
						}
						else if(PlayerInfo[playerid][pPPluscarkey] == 0)
  						{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 5;
						}
						else if(PlayerInfo[playerid][pPPluscarkey2] == 0)
  						{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pPPluscarkey2] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pPPluscarkey2x);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pPPluscarkey2] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pPPluscarkey2x);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pPPluscarkey2] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pPPluscarkey2x);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pPPluscarkey2] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pPPluscarkey2x);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pPPluscarkey2] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPPluscarkey2x);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pPPluscarkey2] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPPluscarkey2x);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 6;
						}
						else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You already have 2 cars + 2 premium cars + 2 plus cars.");
					}
					if(PlayerInfo[playerid][pPremiumAccount] == 0 && PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPlusSlot2] == 0)
  					{
	    				if(PlayerInfo[playerid][pPcarkey] == 0)
				    	{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 1;
						}
						else if(PlayerInfo[playerid][pmotokey] == 0)
  						{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 2;
						}
						else if(PlayerInfo[playerid][pPPluscarkey] == 0)
  						{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 5;
						}
						else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You already have 2 cars + 1 plus car.");
					}
					if(PlayerInfo[playerid][pPremiumAccount] == 0 && PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPlusSlot2] == 1)
  					{
	    				if(PlayerInfo[playerid][pPcarkey] == 0)
				    	{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pPcarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPcarkeyx);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 1;
						}
						else if(PlayerInfo[playerid][pmotokey] == 0)
  						{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pmotokey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pmotokeyx);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 2;
						}
						else if(PlayerInfo[playerid][pPPluscarkey] == 0)
  						{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pPPluscarkey] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPPluscarkeyx);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 5;
						}
						else if(PlayerInfo[playerid][pPPluscarkey2] == 0)
  						{
							if(cartype[playerid] == 1)
  						    {
								PlayerInfo[playerid][pPPluscarkey2] = PlayerInfo[ofercar[playerid]][pPcarkey];
	    						PlayerInfo[ofercar[playerid]][pPcarkey] = 0;
				    			Update(playerid,pPPluscarkey2x);
				    			Update(ofercar[playerid],pPcarkeyx);
							}
							if(cartype[playerid] == 2)
  						    {
								PlayerInfo[playerid][pPPluscarkey2] = PlayerInfo[ofercar[playerid]][pmotokey];
	    						PlayerInfo[ofercar[playerid]][pmotokey] = 0;
				    			Update(playerid,pPPluscarkey2x);
				    			Update(ofercar[playerid],pmotokeyx);
							}
							if(cartype[playerid] == 3)
  						    {
								PlayerInfo[playerid][pPPluscarkey2] = PlayerInfo[ofercar[playerid]][pprcarkey];
	    						PlayerInfo[ofercar[playerid]][pprcarkey] = 0;
				    			Update(playerid,pPPluscarkey2x);
				    			Update(ofercar[playerid],pprcarkeyx);
							}
							if(cartype[playerid] == 4)
  						    {
								PlayerInfo[playerid][pPPluscarkey2] = PlayerInfo[ofercar[playerid]][pprcarkey2];
	    						PlayerInfo[ofercar[playerid]][pprcarkey2] = 0;
				    			Update(playerid,pPPluscarkey2x);
				    			Update(ofercar[playerid],pprcarkey2x);
							}
							if(cartype[playerid] == 5)
  						    {
								PlayerInfo[playerid][pPPluscarkey2] = PlayerInfo[ofercar[playerid]][pPPluscarkey];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPPluscarkey2x);
				    			Update(ofercar[playerid],pPPluscarkeyx);
							}
							if(cartype[playerid] == 6)
  						    {
								PlayerInfo[playerid][pPPluscarkey2] = PlayerInfo[ofercar[playerid]][pPPluscarkey2];
	    						PlayerInfo[ofercar[playerid]][pPPluscarkey2] = 0;
				    			Update(playerid,pPPluscarkey2x);
				    			Update(ofercar[playerid],pPPluscarkey2x);
							}
							vehiculprimit = 6;
						}
						else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You already have 2 cars + 2 plus cars.");
					}
					if(tipmasina == 1)
					{
						personalcar[0][id] = 0;
					}
					if(tipmasina == 2)
					{
					    personalcar[1][id] = 0;
					}
					if(tipmasina == 3)
					{
					    personalcar[2][id] = 0;
					}
					if(tipmasina == 4)
					{
					    personalcar[3][id] = 0;
					}
					if(tipmasina == 5)
					{
					    personalcar[4][id] = 0;
					}
					if(tipmasina == 6)
					{
					    personalcar[5][id] = 0;
					}
					new sendernames[30],giveplayers[30],stringy[256],vehID = OwnedVeh(GetPlayerVehicleID(playerid));
					GetPlayerName(playerid,sendernames,sizeof(sendernames));
					GetPlayerName(ofercar[playerid],giveplayers,sizeof(giveplayers));
                    format(stringy, sizeof(stringy), "* %s sold his %s [car:%d] to %s for $%s.",giveplayers,CarInfo[vehID][cDescription],CarInfo[vehID][cID],sendernames,FormatNumber(carprice[playerid]));
                    ProxDetector(30.0, playerid, stringy, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, stringy);
					SendClientMessage(ofercar[playerid], COLOR_LIGHTBLUE, stringy);
					ABroadCast(COLOR_YELLOW, stringy,1);
					new var100[256],y,m,d,h,mi,s,string2[256],string3[256];
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string2,sizeof(string2),"[%02d-%02d-%d %02d:%02d:%02d] %s[user:%d] sold car %d to %s[user:%d] for $%s.",d,m,y,h,mi,s,giveplayers,PlayerInfo[ofercar[playerid]][pSQLID],CarInfo[vehID][cID],sendernames,PlayerInfo[playerid][pSQLID],FormatNumber(carprice[playerid]));
 					mysql_real_escape_string(string2, string3);
					mysql_format(SQL, var100, sizeof(var100), "INSERT INTO playerlogs (`playerid`,`giverid`,`action`,`time`) VALUES ('%d','%d','%s','%02d-%02d-%d %02d:%02d:%02d')", PlayerInfo[playerid][pSQLID],PlayerInfo[ofercar[playerid]][pSQLID],string3,d,m,y,h,mi,s);
					mysql_tquery(SQL,var100,"","");
					new vehhh = GetPlayerVehicleID(playerid);
					if(vehiculprimit == 1)
					{
					    personalcar[0][playerid] = vehhh;
					}
					else if(vehiculprimit == 2)
					{
					    personalcar[1][playerid] = vehhh;
					}
					else if(vehiculprimit == 3)
					{
					    personalcar[2][playerid] = vehhh;
					}
					else if(vehiculprimit == 4)
					{
					    personalcar[3][playerid] = vehhh;
					}
					else if(vehiculprimit == 5)
					{
					    personalcar[4][playerid] = vehhh;
					}
					else if(vehiculprimit == 6)
					{
					    personalcar[5][playerid] = vehhh;
					}

					RemovePlayerFromVehicleEx(ofercar[playerid]);
					GivePlayerCash(playerid, - carprice[playerid]);
	    			GivePlayerCash(ofercar[playerid], carprice[playerid]);
					Update(playerid,pCashx);
					Update(ofercar[playerid],pCashx);
					strmid(CarInfo[CarID[playerid]][cOwner], PlayerInfo[playerid][pNormalName], 0, 25, 999);
	    			vUpdate(CarID[playerid],cOwnerx);
					ofercar[playerid] = -1;
    				carprice[playerid] = 0;
       				primesccar[playerid] = 0;
       				cartype[playerid] = 0;
       				CarID[playerid] = -1;
    				SwitchKey[playerid] = 1;
				}
				else return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have money needed.");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Available names:{B8DBFF} Drugs, Repair, House");
			SendClientMessage(playerid, COLOR_WHITE, "Available names:{B8DBFF} Vehicle, Taxi, Medic, Live");
			SendClientMessage(playerid, COLOR_WHITE, "Available names:{B8DBFF} Mechanic, Ticket, Refill");
			return 1;
		}
	}
	return 1;
}
CMD:invite(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pRank] >= 6)
		{
			new id,string[256],string2[256],giveplayer[30],sendername[30];
			if(sscanf(params, "u", id)) return SendClientMessage(playerid, 0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF}/invite <Name/Playerid>");
			if(PlayerInfo[id][pFpunish] != 0) return SCM(playerid,COLOR_WHITE,"{FFB870}You can not invite this player because it has faction punish.");
            new membrii = GetFactionMembers(PlayerInfo[playerid][pMember]);
   			if(membrii >= DynamicFactions[PlayerInfo[playerid][pMember]][fMaxMembers]) return SendClientMessage(playerid, COLOR_LIGHTRED, "You have reached maximum faction members.");
			if(PlayerInfo[id][pLevel] < DynamicFactions[PlayerInfo[playerid][pMember]][fMinLevel])
			{
				format(string,sizeof(string),"To invite a member to this faction, it must have a minimum level %d.",DynamicFactions[PlayerInfo[playerid][pMember]][fMinLevel]);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				return 1;
			}
			if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
					if(PlayerInfo[id][pMember] == 0 && PlayerInfo[id][pLeader] == 0)
					{
    					GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(id, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s has invited you to join group %s (to accept the invitation, type '/accept invite %d').", sendername, DynamicFactions[PlayerInfo[playerid][pMember]][fName], playerid);
						SendClientMessage(id, COLOR_LIGHTBLUE, string);
						SendClientMessage(playerid, COLOR_DARKPINK, "Processing invite...");
						format(string2, sizeof(string2), "You have invited %s to join your group.", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string2);
						FactionOffer[id] = playerid;
                    }
					else
					{
	    				SendClientMessage(playerid, COLOR_WHITE, "{FFB870}This player is already in a faction.");
						return 1;
					}
				}
			}
			else
	    	{
                SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	    	}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Only leaders can use this command.");
  		}
	}
	return 1;
}
CMD:changerank(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pLeader] >= 1)
	 	{
			new para1,level,string[256],giveplayer[30],sendername[30],rtext[64];
			if(sscanf(params, "ui", para1,level)) return SendClientMessage(playerid, 0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF}/changerank <Name/Playerid> <Rank(1-6)>");
			if(level > 6 || level < 1) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Dont go below number 1 or above number 6.");
			if(PlayerInfo[para1][pMember] != PlayerInfo[playerid][pLeader]) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}This member is not in your faction.");
			if(PlayerInfo[para1][pLeader] > 0) return SCM(playerid,COLOR_WHITE,"{FFB870}This player is a leader.");
			if(para1 != INVALID_PLAYER_ID)
			{
				GetPlayerName(para1, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(level == 1) format(rtext, sizeof(rtext),"%s",DynamicFactions[PlayerInfo[playerid][pMember]][fRankName1]);
				else if(level == 2) format(rtext, sizeof(rtext),"%s",DynamicFactions[PlayerInfo[playerid][pMember]][fRankName2]);
				else if(level == 3) format(rtext, sizeof(rtext),"%s",DynamicFactions[PlayerInfo[playerid][pMember]][fRankName3]);
				else if(level == 4) format(rtext, sizeof(rtext),"%s",DynamicFactions[PlayerInfo[playerid][pMember]][fRankName4]);
				else if(level == 5) format(rtext, sizeof(rtext),"%s",DynamicFactions[PlayerInfo[playerid][pMember]][fRankName5]);
				else if(level == 6) format(rtext, sizeof(rtext),"%s",DynamicFactions[PlayerInfo[playerid][pMember]][fRankName6]);
				format(string,sizeof(string),"%s changed %s's faction rank from %d to %d.",sendername,giveplayer,PlayerInfo[para1][pRank],level);
				Factionlog(PlayerInfo[para1][pMember],PlayerInfo[para1][pSQLID],PlayerInfo[playerid][pSQLID],string);
				PlayerInfo[para1][pRank] = level;
				format(string, sizeof(string), "%s has promoted you to the rank of %s (%d).", sendername,rtext,level);
				SendClientMessage(para1, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "You have promoted %s to the rank of %s (%d).", giveplayer,rtext,level);
				SendClientMessage(playerid, COLOR_WHITE, string);
        		new str[256];
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Rank`='%d' WHERE `name`='%s'",PlayerInfo[para1][pRank],PlayerInfo[para1][pNormalName]);
				mysql_tquery(SQL,str,"","");
			}
	     	else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Only leaders can use this command.");
	}
	return 1;
}
CMD:withdraw(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
     	if(IsAtBank(playerid) || IsAtATM(playerid))
		{
			new money,string[100];
			if(sscanf(params, "i", money))
			{
				SendClientMessage(playerid, 0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF}/withdraw <Amount of Money>");
				format(string, sizeof(string), "{FFFF00}You Have $%s In Your Bank Account", FormatNumber(PlayerInfo[playerid][pAccount]));
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			if (money > PlayerInfo[playerid][pAccount] || money < 1) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You dont have that much.");
		    ConsumingMoney[playerid] = 1;
			GivePlayerCash(playerid, money);
			PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-money;
			format(string, sizeof(string), "{FFFF00}You have withdrawn $%s from your account Total: $%s.", FormatNumber(money),FormatNumber(PlayerInfo[playerid][pAccount]));
			SendClientMessage(playerid, COLOR_WHITE, string);
    		new str[168];
			mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Money`='%d',`Bank`='%d' WHERE `name`='%s'",GetPlayerCash(playerid),PlayerInfo[playerid][pAccount],PlayerInfo[playerid][pNormalName]);
			mysql_tquery(SQL,str,"","");
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "You are not at the bank!");
	        return 1;
 		}
	}
	return 1;
}
CMD:deposit(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
     	if(IsAtBank(playerid))
		{
			new money,string[100];
			if(sscanf(params, "i", money))
			{
				SendClientMessage(playerid, 0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF}/withdraw <Amount of Money>");
				format(string, sizeof(string), "{FFFF00}You have $%s in your account.", FormatNumber(PlayerInfo[playerid][pAccount]));
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			if (money > GetPlayerCash(playerid) || money < 1) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You dont have that much.");
			GivePlayerCash(playerid, -money);
			new curfunds = PlayerInfo[playerid][pAccount];
			PlayerInfo[playerid][pAccount]=money+PlayerInfo[playerid][pAccount];
			SendClientMessage(playerid, COLOR_WHITE, "|___ BANK STATMENT ___|");
			format(string, sizeof(string), " Old Balance: $%s", FormatNumber(curfunds));
			SendClientMessage(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), " Deposit: $%s",FormatNumber(money));
			SendClientMessage(playerid, COLOR_GRAD4, string);
			SendClientMessage(playerid, COLOR_GRAD6, "|-----------------------------------------|");
		    format(string, sizeof(string), " New Balance: $%s", FormatNumber(PlayerInfo[playerid][pAccount]));
		    SendClientMessage(playerid, COLOR_WHITE1, string);
			Update(playerid, pBank);
			Update(playerid, pCashx);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "You are not at the bank!");
	        return 1;
 		}
	}
	return 1;
}
CMD:balance(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
        if(IsAtBank(playerid))
	    {
			new string[100];
			format(string, sizeof(string), "{FFFF00}You have $%s in your account.", FormatNumber(PlayerInfo[playerid][pAccount]));
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "You are not at the bank!");
	        return 1;
 		}
	}
	return 1;
}
CMD:transfer(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pLevel] < 5) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}You need level 5 to do this.");
        if(IsAtBank(playerid))
	    {
			new id,moneytransfer,string[100],giveplayer[30],sendername[30],playermoney;
			if(sscanf(params, "ui", id,moneytransfer)) return SendClientMessage(playerid, 0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF}/transfer <Name/Playerid> <Amount of Money>");
			if(playerid == id) return SCM(playerid,COLOR_WHITE,"{FFB870}You can not transfer the money to you");
			if(IsPlayerConnected(id))
			{
                if(id != INVALID_PLAYER_ID)
			    {
			    	if(gPlayerLogged[id] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "This player need to login.");
					GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					playermoney = PlayerInfo[playerid][pAccount];
					if (moneytransfer > 0 && playermoney >= moneytransfer)
					{
					    if(PlayerInfo[playerid][pLevel] < 7 && moneytransfer > 10000000) return SCM(playerid, COLOR_WHITE, "You can not transfer more than $ 10,000,000 When Your Level Is Lower Than 7");
					    if(PlayerInfo[id][pLevel] < 5 && moneytransfer > 10000000) return SCM(playerid, COLOR_WHITE, "You can not transfer more than $ 10,000,000 to that player until it is level 5");
						new cashbank = floatround(floatmul(moneytransfer,0.10),floatround_ceil);
					    format(string,sizeof(string),"Are you sure you want to transfer %s$ to %s?\nTax is $%s.",FormatNumber(moneytransfer),giveplayer,FormatNumber(cashbank));
						TransferOffer[playerid] = id;
						TransferMoney[playerid] = moneytransfer;
						ShowPlayerDialog(playerid, DIALOG_TRANSFER, DIALOG_STYLE_MSGBOX, "Transfer:", string, "Yes", "No");
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Invalid transaction amount.");
				}
	        }
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
    	}
		else return SendClientMessage(playerid, COLOR_WHITE, "You are not at the bank!");
	}
	return 1;
}
CMD:undercover(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    {
		if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
		{
		    if(Undercover[playerid] == 0 && GoChase[playerid] == 999) return SendClientMessage(playerid, COLOR_WHITE, "You don't have a contract.");
			if(Undercover[playerid] == 0)
			{
		    	SCM(playerid, COLOR_YELLOW, "You are now undercover. No one can see your name.");
		    	Undercover[playerid] = 1;
		    	foreach(Player,i)
     			{
      				ShowPlayerNameTagForPlayer(i, playerid, 0);
           		}
			}
			else
			{
		    	SCM(playerid, COLOR_YELLOW, "You are not undercover anymore. Anyone can see your name.");
		    	Undercover[playerid] = 0;
				foreach(Player,i)
     			{
      				ShowPlayerNameTagForPlayer(i, playerid, 1);
           		}
			}
 		}
 		else return SendClientMessage(playerid, COLOR_LIGHTRED, "You are not a hitman.");
	}
	return 1;
}
CMD:gethit(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    {
        if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) {} else return SendClientMessage(playerid, COLOR_LIGHTRED, "You are not a hitman.");
		{
		    new searchhit = 0,cid[MAX_PLAYERS],sendername[30],giveplayer[30],string[128];
		    if(GoChase[playerid] != 999)
			{
				SCM(playerid,COLOR_WHITE,"{FFB870}You already have a contract.");
				return 1;
			}
		    if(PlayerInfo[playerid][pHitT] != 0)
		    {
				SCM(playerid,COLOR_WHITE,"You have to wait 5 minutes after canceling/terminating a contract to use /gethit.");
				return 1;
		    }
			foreach(Player,i)
			{
			    if(PlayerInfo[i][pHeadValue] > 0 && GotHit[i] == 0 && PlayerInfo[i][pMember] != 11 && gPlayerLogged[i] == 1 && IsBot[i] == 0)
			    {
			        searchhit = 1;
			        cid[playerid] = i;
			    }
		    }
			if(searchhit == 0)
			{
			    SendClientMessage(playerid, COLOR_YELLOW, "No contracts available.");
			    return 1;
			}
			if(IsPlayerConnected(cid[playerid]))
		    {
		        GetPlayerName(playerid, sendername, sizeof(sendername));
		        GetPlayerName(cid[playerid], giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "%s received a contract. Target: %s.", sendername, giveplayer);
				SendFamilyMessage(11, COLOR_TEAL, string);
				SendClientMessage(playerid, COLOR_YELLOW, "You have a new contract(/mycontract).");
			    GoChase[playerid] = cid[playerid];
				GetChased[cid[playerid]] = playerid;
				GotHit[cid[playerid]] = 1;
				foreach(Player,i)
	            togfind[playerid] = 1;
	            return 1;
			}
		}
	}
	return 1;
}
CMD:mycontract(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    {
        if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
		{
		    if(GoChase[playerid] != 999)
		    {
		        new name[30],string[128];
		    	GetPlayerName(GoChase[playerid], name, sizeof(name));
		    	format(string, sizeof(string), "You have a contract on %s(%d)",name,GoChase[playerid]);
		    	SendClientMessage(playerid, COLOR_GREY, string);
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "You don't have a contract.");
		}
	}
	return 1;
}
CMD:checkcontract(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    {
        if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
		{
		    new id;
		    if(sscanf(params, "u", id)) return SendClientMessage(playerid, 0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF}/checkcontract <Name/Playerid>");
			if(PlayerInfo[id][pMember] != 11) return SendClientMessage(playerid, COLOR_WHITE, "This player is not a hitman.");
			if(GoChase[id] != 999)
		    {
		        new name[30],string[128],name2[30];
		    	GetPlayerName(GoChase[id], name, sizeof(name));
		    	GetPlayerName(id,name2,sizeof(name2));
		    	format(string, sizeof(string), "%s have a contract on %s(%d)",name2,name,GoChase[id]);
		    	SendClientMessage(playerid, COLOR_GREY, string);
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "This hitman don't have a contract.");
		}
	}
	return 1;
}
CMD:cancelhit(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    {
        if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
		{
		    if(GoChase[playerid] != 999)
		    {
		        new name[30],string[256];
		        GotHit[GoChase[playerid]] = 0;
				GetChased[GoChase[playerid]] = 999;
				GoChase[playerid] = 999;
            	foreach(Player,i)
	        	togfind[playerid] = 0;
            	PlayerInfo[playerid][pHitT] = 0;
  	 			mysql_format(SQL, string, sizeof(string), "UPDATE users SET `HitT`='%d' WHERE `name`='%s'", PlayerInfo[playerid][pHitT], PlayerInfo[playerid][pNormalName]);
	        	mysql_tquery(SQL,string,"","");
				GetPlayerName(playerid, name, sizeof(name));
		    	format(string, sizeof(string), "%s canceled his contract.",name);
		    	SendFamilyMessage(11, COLOR_TEAL, string);
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "You don't have a contract.");
		}
	}
	return 1;
}
CMD:contracts(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    {
        if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
		{
		    new count1=0,count2=0,string[128];
		    foreach(Player,i)
		    {
		        if(PlayerInfo[i][pHeadValue] != 0 && IsBot[i] == 0)
		        {
		            if(PlayerInfo[i][pSleeping] == 1)
		            {
		            	count1++;
					}
					count2++;
				}
			}
			SendClientMessage(playerid, COLOR_TEAL, "[Contracts]");
			format(string,sizeof(string),"Targets AFK/sleeping: %d",count1);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string,sizeof(string),"Total targets: %d",count2);
			SendClientMessage(playerid, COLOR_WHITE, string);
		    SendClientMessage(playerid, COLOR_TEAL, "-------------------");
		}
	}
	return 1;
}
CMD:togapps(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    {
        if(PlayerInfo[playerid][pRank] == 7 && PlayerInfo[playerid][pMember] != 0)
		{
		    new stringy2[256];

			if(DynamicFactions[PlayerInfo[playerid][pMember]][fApplication] == 1)
			{
				SCM(playerid, COLOR_WHITE, "The applications are now offline.");
				DynamicFactions[PlayerInfo[playerid][pMember]][fApplication] = 0;
				mysql_format(SQL, stringy2, sizeof(stringy2), "UPDATE `factions` SET `Application` = '0' WHERE `ID` = '%d'", PlayerInfo[playerid][pMember]);
				mysql_tquery(SQL,stringy2,"","");
			}
			else if(DynamicFactions[PlayerInfo[playerid][pMember]][fApplication] == 0)
			{
				SCM(playerid, COLOR_WHITE, "The applications are now online.");
				DynamicFactions[PlayerInfo[playerid][pMember]][fApplication] = 1;
				mysql_format(SQL, stringy2, sizeof(stringy2), "UPDATE `factions` SET `Application` = '1' WHERE `ID` = '%d'", PlayerInfo[playerid][pMember]);
				mysql_tquery(SQL,stringy2,"","");
			}
		}
		else
		{
			SCM(playerid, COLOR_GREY, "You are not a faction leader!");
		}
	}
	return 1;
}
CMD:factions(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		ShowFactions(playerid);
	}
	return 1;
}
CMD:hqs(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if(CP[playerid] < 1 && IsCollectingRubbish[playerid] < 1 && !IsATruck(GetPlayerVehicleID(playerid)) && MechanicCallTime[playerid] < 1 && CheckBus[playerid] < 1 && GotoMats[playerid] < 1 && CarJacker[playerid] < 1)
		{
			ShowPlayerDialog(playerid, DIALOG_HQS, DIALOG_STYLE_LIST, "SERVER: HQ Locations", "Los Santos Police Department\nNational Guard\nHitman Agency\nFBI\nNews Reporters\nGrove Street\nGovernment\nBallas\nLos Aztecas\nSchool Instructors\nParamedic Department\nLos Vagos\nTaxi LS\nL.V Police Dep", "Checkpoint", "Back");
		}
		else
		{
		    ShowPlayerDialog(playerid, DIALOG_JOBULETES, DIALOG_STYLE_MSGBOX, "Checkpoint Cancel", "Are You Sure You Want To Cancel CHeckpoint ?", "Yeah", "No");
		}
	}
	return 1;
}
CMD:locations(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if(CP[playerid] < 1 && IsCollectingRubbish[playerid] < 1 && !IsATruck(GetPlayerVehicleID(playerid)) && MechanicCallTime[playerid] < 1 && CheckBus[playerid] < 1 && GotoMats[playerid] < 1 && CarJacker[playerid] < 1)
		{
			ShowPlayerDialog(playerid, DIALOG_LOCATIONS, DIALOG_STYLE_LIST, "New Land Locations !", "Driving School\nLos Santos\nLas Venturas\nFaction HQS\nVehicle Mod Shops\nPaintball\nDealership", "Select", "Close");
		}
		else
		{
		    ShowPlayerDialog(playerid, DIALOG_JOBULETES, DIALOG_STYLE_MSGBOX, "Checkpoint Cancel", "Are You Sure You Want To Cancel CHeckpoint ?", "Yeah", "No");
		}
	}
	return 1;
}
CMD:gps(playerid, params[])
{
	return cmd_locations(playerid, params);
}
CMD:healto(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new id,price,sendername[30],giveplayer[30],string[200];
		if(PlayerInfo[playerid][pMember] != 14) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not a Paramedic.");
		if(sscanf(params, "ui", id,price)) return SendClientMessage(playerid, 0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF}/healto <Name/Playerid> <Price>");
	    if(price < 1 || price > 1000) return SendClientMessage(playerid, COLOR_WHITE,"{FFB870}Healing price not below $1 or above $1,000.");
		if (id == playerid) return SendClientMessage(playerid, COLOR_WHITE,"{FFB870}You can not heal yourself.");
    	if (IsPlayerConnected(id))
		{
			if(id != INVALID_PLAYER_ID)
			{
				if(GetPlayerCash(id) < price) return SCM(playerid,COLOR_WHITE,"{FFB870}This player does not have enough money.");
				if(OnDutymedic[playerid] < 1) return SCM(playerid,COLOR_WHITE,"{FFB870}You Must Be On-Duty To Use This Command");
			    GetPlayerName(id, giveplayer, sizeof(giveplayer));
			    GetPlayerName(playerid, sendername, sizeof(sendername));
				new giveambu = GetPlayerVehicleID(id),
					playambu = GetPlayerVehicleID(playerid);
				if (IsAnAmbulance(playambu) && playambu == giveambu)
				{
					new Float:tempheal;
					GetPlayerHealthEx(id,tempheal);
					if(tempheal >= 100.0) return SendClientMessage(playerid, COLOR_WHITE,"{FFB870}This player has full life.");
					format(string, sizeof(string), "~w~You healed ~n~~w~%s~n~~g~$%d", giveplayer,price);
					GameTextForPlayer(playerid, string, 5000, 1);
					GivePlayerCash(playerid,price);
					GivePlayerCash(id,-price);
					SetPlayerHealthEx(id, 100);
					PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "You have been healed for %s$.",FormatNumber(price));
					SendClientMessage(id, COLOR_LIGHTBLUE,string);
					PlayerInfo[playerid][pCommands]++;
					Update(playerid,pCommandsx);
					new str[256];
				    mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCommands],PlayerInfo[playerid][pNormalName]);
				    mysql_tquery(SQL,str,"","");
					Update(id, pCashx);
					Update(playerid, pCashx);
					PlayerInfo[playerid][pPHeals] += 1;
					Update(playerid,pPHealsx);
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE,"{FFB870}One of you is not in the ambulance/chopper.");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
			return 1;
		}
	}
	return 1;
}
CMD:heal(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new string[100],sendername[25];
		if(IsACop(playerid))
		{
			if(InHouse[playerid] > 0)
			{
            	SetPlayerHealthEx(playerid,100.0);
            	if(HouseInfo[InHouse[playerid]][hArm] == 1 && OnDuty[playerid] == 1)
				{
					GetPlayerName(playerid,sendername,sizeof(sendername));
					format(string, sizeof(string), "* %s puts on body armour.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerArmourEx(playerid,100.0);
				}
			}
			else
			{
				if(IsPlayerInRangeOfPoint(playerid, 50.0, 245.8297,112.4436,1003.2188) || IsPlayerInRangeOfPoint(playerid, 50.0, 236.3031,162.9478,1003.0300) && IsACop(playerid))
				{
                	if(GetPlayerInterior(playerid) == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not in a locker room.");
					SetPlayerHealthEx(playerid,100.0);
					if(OnDuty[playerid] == 1)
					{
						SetPlayerArmourEx(playerid,100.0);
					}
				}
				else if(IsPlayerInRangeOfPoint(playerid, 50.0, 769.9825,-39.2081,1000.6865) || IsPlayerInRangeOfPoint(playerid, 50.0, 1719.3446,-1662.2314,20.2285) || IsPlayerInRangeOfPoint(playerid, 50.0,2324.3416,-1143.3370,1050.4922) || IsPlayerInRangeOfPoint(playerid, 50.0,616.0771,-11.4624,1000.9219)
				|| IsPlayerInRangeOfPoint(playerid, 50.0,960.9341,-51.0495,1001.1172) || IsPlayerInRangeOfPoint(playerid, 50.0,957.6353,2109.3533,1011.0234) || IsPlayerInRangeOfPoint(playerid, 50.0,1496.2422,1306.8334,1093.2891))
				{
					SetPlayerHealthEx(playerid,100.0);
				}
			}
		}
		else
		{
			if(InHouse[playerid] > 0)
			{
				if(HouseInfo[InHouse[playerid]][hHel] == 1)
				{
					SetPlayerHealthEx(playerid,100.0);
				}
			}
			if(PlayerInfo[playerid][pMember] != 0)
			{
				if(IsPlayerInRangeOfPoint(playerid, 50.0, 769.9825,-39.2081,1000.6865) || IsPlayerInRangeOfPoint(playerid, 150.0, 1719.3446,-1662.2314,20.2285) || IsPlayerInRangeOfPoint(playerid, 50.0,2324.3416,-1143.3370,1050.4922) || IsPlayerInRangeOfPoint(playerid, 50.0,616.0771,-11.4624,1000.9219)
				|| IsPlayerInRangeOfPoint(playerid, 50.0, 960.9341,-51.0495,1001.1172) || IsPlayerInRangeOfPoint(playerid, 150.0,957.6353,2109.3533,1011.0234) || IsPlayerInRangeOfPoint(playerid, 50.0,1496.2422,1306.8334,1093.2891) || IsPlayerInRangeOfPoint(playerid, 50.0,-2031.0696,-116.9199,1035.1719)
				|| IsPlayerInRangeOfPoint(playerid, 50.0, 2496.05,-1695.24,1014.74))
				{
	                if(GetPlayerInterior(playerid) == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}Error: You can not take heal here.");
					SetPlayerHealthEx(playerid,100.0);
				}
			}
		}
	}
	return 1;
}
CMD:call(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new number,sendername[30],string[256],giveplayer[25];
		if(sscanf(params, "i",number)) return SendClientMessage(playerid, 0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF}/call <Number>");
		if(PlayerInfo[playerid][pPnumber] == 0) return SendClientMessage(playerid, COLOR_WHITE, "You dont't have a phone.");
		if(PhoneOnline[playerid] > 0) return SCM(playerid, COLOR_WHITE, "Your phone is turned off.");
		if(PlayerInfo[playerid][pCredits] < 2) return SCM(playerid, COLOR_WHITE, "You don't have enough credits to call.");
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(number == 110)
		{
		    if(IsACop(playerid)) return SCM(playerid,COLOR_WHITE,"You are a cop.");
    	    if(WantedReason[playerid] != 999)
    	    {
    	        new killerid = GetPlayerID(WantedName[playerid]);
				if(killerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
                if(PlayerInfo[killerid][pWantedLevel] >= 6) return SCM(playerid,COLOR_WHITE,"{FFB870}This player has got already maximum of wanted stars.");
				else { WantedPoints[killerid] += 2; }
                if(WantedPoints[killerid] > 13)
				{
					WantedPoints[killerid] = 13;
				}
				format(string,sizeof(string),"You Reported %s For A Crime.",GetName(killerid));
				SCM(playerid,COLOR_LIGHTBLUE,string);
				if(WantedReason[playerid] != 49)
				{
					SetPlayerCriminal(killerid,playerid, "Murder");
				}
				else if(WantedReason[playerid] == 49)
				{
				    SetPlayerCriminal(killerid,playerid, "Hit And Run");
				}
				ClearWanted(playerid);
				return 1;
		    }
			else return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have a reason for reporting any crime.");
		}
		if(number == PlayerInfo[playerid][pPnumber]) return SendClientMessage(playerid, COLOR_GRAD2, "You're trying to call yourself.");
		if(Mobile[playerid] != -1) return SendClientMessage(playerid, COLOR_WHITE, "You are already on a call.");
		foreach(Player,i)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[i][pPnumber] == number && number != 0)
				{
					new giveplayerid = i;
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
						    if(PhoneOnline[giveplayerid] > 0) return SendClientMessage(playerid, COLOR_WHITE, "That player phone is offline.");
							if(PhoneOnlineCalls[giveplayerid] > 0) return SendClientMessage(playerid, COLOR_WHITE, "That player phone is offline for calls.");
							if (Mobile[giveplayerid] == -1)
							{
								Mobile[playerid] = giveplayerid;
								format(string, sizeof(string), "* %s Takes Out His/Her Cellphone And Dial A Number ", sendername);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
								PlayerPlaySound(giveplayerid, 20600, 0.0, 0.0, 0.0);
								format(string, sizeof(string), "%s Is Calling You . Use /p(ickup) To Answer Your Phone.", sendername);
								SendClientMessage(giveplayerid, COLOR_YELLOW, string);
								GetPlayerName(giveplayerid,giveplayer,sizeof(giveplayer));
								if(PlayerInfo[playerid][pPhone] == 0)
								{
									SetPlayerAttachedObject(playerid,4,330,6, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
								}
								else if(PlayerInfo[playerid][pPhone] == 1)
								{
									SetPlayerAttachedObject( playerid, 4, 18865, 6, 0.086043, 0.027719, 0.003817, 95.232246, 178.651031, 1.691840, 1.002077, 1.000000, 1.000000 ); // MobilePhone1 - phone1
								}
								if(PlayerInfo[giveplayerid][pPhone] == 0)
								{
									format(string, sizeof(string), "* %s's Cellphone Starts To Ring ...", giveplayer);
								}
								else if(PlayerInfo[giveplayerid][pPhone] == 1)
								{
									format(string, sizeof(string), "* %s's iPhone Starts To Ring ...", giveplayer);
								}
								ProxDetector(20.0, giveplayerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								CellTime[playerid] = 1;
								SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
								return 1;
							}
						}
					}
				}
			}
		}
		SendClientMessage(playerid, COLOR_GRAD2, "(cellphone) *busy tone*");
	}
	return 1;
}
CMD:t(playerid, params[])
{
    return cmd_sms(playerid, params);
}
CMD:sms(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new phonenumb,smstext[90],sendername[30],giveplayer[30],string[256],giveplayerid,string2[184];
	    if(PlayerInfo[playerid][pMuted] == 1)
	    {
			format(string, sizeof(string), "You can not speak, you have been silenced for %d seconds.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		if(sscanf(params, "is[90]",phonenumb,smstext)) return SendClientMessage(playerid, 0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF}/sms <Number> <Text>");
		if(FindIP(smstext)) /// Anti-Reclama
        {
	        new advertiser[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, advertiser, sizeof(advertiser));
	        format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /sms.", advertiser, playerid, smstext);
			ABroadCast(COLOR_WHITE,string,1);
        }
        for(new i; i < sizeof(TLD); i++)
		{
			if(strfind(smstext, TLD[i], true) != -1)
			{
				if(strfind(smstext, ".", true) != -1 || strfind(smstext, ".", true) != -1 || strfind(smstext, ".", true) != -1) break;
				new advertiser[MAX_PLAYER_NAME];
				GetPlayerName(playerid, advertiser, sizeof(advertiser));
				format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /sms.", advertiser, playerid, smstext);
				ABroadCast(COLOR_WHITE,string,1);
			}
		}
		if(PlayerInfo[playerid][pPnumber] == 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You dont't have a cell phone.");
		if(PhoneOnline[playerid] > 0) return SCM(playerid, COLOR_WHITE, "{FFB870}Your phone turned off.");
		if(PlayerInfo[playerid][pCredits] < 2) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have credits needed.");
		foreach(Player,i)
		{
			if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
			{
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    giveplayerid = i;
					    if(PhoneOnline[giveplayerid] > 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}That players phone is offline.");
					    GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "SMS from %s (%d): %s",sendername,PlayerInfo[playerid][pPnumber],smstext);
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string2, sizeof(string2), "{63969C}SMS sent to %s (%d): %s",giveplayer,PlayerInfo[giveplayerid][pPnumber],smstext);
						SendClientMessage(giveplayerid,COLOR_YELLOW, string);
						SendClientMessage(playerid,COLOR_WHITE, string2);
						new var100[300],resulttt[300],strr[300];
						format(strr, sizeof(strr),"(sms) %s",smstext);
						mysql_real_escape_string(strr, resulttt);
						mysql_format(SQL,var100, sizeof(var100), "INSERT INTO chat_logs (`playerid`,`text`) VALUES ('%d','%s')", PlayerInfo[playerid][pSQLID],resulttt);
						mysql_tquery(SQL,var100,"","");
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						PlayerPlaySound(giveplayerid, 1139, 0.0, 0.0, 0.0);
						PlayerInfo[playerid][pCredits] = PlayerInfo[playerid][pCredits] - 2;
						LastPlayer[i] = playerid;
						for(new adm = 0; adm<=MAX_PLAYERS;adm++)
     					{
     	    				if(IsPlayerConnected(adm))
							{
  	    						if(PlayerInfo[adm][pAdmin] > 0 && BigEar[adm] == 1)
        	    				{
        	        				format(string, sizeof(string), "{63969C}SMS from %s (%d) to %s (%d): %s",sendername,playerid,giveplayer,giveplayerid,smstext);
									SendClientMessage(adm,  COLOR_WHITE, string);
    	    					}
							}
      					}
					}
				}
			}
		}
	}
	return 1;
}
CMD:reply(playerid, params[])
{
    if(PlayerInfo[playerid][pPhone] == 1)
	{
	    if(LastPlayer[playerid] != -1)
	    {
	        if(PlayerInfo[playerid][pCredits] >= 2)
	        {
	            new sendername[30],giveplayer[30],string[256],string2[256];
	            if(strlen(params) <= 0) return SendClientMessage(playerid, 0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF}/reply <Text>");
	    		if(PhoneOnline[LastPlayer[playerid]] > 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}That players phone is offline.");
			    GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "SMS from %s (%d): %s",sendername,PlayerInfo[playerid][pPnumber],params);
				GetPlayerName(LastPlayer[playerid], giveplayer, sizeof(giveplayer));
				LastPlayer[LastPlayer[playerid]] = playerid;
				format(string2, sizeof(string2), "SMS sent to %s (%d): %s",giveplayer,PlayerInfo[LastPlayer[playerid]][pPnumber],params);
				SendClientMessage(LastPlayer[playerid],COLOR_GENANNOUNCE, string);
				SendClientMessage(playerid,COLOR_WHITE, string2);
				new var100[300],resulttt[300],strr[300];
				format(strr, sizeof(strr),"(sms) %s",params);
				mysql_real_escape_string(strr, resulttt);
				mysql_format(SQL,var100, sizeof(var100), "INSERT INTO chat_logs (`playerid`,`text`) VALUES ('%d','%s')", PlayerInfo[playerid][pSQLID],resulttt);
				mysql_tquery(SQL,var100,"","");
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				PlayerPlaySound(LastPlayer[playerid], 1139, 0.0, 0.0, 0.0);
				PlayerInfo[playerid][pCredits] = PlayerInfo[playerid][pCredits] - 2;
				if(FindIP(params))
  				{
					format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /reply.", sendername,playerid,params);
					ABroadCast(COLOR_WHITE,string,1);
   				}
	    		for(new d; d < sizeof(TLD); d++)
				{
  					if(strfind(params,TLD[d],true) != -1 )
	    			{
						if(strfind(params, "www.", true) != -1 || strfind(params, "Ucp", true) != -1 || strfind(params, "Rpg", true) != -1 || strfind(params, "Tzone", true) != -1) break;
						format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /reply.", sendername,playerid,params);
						ABroadCast(COLOR_WHITE,string,1);
					}
				}
				for(new adm = 0; adm<=MAX_PLAYERS;adm++)
				{
					if(IsPlayerConnected(adm))
					{
						if(PlayerInfo[adm][pAdmin] > 0 && BigEar[adm] == 1)
  						{
    						format(string, sizeof(string), "{63969C}SMS from %s (%d) to %s (%d): %s",sendername,playerid,giveplayer,LastPlayer[playerid],params);
							SendClientMessage(adm,  COLOR_WHITE, string);
  						}
					}
				}
			}
			else return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have credits needed.");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Nobody has sent you an SMS!");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "You don't have an iPhone!");
	}
	return 1;
}
CMD:speaker(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pPnumber] == 0) return SendClientMessage(playerid,COLOR_WHITE, "{FFB870}You do not have a phone.");
		if(Mobile[playerid] == -1) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not in a phone call.");
		if(PlayerInfo[playerid][pSpeaker] == 0)
		{
			SendClientMessage(playerid, COLOR_YELLOW2, "** Speaker is on.");
			PlayerInfo[playerid][pSpeaker] = 1;
			return 1;
		}
		if(PlayerInfo[playerid][pSpeaker] == 1)
		{
			SendClientMessage(playerid, COLOR_YELLOW2, "** Speaker is off.");
			PlayerInfo[playerid][pSpeaker] = 0;
			return 1;
		}
	}
	return 1;
}
CMD:turn(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
        new x_nr[50],sendername[30],string[128];
		if(sscanf(params, "s[50]",x_nr)) return SendClientMessage(playerid, 0xFFFFFFFF,"{FF9900}[SYNTAX]: {33CCFF}/turn <On/Off/Off calls>");
        if(strcmp(x_nr,"off calls",true) == 0)
     	{
			if(PlayerInfo[playerid][pPhone] != 1) return SendClientMessage(playerid, COLOR_WHITE, "Only those who have iPhone can turn off calls. To buy an iPhone use / shop");
            if (PhoneOnlineCalls[playerid] == 0)
            {
                PhoneOnlineCalls[playerid] = 1;
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "* %s turns his/her iPhone off for calls.", sendername);
	    		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    		return 1;
			}
			else
			SCM(playerid, COLOR_WHITE, "Your phone is already turned off for calls.");
			return 1;
		}
		if(strcmp(x_nr,"off",true) == 0)
     	{
            if (PhoneOnline[playerid] == 0)
            {
                PhoneOnline[playerid] = 1;
                GetPlayerName(playerid, sendername, sizeof(sendername));
				if(PlayerInfo[playerid][pPhone] == 0)
				{
                    format(string, sizeof(string), "* %s turns off his/her phone.", sendername);
				}
				else if(PlayerInfo[playerid][pPhone] == 1)
				{
                    format(string, sizeof(string), "* %s turns off his/her iPhone.", sendername);
				}
	    		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    		return 1;
			}
			else
			{
				if(PlayerInfo[playerid][pPhone] == 0)
				{
					SCM(playerid, COLOR_WHITE, "Your phone is already turned off.");
				}
				else if(PlayerInfo[playerid][pPhone] == 1)
				{
					SCM(playerid, COLOR_WHITE, "Your iPhone is already turned off.");
				}
				return 1;
			}
		}
		if(strcmp(x_nr,"on",true) == 0)
     	{
            if (PhoneOnline[playerid] == 1)
            {
                PhoneOnline[playerid] = 0;
				PhoneOnlineCalls[playerid] = 0;
                GetPlayerName(playerid, sendername, sizeof(sendername));
				if(PlayerInfo[playerid][pPhone] == 0)
				{
					format(string, sizeof(string), "* %s turns on his/her phone.", sendername);
				}
				else if(PlayerInfo[playerid][pPhone] == 1)
				{
					format(string, sizeof(string), "* %s turns on his/her iPhone.", sendername);
				}
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			else
			{
				if(PlayerInfo[playerid][pPhone] == 0)
				{
					SCM(playerid, COLOR_WHITE, "Your phone is already turned on.");
				}
				else if(PlayerInfo[playerid][pPhone] == 1)
				{
					SCM(playerid, COLOR_WHITE, "Your iPhone is already turned on.");
				}
				return 1;
			}
		}
    }
    return 1;
}
CMD:pickup(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
		if(Mobile[playerid] != -1) return SendClientMessage(playerid, COLOR_GRAD2, "You are already on a call...");
		foreach(Player,i)
		{
			if(IsPlayerConnected(i))
			{
				if(Mobile[i] == playerid)
				{
					Mobile[playerid] = i;
					SendClientMessage(i,COLOR_YELLOW, "The other person has answered the call.");
                    SendClientMessage(playerid,COLOR_WHITE, "You have answered your phone.");
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
					if(PlayerInfo[playerid][pPhone] == 0)
					{
						SetPlayerAttachedObject(playerid,4,330,6, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
					}
					else if(PlayerInfo[playerid][pPhone] == 1)
					{
						SetPlayerAttachedObject( playerid, 4, 18865, 6, 0.086043, 0.027719, 0.003817, 95.232246, 178.651031, 1.691840, 1.002077, 1.000000, 1.000000 ); // MobilePhone1 - phone1
					}
					return 1;
				}
			}
		}
	}
	return 1;
}
CMD:p(playerid, params[])
{
	return cmd_pickup(playerid, params);
}
CMD:hangup(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new caller = Mobile[playerid];
		if(IsPlayerConnected(caller))
		{
			if(caller != INVALID_PLAYER_ID)
			{
				if(caller != -1)
				{
					if(PhoneOnline[caller] == 0)
					{
						SendClientMessage(caller,COLOR_WHITE,"{B8FFDB}They hung up.");
					}
					CellTime[caller] = 0;
					CellTime[playerid] = 0;
					SendClientMessage(playerid,COLOR_WHITE,"{B8FFDB}You hung up.");
					Mobile[caller] = -1;
					SetPlayerSpecialAction(caller,SPECIAL_ACTION_STOPUSECELLPHONE);
					RemovePlayerAttachedObject(caller,4);
					RemovePlayerAttachedObject(playerid,4);
					Mobile[playerid] = -1;
					CellTime[playerid] = 0;
					PlayerInfo[playerid][pSpeaker] = 0;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 1;
				}
			}
		}
		SendClientMessage(playerid,COLOR_WHITE,"{FFB870}Your phone is in your pocket.");
	}
	return 1;
}
CMD:h(playerid, params[])
{
	return cmd_hangup(playerid, params);
}
CMD:walkstyle(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
 	{
        {
        	ShowPlayerDialog(playerid, DIALOG_WALKSTYLE, DIALOG_STYLE_LIST, "Walking Style's", "Normal\nLow Walk\nGangsta\nGangsta2\nOld Walk\nOld Walk2\nNormal Walk2\nFemale Walk\nFemale Walk2\nWhore Walk\nFemale Walk3\nDrunk Walk\nBlind Walk\nNormal", "Select", "Close");
  			return 1;
		}
	}
	return 1;
}
CMD:locaterentcar(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
	    if(HireCar[playerid] == -1) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have car/boat/scooter rent.");
		if(CP[playerid] < 1 && IsCollectingRubbish[playerid] < 1 && !IsATruck(GetPlayerVehicleID(playerid)) && MechanicCallTime[playerid] < 1 && CheckBus[playerid] < 1 && GotoMats[playerid] < 1 && CarJacker[playerid] < 1)
		{
	 		new Float:x,Float:y,Float:z;
			SendClientMessage(playerid,COLOR_WHITE,"{5CAD5C}Car location is at red marker on a map.");
			GetVehiclePos(HireCar[playerid], x, y, z);
	  		SetPlayerCheckpoint(playerid, x, y, z, 4);
			CP[playerid] = 43;
		}
		else
		{
		    ShowPlayerDialog(playerid, DIALOG_JOBULETES, DIALOG_STYLE_MSGBOX, "Checkpoint Cancel", "Are You Sure You Want To Cancel CHeckpoint ?", "Yeah", "No");
		}
    }
    return 1;
}
CMD:unrentveh(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
		if(HireCar[playerid] == -1) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have car/boat/scooter rent.");
		SetVehicleToRespawn(HireCar[playerid]);
		gCarLock[HireCar[playerid]] = 0;
		new engine,lights,alarm,doors,bonnet,boot,objective;
		GetVehicleParamsEx(HireCar[playerid],engine,lights,alarm,doors,bonnet,boot,objective);
    	SetVehicleParamsEx(HireCar[playerid],engine,lights,alarm,0,bonnet,boot,objective);
		vehEngine[HireCar[playerid]] = 0;
	    GetVehicleParamsEx(HireCar[playerid],engine,lights,alarm,doors,bonnet,boot,objective);
	    SetVehicleParamsEx(HireCar[playerid],VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
		HireCar[playerid] = -1;
		GameTextForPlayer(playerid, "~w~You no longer rent a car.", 5000, 3);
		TogglePlayerControllable(playerid, 1);
        SetPVarInt(playerid, "Engine", 0);
		return 1;
	}
	return 1;
}
CMD:unrentvehicle(playerid, params[])
{
    if(HireCar[playerid] != -1)
    {
        HireCar[playerid] = -1;
	}
	else return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have a rental car/boat/bike/scooter.");
	return 1;
}
CMD:throwkey(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if(HireCar[playerid] != -1) return SCM(playerid,COLOR_WHITE,"{FFB870}You dont have a key.");
		HireCar[playerid] = -1;
	}
	return 1;
}
CMD:unjailo(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 8) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		new id[25],
			cont,
			str1[128];
		if(sscanf(params, "s[25]", id)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/unjailo <Name>");
		cont = MySQLCheckAccount(id);
		if(cont == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}This name does not exist.");
		mysql_format(SQL,str1,sizeof(str1),"UPDATE users SET `Jailed`='0',`JailTime`='0',`WantedLevel`='0' WHERE `name`='%s'",id);
		mysql_tquery(SQL,str1,"","");
		KickEx(id);
	}
	return 1;
}
CMD:ajailo(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		new id[25],reason[128],string[128],sendername[30],minutes,cont,playeridd,qstr[500],result[500];
		GetPlayerName(playerid,sendername,sizeof(sendername));
		if(sscanf(params, "s[25]is[128]", id,minutes,reason)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/ajailo <Name> <Minutes> <reason>");
		cont = MySQLCheckAccount(id);
		if(cont == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}This name does not exist.");
		new timej = minutes*60;
		format(string, sizeof(string), "Offline: Jail: %s was jailed by %s for %d minutes, reason: %s.", id, sendername,minutes,reason);
		SendClientMessageToAll(COLOR_LIGHTRED, string);
		format(qstr, sizeof(qstr), "SELECT `id` FROM users WHERE `name` = '%s'", id);
		mysql_store_result();
		mysql_query(SQL,qstr);
		if(mysql_retrieve_row())
		{
			mysql_fetch_field_row(result, "id"); playeridd = strval( result );
		}
		mysql_free_result();
		new var100[256];
		mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`reason`,`playername`,`givername`) VALUES ('%d','%d','6','%s','%s','%s')", playeridd,PlayerInfo[playerid][pSQLID],reason,id,sendername);
		mysql_tquery(SQL,var100,"","");
		format(string,sizeof(string),"You Jailed By Admin %s For %d Minutes | Reason : %s.",sendername,minutes,reason);
		mysql_format(SQL, var100, sizeof(var100), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",playeridd,string);
		mysql_tquery(SQL,var100,"","");
        format(string,sizeof(string),"Log: %s the set of %s set jail time %d minutes reason: %s.",sendername,id,minutes,reason);
        Adminlog(string);
		new str1[184];
		mysql_format(SQL,str1,sizeof(str1),"UPDATE users SET `Jailed`='2',`JailTime`='%d',`WantedLevel`='0' WHERE `name`='%s'",timej,id);
		mysql_tquery(SQL,str1,"","");
	}
	return 1;
}
CMD:ajail(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		new id,reason[128],string[128],giveplayer[30],sendername[30],minutes;
		if(sscanf(params, "uis[128]", id,minutes,reason)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/ajail <Name/Playerid> <Minutes> <reason>");
		{
			if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[id][pJailTime] > 0) return SCM(playerid,COLOR_WHITE,"{B8DBFF}Error: This player is already in jail.");
				    GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					ResetPlayerWeaponsEx(id);
					ResetPlayerWeapons(id);
					WantedPoints[id] = 0;
					PlayerInfo[id][pJailed] = 2;
					PlayerInfo[id][pJailTime] = minutes*60;
					JailPrice[id] = 0;
					SetPlayerInterior(id, 10);
                    new rand;
					rand = random(sizeof(gRandomAJailSpawns));
					SetPlayerPosEx(id,gRandomAJailSpawns[rand][0],gRandomAJailSpawns[rand][1],gRandomAJailSpawns[rand][2]);
					format(string, sizeof(string), "[AdmBot]: Admin %s Ajailed  %s For %d Minutes | Reason : %s", sendername, giveplayer,minutes,reason);
					SendClientMessageToAll(COLOR_LIGHTRED, string);
					new var100[256];
					mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`reason`,`playername`,`givername`) VALUES ('%d','%d','6','%s','%s','%s')", PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],reason,giveplayer,sendername);
					mysql_tquery(SQL,var100,"","");
			        format(string,sizeof(string),"Log: %s the set of %s set jail time %d minutes reason: %s",sendername,giveplayer,minutes,reason);
		            Adminlog(string);
		            Update(playerid,pJailedx);
					Update(playerid,pJailTimex);
					return 1;
				}
			}
			else
			{
				 SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
			}
		}
	}
	return 1;
}
CMD:dm(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		new id,string[128],giveplayer[30],sendername[30],query[300],dm=0,dm2,time;
		if(sscanf(params, "u", id)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/dm <Name/Playerid>");
		if(IsPlayerConnected(id))
		{
		    if(id != INVALID_PLAYER_ID)
		    {
				if(PlayerInfo[id][pJailTime] > 0) return SCM(playerid,COLOR_WHITE,"{B8DBFF}Error: This player is already in jail.");
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				ResetPlayerWeaponsEx(id);
				ResetPlayerWeapons(id);
				WantedPoints[id] = 0;
				JailPrice[id] = 0;
				PlayerInfo[id][pJailed] = 2;
				Update(id, pJailedx);
				SetPlayerInterior(id, 10);
                new rand;
				rand = random(sizeof(gRandomAJailSpawns));
				SetPlayerPosEx(id,gRandomAJailSpawns[rand][0],gRandomAJailSpawns[rand][1],gRandomAJailSpawns[rand][2]);
				format(query, sizeof(query),"SELECT * FROM `users` WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
				new Cache: resultt = mysql_query(SQL, query);
				for(new i, j = cache_get_row_count (); i != j; ++i)
				{
					dm = cache_get_field_content_int(i, "dm");
					dm2 = dm + 1;
					if(dm < 6)
					{
						time = dm*10 + 10;
						PlayerInfo[id][pGunLicSuspend] = dm + 1;
					}
					else
					{
						time = 60;
						PlayerInfo[id][pGunLicSuspend] = 6;
					}
					PlayerInfo[id][pGunLic] = 0;
					PlayerInfo[id][pGunLicT] = 0;
					PlayerInfo[id][pJailTime] = time*60;
					format(string,sizeof(string),"Jail: %s was jailed by %s for %d minutes, reason: DM.",giveplayer,sendername,time);
					SendClientMessageToAll(COLOR_LIGHTRED, string);
					format(string,sizeof(string),"Jail: You Jailed By %s For %d Minutess | Reason : DM.",giveplayer,time);
					mysql_format(SQL, query, sizeof(query), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[id][pSQLID],string);
	                mysql_tquery(SQL,query,"","");
					new var100[256];
					mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`reason`,`playername`,`givername`) VALUES ('%d','%d','6','DM','%s','%s')", PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],giveplayer,sendername);
					mysql_tquery(SQL,var100,"","");
			        format(string,sizeof(string),"Log: %s the set of %s set jail time %d minutes reason: DM.",sendername,giveplayer,time);
		            Adminlog(string);
					Update(id, pJailTimex);
					Update(id, pGunLicSuspendx);
					mysql_format(SQL, var100, sizeof(var100), "UPDATE `users` SET `dm`='%d' WHERE `name`='%s'", dm2, PlayerInfo[id][pNormalName]);
					mysql_tquery(SQL,var100,"","");
				}
				cache_delete(resultt);
				return 1;
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	}
	return 1;
}
CMD:dmp(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		new id,string[128],giveplayer[30],sendername[30],query[300],dm=0,dm2,time;
		if(sscanf(params, "u", id)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/dmp <Name/Playerid>");
		if(IsPlayerConnected(id))
		{
		    if(id != INVALID_PLAYER_ID)
		    {
				if(PlayerInfo[id][pJailTime] > 0) return SCM(playerid,COLOR_WHITE,"{B8DBFF}Error: This player is already in jail.");
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				ResetPlayerWeaponsEx(id);
				ResetPlayerWeapons(id);
				WantedPoints[id] = 0;
				JailPrice[id] = 0;
				PlayerInfo[id][pJailed] = 2;
				Update(id, pJailedx);
				SetPlayerInterior(id, 10);
                new rand;
				rand = random(sizeof(gRandomAJailSpawns));
				SetPlayerPosEx(id,gRandomAJailSpawns[rand][0],gRandomAJailSpawns[rand][1],gRandomAJailSpawns[rand][2]);
				format(query, sizeof(query),"SELECT * FROM `users` WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
				new Cache: resultt = mysql_query(SQL, query);
				for(new i, j = cache_get_row_count (); i != j; ++i)
				{
					dm = cache_get_field_content_int(i, "dmp");
					dm2 = dm + 1;
					if(dm < 6)
					{
						time = dm*10 + 10;
					}
					else
					{
						time = 60;
					}
					PlayerInfo[id][pJailTime] = time*60;
					format(string,sizeof(string),"Jail: %s was jailed by %s for %d minutes, reason: DM #2.",giveplayer,sendername,time);
					SendClientMessageToAll(COLOR_LIGHTRED, string);
					format(string,sizeof(string),"Jail: You Jailed By %s For %d Minutess | Reason : DM #2.",giveplayer,time);
					mysql_format(SQL, query, sizeof(query), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[id][pSQLID],string);
	                mysql_tquery(SQL,query,"","");
					new var100[256];
					mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`reason`,`playername`,`givername`) VALUES ('%d','%d','6','DM #2','%s','%s')", PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],giveplayer,sendername);
					mysql_tquery(SQL,var100,"","");
			        format(string,sizeof(string),"Log: %s the set of %s set jail time %d minutes reason: DM #2.",sendername,giveplayer,time);
		            Adminlog(string);
					Update(id, pJailTimex);
					mysql_format(SQL, var100, sizeof(var100), "UPDATE `users` SET `dmp`='%d' WHERE `name`='%s'", dm2, PlayerInfo[id][pNormalName]);
					mysql_tquery(SQL,var100,"","");
				}
				cache_delete(resultt);
				return 1;
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	}
	return 1;
}
CMD:unjail(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 8) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		new id,string[128],giveplayer[30],sendername[30];
		if(sscanf(params, "u", id)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/unjail <Name/Playerid>");
		if(IsPlayerConnected(id))
		{
		    if(id != INVALID_PLAYER_ID)
		    {
			    GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				ResetPlayerWeaponsEx(id);
				ResetPlayerWeapons(id);
				WantedPoints[id] = 0;
				PlayerInfo[id][pJailed] = 0;
				PlayerInfo[id][pJailTime] = 0;
				PlayerInfo[id][pWantedLevel] = 0;
				JailPrice[id] = 0;
				Update(id,pJailedx);
				Update(id,pJailTimex);
				Update(id,pWantedLevelx);
				SetPlayerInterior(id, 0);
				SetPlayerVirtualWorld(id, 0);
				SetPlayerPosEx(id, 1743.1161,-1836.8521,13.6117 );
				format(string,sizeof(string),"{FFA000}[AdmCmd]: {FFFFFF}Administrator %s Unjailed Player %s",sendername,giveplayer);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
   				SetPlayerSkin(id, PlayerInfo[id][pModel]);
				ClearCrime(id);
				PlayerTextDrawHide(id, Jailtime[id]);
				return 1;
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	}
	return 1;
}
CMD:aclear(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 10) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		{
			{
				new id,string[128],giveplayer[30],sendername[30];
				if(sscanf(params, "u", id)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/aclear <Name/Playerid>");
				{
			    	if(IsPlayerConnected(id))
			    	{
			    		if(id != INVALID_PLAYER_ID)
			      		{
                        	//if(id == playerid) return SendClientMessage(playerid, COLOR_WHITE, "You cannot clear yourself.");
					    	GetPlayerName(id, giveplayer, sizeof(giveplayer));
					    	GetPlayerName(playerid, sendername, sizeof(sendername));
				    		format(string, sizeof(string), "* You cleared the Records and Wanted Points of %s.", giveplayer);
			     			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					    	format(string, sizeof(string), "Admin %s has cleared your Records and Wanted Points.", sendername);
					    	SendClientMessage(id, COLOR_LIGHTBLUE, string);
						    format(string, sizeof(string), "Admin %s has cleared %s's Records and Wanted Points.", sendername, giveplayer);
                            SendTeamMessage(8, COLOR_LIGHTBLUE, string);
							SendTeamMessage(3, COLOR_LIGHTBLUE, string);
			     			SendTeamMessage(2, COLOR_LIGHTBLUE, string);
	          				SendTeamMessage(1, COLOR_LIGHTBLUE, string);
					    	WantedPoints[id] = 0;
		       				PlayerInfo[id][pWantedLevel] = 0;
						    SetPlayerWantedLevel(id, 0);
						    DestroyDynamic3DTextLabel(WantedScris[id]);
						    PlayerTextDrawHide(id, WantedText[id]);
					    	ClearCrime(id);
							Update(id,pWantedLevelx);
	                    }
					}
			    	else
				    {
				    	SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
				    }
		        }
     		}
		}
	}
	return 1;
}
CMD:clear(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
	 	if(IsACop(playerid))
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			if(IsACopCar(tmpcar) || IsANgCar(tmpcar) || IsAFbiCar(tmpcar) || IsALVPDCar(tmpcar) || PlayerToPoint(10.0,playerid,1762.0028,-1584.4185,1742.5264) || PlayerToPoint(10.0,playerid,253.9323,69.7215,1003.6406) || PlayerToPoint(10.0,playerid,229.4171,167.4609,1003.0234)  || PlayerToPoint(10.0,playerid,187.8352,1931.4265,17.6874))
			{
				new id,string[128],giveplayer[30],sendername[30];
				if(sscanf(params, "u", id)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/clear <Name/Playerid>");
				{
			    	if(IsPlayerConnected(id))
			    	{
			    		if(id != INVALID_PLAYER_ID)
			      		{
                        	if(id == playerid) return SendClientMessage(playerid, COLOR_WHITE, "You cannot clear yourself.");
					    	GetPlayerName(id, giveplayer, sizeof(giveplayer));
					    	GetPlayerName(playerid, sendername, sizeof(sendername));
				    		format(string, sizeof(string), "* You cleared the Records and Wanted Points of %s.", giveplayer);
			     			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					    	format(string, sizeof(string), "* Officer %s has cleared your Records and Wanted Points.", sendername);
					    	SendClientMessage(id, COLOR_LIGHTBLUE, string);
						    format(string, sizeof(string), "* %s has cleared %s's Records and Wanted Points.", sendername, giveplayer);
                            SendTeamMessage(8, COLOR_LIGHTBLUE, string);
							SendTeamMessage(3, COLOR_LIGHTBLUE, string);
			     			SendTeamMessage(2, COLOR_LIGHTBLUE, string);
	          				SendTeamMessage(1, COLOR_LIGHTBLUE, string);
					    	WantedPoints[id] = 0;
		       				PlayerInfo[id][pWantedLevel] = 0;
						    SetPlayerWantedLevel(id, 0);
						    DestroyDynamic3DTextLabel(WantedScris[id]);
						    PlayerTextDrawHide(id, WantedText[id]);
					    	ClearCrime(id);
							Update(id,pWantedLevelx);
	                    }
					}
			    	else
				    {
				    	SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
				    }
		        }
     		}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are to not inside the Police Station or in Police vehicle.");
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not an Cop/FBI/National Guard.");
		}
	}
	return 1;
}
CMD:givelicense(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
        if(PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] >= 1)
        {
            new x_nr[30],id,sendername[30],giveplayer[30],string[128];
   			if(sscanf(params, "s[50]u",x_nr,id))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/givelicense <License name> <Name/Playerid>");
			    SendClientMessage(playerid, COLOR_WHITE, "License: Sailing, Weapon, Flying.");
				return 1;
			}
			if(id == playerid) return SCM(playerid,COLOR_WHITE,"{FFB870}");
			if(strcmp(x_nr,"flying",true) == 0)
			{
				if(IsPlayerConnected(id))
				{
				    if(id != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(id, giveplayer, sizeof(giveplayer));
			            format(string, sizeof(string), "* You've given a Flying License to %s.",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Instructor %s has given you a Flying License.",sendername);
				        SendClientMessage(id, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Instructor %s has given %s a Flying License.",sendername,giveplayer);
				        SendFamilyMessage(12,COLOR_WHITE,string);
				        PlayerInfo[id][pFlyLic] = 1;
				        PlayerInfo[id][pFlyLicT] = 100;
						new str[256];
						mysql_format(SQL,str,sizeof(str),"UPDATE users SET `FlyLic`='1',`FlyLicT`='100' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
						mysql_tquery(SQL,str,"","");
						PlayerInfo[playerid][pCommands]++;
				        Update(playerid,pCommandsx);
				        mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCommands],PlayerInfo[playerid][pNormalName]);
				        mysql_tquery(SQL,str,"","");
				        PlayerInfo[playerid][pLGiven] += 1;
				        Update(playerid, pLGivenx);
				        return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"sailing",true) == 0)
			{
				if(IsPlayerConnected(id))
				{
				    if(id != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(id, giveplayer, sizeof(giveplayer));
			            format(string, sizeof(string), "* You've given a Sailing License to %s.",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Instructor %s has given you a Sailing License.",sendername);
				        SendClientMessage(id, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Instructor %s has given %s a Sailing License.",sendername,giveplayer);
				        SendFamilyMessage(12,COLOR_WHITE,string);
				        PlayerInfo[id][pBoatLic] = 1;
				        PlayerInfo[id][pBoatLicT] = 100;
						new str[256];
						mysql_format(SQL,str,sizeof(str),"UPDATE users SET `BoatLic`='1',`BoatLicT`='100' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
						mysql_tquery(SQL,str,"","");
						PlayerInfo[playerid][pCommands]++;
				        Update(playerid,pCommandsx);
				        mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCommands],PlayerInfo[playerid][pNormalName]);
				        mysql_tquery(SQL,str,"","");
				        PlayerInfo[playerid][pLGiven] += 1;
				        Update(playerid, pLGivenx);
				        return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"weapon",true) == 0)
			{
				if(IsPlayerConnected(id))
				{
				    if(id != INVALID_PLAYER_ID)
				    {
						if(PlayerInfo[id][pLevel] < 3) return SCM(playerid,COLOR_WHITE,"{FFB870}This player does not have level 5.");
						if(PlayerInfo[id][pGunLicSuspend] > 0) return SCM(playerid,COLOR_WHITE,"This player have gun license suspended.");
						GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(id, giveplayer, sizeof(giveplayer));
			            format(string, sizeof(string), "* You've given a Weapon License to %s.",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Instructor %s has given you a Weapon License.",sendername);
				        SendClientMessage(id, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Instructor %s has given %s a Weapon License.",sendername,giveplayer);
				        SendFamilyMessage(12,COLOR_WHITE,string);
				        PlayerInfo[id][pGunLic] = 1;
				        PlayerInfo[id][pGunLicT] = 100;
						new str[256];
						mysql_format(SQL,str,sizeof(str),"UPDATE users SET `GunLic`='1',`GunLicT`='100' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
						mysql_tquery(SQL,str,"","");
						PlayerInfo[playerid][pCommands]++;
				        Update(playerid,pCommandsx);
				        mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCommands],PlayerInfo[playerid][pNormalName]);
				        mysql_tquery(SQL,str,"","");
				        PlayerInfo[playerid][pLGiven] += 1;
				        Update(playerid, pLGivenx);
				        return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
				    return 1;
				}
			}
        }
        else
        {
            SendClientMessage(playerid, COLOR_WHITE, "You are not a instructor.");
            return 1;
        }
    }
    return 1;
}
CMD:startlesson(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
        if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
        {
            new id,sendername[30],giveplayer[30],string[128];
   			if(sscanf(params, "u",id)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/startlesson <Name/Playerid>");
   			{
				if(IsPlayerConnected(id))
				{
				    if(id != INVALID_PLAYER_ID)
				    {
						if(playerid == id) return SCM(playerid,COLOR_WHITE,"{FFB870}You cannot startlesson yourself.");
					    GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(id, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* You've started %s's Lesson.",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Instructor %s has started your Lesson.",sendername);
				        SendClientMessage(id, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Instructor %s has started %s Lesson.",sendername,giveplayer);
				        SendFamilyMessage(12,COLOR_YELLOW,string);
				        TakingLesson[id] = 2;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
				    return 1;
				}
	        }
	    }
    	else
        {
            SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a School Instructor.");
            return 1;
        }
    }
    return 1;
}
CMD:stoplesson(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
        if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
        {
            new id,sendername[30],giveplayer[30],string[128];
   			if(sscanf(params, "u",id)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/stoplesson <Name/Playerid>");
   			{
				if(IsPlayerConnected(id))
				{
				    if(id != INVALID_PLAYER_ID)
				    {
						if(TakingLesson[id] != 2) return SendClientMessage(playerid,COLOR_WHITE, "{FFB870}That player is not taking a Lesson.");
						if(playerid == id) return SCM(playerid,COLOR_WHITE,"{FFB870}You cannot stoplesson yourself.");
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(id, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* You've stopped %s's Lesson.",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Instructor %s has stopped your Lesson.",sendername);
				        SendClientMessage(id, COLOR_LIGHTBLUE, string);
				        TakingLesson[id] = 0;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
				    return 1;
				}
	        }
	    }
	    else
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a School Instructor !");
	        return 1;
	    }
	}
	return 1;
}
CMD:requestlicense(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
	   	new x_nr[50],sendername[30],string[128];
	   	GetPlayerName(playerid,sendername,sizeof(sendername));
	   	if(licensesend[playerid] == 1) return SCM(playerid,COLOR_WHITE,"{f03337}You have already sent a request license.");
		if(licenseaccepted[playerid] == 1) return SCM(playerid,COLOR_WHITE,"{f03337}You already have a request license.");
		if(PlayerInfo[playerid][pMember] == 12) return SCM(playerid,0xFFFFFFFF, "{FFB870}Error: You're instructor.");
		if(sscanf(params, "s[50]",x_nr))
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/requestlicense <License Name>");
			SCM(playerid,COLOR_WHITE,"License name: {B8DBFF}Weapon, Flying, Sailing, Fishing.");
			return 1;
		}
	    if(strcmp(x_nr,"weapon",true) == 0)
        {
            if(PlayerInfo[playerid][pGunLic] < 1)
            {
				format(string, sizeof(string), "{FFFF45}%s request weapon license.", sendername);
				SendFamilyMessage(12,COLOR_WHITE,string);
				format(string, sizeof(string), "{FFFF45}Use [/acceptlic %d] to accept license request.", playerid);
				SendFamilyMessage(12,COLOR_WHITE,string);
				licensesend[playerid] = 1;
				SendClientMessage(playerid, COLOR_WHITE,"{FFFF45}Your license request was sent to the instructors.");
				SetPVarString(playerid, "License", x_nr);
				return 1;
        	}
    		else return SCM(playerid, COLOR_WHITE,"{FFB870}You have the gun license.");
        }
        if(strcmp(x_nr,"flying",true) == 0)
        {
            if(PlayerInfo[playerid][pFlyLic] < 1)
            {
				format(string, sizeof(string), "{FFFF45}%s request flying license.", sendername);
				SendFamilyMessage(12,COLOR_WHITE,string);
				format(string, sizeof(string), "{FFFF45}Use [/acceptlic %d] to accept this license request.", playerid);
				SendFamilyMessage(12,COLOR_WHITE,string);
				licensesend[playerid] = 1;
				SendClientMessage(playerid, COLOR_WHITE,"{FFFF45}Your license request was sent to the instructors.");
				SetPVarString(playerid, "License", x_nr);
				return 1;
        	}
    		else return SCM(playerid, COLOR_WHITE,"{FFB870}You have the flying license.");
        }
        if(strcmp(x_nr,"Sailing",true) == 0)
        {
            if(PlayerInfo[playerid][pBoatLic] < 1)
            {
				format(string, sizeof(string), "{FFFF45}%s request sailing license.", sendername);
				SendFamilyMessage(12,COLOR_WHITE,string);
				format(string, sizeof(string), "{FFFF45}Use [/acceptlic %d] to accept this license request.", playerid);
				SendFamilyMessage(12,COLOR_WHITE,string);
				licensesend[playerid] = 1;
				SendClientMessage(playerid, COLOR_WHITE,"{FFFF45}Your license request was sent to the instructors.");
				SetPVarString(playerid, "License", x_nr);
				return 1;
        	}
    		else return SCM(playerid, COLOR_WHITE,"{FFB870}You have the Sailing license.");
        }
	}
	return 1;
}

CMD:rl(playerid, params[])
{
  return cmd_requestlicense(playerid, params);
}

CMD:license(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new string[128],count= 0,titlestring[50],name[30];
		if(PlayerInfo[playerid][pMember] != 12) return SendClientMessage(playerid, COLOR_WHITE, "{5CAD5C}Error: You're not instructor.");
		foreach(Player, i)
		{
	    	if(GetPVarString(i, "License", string, 128))
	    	{
	        	GetPVarString(i, "License", string, sizeof(string));
	        	count++;
	        	GetPlayerName(i, name,sizeof(name));
	        	format(string, sizeof(string), "%s(%d) - Request License ID: %d",name,i,i);
	        	format(titlestring, sizeof(titlestring), "Pending License: %d", count);
   				ShowPlayerDialog(playerid, 211, DIALOG_STYLE_LIST, titlestring, string, "Close", "");
   				SendClientMessage(playerid, 0xFFFFFFFF, "{FFFF00}Use the command /clicense to check the pending license information.");
			}
		}
 	}
	return 1;
}
CMD:clicense(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		new id,string[128],name[30];
		if(PlayerInfo[playerid][pMember] != 12) return SendClientMessage(playerid, COLOR_WHITE, "{5CAD5C}Error: You're not instructor.");
		if(sscanf(params, "u", id)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/clicense <Name/Playerid>");
	    if(GetPVarString(id, "License", string, 128))
	    {
	        GetPVarString(id, "License", string, sizeof(string));
	        GetPlayerName(id, name,sizeof(name));
	        format(string, sizeof(string), "{FFFF45}Request License %s(%d): %s.",name,id, string);
	        SendClientMessage(playerid, COLOR_WHITE, string);
		}
 	}
	return 1;
}
CMD:acceptlic(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pMember] != 12) return SendClientMessage(playerid, COLOR_WHITE, "{5CAD5C}Error: You're not instructor.");
		new licid,string[200],giveplayer[30],sendername[30];
		if(sscanf(params, "d", licid)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/acceptlic <License ID>");
		if(licensesend[licid] == -1) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFB870}Invalid license ID.");
		if(PlayerInfo[licid][pMember] == 12) return SCM(playerid,0xFFFFFFFF, "{FFB870}Error: The player has instructor.");
		licenseaccepted[licid] = 1;
		licensesend[licid] = -1;
		GetPlayerName(playerid, sendername,sizeof(sendername));
		format(string, sizeof(string),"{FFFF45}Instructor %s accepted your request request. Waiting a moment to be contacted.",sendername);
 		SCM(licid,COLOR_WHITE,string);
 		GetPlayerName(licid,giveplayer,sizeof(giveplayer));
 		format(string, sizeof(string),"{FFFF45}You accepted %s license request.",giveplayer);
 		SCM(playerid,COLOR_WHITE,string);
 		format(string, sizeof(string),"{FFFF45}Instructor %s accepted %s license request.",sendername,giveplayer);
 		SendFamilyMessage(12, COLOR_WHITE, string);
 		DeletePVar(licid, "License");
 	}
	return 1;
}
CMD:closelic(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pMember] != 12) return SendClientMessage(playerid, COLOR_WHITE, "{5CAD5C}Error: You're not instructor.");
		new licid,sendername[30],giveplayer[30],string[100];
		if(sscanf(params, "d", licid)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/closelic <License ID>");
		if(licenseaccepted[licid] != 1) return SendClientMessage(playerid, 0xFFFFFFFF, "{FFB870}Invalid license ID.");
		licenseaccepted[licid] = -1;
		licensesend[licid] = -1;
		GetPlayerName(playerid, sendername,sizeof(sendername));
		format(string, sizeof(string),"{FFFF45}Instructor %s closed your license request.",sendername);
 		SCM(licid,COLOR_WHITE,string);
 		GetPlayerName(licid,giveplayer,sizeof(giveplayer));
 		format(string, sizeof(string),"{FFFF45}You closed %s license request.",giveplayer);
 		SCM(playerid,COLOR_WHITE,string);
  	}
	return 1;
}
CMD:showlicenses(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		new id;
        if(sscanf(params, "u", id)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/showlicenses <Name/Playerid>");
        if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
        if(!ProxDetectorS(8.0, playerid, id)) return SCM(playerid,COLOR_WHITE,"{FFFFCC}This player is not near you.");
		if(Spectate[id] != -1) return SCM(playerid,COLOR_WHITE,"{FFFFCC}This player is not near you.");
		new text1[20],text2[20],text3[20],text4[20],string[128],sendername[30];
		if(PlayerInfo[playerid][pCarLic] == 1) { text1 = "Passed"; } else { text1 = "Not Passed"; }
		if(PlayerInfo[playerid][pFlyLic] == 1) { text2 = "Passed"; } else { text2 = "Not Passed"; }
		if(PlayerInfo[playerid][pBoatLic] == 1) { text3 = "Passed"; } else { text3 = "Not Passed"; }
        if(PlayerInfo[playerid][pGunLic] == 1) { text4 = "Passed"; } else { text4 = "Not Passed"; }
        GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "---- %s's licenses ----", sendername);
	    SendClientMessage(id, COLOR_WHITE, string);
	    if(PlayerInfo[playerid][pCarLicT] == 0)
	    {
        	format(string, sizeof(string), "Drivers licence: %s", text1);
        	SendClientMessage(id, COLOR_WHITE, string);
        }
	    else
	    {
        	format(string, sizeof(string), "Drivers licence: %s (expires in %d hours)", text1,PlayerInfo[playerid][pCarLicT]);
        	SendClientMessage(id, COLOR_WHITE, string);
        }
        if(PlayerInfo[playerid][pFlyLicT] == 0)
	    {
			format(string, sizeof(string), "Flying licence: %s", text2);
			SendClientMessage(id, COLOR_WHITE, string);
		}
		else
		{
			format(string, sizeof(string), "Flying licence: %s (expires in %d hours)", text2,PlayerInfo[playerid][pFlyLicT]);
			SendClientMessage(id, COLOR_WHITE, string);
		}
        if(PlayerInfo[playerid][pBoatLicT] == 0)
	    {
			format(string, sizeof(string), "Boat licence: %s", text3);
			SendClientMessage(id, COLOR_WHITE, string);
		}
		else
		{
			format(string, sizeof(string), "Boat licence: %s (expires in %d hours)", text3,PlayerInfo[playerid][pBoatLicT]);
			SendClientMessage(id, COLOR_WHITE, string);
		}
		if(PlayerInfo[playerid][pGunLicT] == 0)
	    {
			format(string, sizeof(string), "Weapon licence: %s", text4);
			SendClientMessage(id, COLOR_WHITE, string);
		}
		else
		{
			format(string, sizeof(string), "Weapon licence: %s (expires in %d hours)", text4,PlayerInfo[playerid][pGunLicT]);
			SendClientMessage(id, COLOR_WHITE, string);
		}
		SendClientMessage(id, COLOR_WHITE, "------------");
		new giveplayer[25];
		GetPlayerName(playerid,sendername,sizeof(sendername));
		GetPlayerName(id,giveplayer,sizeof(giveplayer));
		format(string, sizeof(string), "* %s has shown his/her Licenses to you.", sendername);
		SendClientMessage(id, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* You have shown your Licenses to %s.", giveplayer);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
    return 1;
}

CMD:sl(playerid, params[])
{
  return cmd_showlicenses(playerid, params);
}

CMD:alicenses(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,COLOR_ERROR, AdminOnly);
		new id;
        if(sscanf(params, "u", id)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/alicenses <Name/Playerid>");
        if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
        new text1[20],text2[20],text3[20],text4[20],string[128],giveplayer[30];
		if(PlayerInfo[id][pCarLic] == 1) { text1 = "Passed"; } else { text1 = "Not Passed"; }
		if(PlayerInfo[id][pFlyLic] == 1) { text2 = "Passed"; } else { text2 = "Not Passed"; }
		if(PlayerInfo[id][pBoatLic] == 1) { text3 = "Passed"; } else { text3 = "Not Passed"; }
        if(PlayerInfo[id][pGunLic] == 1) { text4 = "Passed"; } else { text4 = "Not Passed"; }
        GetPlayerName(id, giveplayer, sizeof(giveplayer));
        format(string,sizeof(string),"---- %s's licenses ----", giveplayer);
	    SendClientMessage(playerid, COLOR_WHITE, string);
	    if(PlayerInfo[id][pCarLicT] == 0)
	    {
        	if(PlayerInfo[id][pCarLicSuspend] == 0)
			{
				format(string, sizeof(string), "Drivers licence: %s", text1);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else if(PlayerInfo[id][pCarLicSuspend] > 0)
			{
				format(string, sizeof(string), "Drivers licence: Suspended (suspended for %d hours)", PlayerInfo[id][pCarLicSuspend]);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
        }
	    else
	    {
        	format(string, sizeof(string), "Drivers licence: %s (expires in %d hours)", text1,PlayerInfo[id][pCarLicT]);
        	SendClientMessage(playerid, COLOR_WHITE, string);
        }
        if(PlayerInfo[id][pFlyLicT] == 0)
	    {
			format(string, sizeof(string), "Flying licence: %s", text2);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else
		{
			format(string, sizeof(string), "Flying licence: %s (expires in %d hours)", text2,PlayerInfo[id][pFlyLicT]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
        if(PlayerInfo[id][pBoatLicT] == 0)
	    {
			format(string, sizeof(string), "Boat licence: %s", text3);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else
		{
			format(string, sizeof(string), "Boat licence: %s (expires in %d hours)", text3,PlayerInfo[id][pBoatLicT]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		if(PlayerInfo[id][pGunLicT] == 0)
	    {
			if(PlayerInfo[id][pGunLicSuspend] == 0)
			{
				format(string, sizeof(string), "Weapon licence: %s", text4);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else if(PlayerInfo[id][pGunLicSuspend] > 0)
			{
				format(string, sizeof(string), "Weapon licence: Suspended (suspended for %d hours)", PlayerInfo[id][pGunLicSuspend]);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
		else
		{
			format(string, sizeof(string), "Weapon licence: %s (expires in %d hours)", text4,PlayerInfo[id][pGunLicT]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		SendClientMessage(playerid, COLOR_WHITE, "------------");
	}
    return 1;
}
CMD:licenses(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
        new text1[20],text2[20],text3[20],text4[20],string[128],sendername[30];
		if(PlayerInfo[playerid][pCarLic] == 1) { text1 = "Passed"; } else { text1 = "Not Passed"; }
		if(PlayerInfo[playerid][pFlyLic] == 1) { text2 = "Passed"; } else { text2 = "Not Passed"; }
		if(PlayerInfo[playerid][pBoatLic] == 1) { text3 = "Passed"; } else { text3 = "Not Passed"; }
        if(PlayerInfo[playerid][pGunLic] == 1) { text4 = "Passed"; } else { text4 = "Not Passed"; }
        GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string,sizeof(string),"---- %s's licenses ----", sendername);
	    SendClientMessage(playerid, COLOR_WHITE, string);
	    if(PlayerInfo[playerid][pCarLicT] == 0)
	    {
			if(PlayerInfo[playerid][pCarLicSuspend] == 0)
			{
				format(string, sizeof(string), "Drivers licence: %s", text1);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else if(PlayerInfo[playerid][pCarLicSuspend] > 0)
			{
				format(string, sizeof(string), "Drivers licence: Suspended (suspended for %d hours)", PlayerInfo[playerid][pCarLicSuspend]);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
        }
	    else
	    {
        	format(string, sizeof(string), "Drivers licence: %s (expiers in %d hours)", text1,PlayerInfo[playerid][pCarLicT]);
        	SendClientMessage(playerid, COLOR_WHITE, string);
        }
        if(PlayerInfo[playerid][pFlyLicT] == 0)
	    {
			format(string, sizeof(string), "Flying licence: %s", text2);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else
		{
			format(string, sizeof(string), "Flying licence: %s (expires in %d hours)", text2,PlayerInfo[playerid][pFlyLicT]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
        if(PlayerInfo[playerid][pBoatLicT] == 0)
	    {
			format(string, sizeof(string), "Boat licence: %s", text3);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else
		{
			format(string, sizeof(string), "Boat licence: %s (expires in %d hours)", text3,PlayerInfo[playerid][pBoatLicT]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		if(PlayerInfo[playerid][pGunLicT] == 0)
	    {
			if(PlayerInfo[playerid][pGunLicSuspend] == 0)
			{
				format(string, sizeof(string), "Weapon licence: %s", text4);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else if(PlayerInfo[playerid][pGunLicSuspend] > 0)
			{
				format(string, sizeof(string), "Weapon licence: Suspended (suspended for %d hours)", PlayerInfo[playerid][pGunLicSuspend]);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
		else
		{
			format(string, sizeof(string), "Weapon licence: %s (expires in %d hours)", text4,PlayerInfo[playerid][pGunLicT]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		SendClientMessage(playerid, COLOR_WHITE, "------------");
	}
    return 1;
}
CMD:setint(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		new id,intid,string[50];
		if(sscanf(params, "ud", id,intid)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/setint <Name/Playerid> <Interior ID>");
	    if(IsPlayerConnected(id))
	    {
	        if(id != INVALID_PLAYER_ID)
	        {
				SetPlayerInterior(id,intid);
				PlayerInfo[id][pInt] = intid;
				format(string, sizeof(string), "You have set the players interiorid %d.", intid);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
		else return SCM(playerid,COLOR_WHITE,"{FFFFCC}Error: Player not connected.");
	}
	return 1;
}
CMD:setvw(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		new id,vwid,string[50];
		if(sscanf(params, "ud", id,vwid)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/setvw <Name/Playerid> <Virtual World>");
	    if(IsPlayerConnected(id))
	    {
	        if(id != INVALID_PLAYER_ID)
	        {
				SetPlayerVirtualWorld(id,vwid);
				format(string, sizeof(string), "* You have set the players virtual world %d.", vwid);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
		else return SCM(playerid,COLOR_WHITE,"{FFFFCC}Error: Player not connected.");
	}
	return 1;
}
CMD:wthelp(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pWTalkie] == 0) return SCM(playerid, 0xFFFFFFFF, "{CCCC00}Error: You don't have a Walkie Talkie.");
	SCM(playerid,COLOR_WHITE,"{3385FF}Walkie Talkie: /togwt /setfreq /wt");
	return 1;
}
CMD:togwt(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pWTalkie] == 0) return SCM(playerid, 0xFFFFFFFF, "{CCCC00}Error: You don't have a Walkie Talkie.");
	if(WTToggle[playerid] == true)
	{
	    WTToggle[playerid] = false;
	    SCM(playerid, COLOR_WHITE,"You have disabled your radio.");
	}
	else
	{
	    WTToggle[playerid] = true;
	    SCM(playerid, COLOR_WHITE, "You have enabled your radio.");
	}
	return 1;
}
CMD:showfreq(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[64];
    if(sscanf(params, "u",id)) return SCM(playerid, 0xFFFFFFFF, "{B8DBFF}{FF9900}[SYNTAX]: {33CCFF}/showfreq <Name/Playerid>");
    if(PlayerInfo[id][pWTalkie] == 0) return SCM(playerid, 0xFFFFFFFF, "{CCCC00}Error: This player don't have a Walkie Talkie.");
   	format(string, sizeof(string), "{B8FFDB}Walkie Talkie Frequency %.1f.",WTChannel[id]);
    SCM(playerid, COLOR_WHITE, string);
    return 1;
}
CMD:setfrequency(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new string[256];
	if(PlayerInfo[playerid][pWTalkie] == 0) return SCM(playerid, 0xFFFFFFFF, "{CCCC00}Error: You don't have a Walkie Talkie.");
	new Float:freqss2;
    if(sscanf(params, "f",freqss2)) return SCM(playerid, 0xFFFFFFFF, "{B8DBFF}{FF9900}[SYNTAX]: {33CCFF}/setfreq <Frequency(89.5 of 98.5)>");
    if(freqss2 < 89.5 || freqss2 > 98.5 ) return SCM(playerid, 0xFFFFFFFF, "{B8DBFF}{FF9900}[SYNTAX]: {33CCFF}/setfreq <Frequency(89.5 of 98.5)>");
	if(WTToggle[playerid] == false) return SCM(playerid, 0xFFFFFFFF, "{FFB870}Error: Your walkie talkie is turned off.");
	if(freqss2 == WTChannel[playerid]) return SCM(playerid, 0xFFFFFFFF, "{FFB870}Error: You are already in this channel.");
    format(string, sizeof(string), "{B8FFDB}You set your Walkie Talkie Frequency to %.2f.",freqss2);
    SCM(playerid, COLOR_WHITE, string);
	WTChannel[playerid] = freqss2;
	return 1;
}
CMD:setfreq(playerid, params[])
{
	return cmd_setfrequency(playerid, params);
}
CMD:wt(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pWTalkie] == 0) return SCM(playerid, 0xFFFFFFFF, "{CCCC00}ERROR: You don't have a Walkie Talkie.");
	new msg[128],sendername[25],string[256];
    if(PlayerInfo[playerid][pMuted] == 1)
    {
		format(string, sizeof(string), "You can not speak, you have been silenced for %d seconds.",PlayerInfo[playerid][pMuteTime]);
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		return 1;
	}
	if(sscanf(params, "s[128]", msg)) return SCM(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/wt <Message>");
	if(WTToggle[playerid] == false) return SCM(playerid, 0xFFFFFFFF, "{FFB870}Error: Your walkie talkie is turned off.");
	if(WTChannel[playerid] == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}Error: Please set frequency.");
	GetPlayerName(playerid,sendername,sizeof(sendername));
	foreach(Player, i)
	{
	    if(WTToggle[i] == true)
	    {
	        if(WTChannel[i] == WTChannel[playerid])
	        {
				format(string, sizeof(string), "{54BF9C}[Freq: %.2f]: %s: %s",WTChannel[playerid],sendername, msg);
				SCM(i, COLOR_WHITE, string);
				format(string ,sizeof(string),"(radio) ''%s''", params);
				SetPlayerChatBubble(playerid, string, COLOR_CHATBUBBLE, 10.0, 10000);
				if(FindIP(msg)) /// Anti-Reclama
				{
					new advertiser[MAX_PLAYER_NAME];
					GetPlayerName(playerid, advertiser, sizeof(advertiser));
					format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /wt.", advertiser, playerid, msg);
					ABroadCast(COLOR_WHITE,string,1);
				}
				for(new d; d < sizeof(TLD); d++)
				{
					if(strfind(msg, TLD[d], true) != -1)
					{
						if(strfind(msg, ".", true) != -1 || strfind(msg, ".", true) != -1 || strfind(msg, ".", true) != -1) break;
						new advertiser[MAX_PLAYER_NAME];
						GetPlayerName(playerid, advertiser, sizeof(advertiser));
						format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /wt.", advertiser, playerid, msg);
						ABroadCast(COLOR_WHITE,string,1);
					}
				}
				for(new adm = 0; adm<=MAX_PLAYERS;adm++)
				{
    				if(IsPlayerConnected(adm))
					{
	    				if(PlayerInfo[adm][pAdmin] > 0 && BigEar[adm] == 1)
    	    			{
   	        				format(string, sizeof(string), "[Freq: %.2f]: %s: %s",WTChannel[playerid],sendername,msg);
							SendClientMessage(adm,  COLOR_YELLOW, string);
  	    				}
					}
				}
	        }
	    }
	}
	return 1;
}
CMD:arrest(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	new tmpcar = GetPlayerVehicleID(playerid);
	if(IsACop(playerid))
	{
        if(OnDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_WHITE, "{3385FF}You are not on Duty.");
		new id,sendername[30],giveplayer[30],string[186];
		if(sscanf(params, "u", id)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/arrest <Name/Playerid>");
		new tmpcar2 = GetPlayerVehicleID(id);
		if(IsPlayerConnected(id))
		{
			if(GetDistanceBetweenPlayers(playerid,id) < 5)
			{
				if( GetPlayerState(playerid) == PLAYER_STATE_DRIVER && Copcar2(tmpcar) && tmpcar == tmpcar2 && PlayerToPoint(10.0, playerid, 1526.2357,-1678.0305,5.8906) || PlayerToPoint(6.0, playerid, 268.9264,81.9687,1001.0391) || PlayerToPoint(4.0, playerid, 2282.1289,2425.7620,3.4692) )
				{
					GetPlayerName(id, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					if(PlayerInfo[id][pWantedLevel] < 1) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Player must be at least Wanted Level 1.");
					if(PlayerInfo[id][pWantedLevel] == 1)
					{
						GivePlayerCash(id, -10000);
						new str23[256];
						new idfac;
						idfac = PlayerInfo[playerid][pMember];
                        DynamicFactions[idfac][fBank] += 10000;
						mysql_format(SQL,str23,sizeof(str23),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'", DynamicFactions[idfac][fBank], idfac);
						mysql_tquery(SQL,str23,"","");
						ResetPlayerWeaponsEx(id);
						ResetPlayerWeapons(id);
						JailPrice[id] = 50000;
						PlayerInfo[id][pJailTime] = 8 * 60;
						SetPlayerWantedLevel(id, 0);
						DestroyDynamic3DTextLabel(WantedScris[playerid]);
						PlayerTextDrawHide(id, WantedText[id]);
						SetPlayerInterior(id, 6);
		                new rand;
						rand = random(sizeof(gRandomJailSpawns));
						SetPlayerPosEx(id,gRandomJailSpawns[rand][0],gRandomJailSpawns[rand][1],gRandomJailSpawns[rand][2]);
						format(string, sizeof(string), "You have been arrested by %s for %d seconds, and issued a fine of $10000.", sendername, PlayerInfo[id][pJailTime]);
						SendClientMessage(id, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pCommands]++;
						Update(playerid,pCommandsx);
						new str[256];
				        mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCommands],PlayerInfo[playerid][pNormalName]);
				        mysql_tquery(SQL,str,"","");
						PlayerInfo[id][pJailed] = 1;
						PlayerInfo[id][pArrested] += 1;
						PlayerInfo[id][pWantedLevel] = 0;
						PlayerInfo[playerid][pArrestss] += 1;
                        Update(playerid, pArrestssx);
						WantedPoints[id] = 0;
						arrestcop[id] = playerid;
						if(CP[id] == 50)
						{
							DisablePlayerCheckpoint(id);
							CP[id] = 0;
						}
                        Update(id,pJailedx);
                        Update(id,pJailTimex);
						Update(playerid,pCashx);
						Update(id,pCashx);
						Update(id,pWantedLevelx);
						if(PlayerCuffed2[id] == 1)
						{
						    PlayerCuffed2[id] = 0;
					    	SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
					    	RemovePlayerAttachedObject(id,1);
					    	TogglePlayerControllable(id, 1);
						}
						if(IsPlayerInRangeOfPoint(playerid, 4,2282.1289,2425.7620,3.4692))
						{
						    SetPlayerVirtualWorld(id, 3);
						    PlayerInfo[id][pVirtualPD] = 3;
						    Update(id, pVirtualPDx);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 4,1526.2357,-1678.0305,5.8906))
						{
						    SetPlayerVirtualWorld(id, 0);
						    PlayerInfo[id][pVirtualPD] = 0;
						    Update(id, pVirtualPDx);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 4,268.0995,82.1610,1001.0391) && GetPlayerVirtualWorld(playerid) == 3)
						{
						    SetPlayerVirtualWorld(id, 3);
						    PlayerInfo[id][pVirtualPD] = 3;
						    Update(id, pVirtualPDx);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 4,268.0995,82.1610,1001.0391) && GetPlayerVirtualWorld(playerid) == 0)
						{
						    SetPlayerVirtualWorld(id, 0);
						    PlayerInfo[id][pVirtualPD] = 0;
						    Update(id, pVirtualPDx);
						}
						format(string, sizeof(string), "%s arrested suspect %s, issuing a fine of $10000 with a sentence of 480 seconds.", sendername, giveplayer);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						TogglePlayerControllable(id, 0);
						SetTimerEx("UnFreezeStation", 1000, false, "i", id);
						return 1;
					}
					if(PlayerInfo[id][pWantedLevel] == 2)
					{
						GivePlayerCash(id, -12000);
						new str23[256];
						new idfac;
						idfac = PlayerInfo[playerid][pMember];
                        DynamicFactions[idfac][fBank] += 12000;
						mysql_format(SQL,str23,sizeof(str23),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'", DynamicFactions[idfac][fBank], idfac);
						mysql_tquery(SQL,str23,"","");
						ResetPlayerWeaponsEx(id);
						ResetPlayerWeapons(id);
						JailPrice[id] = 100000;
						PlayerInfo[id][pJailTime] = 12 * 60;
						SetPlayerWantedLevel(id, 0);
						DestroyDynamic3DTextLabel(WantedScris[playerid]);
						PlayerTextDrawHide(id, WantedText[id]);
						SetPlayerInterior(id, 6);
		                new rand;
						rand = random(sizeof(gRandomJailSpawns));
						SetPlayerPosEx(id,gRandomJailSpawns[rand][0],gRandomJailSpawns[rand][1],gRandomJailSpawns[rand][2]);
						format(string, sizeof(string), "You have been arrested by %s for %d seconds, and issued a fine of $12000.", sendername, PlayerInfo[id][pJailTime]);
						SendClientMessage(id, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pCommands]++;
						Update(playerid,pCommandsx);
						new str[256];
				        mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCommands],PlayerInfo[playerid][pNormalName]);
				        mysql_tquery(SQL,str,"","");
						PlayerInfo[id][pJailed] = 1;
						PlayerInfo[id][pArrested] += 1;
						PlayerInfo[id][pWantedLevel] = 0;
						WantedPoints[id] = 0;
						arrestcop[id] = playerid;
						if(CP[id] == 50)
						{
							DisablePlayerCheckpoint(id);
							CP[id] = 0;
						}
                        Update(id,pJailedx);
                        Update(id,pJailTimex);
						Update(playerid,pCashx);
						Update(id,pCashx);
						Update(id,pWantedLevelx);
						SetPlayerSkin(id, PlayerInfo[id][pModel]);
						if(PlayerCuffed2[id] == 1)
						{
						    PlayerCuffed2[id] = 0;
					    	SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
					    	RemovePlayerAttachedObject(id,1);
					    	TogglePlayerControllable(id, 1);
						}
						if(IsPlayerInRangeOfPoint(playerid, 4,2282.1289,2425.7620,3.4692))
						{
						    SetPlayerVirtualWorld(id, 3);
						    PlayerInfo[id][pVirtualPD] = 3;
						    Update(id, pVirtualPDx);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 4,1526.2357,-1678.0305,5.8906))
						{
						    SetPlayerVirtualWorld(id, 0);
						    PlayerInfo[id][pVirtualPD] = 0;
						    Update(id, pVirtualPDx);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 4,268.0995,82.1610,1001.0391) && GetPlayerVirtualWorld(playerid) == 3)
						{
						    SetPlayerVirtualWorld(id, 3);
						    PlayerInfo[id][pVirtualPD] = 3;
						    Update(id, pVirtualPDx);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 4,268.0995,82.1610,1001.0391) && GetPlayerVirtualWorld(playerid) == 0)
						{
						    SetPlayerVirtualWorld(id, 0);
						    PlayerInfo[id][pVirtualPD] = 0;
						    Update(id, pVirtualPDx);
						}
						format(string, sizeof(string), "%s arrested suspect %s, issuing a fine of $12000 with a sentence of 720 seconds.", sendername, giveplayer);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						TogglePlayerControllable(id, 0);
						SetTimerEx("UnFreezeStation", 1000, false, "i", id);
						return 1;
					}
					if(PlayerInfo[id][pWantedLevel] == 3)
					{
						GivePlayerCash(id, -14000);
						new str23[256];
						new idfac;
						idfac = PlayerInfo[playerid][pMember];
                        DynamicFactions[idfac][fBank] += 14000;
						mysql_format(SQL,str23,sizeof(str23),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'", DynamicFactions[idfac][fBank], idfac);
						mysql_tquery(SQL,str23,"","");
						ResetPlayerWeaponsEx(id);
						ResetPlayerWeapons(id);
						JailPrice[id] = 150000;
						PlayerInfo[id][pJailTime] = 16 * 60;
						SetPlayerWantedLevel(id, 0);
						DestroyDynamic3DTextLabel(WantedScris[playerid]);
						PlayerTextDrawHide(id, WantedText[id]);
						SetPlayerInterior(id, 6);
		                new rand;
						rand = random(sizeof(gRandomJailSpawns));
						SetPlayerPosEx(id,gRandomJailSpawns[rand][0],gRandomJailSpawns[rand][1],gRandomJailSpawns[rand][2]);
						format(string, sizeof(string), "You have been arrested by %s for %d seconds, and issued a fine of $14000.", sendername, PlayerInfo[id][pJailTime]);
						SendClientMessage(id, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pCommands]++;
						Update(playerid,pCommandsx);
						new str[256];
				        mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCommands],PlayerInfo[playerid][pNormalName]);
				        mysql_tquery(SQL,str,"","");
						PlayerInfo[id][pJailed] = 1;
						PlayerInfo[id][pArrested] += 1;
						PlayerInfo[id][pWantedLevel] = 0;
						WantedPoints[id] = 0;
						arrestcop[id] = playerid;
						if(CP[id] == 50)
						{
							DisablePlayerCheckpoint(id);
							CP[id] = 0;
						}
                        Update(id,pJailedx);
                        Update(id,pJailTimex);
						Update(playerid,pCashx);
						Update(id,pCashx);
						Update(id,pWantedLevelx);
						SetPlayerSkin(id, PlayerInfo[id][pModel]);
						if(PlayerCuffed2[id] == 1)
						{
						    PlayerCuffed2[id] = 0;
					    	SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
					    	RemovePlayerAttachedObject(id,1);
					    	TogglePlayerControllable(id, 1);
						}
						if(IsPlayerInRangeOfPoint(playerid, 4,2282.1289,2425.7620,3.4692))
						{
						    SetPlayerVirtualWorld(id, 3);
						    PlayerInfo[id][pVirtualPD] = 3;
						    Update(id, pVirtualPDx);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 4,1526.2357,-1678.0305,5.8906))
						{
						    SetPlayerVirtualWorld(id, 0);
						    PlayerInfo[id][pVirtualPD] = 0;
						    Update(id, pVirtualPDx);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 4,268.0995,82.1610,1001.0391) && GetPlayerVirtualWorld(playerid) == 3)
						{
						    SetPlayerVirtualWorld(id, 3);
						    PlayerInfo[id][pVirtualPD] = 3;
						    Update(id, pVirtualPDx);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 4,268.0995,82.1610,1001.0391) && GetPlayerVirtualWorld(playerid) == 0)
						{
						    SetPlayerVirtualWorld(id, 0);
						    PlayerInfo[id][pVirtualPD] = 0;
						    Update(id, pVirtualPDx);
						}
						format(string, sizeof(string), "%s arrested suspect %s, issuing a fine of $14000 with a sentence of 960 seconds.", sendername, giveplayer);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						TogglePlayerControllable(id, 0);
						SetTimerEx("UnFreezeStation", 1000, false, "i", id);
						return 1;
					}
					if(PlayerInfo[id][pWantedLevel] == 4)
					{
						GivePlayerCash(id, -16000);
						new str23[256];
						new idfac;
						idfac = PlayerInfo[playerid][pMember];
                        DynamicFactions[idfac][fBank] += 16000;
						mysql_format(SQL,str23,sizeof(str23),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'", DynamicFactions[idfac][fBank], idfac);
						mysql_tquery(SQL,str23,"","");
						ResetPlayerWeaponsEx(id);
      					ResetPlayerWeapons(id);
						JailPrice[id] = 200000;
						PlayerInfo[id][pJailTime] = 18 * 60;
						SetPlayerWantedLevel(id, 0);
						DestroyDynamic3DTextLabel(WantedScris[playerid]);
						PlayerTextDrawHide(id, WantedText[id]);
						SetPlayerInterior(id, 6);
		                new rand;
						rand = random(sizeof(gRandomJailSpawns));
						SetPlayerPosEx(id,gRandomJailSpawns[rand][0],gRandomJailSpawns[rand][1],gRandomJailSpawns[rand][2]);
						format(string, sizeof(string), "You have been arrested by %s for %d seconds, and issued a fine of $16000.", sendername, PlayerInfo[id][pJailTime]);
						SendClientMessage(id, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pCommands]++;
						Update(playerid,pCommandsx);
						new str[256];
				        mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCommands],PlayerInfo[playerid][pNormalName]);
				        mysql_tquery(SQL,str,"","");
						PlayerInfo[id][pJailed] = 1;
						PlayerInfo[id][pArrested] += 1;
						PlayerInfo[id][pWantedLevel] = 0;
						WantedPoints[id] = 0;
						arrestcop[id] = playerid;
						if(CP[id] == 50)
						{
							DisablePlayerCheckpoint(id);
							CP[id] = 0;
						}
                        Update(id,pJailedx);
                        Update(id,pJailTimex);
						Update(playerid,pCashx);
						Update(id,pCashx);
						Update(id,pWantedLevelx);
						SetPlayerSkin(id, PlayerInfo[id][pModel]);
						if(PlayerCuffed2[id] == 1)
						{
						    PlayerCuffed2[id] = 0;
					    	SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
					    	RemovePlayerAttachedObject(id,1);
					    	TogglePlayerControllable(id, 1);
						}
						if(IsPlayerInRangeOfPoint(playerid, 4,2282.1289,2425.7620,3.4692))
						{
						    SetPlayerVirtualWorld(id, 3);
						    PlayerInfo[id][pVirtualPD] = 3;
						    Update(id, pVirtualPDx);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 4,1526.2357,-1678.0305,5.8906))
						{
						    SetPlayerVirtualWorld(id, 0);
						    PlayerInfo[id][pVirtualPD] = 0;
						    Update(id, pVirtualPDx);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 4,268.0995,82.1610,1001.0391) && GetPlayerVirtualWorld(playerid) == 3)
						{
						    SetPlayerVirtualWorld(id, 3);
						    PlayerInfo[id][pVirtualPD] = 3;
						    Update(id, pVirtualPDx);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 4,268.0995,82.1610,1001.0391) && GetPlayerVirtualWorld(playerid) == 0)
						{
						    SetPlayerVirtualWorld(id, 0);
						    PlayerInfo[id][pVirtualPD] = 0;
						    Update(id, pVirtualPDx);
						}
						format(string, sizeof(string), "%s arrested suspect %s, issuing a fine of $16000 with a sentence of 1080 seconds.", sendername, giveplayer);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						TogglePlayerControllable(id, 0);
						SetTimerEx("UnFreezeStation", 1000, false, "i", id);
						return 1;
					}
					if(PlayerInfo[id][pWantedLevel] == 5)
					{
						GivePlayerCash(id, -18000);
						new str23[256];
						new idfac;
						idfac = PlayerInfo[playerid][pMember];
                        DynamicFactions[idfac][fBank] += 18000;
						mysql_format(SQL,str23,sizeof(str23),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'", DynamicFactions[idfac][fBank], idfac);
						mysql_tquery(SQL,str23,"","");
						ResetPlayerWeaponsEx(id);
						ResetPlayerWeapons(id);
						JailPrice[id] = 250000;
						PlayerInfo[id][pJailTime] = 20 * 60;
						SetPlayerWantedLevel(id, 0);
						DestroyDynamic3DTextLabel(WantedScris[playerid]);
						PlayerTextDrawHide(id, WantedText[id]);
						SetPlayerInterior(id, 6);
		                new rand;
						rand = random(sizeof(gRandomJailSpawns));
						SetPlayerPosEx(id,gRandomJailSpawns[rand][0],gRandomJailSpawns[rand][1],gRandomJailSpawns[rand][2]);
						format(string, sizeof(string), "You have been arrested by %s for %d seconds, and issued a fine of $18000.", sendername, PlayerInfo[id][pJailTime]);
						SendClientMessage(id, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pCommands]++;
						Update(playerid,pCommandsx);
						new str[256];
				        mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCommands],PlayerInfo[playerid][pNormalName]);
				        mysql_tquery(SQL,str,"","");
						PlayerInfo[id][pJailed] = 1;
						PlayerInfo[id][pArrested] += 1;
						PlayerInfo[id][pWantedLevel] = 0;
						WantedPoints[id] = 0;
						arrestcop[id] = playerid;
						if(CP[id] == 50)
						{
							DisablePlayerCheckpoint(id);
							CP[id] = 0;
						}
                        Update(id,pJailedx);
                        Update(id,pJailTimex);
						Update(playerid,pCashx);
						Update(id,pCashx);
						Update(id,pWantedLevelx);
						SetPlayerSkin(id, PlayerInfo[id][pModel]);
						if(PlayerCuffed2[id] == 1)
						{
						    PlayerCuffed2[id] = 0;
					    	SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
					    	RemovePlayerAttachedObject(id,1);
					    	TogglePlayerControllable(id, 1);
						}
						if(IsPlayerInRangeOfPoint(playerid, 4,2282.1289,2425.7620,3.4692))
						{
						    SetPlayerVirtualWorld(id, 3);
						    PlayerInfo[id][pVirtualPD] = 3;
						    Update(id, pVirtualPDx);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 4,1526.2357,-1678.0305,5.8906))
						{
						    SetPlayerVirtualWorld(id, 0);
						    PlayerInfo[id][pVirtualPD] = 0;
						    Update(id, pVirtualPDx);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 4,268.0995,82.1610,1001.0391) && GetPlayerVirtualWorld(playerid) == 3)
						{
						    SetPlayerVirtualWorld(id, 3);
						    PlayerInfo[id][pVirtualPD] = 3;
						    Update(id, pVirtualPDx);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 4,268.0995,82.1610,1001.0391) && GetPlayerVirtualWorld(playerid) == 0)
						{
						    SetPlayerVirtualWorld(id, 0);
						    PlayerInfo[id][pVirtualPD] = 0;
						    Update(id, pVirtualPDx);
						}
						format(string, sizeof(string), "%s arrested suspect %s, issuing a fine of $18000 with a sentence of 1200 seconds.", sendername, giveplayer);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						TogglePlayerControllable(id, 0);
						SetTimerEx("UnFreezeStation", 1000, false, "i", id);
						return 1;
					}
					if(PlayerInfo[id][pWantedLevel] == 6)
					{
						GivePlayerCash(id, -20000);
						new str23[256];
						new idfac;
						idfac = PlayerInfo[playerid][pMember];
                        DynamicFactions[idfac][fBank] += 20000;
						mysql_format(SQL,str23,sizeof(str23),"UPDATE `factions` SET `Bank`='%d' WHERE `ID`='%d'", DynamicFactions[idfac][fBank], idfac);
						mysql_tquery(SQL,str23,"","");
						ResetPlayerWeaponsEx(id);
						ResetPlayerWeapons(id);
						JailPrice[id] = 300000;
						PlayerInfo[id][pJailTime] = 24 * 60;
						SetPlayerWantedLevel(id, 0);
						DestroyDynamic3DTextLabel(WantedScris[playerid]);
						PlayerTextDrawHide(id, WantedText[id]);
						SetPlayerInterior(id, 6);
		                new rand;
						rand = random(sizeof(gRandomJailSpawns));
						SetPlayerPosEx(id,gRandomJailSpawns[rand][0],gRandomJailSpawns[rand][1],gRandomJailSpawns[rand][2]);
						format(string, sizeof(string), "You have been arrested by %s for %d seconds, and issued a fine of $20000.", sendername, PlayerInfo[id][pJailTime]);
						SendClientMessage(id, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pCommands]++;
						Update(playerid,pCommandsx);
						new str[256];
				        mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCommands],PlayerInfo[playerid][pNormalName]);
				        mysql_tquery(SQL,str,"","");
						PlayerInfo[id][pJailed] = 1;
						PlayerInfo[id][pArrested] += 1;
						PlayerInfo[id][pWantedLevel] = 0;
						WantedPoints[id] = 0;
						arrestcop[id] = playerid;
						if(CP[id] == 50)
						{
							DisablePlayerCheckpoint(id);
							CP[id] = 0;
						}
                        Update(id,pJailedx);
                        Update(id,pJailTimex);
						Update(playerid,pCashx);
						Update(id,pCashx);
						Update(id,pWantedLevelx);
						SetPlayerSkin(id, PlayerInfo[id][pModel]);
						if(PlayerCuffed2[id] == 1)
						{
						    PlayerCuffed2[id] = 0;
					    	SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
					    	RemovePlayerAttachedObject(id,1);
					    	TogglePlayerControllable(id, 1);
						}
						if(IsPlayerInRangeOfPoint(playerid, 4,2282.1289,2425.7620,3.4692))
						{
						    SetPlayerVirtualWorld(id, 3);
						    PlayerInfo[id][pVirtualPD] = 3;
						    Update(id, pVirtualPDx);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 4,1526.2357,-1678.0305,5.8906))
						{
						    SetPlayerVirtualWorld(id, 0);
						    PlayerInfo[id][pVirtualPD] = 0;
						    Update(id, pVirtualPDx);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 4,268.0995,82.1610,1001.0391) && GetPlayerVirtualWorld(playerid) == 3)
						{
						    SetPlayerVirtualWorld(id, 3);
						    PlayerInfo[id][pVirtualPD] = 3;
						    Update(id, pVirtualPDx);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 4,268.0995,82.1610,1001.0391) && GetPlayerVirtualWorld(playerid) == 0)
						{
						    SetPlayerVirtualWorld(id, 0);
						    PlayerInfo[id][pVirtualPD] = 0;
						    Update(id, pVirtualPDx);
						}
						format(string, sizeof(string), "%s arrested suspect %s, issuing a fine of $20000 with a sentence of 1440 seconds.", sendername, giveplayer);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						TogglePlayerControllable(id, 0);
						SetTimerEx("UnFreezeStation", 1000, false, "i", id);
						return 1;
					}
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not near the jail, can't arrest.");
			}
			else return SCM(playerid,COLOR_WHITE,"{FFFFCC}This player is not near you.");
		}
		else return SCM(playerid,COLOR_WHITE,"{FFFFCC}Error: Player not connected.");
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a Cop/FBI/National Guard.");
	return 1;
}
CMD:spawncar(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
		new model,color1,color2,sendername[25],string[256];
		if(sscanf(params, "iii", model, color1, color2)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/spawncar <Model> <Color1> <Color2>");
		if(model < 400 || model > 611) return SCM(playerid,COLOR_WHITE,"{FFB870}Invalid car ID! (400-611)");
		if(color1 > 255 || color1 < 0) return SendClientMessage(playerid, COLOR_RED, "Invalid car Color! (0-255)");
        if(color2 < 0 || color2 > 255) return SendClientMessage(playerid, COLOR_RED, "Invalid car Color! (0-255)");
    	new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid, X,Y,Z);
     	new carid = AddStaticVehicle(model, X,Y,Z, 0.0,  color1, color2);
		Carspawn[carid] = carid;
       	GetPlayerName(playerid, sendername, sizeof(sendername));
       	new vehicles = GetVehicleModel(carid) - 400;
    	format(string, sizeof(string), "{FFA000}[AdmCmd]: {FFFFFF}%s Has Spawned A %s.",sendername,aVehicleNames[vehicles]);
    	ABroadCast(COLOR_ADMCOMMANDS, string, 4);
		format(string,sizeof(string),"VehLog: %s has spawned car model %d.",sendername,model);
    	Adminlog(string);
		LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		PutPlayerInVehicle(playerid, carid, 0);
		VehOwned[carid] = 2;
		VehOwner[carid] = playerid;
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}

CMD:car(playerid, params[])
{
  return cmd_spawncar(playerid, params);
}

CMD:veh(playerid, params[])
{
  return cmd_spawncar(playerid, params);
}

CMD:destroycarspawn(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid,COLOR_ERROR, AdminOnly);
	if(Destroycar == 0)
	{
	    Destroycar = 1;
	    SCM(playerid,COLOR_WHITE,"Destroy car spawn is enable.");
	}
	else if(Destroycar == 1)
	{
	    Destroycar = 0;
	    SCM(playerid,COLOR_WHITE,"Destroy car spawn is disable.");
	}
	return 1;
}

CMD:dcs(playerid, params[])
{
  return cmd_destroycarspawn(playerid, params);
}

CMD:removespawncarid(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
	    new id,string[128],sendername[30];
	    if(sscanf(params, "d", id)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/removespawncarid <Car ID>");
		if(Carspawn[id] != 0)
		{
		    DestroyVehicle(id);
			Carspawn[id] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string,sizeof(string),"{FFA000}{FFA000}[AdmCmd]: {FFFFFF}: Admin %s despawned vehicle %d.",sendername,id);
			ABroadCast(COLOR_ADMCOMMANDS,string,1);
		}
		else return SendClientMessage(playerid, COLOR_WHITE,"{FFB870}This is not spawned car.");
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}

CMD:rsc(playerid, params[])
{
  return cmd_removespawncarid(playerid, params);
}

CMD:dv(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 1)return SCM(playerid, -1, AdminOnly);
	if(IsPlayerInAnyVehicle(playerid))
	{
	        new string[128];
			new sendername[25];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new tmpcarr = GetPlayerVehicleID(playerid);
			if(tmpcarr <= LastVehicle)
			{
			SCM(playerid,COLOR_LIGHTRED,"This Is A Static Vehicle .");
			return 1;
			}
			if(VehOwned[tmpcarr] == 1)
			{
			SCM(playerid,COLOR_LIGHTRED,"This Vehicle Is Owned By Another Player");
			return 1;
			}
	    	DestroyVehicle(tmpcarr);
			Carspawn[tmpcarr] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string,sizeof(string),"{FFA000}[AdmCmd]: {FFFFFF}Admin %s Despawned Vehicle %d",sendername,tmpcarr);
			ABroadCast(COLOR_ADMCOMMANDS,string,1);
	}
	else return SCM(playerid, -1, "{ff5050}You Are'nt In Any Vehicle");
	return 1;
}

CMD:removeallspawncar(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 8)
	{
		new string[128],sendername[30];
		for(new i = 1; i < MAX_VEHICLES; i++)
		{
			if(Carspawn[i] != 0)
			{
				DestroyVehicle(Carspawn[i]);
				Carspawn[i] = 0;
			}
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string,sizeof(string),"[AdmWarn]: {FFFFFF}Admin {00FF00}%s {FFFFFF}Deleted All Spawned Vehicles .",sendername);
		ABroadCast(COLOR_AdminWarn,string,1);
		Destroycar = 0;
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}

CMD:dav(playerid, params[])
{
  return cmd_removeallspawncar(playerid, params);
}

CMD:davm(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 8)
	{
		for(new i = LastVehicle;i < MAX_VEHICLES;i++)
		{
		if(VehOwned[i] == 2 && VehOwner[i] == playerid) {
			VehOwned[i] = 0;
			VehOwner[i] = 9999;
			DestroyVehicle(i);
		}
		}
		new string[256];
		format(string,256,"[AdmWarn]: {FFFFFF}Admin {00FF00}%s {FFFFFF}Deleted All Himself/Herself Spawned Vehicles .",PlayerInfo[playerid][pNormalName]);
		ABroadCast(COLOR_AdminWarn,string,1);
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}

CMD:rtc(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		new string[128],sendername[30];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string,sizeof(string),"{FFA000}[AdmCmd]: {FFFFFF}: Admin %s Used /rtc.",sendername);
		ABroadCast(COLOR_ADMCOMMANDS,string,1);
		new tempcar = GetPlayerVehicleID(playerid);
	    SetVehicleToRespawn(tempcar);
	}
	else return SCM(playerid, -1, "{AB0000}You Are Not In Any Car");
	return 1;
}

CMD:checkspawncar(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pAdmin] >= 8)
	{
		new string[64];
		for(new i = 1; i < MAX_VEHICLES; i++)
		{
			if(Carspawn[i] != 0)
			{
			    format(string,sizeof(string),"Car ID: %d",Carspawn[i]);
				SCM(playerid,COLOR_WHITE,string);
			}
		}
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}
CMD:garage(playerid, params[])
{
    if (IsPlayerInRangeOfPoint(playerid,2,1594.7660,-1619.7109,13.4093))
	{
 			new tmpcar = GetPlayerVehicleID(playerid);
			if (GetPlayerState(playerid) == 2)
			{
				SetVehiclePos(tmpcar, 1292.7828,6.8377,1001.0078);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, 1292.7828,6.8377,1001.0078);
			}
			SetPlayerInterior(playerid,18);
			LinkVehicleToInterior(tmpcar,18);
			PlayerInfo[playerid][pInt] = 18;
			if(InHouse[playerid] > -1)
			{
			    StopAudioStreamForPlayer(playerid);
			}
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
			SetVehicleVirtualWorld(tmpcar,0);
			return 1;
	}
	else if (IsPlayerInRangeOfPoint(playerid,2,1292.7828,6.8377,1001.0078) && GetPlayerVirtualWorld(playerid) == 0)
	{
 			new tmpcar = GetPlayerVehicleID(playerid);
			if (GetPlayerState(playerid) == 2)
			{
				SetVehiclePos(tmpcar, 1594.7660,-1619.7109,13.4093);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, 1594.7660,-1619.7109,13.4093);
			}
			SetPlayerInterior(playerid,0);
			LinkVehicleToInterior(tmpcar,0);
			PlayerInfo[playerid][pInt] = 0;
			if(InHouse[playerid] > -1)
			{
			    StopAudioStreamForPlayer(playerid);
			}
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
			SetVehicleVirtualWorld(tmpcar,0);
			return 1;
	}
	else if (IsPlayerInRangeOfPoint(playerid,2,1059.7028,-345.8912,73.9922))
	{
		if(PlayerInfo[playerid][pMember] != 11 || PlayerInfo[playerid][pLeader] != 11) return SendClientMessage(playerid, COLOR_LIGHTRED, "You are not a Hitman.");
		{
 			new tmpcar = GetPlayerVehicleID(playerid);
			if (GetPlayerState(playerid) == 2)
			{
				SetVehiclePos(tmpcar, 1292.7828,6.8377,1001.0078);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, 1292.7828,6.8377,1001.0078);
			}
			SetPlayerInterior(playerid,18);
			LinkVehicleToInterior(tmpcar,18);
			PlayerInfo[playerid][pInt] = 18;
			if(InHouse[playerid] > -1)
			{
			    StopAudioStreamForPlayer(playerid);
			}
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,676);
			SetVehicleVirtualWorld(tmpcar,676);
			return 1;
		}
	}
	return 1;
}
CMD:exitgaragehitman(playerid, params[])
{
    if (IsPlayerInRangeOfPoint(playerid,2,1292.7828,6.8377,1001.0078) && GetPlayerVirtualWorld(playerid) == 676)
	{
 			new tmpcar = GetPlayerVehicleID(playerid);
			if (GetPlayerState(playerid) == 2)
			{
				SetVehiclePos(tmpcar, 1059.7028,-345.8912,73.9922);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else
			{
				SetPlayerPosEx(playerid, 1059.7028,-345.8912,73.9922);
			}
			SetPlayerInterior(playerid,0);
			LinkVehicleToInterior(tmpcar,0);
			PlayerInfo[playerid][pInt] = 0;
			if(InHouse[playerid] > -1)
			{
			    StopAudioStreamForPlayer(playerid);
			}
			InHQ[playerid] = -1;
			InHouse[playerid] = -1;
			InBussines[playerid] = -1;
			SetPlayerVirtualWorld(playerid,0);
			SetVehicleVirtualWorld(tmpcar,0);
			return 1;
	}
	return 1;
}
CMD:rob(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(PlayerInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_LIGHTRED, "You need level 3 to do this.");
	if(PlayerInfo[playerid][pWantedLevel] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "You can't rob a business when you have wanted.");
	if(PlayerInfo[playerid][pRob] >= 10 && PlayerInfo[playerid][pPremiumAccount] == 0 || PlayerInfo[playerid][pRob] >= 8 && PlayerInfo[playerid][pPremiumAccount] > 0)
    {
		if(IsACop(playerid)) return SCM(playerid,COLOR_WHITE,"{FFB870}You're a cop.");
		if(InBussines[playerid] != -1)
		{
			DisablePlayerCheckpoint(playerid);
			SendClientMessage(playerid, COLOR_ROB, "Robbing the business...");
			SendClientMessage(playerid, COLOR_ROB, "Please wait 10 seconds...");
			RobTimer[playerid] = SetTimerEx("RobFunc", 10000, 0, "i", playerid);
			BusinessRob[playerid] = 3;
			if(PlayerInfo[playerid][pPremiumAccount] == 0)
			{
				PlayerInfo[playerid][pRob] -= 10;
			}
			else if(PlayerInfo[playerid][pPremiumAccount] == 1)
			{
				PlayerInfo[playerid][pRob] -= 8;
			}
			SetPlayerWantedLevel(playerid, 6);
			PlayerTextDrawShow(playerid, WantedText[playerid]);
			new str1[256];
 			format(str1,sizeof(str1),"Wanted Clear In : ~r~%d MINUTE",wantedlost[playerid]/60+1);
			PlayerTextDrawSetString(playerid, WantedText[playerid], str1);
			WantedPoints[playerid] = 12;
			SetPlayerCriminal(playerid,255, "armed robbery");
			Update(playerid,pRobx);
			Update(playerid,pWantedLevelx);
			DestroyDynamic3DTextLabel(WantedScris[playerid]);
			Tigaanel[playerid] = 1;
   			new str2[256];
    		format(str2,sizeof(str2),"{FF00FF}Wanted Level: %d", PlayerInfo[playerid][pWantedLevel]);
   			WantedScris[playerid] = CreateDynamic3DTextLabel(str2, COLOR_WHITE, 0, 0, -20, 20, playerid);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL, WantedScris[playerid] , E_STREAMER_ATTACH_OFFSET_Z, 0.48);
			if(UsedFind[playerid] == 1)
			{
				UsedFind[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				foreach(Player, i)
				{
					if(IsACop(playerid))
					{
						if(caser[playerid] == i)
						{
							cased[i] --;
							caser[playerid] = 1001;
						}
					}
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "You have to be inside a business to rob it");
	}
	else
	{
		if(PlayerInfo[playerid][pPremiumAccount] == 0)
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't have 10 rob points.");
		}
		else if(PlayerInfo[playerid][pPremiumAccount] == 1)
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't have 8 rob points.");
		}
		return 1;
	}
	return 1;
}
CMD:tod(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 11) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		new hour,string[60],sendername[25];
		if(sscanf(params, "i", hour)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/tod <Time>");
        SetWorldTime(hour);
        GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "{f03337}[WARNING]: %s has set the time to %d hours.", sendername,hour);
		ABroadCast(COLOR_WHITE,string, 3);
		return 1;
	}
	return 1;
}
CMD:weatherall(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 11) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		new weather,string[60],sendername[25];
		GetPlayerName(playerid,sendername,sizeof(sendername));
		if(sscanf(params, "i",weather)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/weatherall <Weather ID>");
		if(weather < 0||weather > 45) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Weather ID can't be below 0 or above 45.");
		SetWeather(weather);
		format(string, sizeof(string), "{f03337}[WARNING]: %s has set %d wather.", sendername,weather);
		ABroadCast(COLOR_WHITE,string, 4);
	}
	return 1;
}
CMD:down(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		{
			new id,size;
			if(sscanf(params, "ui",id,size)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/down <Name/Playerid> <Size>");
	    	new Float:slx, Float:sly, Float:slz;
		    if(IsPlayerConnected(id))
		    {
				GetPlayerPos(id, slx, sly, slz);
				SetPlayerPosEx(id, slx, sly, slz-size);
			}
	    	else
	    	{
		    	SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	    	}
		}
	}
	return 1;
}
CMD:slap(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
		{
			new string[64],giveplayer[25],sendername[25],id;
			if(sscanf(params, "u",id)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/slap <Name/Playerid>");
	    	new Float:shealth;
	    	new Float:slx, Float:sly, Float:slz;
		    if(IsPlayerConnected(id))
		    {
				//if(PlayerInfo[id][pAdmin] >= PlayerInfo[playerid][pAdmin] && PlayerInfo[playerid][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GREY, "You Can't Use This Command For High Level Admin");
				if(PlayerInfo[id][NoTp] == 1)return SendClientMessage(playerid,COLOR_RED,"You Can't Use /slap /goto /gethere /spec /ban For Him|Her");
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerHealthEx(id, shealth);
				SetPlayerHealthEx(id, shealth-5);
				GetPlayerPos(id, slx, sly, slz);
				SetPlayerPosEx(id, slx, sly, slz+5);
				format(string, 256, "You have slaped %s.",giveplayer);
				SendClientMessage(playerid, COLOR_DARKPINK, string);
				format(string, 256, "You have been slaped by %s.",sendername);
				SendClientMessage(id, COLOR_DARKPINK, string);
                format(string, 256, "/slap: %s has slapped %s.", sendername,giveplayer);
				ABroadCast(COLOR_ADMCOMMANDS,string,1);
				HLChat(COLOR_ADMCOMMANDS,string);
			}
	    	else
	    	{
		    	SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	    	}
		}
		else return SendClientMessage(playerid, COLOR_WHITE,"{5CAD5C}Error: Your admin/helper level isn't high enough to use this command.");
	}
	return 1;
}
CMD:money(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 11) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		{
			new money,id,string[256],sendername[25],giveplayer[25];
			if(sscanf(params, "ui",id,money)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/money <Name/Playerid> <Amount of Money>");
		    if(IsPlayerConnected(id))
		    {
				ResetPlayerCash(id);
				GivePlayerCash(id, money);
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 256, "Admin %s has set your money to $%s.", sendername,FormatNumber(money));
				SendClientMessage(id,COLOR_LIGHTBLUE,string);
                format(string, 256, "{f03337}[WARNING]: Admin %s has set %s's money to $%s.", sendername,giveplayer,FormatNumber(money));
				ABroadCast(COLOR_WHITE,string,5);
				format(string, 256, "[WARNING]: Admin %s has set %s money to $%s.", sendername,giveplayer,FormatNumber(money));
				Adminlog(string);
				Update(id, pCashx);
			}
	    	else
	    	{
		    	SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	    	}
		}
	}
	return 1;
}
CMD:bank(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 11) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		new money,id,string[256],sendername[25],giveplayer[25];
		if(sscanf(params, "ui",id,money)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/bank <Name/Playerid> <Amount of Money>");
	    if(IsPlayerConnected(id))
	    {
			PlayerInfo[id][pAccount] = money;
			GetPlayerName(id, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, 256, "Admin %s has set your bank money to $%s.", sendername,FormatNumber(money));
			SendClientMessage(id,COLOR_LIGHTBLUE,string);
            format(string, 256, "{f03337}[WARNING]: Admin %s has set %s's bank money to $%s.", sendername,giveplayer,FormatNumber(money));
			ABroadCast(COLOR_WHITE,string,5);
			format(string, 256, "[WARNING]: Admin %s has set %s bank money to $%s.", sendername,giveplayer,FormatNumber(money));
			Adminlog(string);
			Update(id, pBank);
		}
    	else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	}
	return 1;
}
CMD:givelevel(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 11) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		{
			new money,id,string[256],sendername[25],giveplayer[25];
			if(sscanf(params, "ui",id,money)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/givelevel <Name/Playerid> <Level>");
	    	new year, month,day;
	    	getdate(year, month, day);
		    if(IsPlayerConnected(id))
		    {
				PlayerInfo[id][pLevel] += money;
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 256, "{f03337}[WARNING]: Admin %s has send %d level %s.", sendername,money,giveplayer);
				ABroadCast(COLOR_WHITE,string,5);
				Update(id, pLevelx);
				SetPlayerScore(id, PlayerInfo[id][pLevel]);
			}
	    	else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
	}
	return 1;
}
CMD:setlevel(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 11) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		{
			new money,id,string[256],sendername[25],giveplayer[25];
			if(sscanf(params, "ui",id,money)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/setlevel <Name/Playerid> <Level>");
	    	new year, month,day;
	    	getdate(year, month, day);
		    if(IsPlayerConnected(id))
		    {
				PlayerInfo[id][pLevel] = money;
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* Admin %s has set your level to %d.", sendername,money);
				SendClientMessage(id, COLOR_LIGHTBLUE, string);
				format(string, 256, "{f03337}[WARNING]: Admin %s has set %d level %s.", sendername,money,giveplayer);
				ABroadCast(COLOR_WHITE,string,5);
				Update(id, pLevelx);
				SetPlayerScore(id, PlayerInfo[id][pLevel]);
			}
	    	else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
	}
	return 1;
}
CMD:giverp(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 11) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		{
			new money,id,string[256],sendername[25],giveplayer[25];
			if(sscanf(params, "ui",id,money)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/giverp <Name/Playerid> <Respect>");
	    	new year, month,day;
	    	getdate(year, month, day);
		    if(IsPlayerConnected(id))
		    {
				PlayerInfo[id][pExp] += money;
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* Admin %s has given you %s RP.", sendername,money);
				SendClientMessage(id, COLOR_LIGHTBLUE, string);
				format(string, 256, "{f03337}[WARNING]: Admin %s has send %d respect points to %s.", sendername,money,giveplayer);
				ABroadCast(COLOR_WHITE,string,5);
				Update(id, pRP);
			}
	    	else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
	}
	return 1;
}
CMD:givemoney(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] < 11) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		{
			new money,id,string[256],sendername[25],giveplayer[25];
			if(sscanf(params, "ui",id,money)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/givemoney <Name/Playerid> <Amount of Money>");
		    if(IsPlayerConnected(id))
		    {
				GivePlayerCash(id, money);
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* Admin %s has given you $%s.", sendername,FormatNumber(money));
				SendClientMessage(id, COLOR_LIGHTBLUE, string);
				format(string, 256, "{f03337}[WARNING]: Admin %s has send money %s to %s.", sendername,FormatNumber(money),giveplayer);
				ABroadCast(COLOR_WHITE,string,5);
				format(string, 256, "[WARNING]: Admin %s has send money %s to %s.", sendername,FormatNumber(money),giveplayer);
				Adminlog(string);
				Update(id, pCashx);
			}
	    	else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
	}
	return 1;
}
CMD:rmute(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new time,id,string[256],sendername[25],giveplayer[25],reason[250],str[256];
			if(sscanf(params, "uis[250]",id,time,reason)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/rmute <Name/Playerid> <Time(minutes)> <Reason>");
		    if(IsPlayerConnected(id))
		    {
				PlayerInfo[id][pMuted] = 1;
				PlayerInfo[id][pMuteTime] = time*60;
			    GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* You've Been Muted From Using /Report By %s For %d Minutes | Reason : %s", sendername,time,reason);
				SendClientMessage(id, COLOR_LIGHTRED, string);
				format(string, sizeof(string), "{FFA000}[AdmCmd]: {FFFFFF}: Admin %s Has Muted %s From /Report For %d Minutes | Reason : %s.", sendername, giveplayer,time, reason);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Muted`='1',`MuteTime`='%d' WHERE `name`='%s'",PlayerInfo[id][pMuteTime],PlayerInfo[id][pNormalName]);
				mysql_tquery(SQL,str,"","");
				new var100[256];
				mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`actiontime`,`reason`,`playername`,`givername`) VALUES ('%d','%d','7','%d','%s','%s','%s')", PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],time,reason,giveplayer,sendername);
				mysql_tquery(SQL,var100,"","");
			}
	    	else
	    	{
	    		SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	    	}
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:mute(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
		{
			new time,id,string[256],sendername[25],giveplayer[25],reason[250],str[256];
			if(sscanf(params, "uis[250]",id,time,reason)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/mute <Name/Playerid> <Time(minutes)> <Reason>");
		    if(IsPlayerConnected(id))
		    {
				PlayerInfo[id][pMuted] = 1;
				PlayerInfo[id][pMuteTime] = time*60;
			    GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* You were muted by Admin %s for %d minutes, reason: %s.", sendername,time,reason);
				SendClientMessage(id, COLOR_LIGHTRED, string);
				format(string, sizeof(string), "{FFA000}[AdmCmd]: {FFFFFF}: Admin %s Muted %s For %d Minutes | Reason : %s.", sendername, giveplayer,time, reason);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Muted`='1',`MuteTime`='%d' WHERE `name`='%s'",PlayerInfo[id][pMuteTime],PlayerInfo[id][pNormalName]);
				mysql_tquery(SQL,str,"","");
				new var100[256];
				mysql_format(SQL, var100, sizeof(var100), "INSERT INTO punishlogs (`playerid`,`giverid`,`actionid`,`actiontime`,`reason`,`playername`,`givername`) VALUES ('%d','%d','7','%d','%s','%s','%s')", PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],time,reason,giveplayer,sendername);
				mysql_tquery(SQL,var100,"","");
			}
	    	else
	    	{
	    		SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	    	}
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:unmute(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
		{
			new id,string[256],sendername[25],giveplayer[25];
			if(sscanf(params, "u",id)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/unmute <Name/Playerid>");
		    if(IsPlayerConnected(id))
		    {
		    	PlayerInfo[id][pMuted] = 0;
				PlayerInfo[id][pMuteTime] = 0;
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* You were unmuted by Admin %s.", sendername);
				SendClientMessage(id, COLOR_LIGHTRED, string);
				format(string, sizeof(string), "{f03337}Administrator %s UnMuted Player %s", sendername,giveplayer);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				new string2[184];
			    mysql_format(SQL, string2, sizeof(string2), "UPDATE users SET `Muted`='0',`MuteTime`='0' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
				mysql_tquery(SQL,string2,"","");
			}
	    	else
	    	{
	    		SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	    	}
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:mutedplayers(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
   	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
	        new count = 0,string[250],giveplayer[25];
			SendClientMessage(playerid, COLOR_WHITE, "{ADFF5C}|___Muted Players___|");
		    foreach(Player,i)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pMuted] == 1)
				    {
					    GetPlayerName(i, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "%s(%d) - Mute time left: %d.",giveplayer,i,PlayerInfo[i][pMuteTime]);
						SendClientMessage(playerid,COLOR_WHITE,string);
						count++;
					}
				}
			}
			if(count == 0)
			{
	    		SendClientMessage(playerid,COLOR_LIGHTRED,"* Currently no muted players online.");
			}
	    	else if(count == 1)
  	    	{
		    	SendClientMessage(playerid,COLOR_LIGHTRED,"* Now are 1 muted player online.");
	    	}
	    	else if (count >= 2)
	    	{
		    	format(string, sizeof(string), "* Now are %d muted players online.", count);
		        SCM(playerid, COLOR_LIGHTRED, string);
	    	}
		}
	    else
	    {
           SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	    }
	}
	return 1;
}
CMD:getjob(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
        new sendername[25],str[256];
		GetPlayerName(playerid,sendername,sizeof(sendername));
		if(PlayerInfo[playerid][pJob] == 0)
		{
		    if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,1365.8931,-1289.0779,13.5469))
			{
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You Job Is Now Arms Dealer.");
			    PlayerInfo[playerid][pJob] = 9;
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Job`='9' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,2165.5444,-1674.6372,15.0822))
			{
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You Job Is Now Drugs Dealer.");
			    PlayerInfo[playerid][pJob] = 4;
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Job`='4' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,-382.8534,-1426.2845,26.2880))
			{
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You Job Is Now Farmer.");
			    PlayerInfo[playerid][pJob] = 6;
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Job`='6' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,1450.3951,-2286.9661,13.5469))
			{
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You Job Is Now Bus Driver.");
			    PlayerInfo[playerid][pJob] = 7;
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Job`='7' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,2503.0581,2778.7229,10.8203))
			{
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You Job Is Now Garbage.");
			    PlayerInfo[playerid][pJob] = 10;
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Job`='10' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,607.8375,-1438.1827,14.0654))
			{
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You Job Is Now Detective.");
			    PlayerInfo[playerid][pJob] = 1;
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Job`='1' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,2850.9663,891.8728,10.7500))
			{
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You Job Is Now Car Jacker.");
			    PlayerInfo[playerid][pJob] = 2;
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Job`='2' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,910.8003,-1231.9697,16.9766))
			{
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You Job Is Now Mechanic.");
			    PlayerInfo[playerid][pJob] = 8;
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Job`='8' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,2123.0237,-1788.8237,13.5547))
			{
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You Job Is Now Pizza Boy.");
			    PlayerInfo[playerid][pJob] = 5;
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Job`='5' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,391.8376,-2064.3474,7.8359))
			{
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You Job Is Now Fisherman.");
			    PlayerInfo[playerid][pJob] = 13;
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Job`='13' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,-76.8129,-1136.6630,1.0781))
			{
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You Job Is Now Trucker.");
			    PlayerInfo[playerid][pJob] = 14;
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Job`='14' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
			}
			/*else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,1154.3644,-1181.1787,32.8187))
			{
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You Job Is Now Curier.");
			    PlayerInfo[playerid][pJob] = 15;
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Job`='15' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
			}*/
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,710.4517,1207.7200,13.8481))
			{
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You Job Is Now Coal Delivery Man.");
			    PlayerInfo[playerid][pJob] = 16;
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Job`='16' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
			}
			else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,816.7682,856.4895,12.7891))
			{
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "You Job Is Now Quarry .");
			    PlayerInfo[playerid][pJob] = 16;
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Job`='17' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
			}

		}
		else
		{
		    SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You already have a Job, use /quitjob first.");
		}
	}
    return 1;
}
CMD:quitjob(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
   	{
	    if(PlayerInfo[playerid][pJob] >= 1)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "You have quit your job!");
		    PlayerInfo[playerid][pJob] = 0;
		    UsedFind[playerid] = 0;
			foreach(Player, i)
			{
				if(IsACop(playerid))
				{
					if(caser[playerid] == i)
					{
						cased[i] --;
						caser[playerid] = 1001;
					}
				}

			}
			GotoMats[playerid] = 0;
			if(IsATruck(GetPlayerVehicleID(playerid)))
			{
			    RemovePlayerFromVehicle(playerid);
	    		restruck[playerid] = SetTimerEx("RespawnTruck", 1, 0, "i",playerid);
			}
			if(IsAFarmer(GetPlayerVehicleID(playerid)) || IsAPizza(GetPlayerVehicleID(playerid)) || IsAGarbageTruck(GetPlayerVehicleID(playerid)) || IsABus(GetPlayerVehicleID(playerid)))
			{
				RemovePlayerFromVehicle(playerid);
			}
			if(IsCollectingRubbish[playerid] > 0)
			{
				PlayerInfo[playerid][pGarbageTime] = 0;
		    	IsCollectingRubbish[playerid] = 0;
		    	PlayerTextDrawHide(playerid, gunoierr[playerid]);
			}
			if(farmerc[playerid] == 1)
			{
				farmerc[playerid] = 0;
				farmertime[playerid] = 1;
				PlayerTextDrawHide(playerid, farmjob[playerid]);
				PlayerTextDrawHide(playerid, farmbox[playerid]);
				PlayerTextDrawHide(playerid, farmtime[playerid]);
				PlayerTextDrawHide(playerid, farmspeed[playerid]);
				PlayerTextDrawHide(playerid, farmwanted[playerid]);
				KillTimer(timerfarmm[playerid]);
			}
			if(CarJacker[playerid] > 0)
			{
		    	CarJacker[playerid] = 0;
		    	JackAcc[playerid] = 0;
			}
			if(Trucker[playerid] >= 1)
			{
			    RemovePlayerFromVehicle(playerid);
		   		Trucker[playerid] = 0;
	        	Trucker2[playerid] = 0;
	        	DestroyVehicle(viddd[playerid]);
	        	viddd[playerid] = 0;
	        	SetVehicleToRespawn(TruckID[playerid]);
	        	TruckID[playerid] = 0;
	    		restruck[playerid] = SetTimerEx("RespawnTruck", 1, 0, "i",playerid);
			}
			if(busc[playerid] == 1)
			{
		    	busc[playerid] = 0;
		    	PlayerTextDrawHide(playerid, BusJob[playerid]);
		    	PlayerTextDrawHide(playerid, BusCheck[playerid]);
		    	KillTimer(timerbus[playerid]);
		    	if(JobStep[playerid] >= 1)
		    	{
      				JobStep[playerid] = 0;
	    			GivePlayerCash(playerid, -2500);
		    		SendClientMessage(playerid, COLOR_GREEN, "(-) You Paid $2.500 To Busses Company For Tax");
				}
			}
			if(MatsHolding[playerid] > 0)
			{
			    MatsHolding[playerid] = 0;
			}
			if(CheckBus[playerid] > 0)
			{
			    busc[playerid] = 0;
				CheckBus[playerid] = 0;
			}
			if(CP[playerid] == 34)
			{
			    new towedcar = GetVehicleTrailer(GetPlayerVehicleID(playerid));
				SetVehicleToRespawn(towedcar);
				CP[playerid] = 0;
			}
			if(MechanicCallTime[playerid] > 0)
			{
			    MechanicCallTime[playerid] = 0;
			}
			if(TaxiCallTime[playerid] > 0 && TaxiAccepted[playerid] < 999)
			{
	    		TaxiAccepted[playerid] = 999;
				TaxiCallTime[playerid] = 0;
			}
			CP[playerid] = 0;
			pizzaj[playerid] = 0;
			pizzatime[playerid] = 0;
			failpizza[playerid] = -1;
			PizzaCP[playerid] = 0;
			pizzaprize[playerid] = 0;
			DisablePlayerRaceCheckpoint(playerid);
			DisablePlayerCheckpoint(playerid);
			new str[128];
			mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Money`='%d',`Job`='0' WHERE `name`='%s'",GetPlayerCash(playerid),PlayerInfo[playerid][pNormalName]);
			mysql_tquery(SQL,str,"","");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "You don't have a job.");
	}
	return 1;
}
CMD:jaillist(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
   	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
	        new count = 0,string[250],giveplayer[25];
			SendClientMessage(playerid, COLOR_WHITE, "{ADFF5C}|___Jailed Players___|");
		    foreach(Player,i)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pJailed] >= 1)
				    {
					    GetPlayerName(i, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "%s(%d) - Jailed time left: [%d]",giveplayer,i,PlayerInfo[i][pJailTime]);
						SendClientMessage(playerid,COLOR_WHITE,string);
						count++;
					}
				}
			}
			if(count == 0)
			{
	    		SendClientMessage(playerid,COLOR_LIGHTRED,"* Currently no jailed players online.");
			}
	    	else if(count == 1)
  	    	{
		    	SendClientMessage(playerid,COLOR_LIGHTRED,"* Now are 1 jailed player online.");
	    	}
	    	else if (count >= 2)
	    	{
		    	format(string, sizeof(string), "* Now are %d jailed players online.", count);
		        SCM(playerid, COLOR_LIGHTRED, string);
	    	}
		}
	    else
	    {
           SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	    }
	}
	return 1;
}
CMD:exam(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "You can't use this command when you are in a car.");
    if(PlayerToPoint(5.0,playerid, 1205.1598,-1824.0554,13.5907))
    {
		new string[256];
    	if(PlayerInfo[playerid][pCarLic] == 0)
     	{
			if(PlayerInfo[playerid][pCarLicSuspend] > 0)
			{
				format(string,sizeof(string),"Your driving license has been suspended recently. You can take the exam over %d again",PlayerInfo[playerid][pCarLicSuspend]);
				SendClientMessage(playerid, COLOR_GREY, string);
				return 1;
			}
      		if(TakingLesson[playerid] == 0)
        	{
		    	TakingLesson[playerid] = 1;
       			examcar[playerid] = AddStaticVehicle(560, 1242.0013,-1850.0372,13.0384,90.7065,  -1, -1);
				Gas[examcar[playerid]] = 100;
				PutPlayerInVehicleEx(playerid, examcar[playerid], 0);
				DisableRemoteVehicleCollisions(playerid, 1);
				SendClientMessage(playerid, COLOR_YELLOW, "Exam Started ! Go To The Checkpoints");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Type [/Engine] Or Press 2 To Start Car Engine");
			    CP[playerid] = 100;
			    PlayerTextDrawShow(playerid, DMVexam[playerid]);
				format(string, sizeof(string), "~w~CHECKPOINTS: ~r~0~w~/~r~24");
				PlayerTextDrawSetString(playerid, DMVcheck[playerid], string);
				PlayerTextDrawShow(playerid, DMVcheck[playerid]);
				SetPlayerRaceCheckpoint(playerid,0, 1135.3868,-1850.5981,13.0366,1045.2626,-1809.4169,13.2637,4.0);
			}
   			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}You already have test.");
      	}
       	else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}You already have a drivers license.");
    }
   	else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}You are not at the DMV.");
	return 1;
}
CMD:buy(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(InBussines[playerid] > 0)
	{
		if(BizzInfo[InBussines[playerid]][bType] == 6)
		{
			ShowPlayerDialog(playerid,Dialog_24,DIALOG_STYLE_LIST,"SERVER: 24/7","Cellphone ($500)\nPhone Book ($50)\nPhone Credit ($500)\nWalkie Talkie ($2,500)\nPhoto Camera ($2,000)\nGas Can ($5,000)","Select","Exit");
			return 1;
		}
	}
    return 1;
}
CMD:buyfightstyle(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(InBussines[playerid] > 0)
	{
		if(BizzInfo[InBussines[playerid]][bType] == 8)
		{
			ShowPlayerDialog(playerid,Dialog_Gym,DIALOG_STYLE_LIST,"SERVER: Fighting Styles","Boxing ($6,000)\nKung Fu ($10,000)\nKnee Head ($10,000)\nGrab & Kick ($10,000)\nElbow ($10,000)\nDefault ($2,000)","Select","Cancel");
			return 1;
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "You are not at gym.");
	}
    return 1;
}
CMD:buytoys(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(InBussines[playerid] > 0)
	{
		if(BizzInfo[InBussines[playerid]][bType] == 4)
		{
			ShowPlayerDialog(playerid,DIALOG_SEXSHOP,DIALOG_STYLE_LIST,"SERVER: Sex Shop","Purple Dildo ($100)\nSmall White Vibrator ($100)\nSilver Vibrator ($100)\nLarge White Vibrator ($100)\nFlowers ($150)","Select","Exit");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "You are not at sex shop.");
	}
	return 1;
}
CMD:buydrink(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerInRangeOfPoint(playerid, 10.0, 681.557861,-455.680053,-25.609874))
	{
		ShowPlayerDialog(playerid,DIALOG_BAR,DIALOG_STYLE_LIST,"SERVER: Bar","Tigara [1Leu]\nPepsi [5Lei]\nBere [6Lei]\nVin [9Lei]","Select","Exit");
    }
    return 1;
}
CMD:shop(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    {
        new titlestring[MAX_STRING],string1[MAX_STRING],string2[MAX_STRING],string3[MAX_STRING],string4[MAX_STRING],string5[MAX_STRING],string6[MAX_STRING],string7[MAX_STRING],iString[1500];
  		format(titlestring, sizeof(titlestring), "Premium points: {FFFF00}%d", PlayerInfo[playerid][pPremiumPoints]);
  		format(string1, sizeof(string1), "{E67E30}[+]{FFFFFF} Get Premium Points");
  		format(string2, sizeof(string2), "{FFFFFF}Premium account - {E8E40C}105{FFFFFF} premium points\n{FFFFFF}Change Nickname - {E8E40C}70{FFFFFF} premium points");
  		format(string3, sizeof(string3), "{FFFFFF}Clear 10 FP - {E8E40C}35{FFFFFF} premium points\n{FFFFFF}Clear 20 FP - {E8E40C}60{FFFFFF} premium points");
  		format(string4, sizeof(string4), "{FFFFFF}Clear warns - {E8E40C}95{FFFFFF} premium points\n{FFFFFF}Create Clan - {E8E40C}100{FFFFFF} premium points");
  		format(string5, sizeof(string5), "{FFFFFF}Vehicle hidden color - {E8E40C}20{FFFFFF} premium points\n{FFFFFF}20x fireworks - {E8E40C}10{FFFFFF} premium points");
  		format(string6, sizeof(string6), "{FFFFFF}Buy vehicle slot - {E8E40C}60{FFFFFF} premium points\n{FFFFFF}iPhone - {E8E40C}25{FFFFFF} premium points\n{FFFFFF}Clear KM & Distance traveled for a vehicle - {E8E40C}45{FFFFFF} premium points");
  		format(string7, sizeof(string7), "{FFFFFF}V.I.P account - {E8E40C}200{FFFFFF} premium points\n{FFFFFF}Buy $3,000,000 - {E8E40C}25{FFFFFF} premium points\n{FFFFFF}Buy $15,000,000 - {E8E40C}120{FFFFFF} premium points\n{FFFFFF}Buy $30,000,000 - {E8E40C}220{FFFFFF} premium points");
  		format(iString, sizeof(iString), "%s\n%s\n%s\n%s\n%s\n%s\n%s", string1, string2, string3, string4, string5, string6, string7);
	 	ShowPlayerDialog(playerid,DIALOG_SHOP,DIALOG_STYLE_LIST, titlestring, iString, "Buy","Exit");
    }
    return 1;
}
CMD:givefactionp(playerid, params[])
{
	if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "You Have'nt Logged In");
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 8)
		{
		new id,premiump,admname[25],giveplayer[25];
		if(sscanf(params, "ud",id,premiump)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/givefactionp <Name/Playerid> <Faction Paydays>");
		PlayerInfo[id][pPaydayuri] += premiump;
		Update(id,pPaydayurix);
		GetPlayerName(playerid,admname,sizeof(admname));
		GetPlayerName(id,giveplayer,sizeof(giveplayer));
		new string[128];
		format(string, sizeof(string), "Admin %s has given you %d Faction Paydays.", admname, PlayerInfo[id][pPaydayuri]);
		SendClientMessage(id, COLOR_LIGHTBLUE, string);
  		}
  	}
    return 1;
 }
CMD:setpp(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if (PlayerInfo[playerid][pAdmin] < 11) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,premiump,admname[25],giveplayer[25],query[500];
	if(sscanf(params, "ud",id,premiump)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/setpp <Name/Playerid> <Premium Points>");
	PlayerInfo[id][pPremiumPoints] = premiump;
	Update(id,pPremiumPointsx);
	GetPlayerName(playerid,admname,sizeof(admname));
	GetPlayerName(id,giveplayer,sizeof(giveplayer));
	new string[128],string2[128];
	format(string, sizeof(string), "Admin %s has set your Premium Points to %d.", admname, PlayerInfo[id][pPremiumPoints]);
	SendClientMessage(id, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "PremiumPoint: Your premium points have been changed: +%d By Admin %s.", PlayerInfo[id][pPremiumPoints], admname);
	mysql_format(SQL, query, sizeof(query), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[id][pSQLID],string);
	mysql_tquery(SQL,query,"","");
	format(string2, sizeof(string2), "You set %s Premium Points to %d.", giveplayer, PlayerInfo[id][pPremiumPoints]);
	SendClientMessage(playerid, COLOR_LIGHTRED, string2);
 	PlayerInfo[id][pPremiumPoints] = premiump;
 	Update(id, pPremiumPointsx);
	PlayerInfo[id][pTotalPP] += premiump;
	Update(id, pTotalPPx);
    return 1;
}
CMD:setppo(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
 	{
        if (PlayerInfo[playerid][pAdmin] < 11) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
        new id[25],cont,premiump;
        if(sscanf(params, "s[25]i",id,premiump)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/setppo <Name> <Premium Points>");
        cont = MySQLCheckAccount(id);
        if(cont == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}This name does not exist.");
		new str1[128];
		mysql_format(SQL,str1,sizeof(str1),"UPDATE users SET `PremiumPoints`='%d' WHERE `name`='%s'",premiump,id);
		mysql_tquery(SQL,str1,"","");
	}
	return 1;
}
CMD:oldcar(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		new string[64];
	    format(string, sizeof(string), "Your old car was: %d",gLastCar[playerid]);
	    SendClientMessage(playerid, COLOR_GREY, string);
    }
    return 1;
}
CMD:mutetime(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pMuteTime] > 0)
		{
			new string[64];
	        format(string, sizeof(string), "{C20505}Your mute time left: %d.", PlayerInfo[playerid][pMuteTime]);
		    SendClientMessage(playerid,COLOR_WHITE, string);
		}
        else
        {
			SendClientMessage(playerid, COLOR_WHITE, "{C20505}You don't have mute.");
			return 1;
		}
	}
	return 1;
}
CMD:checkgun(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
	if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new id,string[128],sendername[25];
			if(sscanf(params, "u",id)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/checkgun <Name/Playerid>");
            new Player_Weapons[13];
            new Player_Ammos[13];
            new i;
			if(IsPlayerConnected(id))
			{
                for(i = 1;i <= 12;i++)
                {
                    GetPlayerWeaponData(id,i,Player_Weapons[i],Player_Ammos[i]);
                    if(Player_Weapons[i] != 0)
                    {
                        new weaponName[256];
                        GetPlayerName(id, sendername, sizeof(sendername));
                        GetWeaponName(Player_Weapons[i],weaponName,255);
                        format(string,255,"{B8DBFF}* %s , Gun:{FFFFFF} %s {B8DBFF}, Ammo:{FFFFFF} %d",sendername,weaponName,Player_Ammos[i]);
                        SendClientMessage(playerid,0xFFFFFFAA,string);
                    }
				}
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:checkhp(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new id,giveplayer[25],string[128];
			if(sscanf(params, "u",id)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/checkhp <Name/Playerid>");
			if(IsPlayerConnected(id))
			{
					new Float:health;
		            new Float:armour;
		            GetPlayerHealthEx(id, health);
		            GetPlayerArmourEx(id, armour);
	                GetPlayerName(id, giveplayer, sizeof(giveplayer));
                    format(string,255,"{B8DBFF}* %s ,{B8DBFF} HP:{FFFFFF} %.2f ,{B8DBFF} Armour:{FFFFFF} %.2f",giveplayer,health,armour);
	                SendClientMessage(playerid,0xFFFFFFAA,string);
	                return 1;
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
forward DaiDrumu(playerid);
public DaiDrumu(playerid)
{
	TogglePlayerControllable(playerid, 1);
	return 1;
}
CMD:eject(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
   	{
        new State;
        if(IsPlayerInAnyVehicle(playerid))
        {
			new id,string[128],giveplayer[25];
		 	State=GetPlayerState(playerid);
	        if(State!=PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_WHITE, "{FFB870}You can only eject people as the driver.");
			if(sscanf(params, "u",id)) return SCM(playerid,0xFFFFFFFF, "{FFFFFF}[SYNTAX]: {FFFFFF}/eject <Name/Playerid>");
			new test;
			test = GetPlayerVehicleID(playerid);
			if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
					if(PlayerTied[id] > 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Player have tie.");
			        if(id == playerid) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You cannot eject yourself.");
			        if(IsPlayerInVehicle(id,test))
			        {
						new PName[MAX_PLAYER_NAME];
						GetPlayerName(playerid,PName,sizeof(PName));
						GetPlayerName(id, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "* You Ejected  %s From Your Vehicle *", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* You Were Ejected By %s *", PName);
						SendClientMessage(id, COLOR_LIGHTBLUE, string);
						RemovePlayerFromVehicleEx(id);
						return 1;
					}
					else if(GetPlayerSurfingVehicleID(id) == test)
					{
					    new Float:x, Float:y, Float:z;
					    GetPlayerPos(id, x, y, z);
					    SetPlayerPos(id, x, y, z+2);

					    new PName[MAX_PLAYER_NAME];
						GetPlayerName(playerid,PName,sizeof(PName));
						GetPlayerName(id, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "* You Throwed Out %s *", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s threw you out of the car and you freeze 3 seconds *", PName);
						SendClientMessage(id, COLOR_LIGHTBLUE, string);

						TogglePlayerControllable(id, 0);
						SetTimerEx("DaiDrumu", 3000, false, "i", id);

					}
					else
					{
					    SendClientMessage(playerid, COLOR_WHITE, "{FFB870}That player is not in your car.");
					    return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You need to be in a vehicle to use this.");
		}
	}
	return 1;
}
CMD:tie(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if(IsAMember(playerid))
		{
		    if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You need rank 2 or higher to tie people up.");
		    new id,string[128],sendername[25],giveplayer[25];
			if(sscanf(params, "u",id)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/tie <Name/Playerid>");
		    if(IsPlayerConnected(id))
			{
			    if(id != INVALID_PLAYER_ID)
			    {
				    if(PlayerTied[id] > 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Player already tied.");
					if (ProxDetectorS(8.0, playerid, id))
					{
					    new car = GetPlayerVehicleID(playerid);
					    if(id == playerid) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You cannot tie yourself.");
					    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(id, car))
					    {
					        GetPlayerName(id, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
					        format(string, sizeof(string), "* You were tied up by %s, till untie.", sendername);
							SendClientMessage(id, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* You tied %s up, till untie.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s ties %s up, so he wont go anywhere.", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							TogglePlayerControllable(id, 0);
							PlayerTied[id] = 1;
					    }
					    else
					    {
					        SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Player not in your car, or your not the driver.");
					        return 1;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}No player near you.");
					    return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
			    return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a Family/Gang Member.");
		}
	}
	return 1;
}
CMD:untie(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		if(IsAMember(playerid) || IsACop(playerid))
		{
		    if(PlayerInfo[playerid][pRank] < 3 && IsAMember(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You need rank 2 or higher to untie people.");
			new id,string[128],giveplayer[25],sendername[25];
			if(sscanf(params, "u",id)) return SCM(playerid,0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/untie <Name/Playerid>");
			if(IsPlayerConnected(id))
			{
				if(id != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(8.0, playerid, id))
					{
					    if(id == playerid) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You cannot untie yourself!");
						if(PlayerTied[id])
						{
						    GetPlayerName(id, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
						    format(string, sizeof(string), "* You were Untied by %s.", sendername);
							SendClientMessage(id, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* You Untied %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							TogglePlayerControllable(id, 1);
							PlayerTied[id] = 0;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_WHITE, "{FFB870}That player isn't tied up.");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}No player near you.");
					    return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "{FFFFCC}Error: Player not connected.");
			    return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a Family/Gang Member or Cop.");
		}
	}
	return 1;
}
CMD:cc(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			foreach(Player,id)
			{
				if(PlayerInfo[id][pAdmin] == 0 && PlayerInfo[id][pHelper] == 0)
				{
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
					SendClientMessage(id, COLOR_SYSTEM, " ");
				}
			}
			new sendername[25],string[100];
			GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string,sizeof(string),"{FFA000}[AdmCmd]: {FFFFFF}: {FFFFFF}%s Cleared Chat",sendername);
			ABroadCast(COLOR_RED2,string,1);
			return 1;
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:buygun(playerid, params[])
{
	if(PlayerInfo[playerid][pGunLic] == 0) return SendClientMessage(playerid, COLOR_WHITE,"{FFB870}You don't have gun license.");
    if(IsPlayerInRangeOfPoint(playerid, 30.0, 313.7856,-134.1924,1004.0625))
    {
		if(GetPlayerInterior(playerid) == 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not in a store.");
	 	ShowPlayerDialog(playerid,Dialog_gunshop,DIALOG_STYLE_LIST,"Select:","Baseball bat($1,000)\nSD Pistol($2,000)\nDesert eagle($3,000)\nShotgun($4,200)\nMP5($4,600)\nAK47($7,000)\nM4($7,000)","Select","Cancel");
	    return 1;
    }
    else
	{
		SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not in a Gun shop.");
	}
    return 1;
}
CMD:wisper(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
		new string[128],id,mess[250],giveplayer[25],sendername[25];
        if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_WHITE,"{FFB870}You must be level 2 to use /w(isper).");
        if(PlayerInfo[playerid][pMuted] == 1)
        {
			format(string, sizeof(string), "You can not speak, you have been silenced for %d seconds.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		if(sscanf(params, "us[250]",id,mess)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/w <Name/Playerid> <Message>");
		if (IsPlayerConnected(id))
		{
		    if(id != INVALID_PLAYER_ID)
		    {
				if(GetDistanceBetweenPlayers(playerid,id) > 5) return SCM(playerid,COLOR_WHITE,"{FFFFCC}This player is not near you.");
				if(Spectate[id] != -1) return SCM(playerid,COLOR_WHITE,"{FFFFCC}This player is not near you.");
			    if(HidePM[id] > 0) return SendClientMessage(playerid, COLOR_WHITE,"{FFB870}This player doesn't allow whispers.");
				if(id == playerid) return SendClientMessage(playerid, COLOR_WHITE,"{FFB870}You can not send a message to yourself.");
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "%s whispers: %s", sendername, mess);
				SendClientMessage(id, COLOR_YELLOW, string);
				format(string, sizeof(string), "Whisper to %s: %s", giveplayer, mess);
				SendClientMessage(playerid,  COLOR_YELLOW, string);
				new var100[300],resulttt[300],strr[300];
				format(strr, sizeof(strr),"(whisper) %s",mess);
				mysql_real_escape_string(strr, resulttt);
				mysql_format(SQL,var100, sizeof(var100), "INSERT INTO chat_logs (`playerid`,`text`) VALUES ('%d','%s')", PlayerInfo[playerid][pSQLID],resulttt);
				mysql_tquery(SQL,var100,"","");
				if(FindIP(mess))
			    {
					format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /w.", sendername,playerid,mess);
					ABroadCast(COLOR_WHITE,string,1);
			    }
			    for(new d; d<sizeof(TLD); d++)
				{
				    if(strfind(mess,TLD[d],true) != -1 )
				    {
						if(strfind(mess, ".", true) != -1 || strfind(mess, ".", true) != -1 || strfind(mess, ".", true) != -1) break;
						format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /w.", sendername,playerid,mess);
						ABroadCast(COLOR_WHITE,string,1);
					}
				}
				for(new adm = 0; adm<=MAX_PLAYERS;adm++)
				{
    				if(IsPlayerConnected(adm))
					{
	    				if(PlayerInfo[adm][pAdmin] > 0 && BigEar[adm] == 1)
    	    			{
   	        				format(string, sizeof(string), "Whisper: (%d) %s to (%d) %s: %s",playerid,sendername,id,giveplayer,mess);
							SendClientMessage(adm,  COLOR_YELLOW, string);
  	    				}
					}
				}
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
	}
	return 1;
}
CMD:w(playerid, params[])
{
	return cmd_wisper(playerid, params);
}
CMD:makeleader(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
	if (PlayerInfo[playerid][pAdmin] >= 8 || PlayerInfo[playerid][pManagerLideri] == 1)
		{
			new id,para1,level,string[512],giveplayer[128],sendername[128],escape[256];
	     	if(sscanf(params, "ui",para1,level))
	    	{
		     	SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/makeleader <Name/Playerid> <Number(1-12)>");
				SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}(1) LSPD (2) FBI (3) National Guard (4) Los Aztecas");
				SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}(5) Grove Street (6) Los Vagos (7)Government (8) LVPD");
				SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}(9) News Reporter (10) Ballas (11) Hitman Agency (12) School Instructors");
				SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}(13) Los Santos Taxi (14) Paramedic");
				return 1;
			}
			if(level > 14 || level < 0) return SendClientMessage(playerid, COLOR_WHITE,"{FFB870}Dont go below number 1, or above number 14.");
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
		            //if(PlayerInfo[para1][pMember] > 0 && PlayerInfo[para1][pLeader] > 0) return SendClientMessage(playerid,COLOR_WHITE,"{FFB870}That player is in a faction.");
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new ftext[256],query[256];
					if(level == 1) { ftext = "Los Santos Police Department"; } //Police Force
					else if(level == 2) { ftext = "Federal Bureau Of Investigation"; } //FBI
					else if(level == 3) { ftext = "National Guard"; } //National Guard
					else if(level == 4) { ftext = "Los Aztecas"; } //Los Aztecas
					else if(level == 5) { ftext = "Grove Street"; } //Grove Street
					else if(level == 6) { ftext = "Los Vagos"; } //Los Vagos
					else if(level == 7) { ftext = "Government"; } //Government
					else if(level == 8) { ftext = "L.V Police Dep"; } //LVPD
					else if(level == 9) { ftext = "News Reporter"; } //News Reporter
					else if(level == 10) { ftext = "Ballas"; } //Ballas
                    else if(level == 11) { ftext = "Hitman"; } //The Agency
                    else if(level == 12) { ftext = "School Instructors"; } //School Instructors
                    else if(level == 13) { ftext = "Taxi LS"; } //Los Santos Taxi
                    else if(level == 14) { ftext = "Paramedic Department LV"; } //Paramedic
					PlayerInfo[para1][pMember] = level;
					PlayerInfo[para1][pLeader] = level;
					format(string, sizeof(string), "Admin %s Has Set You To Lead Group %s",sendername,ftext);
					mysql_format(SQL, query, sizeof(query), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[id][pSQLID],string);
		        	mysql_tquery(SQL,query,"","");
					format(string, sizeof(string), "{FFA000}[AdmCmd]: {FFFFFF}Admin {0091FF}%s {FFFFFF}Has Set {0091FF}%s {FFFFFF}To Lead Group {FF8C00}%s",sendername,giveplayer,ftext);
					ABroadCast(COLOR_ADMIN,string,1);
					format(string, sizeof(string), "%s Is Now The Leader Of Faction %s.", giveplayer, ftext);
					mysql_real_escape_string(string, escape);
					mysql_format(SQL, query, sizeof(query), "INSERT INTO faction_logs (`text`, `player`,`leader`) VALUES ('%s','%d','%d')", escape, PlayerInfo[para1][pSQLID],PlayerInfo[playerid][pSQLID]);
					mysql_tquery(SQL,query,"","");
					mysql_format(SQL, query, sizeof(query), "INSERT INTO staff_logs (`text`) VALUES ('%s')", escape);
					mysql_tquery(SQL,query,"","");
					if(level == 0) { PlayerInfo[para1][pModel] = 1; }
					else if(level == 1) { PlayerInfo[para1][pModel] = 311; } //Police Force
					else if(level == 2) { PlayerInfo[para1][pModel] = 295; } //FBI
					else if(level == 3) { PlayerInfo[para1][pModel] = 187; } //National Guard
					else if(level == 4) { PlayerInfo[para1][pModel] = 175; } //Los Aztecas
					else if(level == 5) { PlayerInfo[para1][pModel] = 270; } //Grove Street
					else if(level == 6) { PlayerInfo[para1][pModel] = 108; } //Los Vagos
					else if(level == 7) { PlayerInfo[para1][pModel] = 165; } //Government
					else if(level == 8) { PlayerInfo[para1][pModel] = 310; } //LVPD
					else if(level == 9) { PlayerInfo[para1][pModel] = 227; } //News Reporter
					else if(level == 10) { PlayerInfo[para1][pModel] = 296; } //Ballas
                    else if(level == 11) { PlayerInfo[para1][pModel] = 294; } //The Agency
                    else if(level == 12) { PlayerInfo[para1][pModel] = 189; } //School Instructors
                    else if(level == 13) { PlayerInfo[para1][pModel] = 228; } //Los Santos Taxi
                    else if(level == 14) { PlayerInfo[para1][pModel] = 274; } //Paramedic
					if(level == 0)
					{
					    gTeam[para1] = 3;
				    	PlayerInfo[para1][pTeam] = 3;
					}
					else if(level == 1 || level == 2 || level == 3 || level == 7 || level == 8)
					{
					    gTeam[para1] = 2;
				    	PlayerInfo[para1][pTeam] = 2;
					}
					else if(level == 4 || level == 5 || level == 6 || level == 10)
					{
					    gTeam[para1] = 5;
				    	PlayerInfo[para1][pTeam] = 5;
					}
					else if(level == 7 || level == 9 || level == 12 || level == 13 || level == 14)
					{
					    gTeam[para1] = 4;
				    	PlayerInfo[para1][pTeam] = 4;
					}
					else if(level == 11)
					{
					    gTeam[para1] = 11;
				    	PlayerInfo[para1][pTeam] = 11;
					}
				    SetPlayerSkin(para1, PlayerInfo[para1][pModel]);
                    PlayerInfo[para1][pRank] = 7;
				 	new wakaname[25];
					GetPlayerName(para1,wakaname,25);
					new str[356];
					mysql_format(SQL,str,356,"UPDATE users SET `Leader`='%d',`Member`='%d',`Rank`='7',`Team`='%d',`Model`='%d' WHERE `name`='%s'",PlayerInfo[para1][pLeader],PlayerInfo[para1][pMember],PlayerInfo[para1][pTeam],PlayerInfo[para1][pModel],PlayerInfo[para1][pNormalName]);
					mysql_tquery(SQL,str,"","");
					SetPlayerToTeamColor(para1);
				}
			}
     		else
    		{
                SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
    		}
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}

CMD:ml(playerid, params[])
{
  return cmd_makeleader(playerid, params);
}

CMD:refill(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED, NeedPin);
    if(IsPlayerConnected(playerid))
    {
	    if(PlayerInfo[playerid][pJob] != 8) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a Mechanic.");
		new playa,money,string[256],giveplayer[25],sendername[25];
	 	if(sscanf(params, "ui",playa,money)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/refill <Name/Playerid> <Price>");
		if(money < 1 || money > 10000) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Price not lower then 1, or above 10,000.");
		if(RefillOffer[playa] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}This player already have refill.");
		if(RepairTime[playerid] > 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Poti folosi asta doar o data la 60 de secunde.");
		if(IsPlayerConnected(playa))
		{
		    if(playa != INVALID_PLAYER_ID)
		    {
		        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
				{
				    if(playa == playerid) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Can't do that.");
				    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
				    format(string, sizeof(string), "{B8FFDB}* You offerd %s to refill his car for $%s.",giveplayer,FormatNumber(money));
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "{B8FFDB}* Car Mechanic %s wants to refill your car for $%s, (type /accept refill %d) to accept.",sendername,FormatNumber(money),playerid);
					SendClientMessage(playa, COLOR_WHITE, string);
					RefillOffer[playa] = playerid;
					RefillPrice[playa] = money;
					RepairTime[playerid] = 60;
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}That player is not near you/not in a car.");
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	}
	return 1;
}
CMD:repair(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
	    if(PlayerInfo[playerid][pJob] != 8) return SendClientMessage(playerid, COLOR_GREY, "{FFB870}You are not a Mechanic.");
		new playa,money,string[256],giveplayer[25],sendername[25];
 		if(sscanf(params, "ui",playa,money)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/repair <Name/Playerid> <Price>");
		if(money < 1 || money > 99999) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Price not lower then 1, or above 99999.");
    	if(RepairOffer[playa] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}This player already have repair.");
    	if(RepairTime[playerid] > 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Trebuie sa astepti 60 de secunde inainte sa utilizezi iar aceasta comanda");
		if(IsPlayerConnected(playa))
		{
		    if(playa != INVALID_PLAYER_ID)
		    {
		        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
				{
				    if(playa == playerid) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Can't do that.");
			    	GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
				    format(string, sizeof(string), "{B8FFDB}* You offerd %s to fix his car for $%s .",giveplayer,FormatNumber(money));
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "{B8FFDB}* Car Mechanic %s wants to repair your car for $%s, (type /accept repair %d) to accept.",sendername,FormatNumber(money),playerid);
					SendClientMessage(playa, COLOR_WHITE, string);
					RepairOffer[playa] = playerid;
					RepairPrice[playa] = money;
					RepairTime[playerid] = 60;
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}That player is not near you/not in a car.");
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	}
	return 1;
}
CMD:dropcar(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(CP[playerid] > 0 || IsCollectingRubbish[playerid] > 0 || IsATruck(GetPlayerVehicleID(playerid)) || MechanicCallTime[playerid] > 0 || CheckBus[playerid] > 0 || IsAPizza(GetPlayerVehicleID(playerid)) && CarJacker[playerid] < 1)
	{
 		ShowPlayerDialog(playerid, DIALOG_JOBULETES, DIALOG_STYLE_MSGBOX, "Checkpoint Cancel", "Are You Sure You Want To Cancel CHeckpoint ?", "Yeah", "No");
	}
    if(IsPlayerConnected(playerid))
	{
	    if(JackAcc[playerid] > 0)
		{
			new string[128];
			format(string,sizeof(string),"Wait %d seconds before drop another car.",JackAcc[playerid]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			return 1;
		}
	    if(PlayerInfo[playerid][pJob] == 2)
	    {
	        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	        {
				if(OwnedVeh(GetPlayerVehicleID(playerid)) == 0)
				{
					SetPlayerCheckpoint(playerid, 2850.9663, 891.8728, 10.7500, 10.0);
					CarJacker[playerid] = 1;
					SendClientMessage(playerid, COLOR_WHITE, "Reach the checkpoint to drop your vehicle off at the crane.");
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "You can't sell personal vehicles.");
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "You are not a car jacker. Use /jobs.");
	}
	return 1;
}
CMD:tow(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pJob] == 8)
	    {
	        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	        {
	            new m = GetVehicleModel(GetPlayerVehicleID(playerid));
		    	if (m == 525)
	     	   	{
	     	   	    if(TowAcc[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "You can not pull a car so fast, you have to wait 2 minutes.");
	     	   	    if(GetPlayerState(playerid)==2)
	     	   	    {
						new Float:pX,Float:pY,Float:pZ;
						GetPlayerPos(playerid,pX,pY,pZ);
						new Float:vX,Float:vY,Float:vZ;
						new Found=0;
						new vid=0;
						while((vid<MAX_VEHICLES)&&(!Found))
						{
		   					vid++;
		   					GetVehiclePos(vid,vX,vY,vZ);
		   					if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
							{
								if(IsABike(vid) || GetVehicleModel(vid) == 448 || GetVehicleModel(vid) == 461 || GetVehicleModel(vid) == 462 || GetVehicleModel(vid) == 463 || GetVehicleModel(vid) == 468 || GetVehicleModel(vid) == 471 || GetVehicleModel(vid) == 521 || GetVehicleModel(vid) == 522 || GetVehicleModel(vid) == 523)
								{
		 							SCM(playerid,COLOR_WHITE,"{FFB870}Please chose another vehicle this is invalid model.");
								    return 1;
								}
								if(OwnedVeh(vid) != 0)
								{
								    SCM(playerid,COLOR_WHITE,"{FFB870}You can't tow your personal car.");
								    return 1;
								}
							    Found=1;
		   				    	if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
		           				{
		   				        	DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
                     				DisablePlayerCheckpoint(playerid);
                                    gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
						       	}
					           	else
					           	{
		    						AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
	                				new rand;
									rand = random(sizeof(TowCarCk));
						 		    SetPlayerCheckpoint(playerid, TowCarCk[rand][0],TowCarCk[rand][1],TowCarCk[rand][2], 6);
                         			CP[playerid] = 34;
								}
		 					}
		     			}
						if(!Found) return SendClientMessage(playerid,COLOR_WHITE, "{FFB870}There is no car in range.");
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You need to be the driver.");
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You need to be in a tow truck to use this.");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You need to be in a vehicle to do this.");
		}
		else return SendClientMessage(playerid,COLOR_WHITE, "{FFB870}You need to be a mechanic to use this.");
	}
	return 1;
}
CMD:spawnchange(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
	    if(PlayerInfo[playerid][pPhousekey] != 999)
        {
            if(PlayerInfo[playerid][pSpawnChange] == 1)
            {
                SendClientMessage(playerid, COLOR_WHITE,"{FFFFCC}You will now spawn at your Normal Place.");
                PlayerInfo[playerid][pSpawnChange] = 0;
                Update(playerid, pSpawnChangex);
            }
            else
            {
                SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}You will now spawn at your Own/Rented House.");
                PlayerInfo[playerid][pSpawnChange] = 1;
                Update(playerid, pSpawnChangex);
            }
        }
        else return SCM(playerid,COLOR_WHITE,"{FFFFCC}You do not have a home or did not rent.");
    }
    return 1;
}
CMD:unfreeze(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new playa;
			if(sscanf(params, "u",playa)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/unfreeze <Name/Playerid>");
		    if(IsPlayerConnected(playa))
		    {
		        if(playa != INVALID_PLAYER_ID)
		        {
					TogglePlayerControllable(playa, 1);
					new sendername[25],giveplayer[25],string[100];
					GetPlayerName(playerid,sendername,sizeof(sendername));
					GetPlayerName(playa,giveplayer,sizeof(giveplayer));
					format(string, sizeof(string), "{FFA000}[AdmCmd]: {FFFFFF}: %s used /unfreeze on %s.",sendername, giveplayer);
					ABroadCast(COLOR_ADMCOMMANDS,string,1);
					HLChat(COLOR_ADMCOMMANDS,string);
				 	arefreeze[playa] = 0;
					return 1;
				}
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SendClientMessage(playerid, COLOR_WHITE,"{5CAD5C}Error: Your admin/help level isn't high enough to use this command.");
	}
	return 1;
}
CMD:freeze(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new playa,string[128],sendername[30],giveplayer[30];
			if(sscanf(params, "u",playa)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/freeze <Name/Playerid>");
		    if(IsPlayerConnected(playa))
		    {
		        if(playa != INVALID_PLAYER_ID)
		        {
					////if(PlayerInfo[id][pAdmin] >= PlayerInfo[playerid][pAdmin] && PlayerInfo[playerid][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GREY, "You Can't Use This Command For High Level Admin");
					TogglePlayerControllable(playa, 0);
					GetPlayerName(playerid,sendername,sizeof(sendername));
					GetPlayerName(playa,giveplayer,sizeof(giveplayer));
					format(string, sizeof(string), "{FFA000}[AdmCmd]: {FFFFFF}: %s has /freeze-ed %s.",sendername, giveplayer);
					ABroadCast(COLOR_ADMCOMMANDS,string,1);
					HLChat(COLOR_ADMCOMMANDS,string);
					arefreeze[playa] = 1;
					return 1;
				}
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SendClientMessage(playerid, COLOR_WHITE,"{5CAD5C}Error: Your admin/help level isn't high enough to use this command.");
	}
	return 1;
}
CMD:entercar(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 2)
 		{
			new testcar,loc;
			if(sscanf(params, "ii",testcar,loc)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/entercar <Car ID> <Seat ID>");
			if(loc < 0 || loc > 4) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Invalid Seat ID(0-4).");
			PutPlayerInVehicleEx(playerid, testcar, loc);
			SendClientMessage(playerid, COLOR_GRAD1, "You have been teleported.");
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:putplayerinvehicle(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 2)
 		{
			new testcar,loc,id;
			if(sscanf(params, "iii",id,testcar,loc)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/putplayerinvehicle <Name/Playerid> <Car ID> <Seat ID>");
			if(loc < 0 || loc > 4) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Invalid Seat ID(0-4).");
			PutPlayerInVehicleEx(id, testcar, loc);
			SendClientMessage(id, COLOR_GRAD1, "You have been teleported.");
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:getcar(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 2 || !strcmp(name, "MaWReZ"))
		{
  		  	new plo;
			if(sscanf(params, "i",plo)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/getcar <Car ID>");
		    new Float:plocx,Float:plocy,Float:plocz;
		    new interiorr = GetPlayerInterior(playerid);
		    new virtuall = GetPlayerVirtualWorld(playerid);
			GetPlayerPos(playerid, plocx, plocy, plocz);
			SetVehiclePos(plo,plocx,plocy+4, plocz);
			LinkVehicleToInterior(plo, interiorr);
			SetVehicleVirtualWorld(plo, virtuall);
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:outcar(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
    		new plo;
			if(sscanf(params, "u",plo)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/outcar <Name/Playerid>");
		    if(IsPlayerConnected(plo))
		    {
				RemovePlayerFromVehicleEx(plo);
				return 1;
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:fill(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	new idcar = GetPlayerVehicleID(playerid);
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
	    if(GetPVarInt(playerid, "Engine") == 0)
        {
	    	if(IsAtGasStation(playerid))
	    	{
     			TogglePlayerControllable(playerid, 0);
       			GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Re-Fueling Vehicle, please wait",2000,3);
	    		SetTimerEx("Fillup",RefuelWait,0,"i",playerid);
       			Refueling[playerid] = 1;
	    	}
	    	else
		    {
		        if(PlayerInfo[playerid][pFuel] > 0)
		        {
		    		SendClientMessage(playerid, COLOR_DARKPINK, "* You filled your car with 20% fuel from your gas can.");
					if(Gas[idcar] < 80)
					{
						Gas[idcar] += 20;
					}
					else
					{
					    Gas[idcar] = 100;
					}
		        	PlayerInfo[playerid][pFuel] = 0;
					new str[128];
					mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Fuel`='0' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,str,"","");
					TogglePlayerControllable(playerid, 1);
				}
				return 1;
	    	}
    	}
    	else
    	{
	    	SendClientMessage(playerid,COLOR_WHITE,"You need to stop your engine before reffueling!");
    	}
    }
	return 1;
}
CMD:fillgascan(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if(PlayerInfo[playerid][pGasCan] != 1) return SendClientMessage(playerid, COLOR_DARKPINK, "You don't have a gas can. Go to a 24/7 shop to buy one.");
	    if(PlayerInfo[playerid][pFuel] < 20)
	    {
	    	if(IsAtGasStation(playerid))
	    	{
     			new price = 20 * 50;
				new string[64];
				format(string, sizeof(string), "You Paid $%s For Filling Your Gas Can",FormatNumber(price));
				SendClientMessage(playerid, COLOR_GREEN, string);
				PlayerInfo[playerid][pFuel] = 20;
				GivePlayerCash(playerid, - price);
  				new str[178],bid;
 				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Money`='%d',`Fuel`='20' WHERE `name`='%s'",GetPlayerCash(playerid),PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
                if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[33][bEntranceX],BizzInfo[33][bEntranceY],BizzInfo[33][bEntranceZ])) bid = 33;
				else if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[42][bEntranceX],BizzInfo[42][bEntranceY],BizzInfo[42][bEntranceZ])) bid = 42;
				else if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[43][bEntranceX],BizzInfo[43][bEntranceY],BizzInfo[43][bEntranceZ])) bid = 43;
				else if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[44][bEntranceX],BizzInfo[44][bEntranceY],BizzInfo[44][bEntranceZ])) bid = 44;
				else if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[45][bEntranceX],BizzInfo[45][bEntranceY],BizzInfo[45][bEntranceZ])) bid = 45;
				else if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[46][bEntranceX],BizzInfo[46][bEntranceY],BizzInfo[46][bEntranceZ])) bid = 46;
				else if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[47][bEntranceX],BizzInfo[47][bEntranceY],BizzInfo[47][bEntranceZ])) bid = 47;
				else if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[48][bEntranceX],BizzInfo[48][bEntranceY],BizzInfo[48][bEntranceZ])) bid = 48;
				else if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[49][bEntranceX],BizzInfo[49][bEntranceY],BizzInfo[49][bEntranceZ])) bid = 49;
				else if(IsPlayerInRangeOfPoint(playerid,25.0,BizzInfo[50][bEntranceX],BizzInfo[50][bEntranceY],BizzInfo[50][bEntranceZ])) bid = 50;
				BizzInfo[bid][bTill] += price;
		    	mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[bid][bTill],bid);
				mysql_tquery(SQL,str,"","");
				return 1;
			}
			else return SendClientMessage(playerid, COLOR_DARKPINK, "You are not near a gas station.");
		}
	    else return SendClientMessage(playerid, COLOR_DARKPINK, "Your gas can is already full.");
	}
	return 1;
}

CMD:work(playerid, params[])
{
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "Please Get Out Of Vehicle !");
		// restrictie if(PlayerInfo[playerid][pJob] == 0) return SCM(playerid, -1, "Eroare: Aceasta comanda nu este disponibila pentru locul tau de munca.");
		if(IsPlayerInRangeOfPoint(playerid,7.0, 885.7714,862.5109,13.3516))
		{
			if(IsWorkingCariera[playerid] == 0)
			{	
				new levelcariera; //= PlayerInfo[playerid][pCarieraSkill];
				if(levelcariera >= 0 && levelcariera <= 30) // skill 1
				{
					MasinaCariera[playerid] = CreateVehicle(486,885.7714,862.5109,13.3516,288.3629,1,1,100);
				}
				else if(levelcariera >= 31 && levelcariera <= 60) // skill 2
				{
					MasinaCariera[playerid] = CreateVehicle(486,885.7714,862.5109,13.3516,288.3629,1,1,100);
				}
				else if(levelcariera >= 61 && levelcariera <= 90) // skill 3
				{
					MasinaCariera[playerid] = CreateVehicle(524,885.7714,862.5109,13.3516,288.3629,1,1,100);
				}
				else if(levelcariera >= 91 && levelcariera <= 120) // skill 4
				{
					MasinaCariera[playerid] = CreateVehicle(524,885.7714,862.5109,13.3516,288.3629,1,1,100);
				}
				else if(levelcariera >= 121 && levelcariera <= 150) // skill 5
				{
					MasinaCariera[playerid] = CreateVehicle(406,885.7714,862.5109,13.3516,288.3629,1,1,100);
				}
				SetPlayerCheckpoint(playerid,833.0749,903.3457,13.3516,4.0);
				PutPlayerInVehicle(playerid,MasinaCariera[playerid],0);
				IsWorkingCariera[playerid] = 1;
			}
		}
		else
		{
			SendClientMessage(playerid, -1, "Error : You Are Not In Work Place , Follow Checkpoint !");
			SetPlayerCheckpoint(playerid, 885.7714,862.5109,13.3516, 4.0);
			return 1;
		}
		return 1;
	}

/*
CMD:work(playerid, params[])
{
    if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_ERROR, "Nu esti logat.");
    if(IsPlayerConnected(playerid))
    {
        if(PlayerInfo[playerid][pJob] == 15)
        {
            if(IsPlayerInRangeOfPoint(playerid, 10, 1104.6542,-1199.9751,17.8557))
            {
	            if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	            {
					if(PlayerInfo[playerid][pJob] == 15 && IsPlayerInRangeOfPoint(playerid, 10, 1104.6542,-1199.9751,17.8557))
					{
						if(JCurier[playerid][0] > 0) return SCM(playerid, COLOR_ERROR, "You Already Working !");
						JCurier[playerid][0] = 1;
						JCurier[playerid][3] = 1;
						JCurier[playerid][1] = 10;
						new Float:rotatie;
						GetPlayerFacingAngle(playerid, rotatie);
						JCurier[playerid][2] = CreateVehicle(414, 1104.6542,-1199.9751,17.8557, rotatie, 1,1, -1);
						CP[playerid] = 151515;
						GameTextForPlayer(playerid, "(~r~!~w~) Collisions have been disabled for 10 seconds.", 5000, 5);
						SCM(playerid, COLOR_SERVER, "Follow each checkpoint to get paid!");
						PutPlayerInVehicleEx(playerid, JCurier[playerid][2], 0);
						DisableRemoteVehicleCollisions(playerid, 1);
						new engine,lights,alarm,doors,bonnet,boot,objective;
						GetVehicleParamsEx(JCurier[playerid][2],engine,lights,alarm,doors,bonnet,boot,objective);
		      	    	SetVehicleParamsEx(JCurier[playerid][2],engine,lights,alarm,1,bonnet,boot,objective);
						if(JCurier[playerid][3] == 1) SetPlayerCheckpoint(playerid, 1352.3694,-1753.3938,13.4537, 4.0); // cp1
						if(JCurier[playerid][3] == 2) SetPlayerCheckpoint(playerid, 2122.4026,-1769.8047,13.4902, 4.0); // cp2
						if(JCurier[playerid][3] == 3) SetPlayerCheckpoint(playerid, 2622.3555,1130.2948,10.9141, 4.0); // cp3
						if(JCurier[playerid][3] == 4) SetPlayerCheckpoint(playerid, 2185.4146,2010.0812,10.9138, 4.0); // cp4
						if(JCurier[playerid][3] == 5) SetPlayerCheckpoint(playerid, 1826.5072,-1843.0140,13.5854, 4.0); // cp5
						if(JCurier[playerid][3] == 6) SetPlayerCheckpoint(playerid, 995.9887,-915.3770,42.2735, 4.0); // cp6
					}
				}
				else return SCM(playerid, -1, "You can not start your job if you're in a vehicle.");
			}
			else
			{
				SCM(playerid, -1, "You're not where you can start your job.");
				if(PlayerInfo[playerid][pJob] == 15) SetPlayerCheckpoint(playerid, 1104.6542,-1199.9751,17.8557, 5.0);
				CP[playerid] = 600;
			}
        }
	}
	return 1;
}*/
CMD:pizza(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if(PlayerInfo[playerid][pJob] == 5)
		{
			new Veh = GetPlayerVehicleID(playerid);
			if(Veh == pizza[1] || Veh == pizza[2] || Veh == pizza[3] || Veh == pizza[4] || Veh == pizza[5] || Veh == pizza[6] || Veh == pizza[7] || Veh == pizza[8] || Veh == pizza[9] || Veh == pizza[10] || Veh == pizza[11] || Veh == pizza[12] || Veh == pizza[13] || Veh == pizza[14] && PlayerInfo[playerid][pJob] == 5)
			{
			    if(pizzatime[playerid] > 0)
			    {
			        new strr[256];
			        format(strr,sizeof(strr),"You can deliver another pizza in %d seconds.",pizzatime[playerid]);
			        SendClientMessage(playerid, COLOR_GREY, strr);
			        return 1;
				}
				if(GetPlayerState(playerid) == 2)
			    {
			        DisablePlayerRaceCheckpoint(playerid);
		            new rand,Float:Position[3],distance;
					rand = random(sizeof(gRandomPizza));
					GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
					SetPlayerRaceCheckpoint(playerid,0,gRandomPizza[rand][0],gRandomPizza[rand][1],gRandomPizza[rand][2],0.0,0.0,0.0,4.0);
					distance = floatround(GetDistanceBetweenPoints(Position[0],Position[1], Position[2], gRandomPizza[rand][0], gRandomPizza[rand][1], gRandomPizza[rand][2]), floatround_round);
					if(PlayerInfo[playerid][pPizzaSkill] == 1) pizzaprize[playerid] = distance*8;
					if(PlayerInfo[playerid][pPizzaSkill] == 2) pizzaprize[playerid] = distance*8 + (distance*8)*(10/100);
					if(PlayerInfo[playerid][pPizzaSkill] == 3) pizzaprize[playerid] = distance*8 + (distance*8)*(20/100);
					if(PlayerInfo[playerid][pPizzaSkill] == 4) pizzaprize[playerid] = distance*8 + (distance*8)*(30/100);
					if(PlayerInfo[playerid][pPizzaSkill] == 5) pizzaprize[playerid] = distance*8 + (distance*8)*(40/100);
					if(PlayerInfo[playerid][pPizzaSkill] == 6) pizzaprize[playerid] = distance*8 + (distance*8)*(50/100);
					pizzaj[playerid] = 1;
					pizzatime[playerid] = 30;
					failpizza[playerid] = -1;
					PizzaCP[playerid] = 1;
					SCM(playerid,COLOR_GREY,"Mergi la checkpoint pentru a livra pizza.");
			    }
			    else return SCM(playerid,COLOR_WHITE,"You are not the driver of pizza scooter.");
			}
			else return SCM(playerid,COLOR_WHITE,"You are not in a pizza scooter.");
		}
		else return SCM(playerid,COLOR_WHITE,"You are not a Pizza Boy.");
	}
	return 1;
}
CMD:fare(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
        if(PlayerInfo[playerid][pMember] == 13)
		{
			new string[128],sendername[25];
			if(TransportDuty[playerid] > 0)
			{
			    if(TransportDuty[playerid] == 1)
			    {
			        TaxiDrivers -= 1;
			    }
			    TransportDuty[playerid] = 0;
				format(string, sizeof(string), "* You are now Off Duty and earned $%s.", FormatNumber(TransportMoney[playerid]));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerCash(playerid, TransportMoney[playerid]);
				ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
				return 1;
			}
			new moneys;
			if(sscanf(params, "d",moneys)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/fare <Amount of Money>");
			new Veh = GetPlayerVehicleID(playerid);
			if(Veh == taxic[1] || Veh == taxic[2] || Veh == taxic[3] || Veh == taxic[4] || Veh == taxic[5] || Veh == taxic[6] || Veh == taxic[7] || Veh == taxic[8] || Veh == taxic[9] || Veh == taxic[10] && PlayerInfo[playerid][pMember] == 13)
			{
			    if(GetPlayerState(playerid) == 2)
			    {
					if(moneys < 1 || moneys > 500) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Fare price must be between $1 and $500.");
				    TaxiDrivers += 1; TransportDuty[playerid] = 1; TransportValue[playerid] = moneys;
				    GetPlayerName(playerid,sendername,sizeof(sendername));
    				format(string, sizeof(string), "{FFFA00}[TAXI] {0091FF}'%s' {FFFA00}Is Now On Duty {0091FF}($%s) {FFFA00}| You Can Use '/Service taxi'", sendername, FormatNumber(TransportValue[playerid]));
    				OOCNews2(TEAM_GROVE_COLOR,string);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_WHITE, "You are not the driver.");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "You are not in a taxi.");
			}
		}
		else
		{
		    SendClientMessage(playerid,COLOR_WHITE, "You are not a taxi driver.");
		    return 1;
		}
    }
    return 1;
}
CMD:getmats(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
        if(PlayerInfo[playerid][pJob] != 9) return SendClientMessage(playerid,COLOR_WHITE,	"{FFB870}You are not an Arms Dealer.");
        if(IsPlayerInRangeOfPoint(playerid, 5, 597.5396,-1246.9562,18.2512))
		{
			if(GetPlayerCash(playerid) >= 500)
			{
		    	SetPlayerCheckpoint(playerid, 1713.1602,916.2577,10.8203, 10.0);
		    	SendClientMessage(playerid, COLOR_WHITE, "Go to the checkpoint to collect the items.");
		    	MatsHolding[playerid] = 1;
		    	CP[playerid] = 6901;
		    	GivePlayerCash(playerid,-500);
				Update(playerid, pCashx);
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "You Have'nt $500.");
		}
		else
		{
		    SendClientMessage(playerid, COLOR_WHITE, "{FEC3AC}Go to the checkpoint to collect the items.");
		    SetPlayerCheckpoint(playerid,597.5396,-1246.9562,18.2512, 10.0);
		    GotoMats[playerid] = 1;
		}
	}
	return 1;
}
CMD:sellmaterials(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
        if(PlayerInfo[playerid][pJob] != 9) return SendClientMessage(playerid,COLOR_WHITE,	"{FFB870}You are not an Arms Dealer.");
		new id,mats,string[128],sendername[25],giveplayer[25],price;
	    if(sscanf(params, "uii",id,mats,price)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/sellmaterials <Name/Playerid> <Materials> <Price>");
		if(price < 1 || price > 150000) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Price not lower then $1, or above $150,000.");
		if(playerid == id) return SCM(playerid,COLOR_WHITE,"{FFB870}You can not sell yourself materials.");
        if(id != INVALID_PLAYER_ID)
        {
			if(ProxDetectorS(5.0, playerid, id))
			{
			    if(mats < 1 || mats > 50000) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Wrong ammount(1-50000).");
			    if(mats > PlayerInfo[playerid][pMats]) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't have so many materials to sell.");
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "{B8FFDB}* You offerd %s, %d materials for %s$.",giveplayer,mats,FormatNumber(price));
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "{B8FFDB}* %s offered you %d materials for %s$, (type /accept materials %d) to accept.",sendername,mats,FormatNumber(price),playerid);
				SendClientMessage(id, COLOR_WHITE, string);
				MatsOffer[id] = playerid;
				MatsPrice[id] = price;
				MatsAmmo[id] = mats;
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}This player is not near you.");
        }
    }
    return 1;
}
CMD:sellgun(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
	{
	    if (PlayerInfo[playerid][pJob] != 9) return SendClientMessage(playerid,COLOR_GREY,"{FFB870}You are not an Arms Dealer.");
		new x_weapon[10],weapon[MAX_PLAYERS],ammo[MAX_PLAYERS],price[MAX_PLAYERS],price2,id,giveplayer[25],sendername[25],string[128];
		if(sscanf(params, "us[10]d",id,x_weapon,price2))
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/sellgun <Name/Playerid> <Gun Name> <Price>");
			SendClientMessage(playerid, COLOR_WHITE, "*** Sell Guns ***");
			SendClientMessage(playerid, COLOR_WHITE, "{B8DBFF}Weapons:{FFFFFF} SDPistol(100) Deagle(150)");
			SendClientMessage(playerid, COLOR_WHITE, "{B8DBFF}Weapons:{FFFFFF} MP5(200) Shotgun(300)");
			SendClientMessage(playerid, COLOR_WHITE, "{B8DBFF}Weapons:{FFFFFF} AK47(350) M4(400) Rifle(600)");
			return 1;
		}
		if(playerid == id) return SCM(playerid,COLOR_WHITE,"{FFB870}You can not sell yourself weapons.");
		if(PlayerInfo[id][pJailed] > 0) return SCM(playerid,COLOR_WHITE,"{FFB870}This player is in jail.");
		if(id != INVALID_PLAYER_ID)
        {
			if(PlayerInfo[id][pGunLic] == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}This player does not have arms license.");
			if(strcmp(x_weapon,"sdpistol",true) == 0)
			{
			    if(PlayerInfo[playerid][pMats] < 100) return SendClientMessage(playerid,COLOR_WHITE, "{FFB870}Not enough Materials for that Weapon.");
				weapon[playerid] = 23;
				price[playerid] = 100;
				ammo[playerid] = 100;
				PlayerInfo[playerid][pMUsed] += 100;
				Update(playerid, pMUsedx);
			}
			else if(strcmp(x_weapon,"deagle",true) == 0)
			{
			    if(PlayerInfo[playerid][pMats] < 150) return SendClientMessage(playerid,COLOR_WHITE, "{FFB870}Not enough Materials for that Weapon.");
			    weapon[playerid] = 24;
				price[playerid] = 150;
				ammo[playerid] = 100;
				PlayerInfo[playerid][pMUsed] += 150;
				Update(playerid, pMUsedx);
			}
			else if(strcmp(x_weapon,"mp5",true) == 0)
			{
			    if(PlayerInfo[playerid][pMats] < 200) return SendClientMessage(playerid,COLOR_WHITE, "{FFB870}Not enough Materials for that Weapon.");
			    weapon[playerid] = 29;
				price[playerid] = 200;
				ammo[playerid] = 150;
				PlayerInfo[playerid][pMUsed] += 200;
				Update(playerid, pMUsedx);
			}
			else if(strcmp(x_weapon,"shotgun",true) == 0)
			{
			    if(PlayerInfo[playerid][pMats] < 300) return SendClientMessage(playerid,COLOR_WHITE, "{FFB870}Not enough Materials for that Weapon.");
			    weapon[playerid] = 25;
				price[playerid] = 300;
				ammo[playerid] = 50;
				PlayerInfo[playerid][pMUsed] += 300;
				Update(playerid, pMUsedx);
			}
			else if(strcmp(x_weapon,"ak47",true) == 0)
			{
			    if(PlayerInfo[playerid][pMats] < 350) return SendClientMessage(playerid,COLOR_WHITE, "{FFB870}Not enough Materials for that Weapon.");
			    weapon[playerid] = 30;
				price[playerid] = 350;
				ammo[playerid] = 250;
				PlayerInfo[playerid][pMUsed] += 350;
				Update(playerid, pMUsedx);
			}
			else if(strcmp(x_weapon,"m4",true) == 0)
			{
			    if(PlayerInfo[playerid][pMats] < 400) return SendClientMessage(playerid,COLOR_WHITE, "{FFB870}Not enough Materials for that Weapon.");
				weapon[playerid] = 31;
				price[playerid] = 400;
				ammo[playerid] = 250;
				PlayerInfo[playerid][pMUsed] += 400;
				Update(playerid, pMUsedx);
			}
			else if(strcmp(x_weapon,"rifle",true) == 0)
			{
			    if(PlayerInfo[playerid][pMats] < 600) return SendClientMessage(playerid,COLOR_WHITE, "{FFB870}Not enough Materials for that Weapon.");
			    weapon[playerid] = 33;
				price[playerid] = 600;
				ammo[playerid] = 25;
				PlayerInfo[playerid][pMUsed] += 600;
				Update(playerid, pMUsedx);
			}
			else return SendClientMessage(playerid,COLOR_WHITE,"{B8DBFF}Invalid weapon name.");
			if(price2 < 1 || price2 > 100000) return SendClientMessage(playerid,COLOR_WHITE,"{B8DBFF}Price must be between $1 and $100000.");
			if (ProxDetectorS(5.0, playerid, id))
			{
                if(Spectate[id] == playerid) return SCM(playerid,COLOR_WHITE,"{FFFFCC}This player is not near you.");
                if(GetPlayerCash(id) < price2) return SCM(playerid,COLOR_WHITE,"{FFB870}This player don't have money needed.");
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				SellgunOffer[id] = playerid;
				SellgunPrice[id] = price2;
				SellgunMats[id] = price[playerid];
				SellgunAmmo[id] = ammo[playerid];
				SellgunID[id] = weapon[playerid];
				new gunname[50];
				GetWeaponNameEx(weapon[playerid],gunname,sizeof(gunname));
				format(string, sizeof(string), "{B8FFDB}* You offerd %s %s for %s$.",giveplayer,gunname,FormatNumber(price2));
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "{B8FFDB}* %s offered you %s for %s$, (type /accept gun %d) to accept.",sendername,gunname,FormatNumber(price2),playerid);
				SendClientMessage(id, COLOR_WHITE, string);
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}This player is not near you.");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	}
	return 1;
}
CMD:matsinfo(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
	    if (PlayerInfo[playerid][pJob] != 9) return SendClientMessage(playerid,COLOR_WHITE,"{FFB870}You are not an Arms Dealer.");
		new coordsstring1[256];
 		new mats = PlayerInfo[playerid][pMats];
		format(coordsstring1, sizeof(coordsstring1), "Materials: [%d]", mats);
        ShowPlayerDialog(playerid, DIALOG_MATSINSO, DIALOG_STYLE_MSGBOX, "Materials Information:", coordsstring1, "Close","");
	}
    return 1;
}
CMD:engine(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
        new idcar = GetPlayerVehicleID(playerid),string[128],sendername[25];
        new engine,lights,alarm,doors,bonnet,boot,objective;
        if(Gas[idcar] == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}This car don't have fuel.");
	    if(IsABike(idcar)) return SendClientMessage(playerid,COLOR_WHITE,"{999999}Command can not be used on bike.");
	    if(Refueling[playerid] == 0)
  	 	{
     	    if(vehEngine[idcar] == 0)
        	{
				vehEngine[idcar] = 1;
	            GetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,boot,objective);
	            SetVehicleParamsEx(idcar,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
	            new vehicle;
	            vehicle = GetVehicleModel(idcar) - 400;
	    		GetPlayerName(playerid, sendername, sizeof(sendername));
	            SetPVarInt(playerid, "Engine", 1);
	            if(Undercover[playerid] != 0)
	            {
	                format(string,sizeof(string),"* An unknown hitman starts the engine of his %s.",aVehicleNames[vehicle]);
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
	            else
	            {
		            format(string,sizeof(string),"* %s starts the engine of his %s.",sendername,aVehicleNames[vehicle]);
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
        	}
      	  	else if(vehEngine[idcar] == 1)
        	{
    			vehEngine[idcar] = 0;
    			GetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,boot,objective);
      	    	SetVehicleParamsEx(idcar,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
            	new vehicle;
            	vehicle = GetVehicleModel(idcar) - 400;
	        	GetPlayerName(playerid, sendername, sizeof(sendername));
            	SetPVarInt(playerid, "Engine", 0);
            	if(Undercover[playerid] != 0)
            	{
	                format(string,sizeof(string),"* An unknown hitman stops the engine of his %s.",aVehicleNames[vehicle]);
	            	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	}
            	else
            	{
	            	format(string,sizeof(string),"* %s stops the engine of his %s.",sendername,aVehicleNames[vehicle]);
	            	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
        	}
    	}
		else return SendClientMessage(playerid,COLOR_WHITE,"{999999}Please wait, you refill your vehicle.");
    }
	else return SendClientMessage(playerid,COLOR_WHITE,"{999999}You need to be in a vehicle to use this command.");
	return 1;
}
CMD:disarm(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		new id,string[128],sendername[25],giveplayer[25];
		if(sscanf(params, "u",id)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/disarm <Name/Playerid>");
		if(id != INVALID_PLAYER_ID)
		{
			//if(PlayerInfo[id][pAdmin] >= PlayerInfo[playerid][pAdmin] && PlayerInfo[playerid][pAdmin] > 0) return SendClientMessage(playerid, COLOR_GREY, "You Can't Use This Command For High Level Admin");
		    GetPlayerName(id, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    ResetPlayerWeaponsEx(id);
		    ResetPlayerWeapons(id);
			format(string, sizeof(string), "{f03337}[WARNING]: %s disarmed %s.",sendername, giveplayer);
			ABroadCast(COLOR_WHITE,string,1);
		}
		else return SendClientMessage(playerid, COLOR_WHITE,"{FFFFCC}Error: Player not connected.");
	}
	else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	return 1;
}
CMD:givemats(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
	    if (PlayerInfo[playerid][pAdmin] < 10) return SendClientMessage(playerid,COLOR_ERROR, AdminOnly);
	    new id,mats,giveplayer[25],sendername[25],string[128];
		if(sscanf(params, "ud",id,mats)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/givemats <Name/Playerid> <Materials>");
	    if(id != INVALID_PLAYER_ID)
	    {
            PlayerInfo[id][pMats] += mats;
         	GetPlayerName(id, giveplayer, sizeof(giveplayer));
         	GetPlayerName(playerid, sendername, sizeof(sendername));
         	format(string, sizeof(string), "{f03337}[WARNING]: %s give %s %d materials.",sendername, giveplayer,mats);
		 	ABroadCast(COLOR_WHITE,string,5);
			new str[128];
			mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Materials`='%d' WHERE `name`='%s'",PlayerInfo[id][pMats],PlayerInfo[id][pNormalName]);
			mysql_tquery(SQL,str,"","");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	}
	return 1;
}
CMD:agl(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
        if (PlayerInfo[playerid][pAdmin] >= 4)
        {
			new id,x_nr[10],sendername[25],giveplayer[25],string[128];
			if(sscanf(params, "us[10]",id,x_nr))
			{
				SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/agl <Name/Playerid> <License>");
			    SendClientMessage(playerid, COLOR_WHITE, "Available names: Driving, Pilots, Sailing, Weapon, ALL.");
				return 1;
			}
			if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    GetPlayerName(id, giveplayer, sizeof(giveplayer));
		    if(strcmp(x_nr,"driving",true) == 0)
			{
	            format(string, sizeof(string), "* You've given a Drivers License to %s.",giveplayer);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		        format(string, sizeof(string), "* Admin %s has given you a Drivers License.",sendername);
		        SendClientMessage(id, COLOR_LIGHTBLUE, string);
		        PlayerInfo[id][pCarLic] = 1;
		        PlayerInfo[id][pCarLicT] = 100;
				PlayerInfo[id][pCarLicSuspend] = 0;
				Update(id, pCarLicSuspendx);
				new str[128];
				mysql_format(SQL,str,128,"UPDATE users SET `CarLic`='1',`CarLicT`='100' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
				mysql_tquery(SQL,str,"","");
		        return 1;
			}
			else if(strcmp(x_nr,"pilots",true) == 0)
			{
	            format(string, sizeof(string), "* You've given a Pilots License to %s.",giveplayer);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		        format(string, sizeof(string), "* Admin %s has given you a Pilots License.",sendername);
		        SendClientMessage(id, COLOR_LIGHTBLUE, string);
		        PlayerInfo[id][pFlyLic] = 1;
		        PlayerInfo[id][pFlyLicT] = 100;
				new str[128];
				mysql_format(SQL,str,128,"UPDATE users SET `FlyLic`='1',`FlyLicT`='100' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
				mysql_tquery(SQL,str,"","");
		        return 1;
			}
			else if(strcmp(x_nr,"sailing",true) == 0)
			{
	            format(string, sizeof(string), "* You've given a Sailing License to %s.",giveplayer);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		        format(string, sizeof(string), "* Admin %s has given you a Sailing License.",sendername);
		        SendClientMessage(id, COLOR_LIGHTBLUE, string);
		        PlayerInfo[id][pBoatLic] = 1;
		        PlayerInfo[id][pBoatLicT] = 100;
				new str[128];
				mysql_format(SQL,str,128,"UPDATE users SET `BoatLic`='1',`BoatLicT`='100' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
				mysql_tquery(SQL,str,"","");
		        return 1;
			}
			else if(strcmp(x_nr,"weapon",true) == 0)
			{
	            format(string, sizeof(string), "* You've given a Weapon License to %s.",giveplayer);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		        format(string, sizeof(string), "* Admin %s has given you a Weapon License.",sendername);
		        SendClientMessage(id, COLOR_LIGHTBLUE, string);
		        PlayerInfo[id][pGunLic] = 1;
		        PlayerInfo[id][pGunLicT] = 100;
				PlayerInfo[id][pGunLicSuspend] = 0;
				Update(id, pGunLicSuspendx);
				new str[128];
				mysql_format(SQL,str,128,"UPDATE users SET `GunLic`='1',`GunLicT`='100' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
				mysql_tquery(SQL,str,"","");
		        return 1;
			}
			else if(strcmp(x_nr,"all",true) == 0)
            {
                format(string, sizeof(string), "* You've given All Licenses to %s.",giveplayer);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                format(string, sizeof(string), "* Admin %s has given you All Licenses.",sendername);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
                PlayerInfo[id][pGunLic] = 1;
                PlayerInfo[id][pGunLicT] = 100;
				PlayerInfo[id][pBoatLic] = 1;
                PlayerInfo[id][pBoatLicT] = 100;
				PlayerInfo[id][pFlyLic] = 1;
                PlayerInfo[id][pFlyLicT] = 100;
				PlayerInfo[id][pCarLic] = 1;
                PlayerInfo[id][pCarLicT] = 100;
                PlayerInfo[id][pGunLicSuspend] = 0;
				PlayerInfo[id][pCarLicSuspend] = 0;
                Update(id, pGunLicSuspendx);
				Update(id, pCarLicSuspendx);
                new str[128];
                mysql_format(SQL,str,128,"UPDATE users SET `GunLic`='1',`GunLicT`='100',`BoatLic`='1',`BoatLicT`='100',`FlyLic`='1',`FlyLicT`='100',`CarLic`='1',`CarLicT`='100' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
                mysql_tquery(SQL,str,"","");
                return 1;
            }
        }
        else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
    }
    return 1;
}
CMD:carcolortemp(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	new color1,color2;
	if(sscanf(params, "ii",color1,color2)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/carcolortemp <Color 1> <Color 2>");
    if(color1 < 0 || color1 > 255) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Wrong color id.");
    if(color2 < 0 || color2 > 255) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Wrong color id.");
    new vehid = GetPlayerVehicleID(playerid);
    if(IsPlayerInVehicle(playerid, vehid))
    {
        ChangeVehicleColor(vehid, color1, color2);
		return 1;
    }
    else
    {
		SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not in car.");
	}
    return 1;
}
CMD:o(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(PlayerInfo[playerid][pAdmin] >= 1)
    //if(UseCmdTimer[playerid] == 0)return SCM(playerid, -1, "You can use the command /o once every 3 seconds.");
    {
		new text[250],string[250],sendername[25];
		if(sscanf(params, "s[250]",text)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/o <Message>");
		GetPlayerName(playerid,sendername,sizeof(sendername));
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			new estegrad[MAX_STRING];
	        if(PlayerInfo[playerid][pAdmin] == 1) estegrad = "{FF0000}Admin 1";
	        if(PlayerInfo[playerid][pAdmin] == 2) estegrad = "{FF0000}Admin 2";
	        if(PlayerInfo[playerid][pAdmin] == 3) estegrad = "{FF0000}Admin 3";
	        if(PlayerInfo[playerid][pAdmin] == 4) estegrad = "{FF0000}Admin 4";
	        if(PlayerInfo[playerid][pAdmin] == 5) estegrad = "{FF0000}Admin 5";
  	        if(PlayerInfo[playerid][pAdmin] == 6) estegrad = "{FF0000}Admin 6";
  	        if(PlayerInfo[playerid][pAdmin] == 7) estegrad = "{FF0000}Donater";
  	        if(PlayerInfo[playerid][pAdmin] == 8) estegrad = "{FF0000}SuperVisor";
  	        if(PlayerInfo[playerid][pAdmin] == 9) estegrad = "{FF0000}Operator";
  	        if(PlayerInfo[playerid][pAdmin] == 10) estegrad = "{FF0000}Operator Plus";
			if(PlayerInfo[playerid][pAdmin] == 11) estegrad = "{FF0000}Manager";
			if(PlayerInfo[playerid][pAdmin] == 12) estegrad = "{FF0000}Developer";
			if(PlayerInfo[playerid][pAdmin] == 13) estegrad = "{FF0000}Owner";
			if(PlayerInfo[playerid][pAdmin] == 14) estegrad = "{FF0000}Founder";
			format(string, sizeof(string), "{FFFFFF}(( %s {00FF00}%s :{FFFFFF} %s ))",estegrad , sendername, text);
			OOCOff(COLOR_GENANNOUNCE,string);
			UseCmdTimer[playerid] = 0;
            SetTimerEx("unmutecommand", 3000, false, "i", playerid);
		}
		printf("%s", string);
	}
	return 1;
}
CMD:count(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
	    new sendername[30],range,string[256],count=0;
	    if(sscanf(params, "i", range)) return SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/count <Range>");
	    {
     		GetPlayerName(playerid, sendername, sizeof(sendername));
 			if(countdown == 0)
    		{
    			foreach(Player,i)
    			{
 		    		if(IsPlayerConnected(i))
					{
	    				if(ProxDetectorS(range, playerid, i))
				    	{
							SetTimerEx("CountDownCheck3", 1000, 0, "i", i);
							SetTimer("CountDownFinalize", 5000, 0);
   							countdown = 1;
   							count++;
						}
					}
				}
				format(string,sizeof(string),"{FF0000}{FFA000}[AdmCmd]: {FFFFFF}: {FFFFCC}Admin %s has started the countdown for %d players(range: %d).",sendername,count,range);
				ABroadCast(COLOR_WHITE, string,1);
			}
			else return SendClientMessage(playerid,COLOR_WHITE, "Countdown is already started.");
		}
	}
	else return SendClientMessage(playerid,COLOR_ERROR, AdminOnly);
	return 1;
}
CMD:fastevent(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
   	{
		if(PlayerInfo[playerid][pAdmin] >= 8)
		{
		    new mesaj[30],string[MAX_STRING],sendername[30];
		    GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(sscanf(params, "s[30]",mesaj)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/fastevent <FastMessage[3-30 characters]>");
		    if(strlen(mesaj) > 2 && strlen(mesaj) <= 30)
		    {
		        format(string, sizeof(string), "{0091FF}[Fast-Event]: {FFFFFF}%s Started A Fast Event", sendername);
			    OOCNews(COLOR_LIGHTRED, string);
			    format(string, sizeof(string), "{0091FF}[Fast-Event]: {FFFFFF}Hurry ! Type {FF6347}'%s' {FFFFFF}And Won 1,000$ - 20,000$.", mesaj);
			    OOCNews(COLOR_LIGHTRED, string);
			    FastString = mesaj;
			    Answered = 0;
			}
			else return SendClientMessage(playerid, COLOR_LIGHTRED, "FastMessage must be between 3 and 30 characters.");
		}
		else return SendClientMessage(playerid,COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:contract(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
   	{
		new id,moneys,string[256],sendername[25],giveplayer[25];
		if(sscanf(params, "ui",id,moneys)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/contract <Name/Playerid> <Money>");
		if(moneys < 20000 || moneys > 1000000) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Contract money must be atleast $20,000, and not more then $1,000,000.");
		if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You must be level 2 to place a Contract.");
	    if(id != INVALID_PLAYER_ID)
	    {
			if(PlayerInfo[id][pAdmin] > 0 || PlayerInfo[id][pHelper] == 3) return SCM(playerid,COLOR_WHITE,"{FFB870}Cannot place contracts on Admin.");
			if(PlayerInfo[id][pMember] == 11) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Cannot place Contracts on Agency.");
            if(PlayerInfo[playerid][pMember] == 11) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are Agency.");
		    if(IsACop(id) && moneys < 100000) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Only $100,000 can be placed as a Contract on Cops.");
		    if(id == playerid) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You cannot Contract yourself.");
			GetPlayerName(id, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(GetPlayerCash(playerid) >= moneys)
			{
				GivePlayerCash(playerid, -moneys);
				PlayerInfo[id][pHeadValue] += moneys;
				format(string, sizeof(string), "%s has placed a contract on %s, for $%s.",sendername, giveplayer, FormatNumber(moneys));
				SendFamilyMessage(11, COLOR_YELLOW, string);
				format(string, sizeof(string), "* You placed a contract on %s, for $%s.",giveplayer, FormatNumber(moneys));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new str[184];
				Update(playerid, pCashx);
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `HeadValue`='%d' WHERE `name`='%s'",PlayerInfo[id][pHeadValue],PlayerInfo[id][pNormalName]);
				mysql_tquery(SQL,str,"","");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Invalid transaction amount.");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	}
	return 1;
}
CMD:pay(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		new id,moneys,sendername[25],giveplayer[25],string[256];
		if(sscanf(params, "ui",id,moneys)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/pay <Name/Playerid> <Amount of Money>");
		if(moneys > 1000 && PlayerInfo[playerid][pLevel] < 5) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Nu poti transfera mai mult de $1,000 daca You Have'nt level 5.");
		if(moneys < 1 || moneys > 50000 && PlayerInfo[playerid][pPremiumAccount] < 1) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You do not have a premium account to transfer more than $50,000.");
		if(moneys < 1 || moneys > 100000 && PlayerInfo[playerid][pPremiumAccount] > 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}The transferred amount can be between $1 and $100,000.");
		if(id == playerid) return SCM(playerid,COLOR_WHITE,"{FFB870}You can not give yourself money.");
	    if(id != INVALID_PLAYER_ID)
	    {
	        if(payala[playerid] == 1) return 1;
			if (ProxDetectorS(5.0, playerid, id))
			{
				if(Spectate[id] != -1) return SCM(playerid,COLOR_WHITE,"{FFFFCC}This player is not near you.");
				GetPlayerName(id, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new playermoney;
				playermoney = GetPlayerCash(playerid);
				if (moneys > 0 && playermoney >= moneys)
				{
				    SetTimerEx("payala2", 3000, 0, "i", playerid);
				    payala[playerid] = 1;
					GivePlayerCash(playerid, -moneys);
					GivePlayerCash(id, moneys);
					format(string, sizeof(string), "You have paid $%s to %s.",FormatNumber(moneys),giveplayer);
					SendClientMessage(playerid, COLOR_WHITE, string);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "%s has paid you $%s.",sendername,FormatNumber(moneys));
					SendClientMessage(id, COLOR_WHITE, string);
					PlayerPlaySound(id, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "%s takes out $%s in cash, and hands it to %s.",sendername,FormatNumber(moneys),giveplayer);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					new var100[256],y,m,d,h,mi,s,string2[256],string3[256];
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string2,sizeof(string2),"[%02d-%02d-%d %02d:%02d:%02d] %s[user:%d] /pay $%s to %s[user:%d].",d,m,y,h,mi,s,sendername,PlayerInfo[playerid][pSQLID],FormatNumber(moneys),giveplayer,PlayerInfo[id][pSQLID]);
 					mysql_real_escape_string(string2, string3);
					mysql_format(SQL, var100, sizeof(var100), "INSERT INTO playerlogs (`playerid`,`giverid`,`action`,`time`) VALUES ('%d','%d','%s','%02d-%02d-%d %02d:%02d:%02d')", PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID],string3,d,m,y,h,mi,s);
					mysql_tquery(SQL,var100,"","");
					Update(id, pCashx);
					Update(playerid, pCashx);
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Invalid transaction amount.");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}This player is not near you.");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	}
	return 1;
}
CMD:number(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pPhoneBook] == 1)
		{
			new id,string[128],sendername[25];
			if(sscanf(params, "u",id)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/number <Name/Playerid>");
		    if(id != INVALID_PLAYER_ID)
		    {
		        GetPlayerName(id, sendername, sizeof(sendername));
		        if(PlayerInfo[id][pPnumber] == 0)
		        {
					format(string, 256, "Name: {CECECE}%s {FFFFFF}| Number: {CECECE}None",sendername);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
				else
				{
				    format(string, 256, "Name: {CECECE}%s {FFFFFF}| Number: {CECECE}%d",sendername,PlayerInfo[id][pPnumber]);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You do not have a PhoneBook.");
	}
	return 1;
}
CMD:togooc(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if (!gOoc[playerid])
		{
			gOoc[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD1, "OOC chat channel Disabled.");
		}
		else if (gOoc[playerid])
		{
			gOoc[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD1, "OOC chat channel Enabled.");
		}
	}
	return 1;
}
CMD:tognews(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if (!gNews[playerid])
		{
			gNews[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD1, "News chat channel Disabled.");
		}
		else if (gNews[playerid])
		{
			gNews[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD1, "News chat channel Enabled.");
		}
	}
	return 1;
}
CMD:togfam(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if (!gFam[playerid])
		{
			gFam[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD1, "Family chat channel Disabled.");
		}
		else if (gFam[playerid])
		{
			gFam[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD1, "Family chat channel Enabled.");
		}
	}
	return 1;
}
CMD:togwhisper(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
        if(PlayerInfo[playerid][pPremiumAccount] == 1 || PlayerInfo[playerid][pAdmin] >= 1)
        {
			if (!HidePM[playerid])
			{
				HidePM[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD1, "Whisper chat channel Disabled.");
			}
			else if (HidePM[playerid])
			{
				HidePM[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD1, "Whisper chat channel Enabled.");
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Your are not admin or you don't have premium account.");
	}
	return 1;
}
CMD:togw(playerid, params[])
{
    return cmd_togwhisper(playerid, params);
}
CMD:changepass(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(IsPlayerConnected(playerid))
	{
	    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
		ShowPlayerDialog(playerid, DIALOG_NEWPASS,DIALOG_STYLE_INPUT, "Change password:","Type in box your new password:","Done","Close");
		return 1;
	}
	return 1;
}
CMD:me(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
        if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You havent logged in yet.");
		new string[250],result[250],sendername[25];
        if(PlayerInfo[playerid][pMuted] == 1)
        {
			format(string, sizeof(string), "You can not speak, you have been silenced for %d seconds.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/me <Action>");
		format(string, sizeof(string), "(/me)* %s %s.", sendername, result);
		ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new var100[300],resulttt[300],strr[300];
		format(strr, sizeof(strr),"(me) %s",result);
		mysql_real_escape_string(strr, resulttt);
		mysql_format(SQL,var100, sizeof(var100), "INSERT INTO chat_logs (`playerid`,`text`) VALUES ('%d','%s')", PlayerInfo[playerid][pSQLID],resulttt);
		mysql_tquery(SQL,var100,"","");
		printf("%s", string);
	}
	return 1;
}
CMD:do(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
        if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You havent logged in yet.");
		new string[250],result[250],sendername[25];
        if(PlayerInfo[playerid][pMuted] == 1)
        {
			format(string, sizeof(string), "You can not speak, you have been silenced for %d seconds.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/do <Action>");
		format(string, sizeof(string), "* %s (( %s )) ", result, sendername);
		ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new var100[300],resulttt[300],strr[300];
		format(strr, sizeof(strr),"(do) %s",result);
		mysql_real_escape_string(strr, resulttt);
		mysql_format(SQL,var100, sizeof(var100), "INSERT INTO chat_logs (`playerid`,`text`) VALUES ('%d','%s')", PlayerInfo[playerid][pSQLID],resulttt);
		mysql_tquery(SQL,var100,"","");
		printf("%s", string);
	}
	return 1;
}
CMD:advertise(playerid, params[])
{
    return cmd_ad(playerid, params);
}
CMD:ad(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		new string[256],sendername[30],message[256],idx,adss=0,time,time2;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(AdvPlayer[playerid] != 0)
		{
			SendClientMessage(playerid, COLOR_DARKPINK, "Your ad:");
			SendClientMessage(playerid, COLOR_DARKPINK, AdvMSG[playerid]);
			SendClientMessage(playerid, COLOR_DARKPINK, "You Can Use /DeleteMyAd To Delete Your Ad");
			return 1;
		}
		if(PlayerInfo[playerid][pLevel] < 5) return SendClientMessage(playerid, COLOR_WHITE, "You don't have level 5.");
        if(!PlayerToPoint(5.0, playerid, BizzInfo[28][bEntranceX],BizzInfo[28][bEntranceY],BizzInfo[28][bEntranceZ]) && !PlayerToPoint(5.0, playerid, BizzInfo[52][bEntranceX],BizzInfo[52][bEntranceY],BizzInfo[52][bEntranceZ])) return SendClientMessage(playerid, COLOR_WHITE, "You are not near CNN.");
		if(PlayerInfo[playerid][pMuted] == 1)
        {
			format(string, sizeof(string), "You can not speak, you have been silenced for %d seconds.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		if(sscanf(params, "s[256]",message)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/ad <Message>");
		new length = strlen(params);
		while ((idx < length) && (params[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[264];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = params[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		new payout = idx * 150;
		if(GetPlayerCash(playerid) < payout) return SendClientMessage(playerid, COLOR_WHITE, "You don't have enough money.");
		GivePlayerCash(playerid, -payout);
		foreach(Player, i)
		{
			if(AdvPlayer[i] != 0)
			{
				adss++;
			}
		}
		if(adss >= 20) return SendClientMessage(playerid, COLOR_WHITE, "There are 20 ads placed, come back later.");
		if(adss > 0) { time = (adss+1)*30*1000; time2 = (adss+1)*30; }
		else if(adss == 0) { time = 30000; time2 = 30; }
		format(AdvMSG[playerid], 256, "%s",message);
		format(string, sizeof(string),"Ad by %s ({FFFFFF}%d{00FF00}): %s",sendername,playerid,message);
		foreach(Player, i)
		{
			if(PlayerInfo[i][pAdmin] > 0)
			{
				SendSplitMessage(i, COLOR_ADV, string);
			}
		}
		AdvPlayer[playerid] = 1;
		AdvTimer[playerid] = SetTimerEx("PlaceAD", time, false, "i", playerid);
        format(string, sizeof(string), "You Paid $%d For Ad | Your Ad Show In %d Seconds", payout, time2);
        SendClientMessage(playerid, COLOR_DARKPINK, string);
		new str[128];
		if(IsPlayerInRangeOfPoint(playerid, 5.0,BizzInfo[28][bEntranceX],BizzInfo[28][bEntranceY],BizzInfo[28][bEntranceZ]))
		{
			BizzInfo[28][bTill] += payout;
			mysql_format(SQL,str,128,"UPDATE bizz SET `Till`='%d' WHERE `ID`='28'",BizzInfo[28][bTill]);
			mysql_tquery(SQL,str,"","");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0,BizzInfo[52][bEntranceX],BizzInfo[52][bEntranceY],BizzInfo[52][bEntranceZ]))
		{
			BizzInfo[52][bTill] += payout;
			mysql_format(SQL,str,128,"UPDATE bizz SET `Till`='%d' WHERE `ID`='52'",BizzInfo[52][bTill]);
			mysql_tquery(SQL,str,"","");
		}
	}
	return 1;
}
CMD:deletemyad(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if(AdvPlayer[playerid] != 0)
		{
			KillTimer(AdvTimer[playerid]);
			AdvPlayer[playerid] = 0;
			format(AdvMSG[playerid], 256, "");
			SendClientMessage(playerid, COLOR_DARKPINK, "You Ad Delted Successfully");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "You don't have an ad placed.");
	}
	return 1;
}
CMD:dad(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if(PlayerInfo[playerid][pAdmin] > 0)
		{
			new id,string[256],sendername[30],giveplayer[30];
			if(sscanf(params, "u",id)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/dad <Name/Playerid>");
			if(IsPlayerConnected(id))
			{
				if(AdvPlayer[id] != 0)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(id, giveplayer, sizeof(giveplayer));
					KillTimer(AdvTimer[id]);
					AdvPlayer[id] = 0;
					format(AdvMSG[id], 256, "");
					format(string, sizeof(string),"Admin %s deleted %s /ad.",sendername,giveplayer);
					ABroadCast(COLOR_ADMCOMMANDS,string,1);
					format(string, sizeof(string),"Admin %s deleted your /ad.",sendername);
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "This player don't have an ad placed.");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:shout(playerid, params[])
{
    return cmd_s(playerid, params);
}
CMD:s(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		new string[250],result[250],sendername[25];
	    if(PlayerInfo[playerid][pMuted] == 1)
        {
			format(string, sizeof(string), "You can not speak, you have been silenced for %d seconds.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/s(hout) <Message>");
		format(string, sizeof(string), "%s shouts: %s!", sendername, result);
		ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
		format(string, sizeof(string), "(shouts) \"%s!\"", params);
		SetPlayerChatBubble(playerid, string, COLOR_CHATBUBBLE, 30.0, 10000);
		new var100[300],resulttt[300],strr[300];
		format(strr, sizeof(strr),"(shouts) %s",result);
		mysql_real_escape_string(strr, resulttt);
		mysql_format(SQL,var100, sizeof(var100), "INSERT INTO chat_logs (`playerid`,`text`) VALUES ('%d','%s')", PlayerInfo[playerid][pSQLID],resulttt);
		mysql_tquery(SQL,var100,"","");
		if(FindIP(result))
	    {
			format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /s.", sendername,playerid,result);
			ABroadCast(COLOR_WHITE,string,1);
	    }
	    for(new d; d<sizeof(TLD); d++)
		{
		    if(strfind(result,TLD[d],true) != -1 )
		    {
				if(strfind(result, ".", true) != -1 || strfind(result, ".", true) != -1 || strfind(result, ".", true) != -1) break;
				format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /s.", sendername,playerid,result);
				ABroadCast(COLOR_WHITE,string,1);
			}
		}
		for(new adm = 0; adm<=MAX_PLAYERS;adm++)
		{
			if(IsPlayerConnected(adm))
			{
				if(PlayerInfo[adm][pAdmin] > 0 && BigEar[adm] == 1)
 				{
 					format(string, sizeof(string), "%s shouts: %s!",sendername,result);
					SendClientMessage(adm,  COLOR_YELLOW, string);
 				}
			}
		}
		printf("%s", string);
	}
	return 1;
}
CMD:b(playerid,params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
        if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You havent logged in yet.");
		new string[250],result[250],sendername[25];
	    if(PlayerInfo[playerid][pMuted] == 1)
        {
			format(string, sizeof(string), "You can not speak, you have been silenced for %d seconds.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/b <Message>");
		format(string, sizeof(string), "%s says: (( %s ))", sendername, result);
		ProxDetector(35.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
		new var100[300],resulttt[300],strr[300];
		format(strr, sizeof(strr),"(( %s ))",result);
		mysql_real_escape_string(strr, resulttt);
		mysql_format(SQL,var100, sizeof(var100), "INSERT INTO chat_logs (`playerid`,`text`) VALUES ('%d','%s')", PlayerInfo[playerid][pSQLID],resulttt);
		mysql_tquery(SQL,var100,"","");
		if(FindIP(result))
	    {
			format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /b.", sendername,playerid,result);
			ABroadCast(COLOR_WHITE,string,1);
	    }
	    for(new d; d<sizeof(TLD); d++)
		{
		    if(strfind(result,TLD[d],true) != -1 )
		    {
				if(strfind(result, ".", true) != -1 || strfind(result, ".", true) != -1 || strfind(result, ".", true) != -1) break;
				format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /b.", sendername,playerid,result);
				ABroadCast(COLOR_WHITE,string,1);
			}
		}
		for(new adm = 0; adm<=MAX_PLAYERS;adm++)
		{
			if(IsPlayerConnected(adm))
			{
				if(PlayerInfo[adm][pAdmin] > 0 && BigEar[adm] == 1)
 				{
 					format(string, sizeof(string), "%s says: (( %s ))",sendername,result);
					SendClientMessage(adm,  COLOR_YELLOW, string);
 				}
			}
		}
		printf("%s", string);
	}
	return 1;
}
CMD:low(playerid,params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
        if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You havent logged in yet.");
		new string[250],result[250],sendername[25];
	    if(PlayerInfo[playerid][pMuted] == 1)
        {
			format(string, sizeof(string), "You can not speak, you have been silenced for %d seconds.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/low <Message>");
		if(FindIP(result)) /// Anti-Reclama
        {
	        new advertiser[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, advertiser, sizeof(advertiser));
	        format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /low.", advertiser, playerid, result);
			ABroadCast(COLOR_WHITE,string,1);
        }
        for(new i; i < sizeof(TLD); i++)
		{
			if(strfind(result, TLD[i], true) != -1)
			{
				if(strfind(result, ".", true) != -1 || strfind(result, ".", true) != -1 || strfind(result, ".", true) != -1) break;
				new advertiser[MAX_PLAYER_NAME];
				GetPlayerName(playerid, advertiser, sizeof(advertiser));
				format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /low.", advertiser, playerid, result);
				ABroadCast(COLOR_WHITE,string,1);
			}
		}
		format(string, sizeof(string), "%s says quietly: %s", sendername, result);
		ProxDetector(3.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
		format(string, sizeof(string), "(quietly) \"%s\"", params);
		SetPlayerChatBubble(playerid, string, COLOR_CHATBUBBLE, 3.0, 10000);
		new var100[300],resulttt[300],strr[300];
		format(strr, sizeof(strr),"(quietly) %s",result);
		mysql_real_escape_string(strr, resulttt);
		mysql_format(SQL,var100, sizeof(var100), "INSERT INTO chat_logs (`playerid`,`text`) VALUES ('%d','%s')", PlayerInfo[playerid][pSQLID],resulttt);
		mysql_tquery(SQL,var100,"","");
		for(new adm = 0; adm<=MAX_PLAYERS;adm++)
		{
			if(IsPlayerConnected(adm))
			{
				if(PlayerInfo[adm][pAdmin] > 0 && BigEar[adm] == 1)
 				{
 					format(string, sizeof(string), "%s says quietly: %s",sendername,result);
					SendClientMessage(adm,  COLOR_YELLOW, string);
 				}
			}
		}
		printf("%s", string);
	}
	return 1;
}
CMD:sethirecar(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			new car,string[64];
			if(sscanf(params, "d",car)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/hirecar <Car ID>");
			HireCar[playerid] = car;
			format(string, sizeof(string), "Key fashioned you can lock car %d.",car);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			SendClientMessage(playerid, COLOR_WHITE, "HINT: Type /lock.");
			return 1;
		}
	}
	return 1;
}
CMD:fish(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pJob] != 13) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not a fisherman.");
	if(VaildFishPlace(playerid) && !IsPlayerInAnyVehicle(playerid))
	{
        if(PlayerInfo[playerid][pFishes] > 0) return SCM(playerid,COLOR_WHITE,"Go to a 24/7 store to sell fish caught before fishing again");
		if(Fishing[playerid] == 1) return SCM(playerid,COLOR_WHITE,"You are already fishing.");
		TogglePlayerControllable(playerid, 0);
		LoopingAnim(playerid,"GANGS","prtial_gngtlkH",4.0,1,0,0,1,1);
		Fishing[playerid] = 1;
		FishTimer[playerid] = 20;
		SendClientMessage(playerid, COLOR_WHITE, "You're now fishing. It will take a few seconds to reel your fish in.");
		FishTimerr[playerid] = SetTimerEx("Fisher", 1000, 1, "i", playerid);
	}
	else return SendClientMessage(playerid, COLOR_WHITE, "You are not in the fishing zone. [/jobs > Fisherman]");
	return 1;
}
CMD:unrentroom(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    if(PlayerInfo[playerid][pSleeping] == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "You sleeping, use /sleep first.");
	{
		if(PlayerInfo[playerid][pPhousekey] != 999 && strcmp(PlayerInfo[playerid][pNormalName], HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0) return SendClientMessage(playerid, COLOR_WHITE, "{B8DBFF}You own this house.");
		if(PlayerInfo[playerid][pRented] == -1) return SCM(playerid, COLOR_WHITE, "{B8DBFF}You don't have rent a house.");
		PlayerInfo[playerid][pPhousekey] = 999;
		SetTimerEx("OnPropTextdrawUpdate", 1000, false, "dd", 1, PlayerInfo[playerid][pRented]);
		PlayerInfo[playerid][pRented] = -1;
		SendClientMessage(playerid, COLOR_WHITE, "{B8FFDB}You are now homeless.");
		Update(playerid,pCashx);
		Update(playerid,pPhousekeyx);
		Update(playerid,pRentedx);
	}
	return 1;
}
CMD:up(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(IsPlayerConnected(playerid))
	{
	    if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
	    {
		    new up;
			if(sscanf(params, "d",up)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/up <Size>");
		    new Float:slx, Float:sly, Float:slz;
	        GetPlayerPos(playerid, slx, sly, slz);
	        SetPlayerPosEx(playerid, slx, sly, slz+up);
		}
		else return SCM(playerid,COLOR_WHITE,"{5CAD5C}Error: Your admin/helper level isn't high enough to use this command.");
	}
	return 1;
}
CMD:time(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	new sendername[25],string[256];
	new hour,minute,second;
	gettime(hour,minute,second);
	format(string, sizeof(string), "The current time is %d:%s%d (%d seconds).", hour, (minute < 10) ? ("0") : (""), minute, second);
	SendClientMessage(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "Connected for %d seconds.", PlayerInfo[playerid][pPayDay]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	GetPlayerName(playerid, sendername, sizeof(sendername));
	format(string, sizeof(string), "* %s raises her hand and looks down at her watch.", sendername);
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);
	return 1;
}
CMD:open(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
        for(new i = 1; i < sizeof(HouseInfo); i++)
		{
			if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]) || PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
			{
				if(PlayerInfo[playerid][pPhousekey] == i && strcmp(PlayerInfo[playerid][pNormalName], HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
				{
					if(HouseInfo[i][hLock] == 1)
					{
						HouseInfo[i][hLock] = 0;
						GameTextForPlayer(playerid, "~w~Door ~g~Unlocked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						new str2[128];
						mysql_format(SQL,str2,sizeof(str2),"UPDATE `houses` SET `Lockk`='0' WHERE `ID`='%d'",i);
						mysql_tquery(SQL,str2,"","");
						return 1;
					}
					if(HouseInfo[i][hLock] == 0)
					{
						HouseInfo[i][hLock] = 1;
						GameTextForPlayer(playerid, "~w~Door ~r~Locked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						new str2[128];
						mysql_format(SQL,str2,sizeof(str2),"UPDATE `houses` SET `Lockk`='1' WHERE `ID`='%d'",i);
						mysql_tquery(SQL,str2,"","");
						return 1;
					}
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}You don't own a house.");
			}
		}
		for(new i = 1; i < sizeof(BizzInfo); i++)
		{
			if(BizzInfo[i][bSbiz] != 0) return 0;
			if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
			{
				if(PlayerInfo[playerid][pPbiskey] == i)
				{
					if(BizzInfo[i][bLocked] == 1)
					{
						BizzInfo[i][bLocked] = 0;
						GameTextForPlayer(playerid, "~w~Bussiness ~g~Open", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						new str2[128];
						mysql_format(SQL,str2,sizeof(str2),"UPDATE `bizz` SET `Locked`='0' WHERE `ID`='%d'",i);
						mysql_tquery(SQL,str2,"","");
						return 1;
					}
					if(BizzInfo[i][bLocked] == 0)
					{
						BizzInfo[i][bLocked] = 1;
						GameTextForPlayer(playerid, "~w~Bussiness ~r~~h~Closed", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						new str2[128];
						mysql_format(SQL,str2,sizeof(str2),"UPDATE `bizz` SET `Locked`='0' WHERE `ID`='%d'",i);
						mysql_tquery(SQL,str2,"","");
						return 1;
					}
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}You don't own a bussines.");
			}
		}
    }
    return 1;
}
CMD:usedrugs(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
   	{
        if(UsingDrugs[playerid] == 0)
        {
			if(PlayerInfo[playerid][pDrugs] >= 2)
    	    {
    	        PlayerStoned[playerid] += 2;
    		    if(PlayerStoned[playerid] >= 2) { GameTextForPlayer(playerid, "~w~You are~n~~p~Stoned", 4000, 1); }
                new Float:health;
                GetPlayerHealthEx(playerid, health);
                if(health >= 90.0)
                {
                	SetPlayerHealthEx(playerid, 40);
				}
				else
				{
    				SetPlayerHealthEx(playerid, health + 40.0);
				}
				new sendername[25];
                GetPlayerName(playerid, sendername, sizeof(sendername));
                SendClientMessage(playerid, COLOR_WHITE, "{999999}You used 2 grams of drugs.");
				new string[128];
		        format(string, sizeof(string), "%s has just took some drugs.", sendername);
                ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                PlayerInfo[playerid][pDrugs] -= 2;
		        UsingDrugs[playerid] = 1;
                drug[playerid] = SetTimerEx("DrugEffectGone",30000,false,"d",playerid);
				new str2[128];
				mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `Money`='%d',`Drugs`='%d' WHERE `name`='%s'",GetPlayerCash(playerid),PlayerInfo[playerid][pDrugs],PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str2,"","");
            }
        	else
          	{
      	    	SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't have drugs anymore.");
            }
	    }
        else
		{
            SendClientMessage(playerid, COLOR_WHITE, "{999999}Wait until you recover.");
        }
	}//not connected
	return 1;
}
CMD:getdrugs(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if(PlayerInfo[playerid][pJob] != 4) return SCM(playerid,COLOR_WHITE,"{FFF8C6}You are not a Drugs Dealer.");
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, 322.9745,1119.4409,1083.8828)) return SCM(playerid,COLOR_WHITE,"{FFF8C6}You are not the place where you can get drugs.");
	    new points;
	    new dpoints = PlayerInfo[playerid][pDrugs];
	    if(sscanf(params, "i", points)) return SCM(playerid, COLOR_WHITE, "Usage: /getdrugs [amount]");
	    new totaldrugs = dpoints + points;
	    if(points < 1) return SCM(playerid, COLOR_WHITE,"Numar invalid");
	    if(totaldrugs > 99) return SCM(playerid, COLOR_WHITE, "You can not have so many drugs on you");
	    new money = points * 1000;
		if(GetPlayerCash(playerid) < money) return SCM(playerid,COLOR_WHITE,"You do not have enough money");
		PlayerInfo[playerid][pDrugs] += points;
		GivePlayerCash(playerid,-money);
		new string[64];
		format(string,sizeof(string),"You Bought %d Gram Of Drugs For $%s",points,FormatNumber(money));
		SCM(playerid,COLOR_WHITE,string);
		new str2[128];
		mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `Money`='%d',`Drugs`='%d' WHERE `name`='%s'",GetPlayerCash(playerid),PlayerInfo[playerid][pDrugs],PlayerInfo[playerid][pNormalName]);
		mysql_tquery(SQL,str2,"","");
		return 1;
	}
	return 1;
}
CMD:selldrugs(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
        if(PlayerInfo[playerid][pJob] != 4) return SendClientMessage(playerid, COLOR_GREY, "{FFB870}You are not a Drugs Dealer.");
		new playa,needed,string[128],giveplayer[25],sendername[25],money;
		if(sscanf(params, "uii",playa,needed,money)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/selldrugs <Name/Playerid> <Drugs> <Price>");
		if(needed < 1 || needed > 50) return SendClientMessage(playerid, COLOR_WHITE,"{FFF8C6}Grams not lower then 1, or above 50.");
		if(money < 1 || money > 50000) return SendClientMessage(playerid, COLOR_WHITE,"{FFF8C6}Price not lower then 1$, or above 50,000$.");
    	if(needed > PlayerInfo[playerid][pDrugs]) return SendClientMessage(playerid, COLOR_WHITE,"{FFF8C6}You dont have that much Drugs with you.");
    	if(IsPlayerConnected(playa))
    	{
    	    if(playa != INVALID_PLAYER_ID)
		    {
 	     		if (ProxDetectorS(8.0, playerid, playa))
        		{
            	    if(playa == playerid) return SendClientMessage(playerid, COLOR_WHITE,"{FFF8C6}Cant sell to yourself.");
	        	    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
	        		GetPlayerName(playerid, sendername, sizeof(sendername));
	        	    format(string, sizeof(string), "{B8FFDB}* You offerd %s to buy %d gram of drugs for $%s.", giveplayer, needed, FormatNumber(money));
	        		SendClientMessage(playerid, COLOR_WHITE, string);
	         		format(string, sizeof(string), "{B8FFDB}* Drug Dealer %s wants to sell you %d gram for $%s, (type /accept drugs %d) to buy.", sendername, needed, FormatNumber(money),playerid);
		        	SendClientMessage(playa, COLOR_WHITE, string);
		         	DrugOffer[playa] = playerid;
		        	DrugPrice[playa] = money;
		        	DrugGram[playa] = needed;
	    		}
		    	else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}This player is not near you.");
        	}
    	}
     	else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	}
	return 1;
}
CMD:bizstatus(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pPbiskey];
		if(bouse == 255) return SendClientMessage(playerid, COLOR_WHITE,"{FFB870}You don't own a business.");
		PrintBizInfo(playerid,bouse);
	}
	return 1;
}
CMD:gotohouse(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pAdmin] >= 5)
	    {
			new housenum,string[128],name[30];
			if(sscanf(params, "d",housenum)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/house <House ID>");
			GetPlayerName(playerid, name, sizeof(name));
			format(string,sizeof(string),"%s used /gotohouse %d.",name,housenum);
			ABroadCast(COLOR_ADMCOMMANDS,string,1);
			SetPlayerInterior(playerid,HouseInfo[housenum][hInterior]);
			SetPlayerPosEx(playerid,HouseInfo[housenum][hExitx],HouseInfo[housenum][hExity],HouseInfo[housenum][hExitz]);
			PlayerInfo[playerid][pInt] = HouseInfo[housenum][hInterior];
			PlayerInfo[playerid][pLocal] = housenum;
			InHouse[playerid] = housenum;
			SetPlayerVirtualWorld(playerid,HouseInfo[housenum][hVirtual]);
			if(strlen(housestring[InHouse[playerid]]) > 0)
			{
   				StopAudioStreamForPlayer(playerid);
				PlayAudioStreamForPlayer(playerid, housestring[InHouse[playerid]]);
			}
		}
		else return SCM(playerid,COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:houseo(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pAdmin] >= 5)
	    {
			new housenum;
			if(sscanf(params, "d",housenum)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/houseo <House ID>");
			SetPlayerPosEx(playerid,HouseInfo[housenum][hEntrancex],HouseInfo[housenum][hEntrancey],HouseInfo[housenum][hEntrancez]);
		}
		else return SCM(playerid,COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:gotobiz(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pAdmin] >= 5)
	    {
			new housenum,string[128],name[30];
			if(sscanf(params, "d",housenum)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/biz <Biz ID>");
			if(housenum < 0 || housenum > 52) return SCM(playerid,COLOR_WHITE,"{FFB870}Invalid BIZ ID.");
			SetPlayerPosEx(playerid,BizzInfo[housenum][bEntranceX],BizzInfo[housenum][bEntranceY],BizzInfo[housenum][bEntranceZ]);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			GetPlayerName(playerid, name, sizeof(name));
			format(string,sizeof(string),"%s used /gotobiz %d.",name,housenum);
			ABroadCast(COLOR_ADMCOMMANDS,string,1);
		}
		else return SCM(playerid,COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:buylevel(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
        new nxtlevel = PlayerInfo[playerid][pLevel];
		new costlevel;
		new expamount,string[128],sendername[30];
		if(PlayerInfo[playerid][pLevel] == 1 || PlayerInfo[playerid][pLevel] == 2 || PlayerInfo[playerid][pLevel] == 3 || PlayerInfo[playerid][pLevel] == 4)
		{
		    expamount = nxtlevel*2;
		    costlevel = nxtlevel*4000;
		}
		else if(PlayerInfo[playerid][pLevel] >= 5)
		{
		    expamount = nxtlevel*levelexp;
		    costlevel = nxtlevel*levelcost;
		}
		if (gPlayerLogged[playerid] != 0)
		{
		    GetPlayerName(playerid,sendername,sizeof(sendername));
			if(GetPlayerCash(playerid) < costlevel) return SCM(playerid,COLOR_GRAD1,"You do not have enough cash.");
			if(PlayerInfo[playerid][pExp] < expamount) return SCM(playerid,COLOR_GRAD1,"You do not have the necessary number of respect points.");
			GivePlayerCash(playerid, -costlevel);
			PlayerInfo[playerid][pLevel]++;
		    PlayerInfo[playerid][pExp] -= expamount;
		    format(string,sizeof(string),"{3A8EBA}Cngrats !, You Now Have Level %d!",PlayerInfo[playerid][pLevel]);
			SCM(playerid,COLOR_WHITE,string);
			format(string, sizeof(string), "* %s Now Have Level %d.",sendername,PlayerInfo[playerid][pLevel]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			new var100[256],y,m,d,h,mi,s,string2[256],string3[256];
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string2,sizeof(string2),"[%02d-%02d-%d %02d:%02d:%02d] %s[user:%d] used /buylevel and now have level %d.",d,m,y,h,mi,s,sendername,PlayerInfo[playerid][pSQLID],PlayerInfo[playerid][pLevel]);
			mysql_real_escape_string(string2, string3);
			mysql_format(SQL, var100, sizeof(var100), "INSERT INTO playerlogs (`playerid`,`giverid`,`action`,`time`) VALUES ('%d','0','%s','%02d-%02d-%d %02d:%02d:%02d')", PlayerInfo[playerid][pSQLID],string3,d,m,y,h,mi,s);
			mysql_tquery(SQL,var100,"","");
		    new total = PlayerInfo[playerid][pExp];
		    if(total > 0)
		    {
		        PlayerInfo[playerid][pExp] = total;
		    }
		    else
		    {
		        PlayerInfo[playerid][pExp] = 0;
		    }
		    Update(playerid,pCashx);
		    Update(playerid,pRP);
			Update(playerid,pLevelx);
			SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
		}
		else return SendClientMessage(playerid, COLOR_WHITE,"{FFB870}You are not logged in.");
	}
	return 1;
}
CMD:paint(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(IsPlayerConnected(playerid))
	{
	    if(IsPlayerInRangeOfPoint(playerid,3.0, 1154.4122,-1440.0548,15.7969))
		{
			new string[256],string1[10],string2[10],string3[10],string4[10];
		    if(PlayerInfo[playerid][pWantedLevel] != 0) return SCM(playerid,COLOR_WHITE,"You can not enter, because you have wanted.");
			if(paintm[1] == 1) { format(string1,sizeof(string1),"rc_arena"); }
			if(paintm[1] == 2) { format(string1,sizeof(string1),"tennis"); }
			if(paintm[1] == 3) { format(string1,sizeof(string1),"farm"); }
			if(paintm[1] == 4) { format(string1,sizeof(string1),"beach"); }
			if(paintm[1] == 5) { format(string1,sizeof(string1),"lspd"); }

			if(paintm[2] == 1) { format(string2,sizeof(string2),"rc_arena"); }
			if(paintm[2] == 2) { format(string2,sizeof(string2),"tennis"); }
			if(paintm[2] == 3) { format(string2,sizeof(string2),"farm"); }
			if(paintm[2] == 4) { format(string2,sizeof(string2),"beach"); }
			if(paintm[2] == 5) { format(string2,sizeof(string2),"lspd"); }

			if(paintm[3] == 1) { format(string3,sizeof(string3),"rc_arena"); }
			if(paintm[3] == 2) { format(string3,sizeof(string3),"tennis"); }
			if(paintm[3] == 3) { format(string3,sizeof(string3),"farm"); }
			if(paintm[3] == 4) { format(string3,sizeof(string3),"beach"); }
			if(paintm[3] == 5) { format(string3,sizeof(string3),"lspd"); }

			if(paintm[4] == 1) { format(string4,sizeof(string4),"rc_arena"); }
			if(paintm[4] == 2) { format(string4,sizeof(string4),"tennis"); }
			if(paintm[4] == 3) { format(string4,sizeof(string4),"farm"); }
			if(paintm[4] == 4) { format(string4,sizeof(string4),"beach"); }
			if(paintm[4] == 5) { format(string4,sizeof(string4),"lspd"); }
		    format(string,sizeof(string),"Classic / Free For All [%d/20] [%s]\nClassic + Armour [%d/20] [%s]\nGun Game [%d/20] [%s]\nDeagle Only [%d/20] [%s]",paintp[1],string1,paintp[2],string2,paintp[3],string3,paintp[4],string4);
		    ShowPlayerDialog(playerid, DIALOG_PAINTBALL, DIALOG_STYLE_LIST, "Choose Arena", string, "Select", "Close");
		}
	}
	return 1;
}
CMD:testp(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(IsPlayerConnected(playerid))
	{
	    new string[128];
	    format(string,sizeof(string),"pr1=%d, pt1=%d, pr2=%d, pt2=%d, pr3=%d, pt3=%d, pr4=%d, pt4=%d, PaintballG=%d", paintrs[1], paintt[1],paintrs[2], paintt[2],paintrs[3], paintt[3],paintrs[4], paintt[4], PlayerInfo[playerid][pPaintBallG]);
     	SendClientMessage(playerid, COLOR_YELLOW, string);
 	}
 	return 1;
}
CMD:paintleave(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pPaintBallG] > 0)
	    {
	        new string [128],sendername[30];
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        SendClientMessage(playerid, COLOR_WHITE, "Leaving the paintball arena...");
			foreach(Player, i)
			{
			    if(PlayerInfo[i][pPaintBallG] == PlayerInfo[playerid][pPaintBallG])
			    {
			        format(string,sizeof(string),"%s has left the paintball arena.", sendername);
			        SendClientMessage(i, COLOR_YELLOW, string);
				}
			}
			SetPlayerHealthEx(playerid, 100.0);
			curatj[playerid] = 0;
			for (new i = 0; i != 5; ++i) SendDeathMessageToPlayer(playerid, 1001, 1001, 1001);
			PlayerTextDrawHide(playerid, PaintBallText[playerid]);
			SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			paintp[PlayerInfo[playerid][pPaintBallG]]--;
	        PlayerInfo[playerid][pPaintBallG] = 0;
	        PlayerInfo[playerid][pPaintBallKills] = 0;
	        PlayerInfo[playerid][pPaintBallVoted] = 0;
	        PlayerInfo[playerid][pPaintBallVoted2] = 0;
	        ResetPlayerWeaponsEx(playerid);
		    ResetPlayerWeapons(playerid);
		    SetPlayerArmourEx(playerid, 0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerToTeamColor(playerid);
		    SetPlayerWorldBounds(playerid, 20000.0000, -20000.0000, 20000.0000, -20000.0000);
		    SetPlayerPos(playerid, 1154.4122,-1440.0548,15.7969);
		}
	}
	return 1;
}
CMD:leavepaint(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(IsPlayerConnected(playerid))
	{
	    return cmd_paintleave(playerid, params);
	}
	return 1;
}
CMD:votemap(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
	{
	    if(paintrs[PlayerInfo[playerid][pPaintBallG]] < 1) return SendClientMessage(playerid, COLOR_WHITE, "You can't use /votemap when round has started.");
		if(PlayerInfo[playerid][pPaintBallVoted] > 0) return SendClientMessage(playerid, COLOR_WHITE, "You have already voted a map.");
		if(PlayerInfo[playerid][pPaintBallG] > 0)
	    {
		    ShowPlayerDialog(playerid, DIALOG_PAINTBALLMAP, DIALOG_STYLE_LIST, "Vote Paintball Map", "rc_arena\ntennis\nfarm\nbeach\nlspd", "Vote", "Exit");
		}
	}
	return 1;
}
CMD:votegun(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pPaintBallG] > 0)
		{
	    	if(PlayerInfo[playerid][pPaintBallG] == 3 || PlayerInfo[playerid][pPaintBallG] == 4) return SendClientMessage(playerid, COLOR_WHITE, "You can't use /votegun at this game type.");
	    	if(paintrs[PlayerInfo[playerid][pPaintBallG]] < 1) return SendClientMessage(playerid, COLOR_WHITE, "You can't use /votegun when round has started.");
	    	if(PlayerInfo[playerid][pPaintBallVoted2] > 0) return SendClientMessage(playerid, COLOR_WHITE, "You have already voted a gun.");
	    	if(PlayerInfo[playerid][pPaintBallG] == 1 || PlayerInfo[playerid][pPaintBallG] == 2)
	    	{
	        	if(paintrs[PlayerInfo[playerid][pPaintBallG]] > 0)
	        	{
	        		ShowPlayerDialog(playerid, DIALOG_PAINTBALLWEAPON, DIALOG_STYLE_LIST, "Vote Paintball Weapon", "Deagle, M4, Grenade & Spray\nBaseball Bat\nChainsaw", "Vote", "Exit");
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "You can't use this command now.");
			}
		}
	}
	return 1;
}
CMD:bigears(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(IsPlayerConnected(playerid))
	{
	    new string[256],sendername[30];
	    GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid,COLOR_ERROR, AdminOnly);
		if (!BigEar[playerid])
		{
			BigEar[playerid] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "{999999}Your ears have grown.");
			format(string, sizeof(string), "{FFFFCC}Admin %s has activated /bigears.",sendername);
			ABroadCast(COLOR_WHITE, string,6);
		}
		else if (BigEar[playerid])
		{
			(BigEar[playerid] = 0);
			SendClientMessage(playerid, COLOR_WHITE, "{999999}Your ears have shrank.");
			format(string, sizeof(string), "{FFFFCC}Admin %s has deactivated /bigears.",sendername);
			ABroadCast(COLOR_WHITE, string,6);
		}
	}
	return 1;
}
CMD:aaa2(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] > 0 || PlayerInfo[playerid][pHelper] > 0)
		{
		    SetPlayerVirtualWorld(playerid, 1);
	    	SetPlayerInterior(playerid, 0);
	    	SetPlayerPosEx(playerid, 1477.1122,1713.9915,10.8125);
	    	SendClientMessage(playerid, COLOR_WHITE, "Welcome to LV airport (in virtual world).");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "You are not an helper/admin.");
	}
	return 1;
}
CMD:ha(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] > 0 || PlayerInfo[playerid][pHelper] > 0)
		{
			new string[250],result[250],sendername[25];
			if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/ha <Message>");
	   		GetPlayerName(playerid, sendername, sizeof(sendername));
	    	if(PlayerInfo[playerid][pAdmin] >= 1)
	    	{
	     		format(string, sizeof(string), "{FF9600}[HC]{FF9600} Admin Level %d {2192d8}%s: {FFFFFF}%s", PlayerInfo[playerid][pAdmin], sendername, result);
	     		ABroadCast(COLOR_ADMIN, string,1);
	     		HLChat(COLOR_ADMIN,string);
	    	}
	    	else if(PlayerInfo[playerid][pHelper] >= 1)
	    	{
	    	    format(string, sizeof(string), "{FF9600}[HC]{FF9600} Helper Level %d {2192d8}%s: {FFFFFF}%s", PlayerInfo[playerid][pHelper], sendername, result);
	     		ABroadCast(COLOR_ADMIN, string,1);
	     		HLChat(COLOR_ADMIN,string);
	    	}
        }
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:hshop(playerid, params[])
{
    if(PlayerInfo[playerid][pHelper] >= 1)
	{
	    new str1[128];
	    format(str1, sizeof(str1), "Helper Shop | Points : {A9C4E4}%d", PlayerInfo[playerid][pHelpedPlayers]);
	    ShowPlayerDialog(playerid, DIALOG_HSHOP, DIALOG_STYLE_TABLIST_HEADERS, str1,"Item\tPrice\n{FFFFFF}$3,000,000\t{A9C4E4}50\n{FFFFFF}Clear FP\t{A9C4E4}70\n{FFFFFF}Hidden Color\t{A9C4E4}100\n{FFFFFF}+1 Vehicle Slot\t{A9C4E4}500\n{FFFFFF}Premium Account\t{A9C4E4}1.000", "Select","Cancel");
	}
    return 1;
}
CMD:ashop(playerid, params[])
{
    if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "You need to login first.");
    {
        if(PlayerInfo[playerid][pAdmin] >= 7)
        {
            ShowPlayerDialog(playerid,DIALOG_ASHOP2,DIALOG_STYLE_LIST, "{00BFFF}Admin Shop","Clear FP\nChange nickname\nChange Phone Number\nFireworks", "Select","Exit");
        }
    }
    return 1;
}
CMD:a(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    //if(UseCmdTimer[playerid] == 0)return SCM(playerid, -1, "You Can Use /a Next 3 Seconds");
    {
		if (PlayerInfo[playerid][pAdmin] > 0)
		{
			new string[250],result[250],sendername[25];
			if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/a <Message>");
	   		GetPlayerName(playerid, sendername, sizeof(sendername));
	    	if(PlayerInfo[playerid][pAdmin] > 0)
			{
			   	new estegrad[MAX_STRING];
		        if(PlayerInfo[playerid][pAdmin] == 1) estegrad = "Admin 1";
		        if(PlayerInfo[playerid][pAdmin] == 2) estegrad = "Admin 2";
		        if(PlayerInfo[playerid][pAdmin] == 3) estegrad = "Admin 3";
		        if(PlayerInfo[playerid][pAdmin] == 4) estegrad = "Admin 4";
		        if(PlayerInfo[playerid][pAdmin] == 5) estegrad = "Admin 5";
 	            if(PlayerInfo[playerid][pAdmin] == 6) estegrad = "Admin 6";
 	            if(PlayerInfo[playerid][pAdmin] == 7) estegrad = "Donater";
 	            if(PlayerInfo[playerid][pAdmin] == 8) estegrad = "SuperVisor";
 	            if(PlayerInfo[playerid][pAdmin] == 9) estegrad = "Operator";
				if(PlayerInfo[playerid][pAdmin] == 10) estegrad = "Operator Plus";
				if(PlayerInfo[playerid][pAdmin] == 11) estegrad = "Manager";
				if(PlayerInfo[playerid][pAdmin] == 12) estegrad = "Developer";
				if(PlayerInfo[playerid][pAdmin] == 13) estegrad = "Owner";
				if(PlayerInfo[playerid][pAdmin] == 14) estegrad = "Founder";
				format(string, sizeof(string), "{FF9600}[AC]{FF0000} %s %s: {FFFFFF}%s",estegrad , sendername, result);
	            UseCmdTimer[playerid] = 0;
                SetTimerEx("unmutecommand", 3000, false, "i", playerid);
			}
			ABroadCast(COLOR_ADMCHAT, string,1);
        }
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:cw(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerInAnyVehicle(playerid))
    {
		new result[250],sendername[25],string[250];
		if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/cw <Message>");
		GetPlayerName(playerid, sendername, sizeof(sendername));
	    format(string, sizeof(string), "(Car Whisper) %s[%d]: %s", sendername, playerid, result);
        foreach(Player,i)
        {
            if(IsPlayerConnected(i))
            {
                if(IsPlayerInVehicle(i, GetPlayerVehicleID(playerid)))
                {
                    SendClientMessage(i,COLOR_YELLOW, string);
                }
            }
        }
		new var100[300],resulttt[300],strr[300];
		format(strr, sizeof(strr),"(car whisper) %s",result);
		mysql_real_escape_string(strr, resulttt);
		mysql_format(SQL,var100, sizeof(var100), "INSERT INTO chat_logs (`playerid`,`text`) VALUES ('%d','%s')", PlayerInfo[playerid][pSQLID],resulttt);
		mysql_tquery(SQL,var100,"","");
        return 1;
    }
    else
	{
		SendClientMessage(playerid, COLOR_WHITE,"{FFF8C6}You need to be in vehicle.");
	}
    return 1;
}
CMD:skydive(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			GetPlayerPos(playerid, rx, ry, rz);
			if (IsPlayerConnected(playerid))
			{
				GivePlayerWeaponEx(playerid, 46, 0);
				SetPlayerPosEx(playerid,rx, ry, rz+1500);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}
CMD:live(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		{
			new giveplayerid,count=0;
			if(sscanf(params, "u",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/live <Name/Playerid>");
			foreach(Player, i)
			{
				if(TalkingLive[i] != 0 && PlayerInfo[i][pMember] != 9)
				{
					count++;
				}
			}
			if(PlayerInfo[playerid][pRank] >= 1 && PlayerInfo[playerid][pRank] <= 5 && count > 2) return SendClientMessage(playerid, COLOR_WHITE, "You can't invite more than 3 players to a live interview.");
			if(PlayerInfo[playerid][pRank] >= 6 && count > 3) return SendClientMessage(playerid, COLOR_WHITE, "You can't invite more than 4 players to a live interview.");
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_WHITE, "You can't invite yourself to a live interview.");
						if(TalkingLive[giveplayerid] != 0) return SendClientMessage(playerid, COLOR_WHITE, "This player is already in a live interview.");
						if(PlayerInfo[giveplayerid][pMember] == 9) return SendClientMessage(playerid, COLOR_WHITE, "You can't invite a news reporter to a live interview.");
						new sendername[25],giveplayer[25],string[128];
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "You invited %s to take a live interview.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "%s has invited you to take a live interview. (to accept the invitation, type '/accept live %d').", sendername,playerid);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						LiveOffer[giveplayerid] = playerid;
						PlayerInfo[playerid][pLives] += 1;
						Update(playerid, pLivesx);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_WHITE,"This player is not near you.");
					    return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
			    return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a News Reporter.");
		}
	}
	return 1;
}
CMD:endlive(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		{
			new giveplayerid,string[128],sendername[30],giveplayer[30],count=0;
			if(sscanf(params, "u",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/endlive <Name/Playerid>");
			if(TalkingLive[giveplayerid] != 0)
		    {
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				format(string,sizeof(string),"You have stoped %s live interview!",giveplayer);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string,sizeof(string),"%s has stoped the live interview!",sendername);
		        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		        TogglePlayerControllable(giveplayerid, 1);
	            TalkingLive[giveplayerid] = 0;
				foreach(Player, i)
				{
					if(TalkingLive[i] != 0 && PlayerInfo[i][pMember] != 9)
					{
						count++;
					}
				}
				if(count < 1)
				{
					TogglePlayerControllable(playerid, 1);
					TalkingLive[playerid] = 0;
				}
		    }
		}
		else
		{
		    SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a News Reporter.");
		}
	}
	return 1;
}
CMD:setteam(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if (PlayerInfo[playerid][pAdmin] >= 11)
		{
			new para1,level,string[128],giveplayer[25],sendername[25];
			if(sscanf(params, "ud",para1,level)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/setteam <Name/Playerid> <Team 3(civ) - 2(cop) - 4(pasnic) - 5(mafia) - 11(hitman)>");
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pTeam] = level;
					gTeam[para1] = level;
					SetPlayerSpawn(para1);
					printf("{FFA000}[AdmCmd]: {FFFFFF}: %s has switched %s to team %d.", sendername, giveplayer, level);
					format(string, sizeof(string), "You have been switched to team %d by %s.", level, sendername);
					SendClientMessage(para1, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "You have switched %s to team %d.", giveplayer,level);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					mysql_format(SQL,string,sizeof(string),"UPDATE users SET `Team`='%d' WHERE `name`='%s'",PlayerInfo[para1][pTeam],PlayerInfo[para1][pNormalName]);
					mysql_tquery(SQL,string,"","");
				}
			}
		    else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}
CMD:afklist(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if (PlayerInfo[playerid][pAdmin] < 3) return SCM(playerid,COLOR_ERROR, AdminOnly);
	{
		new string[128],playername[25];
		SendClientMessage(playerid, COLOR_YELLOW, ".::_____ AFK Players ______::.");
		foreach(Player,i)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[playerid][pSleeping] == 1)
				{
					GetPlayerName(i, playername,sizeof(playername));
					format(string, 256, "Player: %s(%d)", PlayerName, i);
					SendClientMessage(playerid, COLOR_YELLOW, string);
 				}
			}
		}
	}
	return 1;
}
CMD:setskin(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
    	if (PlayerInfo[playerid][pAdmin] >= 6)
		{
			new para1,level,string[128],giveplayer[25],sendername[25];
			if(sscanf(params, "ud",para1,level)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/setskin <Name/Playerid> <Skin ID>");
			if(level < 0 || level > 311) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Wrong skin ID(0-311).");
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pModel] = level;
					format(string, sizeof(string), "Your skin has been changed by Admin %s", sendername);
					SendClientMessage(para1, COLOR_WHITE, string);
					format(string, sizeof(string), "You have given %s skin to %d.", giveplayer,level);
					SendClientMessage(playerid, COLOR_WHITE, string);
				    SetPlayerSkin(para1, PlayerInfo[para1][pModel]);
				    PlayerTextDrawSetPreviewModel(playerid, SkinPreview[playerid], level);
                    PlayerTextDrawShow(playerid, SkinPreview[playerid]);
					new str2[128];
					mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `Money`='%d',`Model`='%d' WHERE `name`='%s'",GetPlayerCash(playerid),PlayerInfo[para1][pModel],PlayerInfo[para1][pNormalName]);
					mysql_tquery(SQL,str2,"","");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}
CMD:temporarskin(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
    	if (PlayerInfo[playerid][pAdmin] >= 6)
		{
			new para1,level,string[128],giveplayer[25],sendername[25];
			if(sscanf(params, "ud",para1,level)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/temporarskin <Name/Playerid> <Skin ID>");
			if(level < 0 || level > 311) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Wrong skin ID(0-311).");
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Your skin has been changed temporary by Admin %s", sendername);
					SendClientMessage(para1, COLOR_WHITE, string);
					format(string, sizeof(string), "You have given temporary skin %s to %d.", giveplayer,level);
					SendClientMessage(playerid, COLOR_WHITE, string);
				    SetPlayerSkin(para1, level);
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
	}
	return 1;
}

CMD:tskin(playerid, params[])
{
  return cmd_temporarskin(playerid, params);
}

CMD:ticket(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
        if(OnDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not on Duty.");
        new giveplayerid,moneys,result[50],giveplayer[25],sendername[25],string[128];
		if(sscanf(params, "uis[50]",giveplayerid,moneys,result)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/ticket <Name/Playerid> <Amount of Money> <Reason>");
		if(moneys < 1 || moneys > 99999) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Ticket money can't be below 1 or higher then 99999.");
		if(IsACop(giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: You can't give a ticket to a Cop!");
		if(IsPlayerConnected(giveplayerid))
		{
		    if(giveplayerid != INVALID_PLAYER_ID)
		    {
		        if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
				    if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 8)
				    {
				    	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "{B8FFDB}* You gave %s a Ticket costing $%s, reason: %s", giveplayer, FormatNumber(moneys), result);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "{B8FFDB}* Officer %s has given you a Ticket costing $%s, reason: %s, type /accept ticket %d to accept it", sendername, FormatNumber(moneys), result,playerid);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						TicketOffer[giveplayerid] = playerid;
						TicketMoney[giveplayerid] = moneys;
						return 1;
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a LSPD/LVPD member.");
				}
				else return SendClientMessage(playerid, COLOR_WHITE,"{FFFFCC}This player is not near you.");
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	}
	return 1;
}
CMD:broke(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
    {
	    for(new i = 1; i < sizeof(HouseInfo); i++)
		{
			if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
			{
			    SetPlayerInterior(playerid,HouseInfo[i][hInterior]);
				SetPlayerPosEx(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
				GameTextForPlayer(playerid, "~r~~h~Breached the door", 5000, 1);
				PlayerInfo[playerid][pInt] = HouseInfo[i][hInterior];
				PlayerInfo[playerid][pLocal] = i;
				SetPlayerVirtualWorld(playerid,HouseInfo[i][hVirtual]);
				InHouse[playerid] = i;
				WantedPoints[playerid] += 2;
				if(WantedPoints[playerid] > 13)
				{
					WantedPoints[playerid] = 13;
				}
				SetPlayerCriminal(playerid,255, "entry into restricted area");
				if(strlen(housestring[InHouse[playerid]]) > 0)
				{
    				StopAudioStreamForPlayer(playerid);
					PlayAudioStreamForPlayer(playerid, housestring[InHouse[playerid]]);
				}
			}
		}
		if (PlayerToPoint(3.0, playerid,-329.5258,1536.7759,76.6117)) //nr
		{
		    SetPlayerInterior(playerid,3);
			SetPlayerPosEx(playerid,-2027.0515,-104.5211,1035.1719);
			PlayerInfo[playerid][pInt] = 3;
			InHQ[playerid] = 9;
			WantedPoints[playerid] += 2;
			if(WantedPoints[playerid] > 13)
			{
				WantedPoints[playerid] = 13;
			}
			SetPlayerCriminal(playerid,255, "entry into restricted area");
		}
		else if (PlayerToPoint(3.0, playerid,918.6766,-1252.2185,16.2109)) //tow
		{
		    SetPlayerInterior(playerid,1);
			SetPlayerPosEx(playerid,626.3122,-11.8606,1000.9219);
			PlayerInfo[playerid][pInt] = 1;
			SetPlayerVirtualWorld(playerid, 10);
			InHQ[playerid] = 8;
			WantedPoints[playerid] += 2;
			if(WantedPoints[playerid] > 13)
			{
				WantedPoints[playerid] = 13;
			}
			SetPlayerCriminal(playerid,255, "entry into restricted area");
		}
		else if (PlayerToPoint(3.0, playerid,2435.3064,1671.0139,10.8203)) //SI
		{
		    SetPlayerInterior(playerid,3);
			SetPlayerPosEx(playerid,1494.2838,1304.3364,1093.2891);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid, 3);
			InHQ[playerid] = 12;
			WantedPoints[playerid] += 2;
			if(WantedPoints[playerid] > 13)
			{
				WantedPoints[playerid] = 13;
			}
			SetPlayerCriminal(playerid,255, "entry into restricted area");
		}
		else if (PlayerToPoint(3.0, playerid,1081.1794,-345.3979,73.9825))//hitman
		{
		    SetPlayerInterior(playerid,12);
			SetPlayerVirtualWorld(playerid, 2);
			SetPlayerPosEx(playerid,2323.9993,-1148.0469,1050.7101);
			PlayerInfo[playerid][pInt] = 12;
			InHQ[playerid] = 11;
			WantedPoints[playerid] += 2;
			if(WantedPoints[playerid] > 13)
			{
				WantedPoints[playerid] = 13;
			}
			SetPlayerCriminal(playerid,255, "entry into restricted area");
		}
		else if (PlayerToPoint(3.0, playerid,2475.7747,-1750.5632,13.5469)) //LS TAXI
		{
		    SetPlayerInterior(playerid,18);
			SetPlayerPosEx(playerid,1700.9830,-1667.8865,20.2188);
			PlayerInfo[playerid][pInt] = 18;
			SetPlayerVirtualWorld(playerid, 5);
			InHQ[playerid] = 13;
			WantedPoints[playerid] += 2;
			if(WantedPoints[playerid] > 13)
			{
				WantedPoints[playerid] = 13;
			}
			SetPlayerCriminal(playerid,255, "entry into restricted area");
		}
		else if (PlayerToPoint(3.0, playerid,1614.92480, 1816.09631, 10.91310)) //fireman / paramedic
		{
		    SetPlayerInterior(playerid,3);
			SetPlayerPosEx(playerid,1494.2838,1304.3364,1093.2891);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid, 7);
			InHQ[playerid] = 14;
			WantedPoints[playerid] += 2;
			if(WantedPoints[playerid] > 13)
			{
				WantedPoints[playerid] = 13;
			}
			SetPlayerCriminal(playerid,255, "entry into restricted area");
		}
		else if (PlayerToPoint(3.0, playerid,1481.1063,-1771.2532,18.7958))
        {
	        SetPlayerInterior(playerid,3);
		    SetPlayerPosEx(playerid,386.5259, 173.6381, 1008.3828);
		    GameTextForPlayer(playerid, "~w~Government", 5000, 1);
		    PlayerInfo[playerid][pInt] = 3;
		    SetPlayerVirtualWorld(playerid, 3);
		    InHQ[playerid] = 7;
			WantedPoints[playerid] += 2;
			if(WantedPoints[playerid] > 13)
			{
				WantedPoints[playerid] = 13;
			}
			SetPlayerCriminal(playerid,255, "entry into restricted area");
		}
		else if (PlayerToPoint(8.0, playerid,1456.7423,2773.3423,10.8203))//Los Aztecas
		{
	        GameTextForPlayer(playerid, "~g~Los Aztecas", 1000, 1);
	        SetPlayerInterior(playerid,6);
	        PlayerInfo[playerid][pInt] = 6;
		    SetPlayerPosEx(playerid,774.213989,-48.924297,1000.585937);
		    SetPlayerVirtualWorld(playerid, 1);
            InHQ[playerid] = 4;
			WantedPoints[playerid] += 2;
			if(WantedPoints[playerid] > 13)
			{
				WantedPoints[playerid] = 13;
			}
			SetPlayerCriminal(playerid,255, "entry into restricted area");
		}
		else if (PlayerToPoint(8.0, playerid,2495.3271,-1690.6740,14.7656))//Grove Street
		{
	        GameTextForPlayer(playerid, "~g~Grove Street", 1000, 1);
	        SetPlayerInterior(playerid,3);
		    SetPlayerPosEx(playerid,2496.049804,-1695.238159,1014.742187);
		    InHQ[playerid] = 5;
			WantedPoints[playerid] += 2;
			if(WantedPoints[playerid] > 13)
			{
				WantedPoints[playerid] = 13;
			}
			SetPlayerCriminal(playerid,255, "entry into restricted area");
			SetPlayerVirtualWorld(playerid,393);
		}
		else if (PlayerToPoint(3.0, playerid,1455.2687,750.8684,11.0234))
        {
            SetPlayerInterior(playerid,3);
		    SetPlayerPosEx(playerid,964.106994,-53.205497,1001.124572);
		    GameTextForPlayer(playerid, "~w~Ballas HQ", 5000, 1);
		    PlayerInfo[playerid][pInt] = 3;
		    InHQ[playerid] = 10;
			WantedPoints[playerid] += 2;
			if(WantedPoints[playerid] > 13)
			{
				WantedPoints[playerid] = 13;
			}
			SetPlayerCriminal(playerid,255, "entry into restricted area");
		}
		else if (PlayerToPoint(3.0, playerid,725.6769,-1440.4506,13.5391))
        {
            SetPlayerInterior(playerid,12);
		    SetPlayerPosEx(playerid,2324.2273,-1148.8241,1050.7101);
		    GameTextForPlayer(playerid, "~w~Los Vagos HQ", 5000, 1);
		    PlayerInfo[playerid][pInt] = 12;
		    InHQ[playerid] = 6;
			WantedPoints[playerid] += 2;
			if(WantedPoints[playerid] > 13)
			{
				WantedPoints[playerid] = 13;
			}
			SetPlayerCriminal(playerid,255, "entry into restricted area");
			SetPlayerVirtualWorld(playerid,1);
		}
		else if (PlayerToPoint(3.0, playerid,1073.0619,-344.5148,73.9922))
		{
		    SetPlayerInterior(playerid,3);
			SetPlayerPosEx(playerid,1212.019897,-28.663099,1000.953125);
			PlayerInfo[playerid][pInt] = 3;
			InHQ[playerid] = 8;
			WantedPoints[playerid] += 2;
			if(WantedPoints[playerid] > 13)
			{
				WantedPoints[playerid] = 13;
			}
			SetPlayerCriminal(playerid,255, "entry into restricted area");
		}
	    else if (IsPlayerInRangeOfPoint(playerid,2,-329.5258,1536.7759,76.6117)) //nr
	    {
	        SetPlayerInterior(playerid,3);
		    SetPlayerPosEx(playerid,-2027.0515,-104.5211,1035.1719);
		    PlayerInfo[playerid][pInt] = 3;
		    InHQ[playerid] = 9;
	    }
	}
	else return SCM(playerid,COLOR_WHITE,"{FFB870}You are not Hitman.");
	return 1;
}
CMD:ram(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(OnDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_WHITE, "{3385FF}You are not on Duty.");
    if(IsACop(playerid))
    {
	    for(new i = 1; i < sizeof(HouseInfo); i++)
		{
			if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
			{
			    SetPlayerInterior(playerid,HouseInfo[i][hInterior]);
				SetPlayerPosEx(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
				GameTextForPlayer(playerid, "~r~~h~Breached the door", 5000, 1);
				PlayerInfo[playerid][pInt] = HouseInfo[i][hInterior];
				PlayerInfo[playerid][pLocal] = i;
				SetPlayerVirtualWorld(playerid,HouseInfo[i][hVirtual]);
				InHouse[playerid] = i;
				if(strlen(housestring[InHouse[playerid]]) > 0)
				{
    				StopAudioStreamForPlayer(playerid);
					PlayAudioStreamForPlayer(playerid, housestring[InHouse[playerid]]);
				}
			}
		}
		if (PlayerToPoint(3.0, playerid,-329.5258,1536.7759,76.6117)) //nr
		{
		    SetPlayerInterior(playerid,3);
			SetPlayerPosEx(playerid,-2027.0515,-104.5211,1035.1719);
			PlayerInfo[playerid][pInt] = 3;
			InHQ[playerid] = 9;
		}
		else if (PlayerToPoint(3.0, playerid,918.6766,-1252.2185,16.2109)) //tow
		{
		    SetPlayerInterior(playerid,1);
			SetPlayerPosEx(playerid,626.3122,-11.8606,1000.9219);
			PlayerInfo[playerid][pInt] = 1;
			InHQ[playerid] = 8;
			SetPlayerVirtualWorld(playerid, 10);
		}
		else if (PlayerToPoint(3.0, playerid,2435.3064,1671.0139,10.8203)) //SI
		{
		    SetPlayerInterior(playerid,3);
			SetPlayerPosEx(playerid,1494.2838,1304.3364,1093.2891);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid, 3);
			InHQ[playerid] = 12;
		}
		else if (PlayerToPoint(3.0, playerid,1081.1794,-345.3979,73.9825))//hitman
		{
		    SetPlayerInterior(playerid,12);
			SetPlayerPosEx(playerid,2323.9993,-1148.0469,1050.7101);
			PlayerInfo[playerid][pInt] = 12;
			InHQ[playerid] = 11;
			SetPlayerVirtualWorld(playerid, 2);
		}
		else if (PlayerToPoint(3.0, playerid,1761.6931,-1901.9446,13.5647)) //LS TAXI
		{
		    SetPlayerInterior(playerid,18);
			SetPlayerPosEx(playerid,1700.9830,-1667.8865,20.2188);
			PlayerInfo[playerid][pInt] = 18;
			SetPlayerVirtualWorld(playerid, 5);
			InHQ[playerid] = 13;
		}
		else if (PlayerToPoint(3.0, playerid,1614.92480, 1816.09631, 10.91310)) //fireman / paramedic
		{
		    SetPlayerInterior(playerid,3);
			SetPlayerPosEx(playerid,1494.2838,1304.3364,1093.2891);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid, 7);
			InHQ[playerid] = 14;
		}
		else if (PlayerToPoint(3.0, playerid,1481.1063,-1771.2532,18.7958)) //Government
        {
	        SetPlayerInterior(playerid,3);
		    SetPlayerPosEx(playerid,386.5259, 173.6381, 1008.3828);
		    GameTextForPlayer(playerid, "~w~Government", 5000, 1);
		    PlayerInfo[playerid][pInt] = 3;
		    SetPlayerVirtualWorld(playerid, 3);
		    InHQ[playerid] = 7;
		}
		else if (PlayerToPoint(8.0, playerid,1456.7423,2773.3423,10.8203))//Los Aztecas
		{
	        GameTextForPlayer(playerid, "~g~Los Aztecas", 1000, 1);
	        SetPlayerInterior(playerid,6);
	        PlayerInfo[playerid][pInt] = 6;
		    SetPlayerPosEx(playerid,774.213989,-48.924297,1000.585937);
		    SetPlayerVirtualWorld(playerid, 1);
            InHQ[playerid] = 4;
		}
		else if (PlayerToPoint(8.0, playerid,2495.3271,-1690.6740,14.7656))//Grove Street
		{
	        GameTextForPlayer(playerid, "~g~Grove Street", 1000, 1);
	        SetPlayerInterior(playerid,3);
		    SetPlayerPosEx(playerid,2496.049804,-1695.238159,1014.742187);
		    InHQ[playerid] = 3;
		    SetPlayerVirtualWorld(playerid,393);
		}
		else if (PlayerToPoint(3.0, playerid,1455.2687,750.8684,11.0234))
        {
            SetPlayerInterior(playerid,3);
		    SetPlayerPosEx(playerid,964.106994,-53.205497,1001.124572);
		    GameTextForPlayer(playerid, "~w~Ballas HQ", 5000, 1);
		    PlayerInfo[playerid][pInt] = 3;
		    InHQ[playerid] = 10;
		}
		else if (PlayerToPoint(3.0, playerid,725.6769,-1440.4506,13.5391))
        {
            SetPlayerInterior(playerid,12);
		    SetPlayerPosEx(playerid,2324.2273,-1148.8241,1050.7101);
		    GameTextForPlayer(playerid, "~w~Los Vagos HQ", 5000, 1);
		    PlayerInfo[playerid][pInt] = 12;
		    InHQ[playerid] = 6;
		    SetPlayerVirtualWorld(playerid,1);
		}
		else if (PlayerToPoint(3.0, playerid,1073.0619,-344.5148,73.9922))
		{
		    SetPlayerInterior(playerid,3);
			SetPlayerPosEx(playerid,1212.019897,-28.663099,1000.953125);
			PlayerInfo[playerid][pInt] = 3;
			InHQ[playerid] = 8;
		}
	    else if (IsPlayerInRangeOfPoint(playerid,2,-329.5258,1536.7759,76.6117)) //nr
	    {
	        SetPlayerInterior(playerid,3);
		    SetPlayerPosEx(playerid,-2027.0515,-104.5211,1035.1719);
		    PlayerInfo[playerid][pInt] = 3;
		    InHQ[playerid] = 9;
	    }
		for(new i = 1; i < sizeof(BizzInfo); i++)
		{
			if(BizzInfo[i][bSbiz] != 0) return SendClientMessage(playerid, COLOR_WHITE, "You can't ram this business.");
			if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
			{
			    SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
				SetPlayerPosEx(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
				GameTextForPlayer(playerid, "~r~~h~Breached the door", 5000, 1);
				SetPlayerVirtualWorld(playerid,BizzInfo[i][bVirtual]);
				PlayerInfo[playerid][pInt] = BizzInfo[i][bInterior];
				PlayerInfo[playerid][pLocal] = i;
				InBussines[playerid] = i;
			}
		}
	}
	else return SCM(playerid,COLOR_WHITE,"{FFB870}You are not a Cop.");
	return 1;
}
CMD:bonus(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
	{
 	   	if(PlayerInfo[playerid][pLevel] <= 1)
 	   	{
 	   		PlayerInfo[playerid][pConnectTime] = 10;
	    	GivePlayerCash(playerid, 100000);
			PlayerInfo[playerid][pLevel] = 3;
            PlayerInfo[playerid][pPremiumPoints] = 8;
            SetPlayerScore(playerid, 3);
  	        Update(playerid, pCashx);
   		 	Update(playerid, pLevelx);
		    Update(playerid, pPremiumPointsx);
		    Update(playerid,pConnectTimex);
	     	ShowPlayerDialog(playerid, 3354, DIALOG_STYLE_MSGBOX, "{ffffff}Server Bonus {ffffff}| {00FFFF}New Land RP{ffffff} |", "{ffffff}You Used The Command {00FFFF}/bonus{ffffff} And You Recieved:\n {00FFFF}-{ffffff} Level {00FFFF}3\n -{ffffff} 100,000{33cc33}$\n {00FFFF}-{ffffff} 8 Premium {ffff00}Points\n{00FFFF}- 10 Played Hours{FFFFFF}\nThank You For Choosing Our Server New Land RP","{ffffff}Have Fun !","");
		}
		else return SendClientMessage(playerid, COLOR_LIGHTRED, "You Can't Use This Command When Your Level Is +3");
	}
	return 1;
}
CMD:giftpremium(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(IsPlayerConnected(playerid))
 	{
 	    if(PlayerInfo[playerid][pAdmin] >= 12)
		{
		    new premium,string[128];
		    format(string,sizeof(string),"%d Players can also earn premium points",PremiumMaxim);
		    SendClientMessage(playerid, COLOR_YELLOW, string);
		    if(sscanf(params, "d",premium)) return SendClientMessage(playerid, 0xFFFFFFFF, "{FF9900}[SYNTAX]: {33CCFF}/giftpremium <Max Premiums>");
		    PremiumMaxim = premium;
			format(string,sizeof(string),"Maximum Premium Points Is %d",PremiumMaxim);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}

CMD:resetgift(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(IsPlayerConnected(playerid))
 	{
 	    new string[256];
 	    if(PlayerInfo[playerid][pAdmin] >= 11)
		{
		    foreach(Player, i)
		    {
		        if(IsPlayerConnected(i))
		        {
		            PlayerInfo[i][pGiftTime] = 0;
		            SendClientMessage(playerid, COLOR_YELLOW, "Now All Players Can Use /GetGift");
				}
			}
			mysql_format(SQL,string,sizeof(string),"UPDATE users SET GiftTime = 0");
			mysql_tquery(SQL,string,"","");
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}
CMD:giftbox(playerid, params[])
{
    if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "You Must To Login First");
	if(IsPlayerConnected(playerid))
 	{
 	    if(PlayerInfo[playerid][pAdmin] >= 11)
		{
		    if(IsPlayerInAnyVehicle(playerid)) return 1;
		    new Float:X,Float:Y,Float:Z,Float:A;
		    GetPlayerPos(playerid, X, Y, Z);
		    GetPlayerFacingAngle(playerid, A);
		    if(GiftBoxActiv < 1)
		    {
		        giftboxobject[0] = CreateDynamicObject(19056,X,Y,Z - 0.4, 0.0, 0.0, A);
		        giftbox3DText[0] = CreateStreamed3DTextLabel("{FF0000}New Land RP Giftbox\n\n{00FF00}Use /getgift to get a gift.",0xA9C4E4CC,X,Y,Z +0.25,8.0,0);
		    	SendClientMessage(playerid, COLOR_YELLOW, "You Activated GiftBox");
		    	PremiumMaxim = 15;
		    	GiftBoxActiv = 1;
			}
			else
			{
			    DestroyObject(giftboxobject[0]);
            	DestroyDynamic3DTextLabel(giftbox3DText[0]);
		    	SendClientMessage(playerid, COLOR_YELLOW, "You DeActivated GiftBox");
		    	PremiumMaxim = 15;
		    	GiftBoxActiv = 0;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_ERROR, AdminOnly);
		}
	}
	return 1;
}
CMD:getgift(playerid, params[])
{
    if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "You Must To Login First");
    if(GiftBoxActiv == 0) return SendClientMessage(playerid, COLOR_WHITE, "The giftbox is not active.");
	if(PlayerInfo[playerid][pConnectTime] < 2) return SendClientMessage(playerid, COLOR_LIGHTRED, "You need 3 hours to use /getgift.");
	if(PlayerInfo[playerid][pGiftTime] > 0)
 	        {
 	            new string[128];
 	            format(string,sizeof(string),"You Can Use This Command Next %d Hours",PlayerInfo[playerid][pGiftTime]);
 	            SendClientMessage(playerid, COLOR_YELLOW, string);
 	            return 1;
			}
    if(PlayerInfo[playerid][pGiftBox] == 1)
    {
		//if(IsPlayerInRangeOfPoint(playerid, 5.0, 834.2477,-2052.5186,12.8672))
  			new randgift = random(150),string[256],sendername[30],string2[256],string4[256];
			GetPlayerName(playerid,sendername,sizeof(sendername));
			if(randgift >= 0 && randgift <= 29)
			{
				new randmats = 2000 + random(28000);
				PlayerInfo[playerid][pMats] += randmats;
				Update(playerid, pMatsx);
				format(string,sizeof(string),"[GIFTBOX]: You Won %d Materials From GiftBox",randmats);
				ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				format(string4,sizeof(string4),"[GIFTBOX]: %s won %d Materials from giftbox.",sendername, randmats);
			}
			if(randgift >= 31 && randgift <= 59)
			{
				new randmoney = 300000 + random(200000);
				GivePlayerCash(playerid, randmoney);
				Update(playerid, pCashx);
				format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
   				ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
   				format(string4,sizeof(string4),"[GIFTBOX]: %s won $%s from giftbox.",sendername,FormatNumber(randmoney));
			}
			if(randgift >= 61 && randgift <= 89)
			{
				new randfw = 5 + random(20),str2[256];
				PlayerInfo[playerid][pFWorks] += randfw;
				mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `FWorks`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pFWorks],PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str2,"","");
				format(string,sizeof(string),"[GIFTBOX]: You Received %d FireWorks",randfw);
    			ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
    			format(string4,sizeof(string4),"[GIFTBOX]: %s won %d Fireworks from giftbox.",sendername,randfw);
			}
			if(randgift >= 91 && randgift <= 109)
			{
				new randm = random(100);
				if(randm >= 0 && randm <= 30)
				{
					new randmoney = 100000 + random(100000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
				   	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				   	format(string4,sizeof(string4),"[GIFTBOX]: %s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				if(randm >= 31 && randm <= 50)
    			{
					new randmoney = 300000 + random(200000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
				   	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				   	format(string4,sizeof(string4),"[GIFTBOX]: %s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				if(randm >= 51 && randm <= 80)
    			{
					new randmoney = 500000 + random(500000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
    				ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
    				format(string4,sizeof(string4),"[GIFTBOX]: %s won $s from giftbox.",sendername,FormatNumber(randmoney));
					}
 				if(randm >= 81 && randm <= 90)
	    		{
					new randmoney = 1000000 + random(500000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
				   	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				   	format(string4,sizeof(string4),"[GIFTBOX]: %s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				if(randm >= 91)
				{
					new randmoney = 2000000 + random(1000000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
				   	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				   	format(string4,sizeof(string4),"[GIFTBOX]: %s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				}
			if(randgift >= 111 && randgift <= 119)
			{
				new randmoney = 200000 + random(3000000);
				GivePlayerCash(playerid, randmoney);
				Update(playerid, pCashx);
				format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
    			ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
    			format(string4,sizeof(string4),"[GIFTBOX]: %s won $%s from giftbox.",sendername,FormatNumber(randmoney));
			}
			if(randgift >= 120 && randgift <= 129)
			{
  				if(PlayerInfo[playerid][pWarns] == 0)
			    {
					new randmoney = 200000 + random(3000000);
					GivePlayerCash(playerid, randmoney);
	    			Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
					ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
					format(string4,sizeof(string4),"[GIFTBOX]: %s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				else
				{
					PlayerInfo[playerid][pWarns] = 0;
					Update(playerid, pWarnsx);
					format(string,sizeof(string),"[GIFTBOX]: You win Clear Warns from giftbox");
					ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
					format(string4,sizeof(string4),"[GIFTBOX]: %s won Clear Warns from giftbox.");
				}
			}
			if(randgift >= 130 && randgift <= 139)
			{
				if(PlayerInfo[playerid][pFpunish] == 0)
    			{
					new randmoney = 200000 + random(3000000);
	    			GivePlayerCash(playerid, randmoney);
				    Update(playerid, pCashx);
				    format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
			    	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
			    	format(string4,sizeof(string4),"[GIFTBOX]: %s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				else
				{
					PlayerInfo[playerid][pFpunish] = 0;
					Update(playerid,pFpunishx);
					format(string,sizeof(string),"Giftbx: You win Clear FP from giftbox.");
					ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
					format(string4,sizeof(string4),"[GIFTBOX]: %s won Clear FP from giftbox.");
				}
			}
			if(randgift >= 141)
			{
   				PlayerInfo[playerid][pHiddenColor] += 1;
			    Update(playerid, pHiddenColorx);
       			ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", "You Recieved Hidden Colors", "OK", "");
		    	format(string2,sizeof(string),"(( [GIFTBOX]: %s Won Hidden Colors From GiftBox ! Cngrats ! ))",sendername);
			}
			if(randgift == 30 || randgift == 60 || randgift == 90 || randgift == 110 || randgift == 140)
			{
				if(PremiumMaxim > 0)
 				{
   				new randpoints = 5 + random(25);
  				PlayerInfo[playerid][pPremiumPoints] += randpoints;
  				Update(playerid, pPremiumPointsx);
				PlayerInfo[playerid][pTotalPP] += randpoints;
				Update(playerid, pTotalPPx);
		   		PremiumMaxim -= 1;
			   	format(string,sizeof(string),"[GIFTBOX]: You win %d premium points from giftbox.",randpoints);
	    		ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
	    		format(string2,sizeof(string),"(( [GIFTBOX]: %s Won %d Premium Points From GiftBox ! Cngrats ! ))",sendername, randpoints);
				}
 				else
				{
				new randmoney = 4000000 + random(1000000);
  				GivePlayerCash(playerid, randmoney);
    			Update(playerid, pCashx);
	    		format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
		    	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
		    	format(string4,sizeof(string4),"[GIFTBOX]: %s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
			}
			new y,m,d,h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			PlayerInfo[playerid][pGiftTime] += 3;
			ProxDetector(30.0, playerid, string4, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
			SendClientMessageToAll(COLOR_GENANNOUNCE,string2);
			Update(playerid, pGiftTimex);
			mysql_format(SQL, string, sizeof(string), "INSERT INTO giftbox_logs (`text`,`PlayerID`,`time`) VALUES ('%s','%d','%02d/%02d/%d %02d:%02d:%02d')", string, PlayerInfo[playerid][pSQLID],d,m,y,h,mi,s);
			mysql_tquery(SQL,string,"","");
	}
	else if(PlayerInfo[playerid][pGiftBox] == 2)  // asa faci si la giftbox 2/3/4
 	{
            new randgift = random(150),string[256],sendername[30],string2[256],string4[256];
			GetPlayerName(playerid,sendername,sizeof(sendername));
			if(randgift >= 0 && randgift <= 29)
			{
				new randmats = 2000 + random(28000);
				PlayerInfo[playerid][pMats] += randmats;
				Update(playerid, pMatsx);
				format(string,sizeof(string),"[GIFTBOX]: You Won %d materiale din giftbox",randmats);
				ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				format(string4,sizeof(string4),"%s won %d Materials from giftbox.", sendername,randmats);
			}
			if(randgift >= 31 && randgift <= 59)
			{
				new randmoney = 300000 + random(200000);
				GivePlayerCash(playerid, randmoney);
				Update(playerid, pCashx);
				format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
   				ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
   				format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
			}
			if(randgift >= 61 && randgift <= 89)
			{
				new randfw = 5 + random(20),str2[256];
				PlayerInfo[playerid][pFWorks] += randfw;
				mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `FWorks`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pFWorks],PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str2,"","");
				format(string,sizeof(string),"[GIFTBOX]: You Won %d artificii.",randfw);
    			ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
    			format(string4,sizeof(string4),"%s won %d Fireworks from giftbox.",sendername,randfw);
			}
			if(randgift >= 91 && randgift <= 109)
			{
				new randm = random(100);
				if(randm >= 0 && randm <= 30)
				{
					new randmoney = 100000 + random(100000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
				   	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				   	format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				if(randm >= 31 && randm <= 50)
    			{
					new randmoney = 300000 + random(200000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
				   	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				   	format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				if(randm >= 51 && randm <= 80)
    			{
					new randmoney = 500000 + random(500000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
    				ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
    				format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
					}
 				if(randm >= 81 && randm <= 90)
	    		{
					new randmoney = 1000000 + random(500000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
				   	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				   	format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				if(randm >= 91)
				{
					new randmoney = 2000000 + random(1000000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
				   	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				   	format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				}
			if(randgift >= 111 && randgift <= 119)
			{
				new randmoney = 200000 + random(3000000);
				GivePlayerCash(playerid, randmoney);
				Update(playerid, pCashx);
				format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
    			ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
    			format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
			}
			if(randgift >= 120 && randgift <= 129)
			{
  				if(PlayerInfo[playerid][pWarns] == 0)
			    {
					new randmoney = 200000 + random(3000000);
					GivePlayerCash(playerid, randmoney);
	    			Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
					ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
					format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				else
				{
					PlayerInfo[playerid][pWarns] = 0;
					Update(playerid, pWarnsx);
					format(string,sizeof(string),"[GIFTBOX]: You win Clear Warns from giftbox");
					ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
					format(string4,sizeof(string4),"%s won Clear Warns from giftbox.");
				}
			}
			if(randgift >= 130 && randgift <= 139)
			{
				if(PlayerInfo[playerid][pFpunish] == 0)
    			{
					new randmoney = 200000 + random(3000000);
	    			GivePlayerCash(playerid, randmoney);
				    Update(playerid, pCashx);
				    format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
			    	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
			    	format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				else
				{
					PlayerInfo[playerid][pFpunish] = 0;
					Update(playerid,pFpunishx);
					format(string,sizeof(string),"Giftbx: You win Clear FP from giftbox.");
					ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
					format(string4,sizeof(string4),"%s won Clear FP from giftbox.");
				}
			}
			if(randgift >= 141)
			{
   				PlayerInfo[playerid][pHiddenColor] += 1;
			    Update(playerid, pHiddenColorx);
       			ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", "You Recieved Hidden Color.", "OK", "");
		    	format(string2,sizeof(string),"(( [GIFTBOX]: %s a castigat o culoare hidden din giftbox! Cngrats ! ))",sendername);
			}
			if(randgift == 30 || randgift == 60 || randgift == 90 || randgift == 110 || randgift == 140)
			{
				if(PremiumMaxim > 0)
 				{
   				new randpoints = 5 + random(42);
  				PlayerInfo[playerid][pPremiumPoints] += randpoints;
  				Update(playerid, pPremiumPointsx);
  				PlayerInfo[playerid][pTotalPP] += randpoints;
				Update(playerid, pTotalPPx);
				if(PlayerInfo[playerid][pTotalPP] >= 500 && PlayerInfo[playerid][pVIP] == 0)
				{
				    SCM(playerid, COLOR_ORANGE, "In contul tau s-au acumulat un total de 500 PP iar acum esti un VIP User.");
				    PlayerInfo[playerid][pVIP] = 1;
				    Update(playerid, pVIPx);
				}
		   		PremiumMaxim -= 1;
			   	format(string,sizeof(string),"[GIFTBOX]: You win %d premium points from giftbox.",randpoints);
	    		ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
	    		format(string2,sizeof(string),"(( [GIFTBOX]: %s a castigat %d puncte premium din giftbox! Cngrats ! ))",sendername, randpoints);
				}
 				else
				{
				new randmoney = 4000000 + random(1000000);
  				GivePlayerCash(playerid, randmoney);
    			Update(playerid, pCashx);
	    		format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
		    	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
		    	format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
			}
			new y,m,d,h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			PlayerInfo[playerid][pGiftTime] += 3;
			ProxDetector(30.0, playerid, string4, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
			SendClientMessageToAll(COLOR_GENANNOUNCE,string2);
			Update(playerid, pGiftTimex);
			mysql_format(SQL, string, sizeof(string), "INSERT INTO giftbox_logs (`text`,`PlayerID`,`time`) VALUES ('%s','%d','%02d/%02d/%d %02d:%02d:%02d')", string, PlayerInfo[playerid][pSQLID],d,m,y,h,mi,s);
			mysql_tquery(SQL,string,"","");
	}
	else if(PlayerInfo[playerid][pGiftBox] == 3)  // asa faci si la giftbox 2/3/4
 	{
            new randgift = random(150),string[256],sendername[30],string2[256],string4[256];
			GetPlayerName(playerid,sendername,sizeof(sendername));
			if(randgift >= 0 && randgift <= 29)
			{
				new randmats = 2000 + random(28000);
				PlayerInfo[playerid][pMats] += randmats;
				Update(playerid, pMatsx);
				format(string,sizeof(string),"[GIFTBOX]: You Won %d materiale din giftbox",randmats);
				ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				format(string4,sizeof(string4),"%s won %d Materials from giftbox.",sendername, randmats);
			}
			if(randgift >= 31 && randgift <= 59)
			{
				new randmoney = 300000 + random(200000);
				GivePlayerCash(playerid, randmoney);
				Update(playerid, pCashx);
				format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
  				ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
  				format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
			}
			if(randgift >= 61 && randgift <= 89)
			{
				new randfw = 5 + random(20),str2[256];
				PlayerInfo[playerid][pFWorks] += randfw;
				mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `FWorks`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pFWorks],PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str2,"","");
				format(string,sizeof(string),"[GIFTBOX]: You Won %d artificii.",randfw);
    			ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
    			format(string4,sizeof(string4),"%s won %d Fireworks from giftbox.",sendername,randfw);
			}
			if(randgift >= 91 && randgift <= 109)
			{
				new randm = random(100);
				if(randm >= 0 && randm <= 30)
				{
					new randmoney = 100000 + random(100000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
				   	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				   	format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				if(randm >= 31 && randm <= 50)
    			{
					new randmoney = 300000 + random(200000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
				   	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				   	format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				if(randm >= 51 && randm <= 80)
    			{
					new randmoney = 500000 + random(500000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
    				ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
    				format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
					}
 				if(randm >= 81 && randm <= 90)
	    		{
					new randmoney = 1000000 + random(500000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
				   	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				   	format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				if(randm >= 91)
				{
					new randmoney = 2000000 + random(1000000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
				   	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				   	format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				}
			if(randgift >= 111 && randgift <= 119)
			{
				new randmoney = 200000 + random(3000000);
				GivePlayerCash(playerid, randmoney);
				Update(playerid, pCashx);
				format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
    			ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
    			format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
			}
			if(randgift >= 120 && randgift <= 129)
			{
  				if(PlayerInfo[playerid][pWarns] == 0)
			    {
					new randmoney = 200000 + random(3000000);
					GivePlayerCash(playerid, randmoney);
	    			Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
					ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
					format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				else
				{
					PlayerInfo[playerid][pWarns] = 0;
					Update(playerid, pWarnsx);
					format(string,sizeof(string),"[GIFTBOX]: You win Clear Warns from giftbox");
					ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
					format(string4,sizeof(string4),"%s won Clear Warns from giftbox.");
				}
			}
			if(randgift >= 130 && randgift <= 139)
			{
				if(PlayerInfo[playerid][pFpunish] == 0)
    			{
					new randmoney = 200000 + random(3000000);
	    			GivePlayerCash(playerid, randmoney);
				    Update(playerid, pCashx);
				    format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
			    	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
			    	format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				else
				{
					PlayerInfo[playerid][pFpunish] = 0;
					Update(playerid,pFpunishx);
					format(string,sizeof(string),"Giftbx: You win Clear FP from giftbox.");
					ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
					format(string4,sizeof(string4),"%s won Clear FP from giftbox.");
				}
			}
			if(randgift >= 141)
			{
   				PlayerInfo[playerid][pHiddenColor] += 1;
			    Update(playerid, pHiddenColorx);
       			ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", "You Recieved o culoare hidden.", "OK", "");
		    	format(string2,sizeof(string),"(( [GIFTBOX]: %s a castigat o culoare hidden din giftbox! Cngrats ! ))",sendername);
			}
			if(randgift == 30 || randgift == 60 || randgift == 90 || randgift == 110 || randgift == 140)
			{
				if(PremiumMaxim > 0)
 				{
   				new randpoints = 5 + random(42);
  				PlayerInfo[playerid][pPremiumPoints] += randpoints;
  				Update(playerid, pPremiumPointsx);
  				PlayerInfo[playerid][pTotalPP] += randpoints;
				Update(playerid, pTotalPPx);
				if(PlayerInfo[playerid][pTotalPP] >= 500 && PlayerInfo[playerid][pVIP] == 0)
				{
				    SCM(playerid, COLOR_ORANGE, "In contul tau s-au acumulat un total de 500 PP iar acum esti un VIP User.");
				    PlayerInfo[playerid][pVIP] = 1;
				    Update(playerid, pVIPx);
				}
		   		PremiumMaxim -= 1;
			   	format(string,sizeof(string),"[GIFTBOX]: You win %d premium points from giftbox.",randpoints);
	    		ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
	    		format(string2,sizeof(string),"(( [GIFTBOX]: %s a castigat %d puncte premium din giftbox! Cngrats ! ))",sendername, randpoints);
				}
 				else
				{
				new randmoney = 4000000 + random(1000000);
  				GivePlayerCash(playerid, randmoney);
    			Update(playerid, pCashx);
	    		format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
		    	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
		    	format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
			}
			new y,m,d,h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			PlayerInfo[playerid][pGiftTime] += 3;
			ProxDetector(30.0, playerid, string4, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
			SendClientMessageToAll(COLOR_GENANNOUNCE,string2);
			Update(playerid, pGiftTimex);
			mysql_format(SQL, string, sizeof(string), "INSERT INTO giftbox_logs (`text`,`PlayerID`,`time`) VALUES ('%s','%d','%02d/%02d/%d %02d:%02d:%02d')", string, PlayerInfo[playerid][pSQLID],d,m,y,h,mi,s);
			mysql_tquery(SQL,string,"","");
	}
	else if(PlayerInfo[playerid][pGiftBox] == 4)  // asa faci si la giftbox 2/3/4
 	{
			new randgift = random(150),string[256],sendername[30],string2[256],string4[256];
			GetPlayerName(playerid,sendername,sizeof(sendername));
			if(randgift >= 0 && randgift <= 29)
			{
				new randmats = 2000 + random(28000);
				PlayerInfo[playerid][pMats] += randmats;
				Update(playerid, pMatsx);
				format(string,sizeof(string),"[GIFTBOX]: You Won %d materiale din giftbox",randmats);
				ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				format(string4,sizeof(string4),"%s won %d Materials from giftbox.", sendername,randmats);
			}
			if(randgift >= 31 && randgift <= 59)
			{
				new randmoney = 300000 + random(200000);
				GivePlayerCash(playerid, randmoney);
				Update(playerid, pCashx);
				format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
   				ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
   				format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
			}
			if(randgift >= 61 && randgift <= 89)
			{
				new randfw = 5 + random(20),str2[256];
				PlayerInfo[playerid][pFWorks] += randfw;
				mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `FWorks`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pFWorks],PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str2,"","");
				format(string,sizeof(string),"[GIFTBOX]: You Won %d Fireworks",randfw);
    			ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
    			format(string4,sizeof(string4),"%s Won %d Fireworks from giftbox.",sendername,randfw);
			}
			if(randgift >= 91 && randgift <= 109)
			{
				new randm = random(100);
				if(randm >= 0 && randm <= 30)
				{
					new randmoney = 100000 + random(400000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
				   	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				   	format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				if(randm >= 31 && randm <= 50)
    			{
					new randmoney = 300000 + random(200000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
				   	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				   	format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				if(randm >= 51 && randm <= 80)
    			{
					new randmoney = 500000 + random(500000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
    				ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
    				format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
					}
 				if(randm >= 81 && randm <= 90)
	    		{
					new randmoney = 1000000 + random(500000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
				   	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				   	format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				if(randm >= 91)
				{
					new randmoney = 2000000 + random(1000000);
					GivePlayerCash(playerid, randmoney);
					Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
				   	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
				   	format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				}
			if(randgift >= 111 && randgift <= 119)
			{
				new randmoney = 200000 + random(3000000);
				GivePlayerCash(playerid, randmoney);
				Update(playerid, pCashx);
				format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
    			ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
    			format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
			}
			if(randgift >= 120 && randgift <= 129)
			{
  				if(PlayerInfo[playerid][pWarns] == 0)
			    {
					new randmoney = 100000 + random(500000);
					GivePlayerCash(playerid, randmoney);
	    			Update(playerid, pCashx);
					format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
					ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
					format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				else
				{
					PlayerInfo[playerid][pWarns] = 0;
					Update(playerid, pWarnsx);
					format(string,sizeof(string),"[GIFTBOX]: You win Clear Warns from giftbox");
					ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
					format(string4,sizeof(string4),"%s won Clear Warns from giftbox.");
				}
			}
			if(randgift >= 130 && randgift <= 139)
			{
				if(PlayerInfo[playerid][pFpunish] == 0)
    			{
					new randmoney = 100000 + random(1000000);
	    			GivePlayerCash(playerid, randmoney);
				    Update(playerid, pCashx);
				    format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
			    	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
			    	format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
				else
				{
					PlayerInfo[playerid][pFpunish] = 0;
					Update(playerid,pFpunishx);
					format(string,sizeof(string),"Giftbx: You win Clear FP from giftbox.");
					ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
					format(string4,sizeof(string4),"%s won Clear FP from giftbox.");
				}
			}
			if(randgift >= 141)
			{
   				PlayerInfo[playerid][pHiddenColor] += 1;
			    Update(playerid, pHiddenColorx);
       			ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", "You Recieved o culoare hidden.", "OK", "");
		    	format(string2,sizeof(string),"(( [GIFTBOX]: %s a castigat o culoare hidden din giftbox! Cngrats ! ))",sendername);
			}
			if(randgift == 30 || randgift == 60 || randgift == 90 || randgift == 110 || randgift == 140)
			{
				if(PremiumMaxim > 0)
 				{
   				new randpoints = 5 + random(40);
  				PlayerInfo[playerid][pPremiumPoints] += randpoints;
  				Update(playerid, pPremiumPointsx);
  				PlayerInfo[playerid][pTotalPP] += randpoints;
				Update(playerid, pTotalPPx);
				if(PlayerInfo[playerid][pTotalPP] >= 500 && PlayerInfo[playerid][pVIP] == 0)
				{
				    SCM(playerid, COLOR_ORANGE, "You Reached 500PP And Your Account CHanged To V.I.P !");
				    PlayerInfo[playerid][pVIP] = 1;
				    Update(playerid, pVIPx);
				}
		   		PremiumMaxim -= 1;
			   	format(string,sizeof(string),"[GIFTBOX]: You win %d premium points from giftbox.",randpoints);
	    		ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
	    		format(string2,sizeof(string),"(( [GIFTBOX]: %s a castigat %d puncte premium din giftbox! Cngrats ! ))",sendername, randpoints);
				}
 				else
				{
				new randmoney = 500000 + random(100000);
  				GivePlayerCash(playerid, randmoney);
    			Update(playerid, pCashx);
	    		format(string,sizeof(string),"[GIFTBOX]: You win $%s from giftbox.",FormatNumber(randmoney));
		    	ShowPlayerDialog(playerid, DIALOG_GIFTBOX, DIALOG_STYLE_MSGBOX, "Giftbox", string, "OK", "");
		    	format(string4,sizeof(string4),"%s won $%s from giftbox.",sendername,FormatNumber(randmoney));
				}
			}
			new y,m,d,h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			PlayerInfo[playerid][pGiftTime] += 3;
			ProxDetector(30.0, playerid, string4, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
			SendClientMessageToAll(COLOR_GENANNOUNCE,string2);
			Update(playerid, pGiftTimex);
			mysql_format(SQL, string, sizeof(string), "INSERT INTO giftbox_logs (`text`,`PlayerID`,`time`) VALUES ('%s','%d','%02d/%02d/%d %02d:%02d:%02d')", string, PlayerInfo[playerid][pSQLID],d,m,y,h,mi,s);
			mysql_tquery(SQL,string,"","");
	}
	return 1;
}

CMD:hud(playerid, params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(PlayerInfo[playerid][pLevel] < 5) return SendClientMessage(playerid, COLOR_WHITE, "You don't have level 5.");
    if(IsPlayerConnected(playerid))
    {
        new string[256],stringhp[64],stringarm[64],stringfps[64];
        if(PlayerInfo[playerid][pHUD1] != 0)
        {
            if(PlayerInfo[playerid][pHUD1] == 1)
            {
        		format(stringhp,sizeof(stringhp),"{C0C0C0}Grey");
			}
			else if(PlayerInfo[playerid][pHUD1] == 2)
			{
			    format(stringhp,sizeof(stringhp),"{FF0000}Red");
			}
			else if(PlayerInfo[playerid][pHUD1] == 3)
			{
			    format(stringhp,sizeof(stringhp),"{00FF00}Green");
			}
			else if(PlayerInfo[playerid][pHUD1] == 4)
			{
			    format(stringhp,sizeof(stringhp),"{0000FF}Blue");
			}
			else if(PlayerInfo[playerid][pHUD1] == 5)
			{
			    format(stringhp,sizeof(stringhp),"{FFFF00}Yellow");
			}
		}
		else
		{
		    format(stringhp,sizeof(stringhp),"{FF0000}Disabled");
		}
		if(PlayerInfo[playerid][pHUD2] != 0)
        {
            if(PlayerInfo[playerid][pHUD2] == 1)
            {
        		format(stringarm,sizeof(stringarm),"{C0C0C0}Grey");
			}
			else if(PlayerInfo[playerid][pHUD2] == 2)
			{
			    format(stringarm,sizeof(stringarm),"{FF0000}Red");
			}
			else if(PlayerInfo[playerid][pHUD2] == 3)
			{
			    format(stringarm,sizeof(stringarm),"{00FF00}Green");
			}
			else if(PlayerInfo[playerid][pHUD2] == 4)
			{
			    format(stringarm,sizeof(stringarm),"{0000FF}Blue");
			}
			else if(PlayerInfo[playerid][pHUD2] == 5)
			{
			    format(stringarm,sizeof(stringarm),"{FFFF00}Yellow");
			}
		}
		else
		{
		    format(stringarm,sizeof(stringarm),"{FF0000}Disabled");
		}
		if(PlayerInfo[playerid][pHUD3] != 0)
		{
		    format(stringfps,sizeof(stringfps),"{FFFF00}Enabled");
		}
		else
		{
		    format(stringfps,sizeof(stringfps),"{FF0000}Disabled");
		}
        format(string,sizeof(string),"HP Text: %s\n{FFFFFF}Armour Text: %s\n{FFFFFF}Display FPS: %s",stringhp,stringarm,stringfps);
        ShowPlayerDialog(playerid,DIALOG_HUD,DIALOG_STYLE_LIST, "HUD Options", string, "Select","Close");
	}
	return 1;
}
CMD:help(playerid,params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
        ShowPlayerDialog(playerid,DIALOG_HELP,DIALOG_STYLE_LIST, "SERVER: Commands", "General\nChat\nGroups\nAnimations\nHouses\nJobs\nBusinesses\nHelpers\nVehicles\nBank\nRob\nLeader\nAparater", "Select","Exit");
	}
	return 1;
}
CMD:home(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pPhousekey] != 999)
	    {
			if(CP[playerid] < 1 && IsCollectingRubbish[playerid] < 1 && !IsATruck(GetPlayerVehicleID(playerid)) && MechanicCallTime[playerid] < 1 && CheckBus[playerid] < 1 && GotoMats[playerid] < 1 && CarJacker[playerid] < 1 && JCurier[playerid][0] < 1)
			{
	            new h;
	            h = PlayerInfo[playerid][pPhousekey];
	            SetPlayerCheckpoint(playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 5.0);
				CP[playerid] = 43;
				SendClientMessage(playerid, COLOR_WHITE, "A checkpoint has been set to your house.");
			}
			else
			{
			    ShowPlayerDialog(playerid, DIALOG_JOBULETES, DIALOG_STYLE_MSGBOX, "Checkpoint Cancel", "Are You Sure You Want To Cancel CHeckpoint ?", "Yeah", "No");

			}
		}
		else return SCM(playerid, COLOR_WHITE, "You don't have a house.");
	}
	return 1;
}
CMD:backup(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(IsPlayerConnected(playerid))
	{
		if(IsACop(playerid))
 		{
            if(OnDuty[playerid] != 1) return SendClientMessage(playerid,COLOR_WHITE, "{FFB870}You are not on Duty.");
			if (PlayerInfo[playerid][pRequestingBackup] != 1)
			{
				new string[128],sendername[25];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "ALL UNITS: %s is requesting immediate assistance, they have been marked on the map (red).", sendername);
				PlayerInfo[playerid][pRequestingBackup] = 1;
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid,x,y,z);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(IsACop(i))
						{
							CP[i] = 0;
							CP[i] = 43;
							SetPlayerCheckpoint(i,x,y,z,5.0);
							SendClientMessage(i, TEAM_BLUE_COLOR, string);
						}
					}
				}
				SendClientMessage(playerid, TEAM_BLUE_COLOR, "Type /backupclear to clear your backup request.");
				SetTimerEx("BackupClear", 180000, false, "ii", playerid, 1);
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You already have an active backup request.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a Cop.");
		}
	}
	return 1;
}
CMD:backupclear(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(IsPlayerConnected(playerid))
	{
		if(IsACop(playerid))
		{
        	BackupClear(playerid, 0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a Cop.");
		}
	}
	return 1;
}
CMD:stopanim(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "You can't use this command in a vehicle.");
        ClearAnimations(playerid);
        PlayerHandsup[playerid] = 0;
    }
    return 1;
}
CMD:tazer(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if(IsACop(playerid))
		{
			if(OnDuty[playerid] != 1) return SendClientMessage(playerid, COLOR_WHITE, "{3385FF}You are not on Duty.");
			if(GetPlayerWeapon(playerid) != 24) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have desert deagle in your hand.");
		    new x_nr[10];
	        if(sscanf(params, "s[10]",x_nr)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/tazer <On-Off>");
	        if(strcmp(x_nr,"on",true) == 0)
       		{
       			if(tazer[playerid] == 1) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You tazer gun is already enable.");
       		    tazer[playerid] = 1;
				SendClientMessage(playerid, COLOR_WHITE, "You enable tazer gun.");
				return 1;
       		}
	        if(strcmp(x_nr,"off",true) == 0)
       		{
       			if(tazer[playerid] == 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You tazer gun is already disable.");
		   	    tazer[playerid] = 0;
       		    SendClientMessage(playerid, COLOR_WHITE, "You disable tazer gun.");
       		    return 1;
       		}
	    }
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a Cop.");
	}
	return 1;
}
CMD:cuff(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if(IsACop(playerid))
		{
			new giveplayerid,string[256],sendername[25],giveplayer[25];
			if(sscanf(params, "u",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/cuff <Name/Playerid>");
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(IsACop(giveplayerid)) return SendClientMessage(playerid,COLOR_WHITE, "{FFB870}You can't Cuff cops.");
			        if(PlayerHandsup[giveplayerid] < 1 && !IsPlayerInAnyVehicle(giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You can't cuff a player who don't have hands up.");
				    if(PlayerCuffed2[giveplayerid] > 0) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Player already cuffed.");
					if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You cannot cuff yourself.");
						if(IsPlayerInAnyVehicle(giveplayerid))
						{
							TogglePlayerControllable(giveplayerid, 0);
						}
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* You were Cuffed by %s, till uncuff.", sendername);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* You Cuffed %s, till uncuff.", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s Hand Cuffs %s, so he wont go anywhere.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GameTextForPlayer(giveplayerid, "~r~~h~Cuffed", 2500, 3);
						PlayerCuffed2[giveplayerid] = 1;
						SetPlayerAttachedObject(giveplayerid, 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
                        SetPlayerSpecialAction(giveplayerid,SPECIAL_ACTION_CUFFED);
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}This player is not near you.");
				}
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a Cop.");
	}
	return 1;
}
CMD:uncuff(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if(IsACop(playerid))
		{
			new giveplayerid,giveplayer[25],sendername[25],string[128];
			if(sscanf(params, "u",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/uncuff <Name/Playerid>");
			{
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You cannot Uncuff yourself.");
							if(PlayerCuffed2[giveplayerid] == 1)
							{
								if(IsPlayerInAnyVehicle(giveplayerid))
								{
									TogglePlayerControllable(giveplayerid, 1);
								}
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* You were Uncuffed by %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* You Uncuffed %s.", giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								GameTextForPlayer(giveplayerid, "~g~Uncuffed", 2500, 3);
					     		PlayerCuffed2[giveplayerid] = 0;
						    	SetPlayerSpecialAction(giveplayerid,SPECIAL_ACTION_NONE);
						    	RemovePlayerAttachedObject(giveplayerid,1);
							}
							else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}That player isn't Tied up.");
						}
						else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}This player is not near you.");
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a Cop.");
	}
	return 1;
}
CMD:skill(playerid,params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
        new string[MAX_STRING];
        SendClientMessage(playerid, COLOR_WHITE, "---- Skills: ----");
        if(PlayerInfo[playerid][pRobSkill] < 6)
        {
        	format(string,sizeof(string),"Rob skill: %d/6 (%d robs) | Needed for next skill level: %d",PlayerInfo[playerid][pRobSkill], PlayerInfo[playerid][pRobTimes], PlayerInfo[playerid][pRobRem]);
		}
		else if(PlayerInfo[playerid][pRobSkill] >= 6)
		{
        	format(string,sizeof(string),"Rob skill: %d/6 (%d robs)",PlayerInfo[playerid][pRobSkill], PlayerInfo[playerid][pRobTimes]);
		}
        SendClientMessage(playerid, COLOR_WHITE, string);
        if(PlayerInfo[playerid][pTruckSkill] < 6)
        {
        	format(string,sizeof(string),"Trucker skill: %d/6 (%d trailers delivered) | Needed for next skill level: %d",PlayerInfo[playerid][pTruckSkill], PlayerInfo[playerid][pTruckTimes], PlayerInfo[playerid][pTruckRem]);
		}
		else if(PlayerInfo[playerid][pTruckSkill] >= 6)
		{
        	format(string,sizeof(string),"Trucker skill: %d/6 (%d trailers delivered)",PlayerInfo[playerid][pTruckSkill], PlayerInfo[playerid][pTruckTimes]);
		}
        SendClientMessage(playerid, COLOR_WHITE, string);
        if(PlayerInfo[playerid][pFarmSkill] < 6)
        {
        	format(string,sizeof(string),"Farmer skill: %d/6 (%d bags of flour sold) | Needed for next skill level: %d",PlayerInfo[playerid][pFarmSkill], PlayerInfo[playerid][pFarmTimes], PlayerInfo[playerid][pFarmRem]);
		}
		else if(PlayerInfo[playerid][pFarmSkill] >= 6)
		{
        	format(string,sizeof(string),"Farmer skill: %d/6 (%d bags of flour sold)",PlayerInfo[playerid][pFarmSkill], PlayerInfo[playerid][pFarmTimes]);
		}
        SendClientMessage(playerid, COLOR_WHITE, string);
        if(PlayerInfo[playerid][pFishSkill] < 6)
        {
        	format(string,sizeof(string),"Fisherman skill: %d/6 (%d fish caught) | Needed for next skill level: %d",PlayerInfo[playerid][pFishSkill], PlayerInfo[playerid][pFishTimes], PlayerInfo[playerid][pFishRem]);
		}
		else if(PlayerInfo[playerid][pFishSkill] >= 6)
		{
        	format(string,sizeof(string),"Fisherman skill: %d/6 (%d fish caught)",PlayerInfo[playerid][pFishSkill], PlayerInfo[playerid][pFishTimes]);
		}
        SendClientMessage(playerid, COLOR_WHITE, string);
		if(PlayerInfo[playerid][pArmsSkill] < 6)
        {
        	format(string,sizeof(string),"Arms dealer skill: %d/6 (delivered materials %d times) | Needed for next skill level: %d",PlayerInfo[playerid][pArmsSkill], PlayerInfo[playerid][pArmsTimes], PlayerInfo[playerid][pArmsRem]);
		}
		else if(PlayerInfo[playerid][pArmsSkill] >= 6)
		{
        	format(string,sizeof(string),"Arms dealer skill: %d/6 (delivered materials %d times)",PlayerInfo[playerid][pArmsSkill], PlayerInfo[playerid][pArmsTimes]);
		}
        SendClientMessage(playerid, COLOR_WHITE, string);
		if(PlayerInfo[playerid][pPizzaSkill] < 6)
        {
        	format(string,sizeof(string),"Pizza Boy skill: %d/6 (delivered %d pizzas) | Needed for next skill level: %d",PlayerInfo[playerid][pPizzaSkill], PlayerInfo[playerid][pPizzaTimes], PlayerInfo[playerid][pPizzaRem]);
		}
		else if(PlayerInfo[playerid][pPizzaSkill] >= 6)
		{
        	format(string,sizeof(string),"Pizza Boy skill: %d/6 (delivered %d pizzas)",PlayerInfo[playerid][pPizzaSkill], PlayerInfo[playerid][pPizzaTimes]);
		}
        SendClientMessage(playerid, COLOR_WHITE, string);
        if(PlayerInfo[playerid][pCurierSkill] < 6)
        {
        	format(string,sizeof(string),"Curier skill: %d/6 (delivered %d packages) | Needed for next skill level: %d",PlayerInfo[playerid][pCurierSkill], PlayerInfo[playerid][pCurierTimes], PlayerInfo[playerid][pCurierRem]);
		}
		else if(PlayerInfo[playerid][pCurierSkill] >= 6)
		{
        	format(string,sizeof(string),"Curier skill: %d/6 (delivered %d packages)",PlayerInfo[playerid][pCurierSkill], PlayerInfo[playerid][pCurierTimes]);
		}
        SendClientMessage(playerid, COLOR_WHITE, string);
		if(PlayerInfo[playerid][pBusSkill] < 6)
        {
        	format(string,sizeof(string),"Bus Driver skill: %d/6 (%d shifts completed) | Needed for next skill level: %d",PlayerInfo[playerid][pBusSkill], PlayerInfo[playerid][pBusTimes], PlayerInfo[playerid][pBusRem]);
		}
		else if(PlayerInfo[playerid][pBusSkill] >= 6)
		{
        	format(string,sizeof(string),"Bus Driver skill: %d/6 (%d shifts completed)",PlayerInfo[playerid][pBusSkill], PlayerInfo[playerid][pBusTimes]);
		}
        SendClientMessage(playerid, COLOR_WHITE, string);
        if(PlayerInfo[playerid][pSkillCoal] < 6)
		{
		    format(string,sizeof(string),"Coal Delivery Man skill: %d/6 (%d shifts completed) | Needed for next skill level: %d",PlayerInfo[playerid][pSkillCoal], PlayerInfo[playerid][pTransportateCoal], PlayerInfo[playerid][pRemainCoal]);
		}
		else if(PlayerInfo[playerid][pSkillCoal] >= 6)
		{
		    format(string, sizeof(string), "Coal Delivery Man skill: %d/6 (%d shifts completed)", PlayerInfo[playerid][pSkillCoal], PlayerInfo[playerid][pTransportateCoal]);
		}
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	return 1;
}
CMD:skills(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	return cmd_skill(playerid, params);
}
CMD:news(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		{
		    new newcar = GetPlayerVehicleID(playerid);
		    new string[256],sendername[25];
	        if(PlayerInfo[playerid][pMuted] == 1)
            {
				format(string, sizeof(string), "You can not speak, you have been silenced for %d seconds.",PlayerInfo[playerid][pMuteTime]);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				return 1;
		    }
		    new result[250];
		    if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/news <Message>");
		    if(FindIP(result)) /// Anti-Reclama
	        {
		        new advertiser[MAX_PLAYER_NAME];
		        GetPlayerName(playerid, advertiser, sizeof(advertiser));
		        format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /news.", advertiser, playerid, result);
				ABroadCast(COLOR_WHITE,string,1);
	        }
	        for(new i; i < sizeof(TLD); i++)
			{
				if(strfind(result, TLD[i], true) != -1)
				{
					if(strfind(result, ".", true) != -1 || strfind(result, ".", true) != -1 || strfind(result, ".", true) != -1) break;
					new advertiser[MAX_PLAYER_NAME];
					GetPlayerName(playerid, advertiser, sizeof(advertiser));
					format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /news.", advertiser, playerid, result);
					ABroadCast(COLOR_WHITE,string,1);
				}
			}
			if(newcar == news[1] || newcar == news[2] || newcar == news[3] || newcar == news[4] || newcar == news[5] || newcar == news[6] || newcar == news[7] || newcar == news[8] || newcar == news[9] || newcar == news[10]
			|| newcar == news[11] || newcar == news[12] || newcar == news[13] || newcar == news[14] || newcar == news[15] || newcar == news[16] || newcar == news[17])
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "NR %s: %s", sendername, result);
				OOCNews(COLOR_ORANGE,string);
				PlayerInfo[playerid][pCommands]++;
				Update(playerid,pCommandsx);
				PlayerInfo[playerid][pNews] += 1;
	            Update(playerid, pNewsx);
				new str[256];
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pCommands],PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not in the News Van or Chopper.");
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a News Reporter.");
	}
	return 1;
}
CMD:clothes(playerid,params[])
{
    if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "You Must To Login First");
    if(InBussines[playerid] > 0)
	{
		if(BizzInfo[InBussines[playerid]][bType] == 11)
		{
			if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid,COLOR_LIGHTRED,"You don't have $5000.");
			if(PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pLeader] == 0) { ShowModelSelectionMenu(playerid, skinlist, "Select skin"); }
			else if(PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pLeader] == 1)
			{
			    if(OnDuty[playerid] == 1)
			    {
					ShowModelSelectionMenu(playerid, skinlist1, "Select skin");
				}
				else
				{
				    ShowModelSelectionMenu(playerid, skinlist18, "Select skin");
				}
			}
			else if(PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pLeader] == 2)
			{
				if(OnDuty[playerid] == 1)
			    {
					ShowModelSelectionMenu(playerid, skinlist2, "Select skin");
				}
				else
				{
				    ShowModelSelectionMenu(playerid, skinlist18, "Select skin");
				}
			}
			else if(PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pLeader] == 3)
			{
				if(OnDuty[playerid] == 1)
			    {
					ShowModelSelectionMenu(playerid, skinlist3, "Select skin");
				}
				else
				{
				    ShowModelSelectionMenu(playerid, skinlist18, "Select skin");
				}
			}
			else if(PlayerInfo[playerid][pMember] == 4 && PlayerInfo[playerid][pLeader] == 4) { ShowModelSelectionMenu(playerid, skinlist4, "Select skin"); }
			else if(PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pLeader] == 5) { ShowModelSelectionMenu(playerid, skinlist5, "Select skin"); }
			else if(PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pLeader] == 6) { ShowModelSelectionMenu(playerid, skinlist6, "Select skin"); }
			else if(PlayerInfo[playerid][pMember] == 7 && PlayerInfo[playerid][pLeader] == 7) { ShowModelSelectionMenu(playerid, skinlist, "Select skin"); }
			else if(PlayerInfo[playerid][pMember] == 8 && PlayerInfo[playerid][pLeader] == 8)
			{

				if(OnDuty[playerid] == 1)
			    {
					ShowModelSelectionMenu(playerid, skinlist8, "Select skin");
				}
				else
				{
				    ShowModelSelectionMenu(playerid, skinlist18, "Select skin");
				}
			}
			else if(PlayerInfo[playerid][pMember] == 9 && PlayerInfo[playerid][pLeader] == 9) { ShowModelSelectionMenu(playerid, skinlist9, "Select skin"); }
			else if(PlayerInfo[playerid][pMember] == 10 && PlayerInfo[playerid][pLeader] == 10) { ShowModelSelectionMenu(playerid, skinlist10, "Select skin"); }
			else if(PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pLeader] == 11) { ShowModelSelectionMenu(playerid, skinlist11, "Select skin"); }
			else if(PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pLeader] == 12) { ShowModelSelectionMenu(playerid, skinlist12, "Select skin"); }
			else if(PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pLeader] == 13) { ShowModelSelectionMenu(playerid, skinlist13, "Select skin"); }
			else if(PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pLeader] == 14) { ShowModelSelectionMenu(playerid, skinlist14, "Select skin"); }
			else if(PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pLeader] == 15) { ShowModelSelectionMenu(playerid, skinlist15, "Select skin"); }
			else if(PlayerInfo[playerid][pMember] == 16 && PlayerInfo[playerid][pLeader] == 16) { ShowModelSelectionMenu(playerid, skinlist16, "Select skin"); }
			else if(PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pLeader] == 17) { ShowModelSelectionMenu(playerid, skinlist13, "Select skin"); }
		}
	}
	return 1;
}
CMD:puthat(playerid,params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
   	{
   	    if(PlayerInfo[playerid][pHats] != 0)
		{
		    if(Hatss[playerid] == 0)
		    {
		    	new skin,sendername[30],string[256];
		    	GetPlayerName(playerid,sendername,sizeof(sendername));
		    	skin = GetPlayerSkin(playerid);
		    	SetPlayerAttachedObject(playerid, 0, PlayerInfo[playerid][pHats], 2, SkinCaps[skin][0], SkinCaps[skin][1], SkinCaps[skin][2], SkinCaps[skin][3],SkinCaps[skin][4], SkinCaps[skin][5], 1.000000, 1.000000, 1.000000);
		    	Hatss[playerid] = 1;
		    	format(string, sizeof(string), "* %s puts on his hat.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else return SendClientMessage(playerid, COLOR_LIGHTRED, "You already have put a hat.");
		}
		else return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have a hat.");
	}
	return 1;
}
CMD:rhat(playerid,params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
   	{
   	    if(Hatss[playerid] == 1)
		{
		    new sendername[30],string[256];
		    GetPlayerName(playerid,sendername,sizeof(sendername));
		    RemovePlayerAttachedObject(playerid, 0);
		    Hatss[playerid] = 0;
		    format(string, sizeof(string), "* %s takes off his hat.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't put your hat to remove it.");
	}
	return 1;
}
CMD:putglasses(playerid,params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
   	{
   	    if(PlayerInfo[playerid][pGlasses] != 0)
		{
		    if(Sunglasses[playerid] == 0)
		    {
		    	new skin,sendername[30],string[256];
		    	GetPlayerName(playerid,sendername,sizeof(sendername));
		    	skin = GetPlayerSkin(playerid);
		    	SetPlayerHoldingObject(playerid, PlayerInfo[playerid][pGlasses], 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
		    	Sunglasses[playerid] = 1;
		    	format(string, sizeof(string), "* %s puts on his sunglasses.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else return SendClientMessage(playerid, COLOR_LIGHTRED, "You already have put a sunglasses.");
		}
		else return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have sunglasses.");
	}
	return 1;
}
CMD:rglasses(playerid,params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
   	{
   	    if(Sunglasses[playerid] == 1)
		{
		    new sendername[30],string[256];
		    GetPlayerName(playerid,sendername,sizeof(sendername));
		    StopPlayerHoldingObject(playerid);
		    Sunglasses[playerid] = 0;
		    format(string, sizeof(string), "* %s takes off his sunglasses.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else return SendClientMessage(playerid, COLOR_LIGHTRED, "You don't put your sunglasses to remove it.");
	}
	return 1;
}
CMD:buyglasses(playerid,params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(InBussines[playerid] > 0)
	{
		if(BizzInfo[InBussines[playerid]][bType] == 11)
		{
			if(IsPlayerConnected(playerid))
			{
				if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid,COLOR_LIGHTRED,"You don't have $5000.");
				new sunglasses[31];
				sunglasses[0] = 19006;
				sunglasses[1] = 19007;
				sunglasses[2] = 19008;
				sunglasses[3] = 19009;
				sunglasses[4] = 19010;
				sunglasses[5] = 19011;
				sunglasses[6] = 19012;
				sunglasses[7] = 19013;
				sunglasses[8] = 19014;
				sunglasses[9] = 19015;
				sunglasses[10] = 19016;
				sunglasses[11] = 19017;
				sunglasses[12] = 19018;
				sunglasses[13] = 19019;
				sunglasses[14] = 19020;
				sunglasses[15] = 19021;
				sunglasses[16] = 19022;
				sunglasses[17] = 19023;
				sunglasses[18] = 19024;
				sunglasses[19] = 19025;
				sunglasses[20] = 19026;
				sunglasses[21] = 19027;
				sunglasses[22] = 19028;
				sunglasses[23] = 19029;
				sunglasses[24] = 19030;
				sunglasses[25] = 19031;
				sunglasses[26] = 19032;
				sunglasses[27] = 19033;
				sunglasses[28] = 19034;
				sunglasses[29] = 19035;
				ShowModelSelectionMenuEx(playerid, sunglasses, 31, "Select glasses", 1, 14.0, 0.0, -55.0);
			}
		}
	}
	return 1;
}
CMD:buyhat(playerid,params[])
{
    //if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(InBussines[playerid] > 0)
	{
		if(BizzInfo[InBussines[playerid]][bType] == 11)
		{
			if(IsPlayerConnected(playerid))
			{
				if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid,COLOR_LIGHTRED,"You don't have $5000.");
				new hats[18];
				hats[0] = 18926;
				hats[1] = 18927;
				hats[2] = 18928;
				hats[3] = 18929;
				hats[4] = 18930;
				hats[5] = 18931;
				hats[6] = 18932;
				hats[7] = 18933;
				hats[8] = 18934;
				hats[9] = 18935;
				hats[10] = 18944;
				hats[11] = 18945;
				hats[12] = 18946;
				hats[13] = 18947;
				hats[14] = 18948;
				hats[15] = 18949;
				hats[16] = 18950;
				hats[17] = 18951;
				ShowModelSelectionMenuEx(playerid, hats, 18, "Select hat", 2, 90.0, 0.0, 90.0);
			}
		}
	}
	return 1;
}
CMD:frisk(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
        new giveplayerid,sendername[25],giveplayer[25],string[128];
	    if(sscanf(params, "u",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/frisk <Name/Playerid>");
		if(IsACop(playerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
			    if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
				    if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You cannot Frisk yourself.");
				    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
				    new text1[20], text2[20], text4[20];
				    if(PlayerInfo[giveplayerid][pDrugs] > 0) { text1 = "| Drugs."; } else { text1 = "| Empty Pocket."; }
				    if(PlayerInfo[giveplayerid][pMats] > 0) { text2 = "| Materials."; } else { text2 = "| Empty Pocket."; }
				    if(PlayerInfo[giveplayerid][pPhoneBook] > 0) { text4 = "| Phone Book."; } else { text4 = "| Empty Pocket."; }
				    format(string, sizeof(string), "** Items with {B8DBFF}%s{FFFFFF} **", giveplayer);
			        SendClientMessage(playerid, COLOR_WHITE, string);
			        format(string, sizeof(string), "%s, Grams:%d", text1,PlayerInfo[giveplayerid][pDrugs]);
					SendClientMessage(playerid, 0xFFFFFFAA, string);
					format(string, sizeof(string), "%s, Materials:%d", text2,PlayerInfo[giveplayerid][pMats]);
					SendClientMessage(playerid, 0xFFFFFFAA, string);
					format(string, sizeof(string), "%s.", text4);
					SendClientMessage(playerid, 0xFFFFFFAA, string);
                    new Player_Weapons[13];
                    new Player_Ammos[13];
                    new i;
                    for(i = 1;i <= 12;i++)
                    {
                        GetPlayerWeaponData(giveplayerid,i,Player_Weapons[i],Player_Ammos[i]);
                        if(Player_Weapons[i] != 0)
                        {
	                        new weaponName[256];
	                        GetWeaponName(Player_Weapons[i],weaponName,255);
	                        format(string,255,"{B8DBFF}* %s, Gun:{FFFFFF} %s{B8DBFF}, Ammo:{FFFFFF} %d",giveplayer,weaponName,Player_Ammos[i]);
	                        SendClientMessage(playerid,0xFFFFFFAA,string);
                        }
                    }
					format(string, sizeof(string), "* %s has frisked %s for any illegal items.", sendername ,giveplayer);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}This player is not near you.");
			}
            else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
		}
        else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a Cop.");
	}
    return 1;
}
CMD:f(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		new string[300];
	    if(PlayerInfo[playerid][pMuted] == 1)
        {
			format(string, sizeof(string), "You can not speak, you have been silenced for %d seconds.",PlayerInfo[playerid][pMuteTime]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		new result[250],sendername[25];
    	if(sscanf(params, "s[250]",result)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/f <Message>");
		if(FindIP(result)) /// Anti-Reclama
	    {
	        new advertiser[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, advertiser, sizeof(advertiser));
			format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /f.", advertiser, playerid, result);
			ABroadCast(COLOR_WHITE,string,1);
	    }
	    for(new i; i < sizeof(TLD); i++)
		{
			if(strfind(result, TLD[i], true) != -1)
			{
				if(strfind(result, ".", true) != -1 || strfind(result, ".", true) != -1 || strfind(result, ".", true) != -1) break;
				new advertiser[MAX_PLAYER_NAME];
				GetPlayerName(playerid, advertiser, sizeof(advertiser));
				format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in /f.", advertiser, playerid, result);
				ABroadCast(COLOR_WHITE,string,1);
			}
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new member = PlayerInfo[playerid][pMember];
		new leader = PlayerInfo[playerid][pLeader];
		if(member == 4 || leader == 4 || member == 5 || leader == 5 || member == 6 || leader == 6 || member == 7 || leader == 7 || member == 9 || leader == 9 || member == 10 || leader == 10 || member == 11 || leader == 11 || member == 12 || leader == 12 || member == 13 || leader == 13)
		{
			new rtext[64];
			if(PlayerInfo[playerid][pRank] == 1) format(rtext, sizeof(rtext),"%s",DynamicFactions[PlayerInfo[playerid][pMember]][fRankName1]);
			else if(PlayerInfo[playerid][pRank] == 2) format(rtext, sizeof(rtext),"%s",DynamicFactions[PlayerInfo[playerid][pMember]][fRankName2]);
			else if(PlayerInfo[playerid][pRank] == 3) format(rtext, sizeof(rtext),"%s",DynamicFactions[PlayerInfo[playerid][pMember]][fRankName3]);
			else if(PlayerInfo[playerid][pRank] == 4) format(rtext, sizeof(rtext),"%s",DynamicFactions[PlayerInfo[playerid][pMember]][fRankName4]);
			else if(PlayerInfo[playerid][pRank] == 5) format(rtext, sizeof(rtext),"%s",DynamicFactions[PlayerInfo[playerid][pMember]][fRankName5]);
			else if(PlayerInfo[playerid][pRank] == 6) format(rtext, sizeof(rtext),"%s",DynamicFactions[PlayerInfo[playerid][pMember]][fRankName6]);
			else if(PlayerInfo[playerid][pRank] == 7) format(rtext, sizeof(rtext),"%s",DynamicFactions[PlayerInfo[playerid][pMember]][fRankName7]);
			else if(PlayerInfo[playerid][pAdmin] >= 1) format(rtext, sizeof(rtext), "Admin");
			format(string, sizeof(string),"# %s %s: %s",rtext,sendername,result);
			if(PlayerInfo[playerid][pRank] >= 1 && PlayerInfo[playerid][pRank] <= 5)
			{
				SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_MEMBER, string);
			}
			else if(PlayerInfo[playerid][pRank] >= 6)
			{
				SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_LEADER, string);
			}
            else if(PlayerInfo[playerid][pAdmin] >= 1)return SendFamilyMessage(SpecFactiune[playerid], COLOR_PURPLE, rtext);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "Your group data is invalid.");
	}
	return 1;
}
CMD:animlist(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    SendClientMessage(playerid,COLOR_GROVE,"Anim List");
    SendClientMessage(playerid,COLOR_WHITE,"Lifejump : Exhaust : Carlock : Rcarjack1 : Lcarjack1 : Rcarjack2 : Lcarjack2 : Hoodfrisked");
    SendClientMessage(playerid,COLOR_WHITE,"Lightcig : Tapcig : Bat : Lean : Clearanim : Dancing : Box : Lowthrow : Highthrow");
    SendClientMessage(playerid,COLOR_WHITE,"Leftslap : Handsup : Fall : Fallback : Sup : Rap : Push : Akick : Lowbodypush");
    SendClientMessage(playerid,COLOR_WHITE,"Spray : Headbutt : Pee : Koface : Kostomach : Kiss : Rollfall : Lay2 : Hitch");
    SendClientMessage(playerid,COLOR_WHITE,"Beach : Medic : Scratch : Sit : Drunk : Bomb : Getarrested : Laugh : Lookout");
    SendClientMessage(playerid,COLOR_WHITE,"Aim : Crossarms : Lay : Hide : Vomit : Eating : Wave : Shouting : Chant");
    SendClientMessage(playerid,COLOR_WHITE,"Frisked : Exhausted : Injured : Slapass : Deal : Dealstance : Crack : Wank : Gro");
    SendClientMessage(playerid,COLOR_WHITE,"Sit : Chat : Fucku : Taichi : Knife : Basket : JumpWater");
    return 1;
}
CMD:carhand(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    ApplyAnimation(playerid,"CAR","Tap_hand",4.1,0,1,1 ,1,1);
	return 1;
}
CMD:lifejump(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	LoopingAnim(playerid,"PED","EV_dive",4.0,0,1,1,1,0);
	return 1;
}
CMD:exhaust(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	LoopingAnim(playerid,"PED","IDLE_tired",3.0,1,0,0,0,0);
	return 1;
}
CMD:rcarjack1(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	OnePlayAnim(playerid,"PED","CAR_pulloutL_LHS",4.0,0,0,0,0,0);
	return 1;
}
CMD:lcarjack1(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
 	OnePlayAnim(playerid,"PED","CAR_pulloutL_RHS",4.0,0,0,0,0,0);
	return 1;
}
CMD:rcarjack2(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
 	OnePlayAnim(playerid,"PED","CAR_pullout_LHS",4.0,0,0,0,0,0);
	return 1;
}
CMD:lcarjack2(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
 	OnePlayAnim(playerid,"PED","CAR_pullout_RHS",4.0,0,0,0,0,0);
	return 1;
}
CMD:hoodfrisked(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
 	LoopingAnim(playerid,"POLICE","crm_drgbst_01",4.0,0,1,1,1,0);
	return 1;
}
CMD:lightcig(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
 	OnePlayAnim(playerid,"SMOKING","M_smk_in",3.0,0,0,0,0,0);
	return 1;
}
CMD:tapcig(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
 	OnePlayAnim(playerid,"SMOKING","M_smk_tap",3.0,0,0,0,0,0);
	return 1;
}
CMD:bat(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
 	LoopingAnim(playerid,"BASEBALL","Bat_IDLE",4.0,1,1,1,1,0);
	return 1;
}
CMD:lean(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	new test;
    if(sscanf(params, "d",test)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/lean <1-2>");
    switch (test)
    {
	    case 1: LoopingAnim(playerid,"GANGS","leanIDLE",4.0,0,1,1,1,0);
	    case 2: LoopingAnim(playerid,"MISC","Plyrlean_loop",4.0,0,1,1,1,0);
	    default: SendClientMessage(playerid,COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/lean <1-2>");
	}
	return 1;
}
CMD:clearanim(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:dancing(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	new test;
    if(sscanf(params, "d",test)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/dancing <1-7>");
	switch (test)
   	{
	    case 1: LoopingAnim(playerid,"STRIP", "strip_A", 4.1, 1, 1, 1, 1, 1 );
        case 2: LoopingAnim(playerid,"STRIP", "strip_B", 4.1, 1, 1, 1, 1, 1 );
     	case 3: LoopingAnim(playerid,"STRIP", "strip_C", 4.1, 1, 1, 1, 1, 1 );
    	case 4: LoopingAnim(playerid,"STRIP", "strip_D", 4.1, 1, 1, 1, 1, 1 );
    	case 5: LoopingAnim(playerid,"STRIP", "strip_E", 4.1, 1, 1, 1, 1, 1 );
    	case 6: LoopingAnim(playerid,"STRIP", "strip_F", 4.1, 1, 1, 1, 1, 1 );
     	case 7: LoopingAnim(playerid,"STRIP", "strip_G", 4.1, 1, 1, 1, 1, 1 );
     	default: SendClientMessage(playerid,COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/dancing <1-7>");
	}
	return 1;
}
CMD:box(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
 	LoopingAnim(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,0);
	return 1;
}
CMD:lowthrow(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	OnePlayAnim(playerid,"GRENADE","WEAPON_throwu",3.0,0,0,0,0,0);
	return 1;
}
CMD:highthrow(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
 	OnePlayAnim(playerid,"GRENADE","WEAPON_throw",4.0,0,0,0,0,0);
	return 1;
}
CMD:leftslap(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	OnePlayAnim(playerid,"PED","BIKE_elbowL",4.0,0,0,0,0,0);
	return 1;
}
CMD:handsup(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(arefreeze[playerid] == 1) return SCM(playerid, COLOR_ERROR, "Nu poti folosi nici o animatie daca ai freeze.");
	if(PlayerInfo[playerid][pPaintBallG] > 0) return SCM(playerid,COLOR_WHITE,"{FFF8C6}Command is not currently accessible.");
	{
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
		PlayerHandsup[playerid] = 1;
	}
	return 1;
}
CMD:fall(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(arefreeze[playerid] == 1) return SCM(playerid, COLOR_ERROR, "Nu poti folosi nici o animatie daca ai freeze.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	LoopingAnim(playerid,"PED","KO_skid_front",4.1,0,1,1,1,0);
	return 1;
}
CMD:fallback(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    LoopingAnim(playerid, "PED","FLOOR_hit_f", 4.0, 1, 0, 0, 0, 0);
    return 1;
}
CMD:laugh(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
 	OnePlayAnim(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:lookout(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    OnePlayAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:aim(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    LoopingAnim(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:crossarms(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    LoopingAnim(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);
	return 1;
}
CMD:lay(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
 	LoopingAnim(playerid,"BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:hide(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
 	LoopingAnim(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:vomit(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
 	OnePlayAnim(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:wave(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    LoopingAnim(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:shouting(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    LoopingAnim(playerid,"RIOT","RIOT_shout",4.0,1,0,0,0,0);
	return 1;
}
CMD:chant(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    LoopingAnim(playerid,"RIOT","RIOT_CHANT",4.0,1,1,1,1,0);
	return 1;
}
CMD:frisked(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    LoopingAnim(playerid,"POLICE","crm_drgbst_01",4.0,0,1,1,1,0);
	return 1;
}
CMD:exhausted(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    LoopingAnim(playerid,"PED","IDLE_tired",3.0,1,0,0,0,0);
	return 1;
}
CMD:injured(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    LoopingAnim(playerid, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:slapass(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    OnePlayAnim(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:deal(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    OnePlayAnim(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:dealstance(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    LoopingAnim(playerid,"DEALER","DEALER_IDLE",4.0,1,0,0,0,0);
	return 1;
}
CMD:crack(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    LoopingAnim(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:salute(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	if(arefreeze[playerid] == 1) return SCM(playerid, COLOR_ERROR, "Nu poti folosi nici o animatie daca ai freeze.");
    LoopingAnim(playerid, "ON_LOOKERS", "Pointup_loop", 4.0, 1, 0, 0, 0, 0);
	PlayerInfo[playerid][pAcces] = 1;
    return 1;
}
CMD:wank(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    LoopingAnim(playerid,"PAULNMAC", "wank_loop", 1.800001, 1, 0, 0, 1, 600);
	PlayerInfo[playerid][pAcces] = 1;
	return 1;
}
CMD:gro(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
 	LoopingAnim(playerid,"BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:sup(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	new test;
    if(sscanf(params, "d",test)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/sup <1-3>");
	switch (test)
  	{
    	case 1: OnePlayAnim(playerid,"GANGS","hndshkba",4.0,0,0,0,0,0);
     	case 2: OnePlayAnim(playerid,"GANGS","hndshkda",4.0,0,0,0,0,0);
     	case 3: OnePlayAnim(playerid,"GANGS","hndshkfa_swt",4.0,0,0,0,0,0);
    	default: SendClientMessage(playerid,COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/sup <1-3>");
	}
    return 1;
}
CMD:rap(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	new test;
    if(sscanf(params, "d",test)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/rap <1-4>");
	switch (test)
	{
	    case 1: LoopingAnim(playerid,"RAPPING","RAP_A_Loop",4.0,1,0,0,0,0);
    	case 2: LoopingAnim(playerid,"RAPPING","RAP_C_Loop",4.0,1,0,0,0,0);
    	case 3: LoopingAnim(playerid,"GANGS","prtial_gngtlkD",4.0,1,0,0,0,0);
     	case 4: LoopingAnim(playerid,"GANGS","prtial_gngtlkH",4.0,1,0,0,1,1);
    	default: SendClientMessage(playerid,COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/rap <1-4>");
	}
    return 1;
}
CMD:push(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
 	OnePlayAnim(playerid,"GANGS","shake_cara",4.0,0,0,0,0,0);
	return 1;
}
CMD:akick(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	OnePlayAnim(playerid,"POLICE","Door_Kick",4.0,0,0,0,0,0);
	return 1;
}
CMD:lowbodypush(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	OnePlayAnim(playerid,"GANGS","shake_carSH",4.0,0,0,0,0,0);
	return 1;
}
CMD:spray(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	OnePlayAnim(playerid,"SPRAYCAN","spraycan_full",4.0,0,0,0,0,0);
	return 1;
}
CMD:headbutt(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	OnePlayAnim(playerid,"WAYFARER","WF_Fwd",4.0,0,0,0,0,0);
	return 1;
}
CMD:pee(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	if(arefreeze[playerid] == 1) return SCM(playerid, COLOR_ERROR, "Nu poti folosi nici o animatie daca ai freeze.");
	if(PlayerInfo[playerid][pPaintBallG] > 0) return SCM(playerid,COLOR_WHITE,"{FFF8C6}Command is not currently accessible.");
	{
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING);
	}
	return 1;
}
CMD:koface(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	LoopingAnim(playerid,"PED","KO_shot_face",4.0,0,1,1,1,0);
	return 1;
}
CMD:kostomach(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	LoopingAnim(playerid,"PED","KO_shot_stom",4.0,0,1,1,1,0);
	return 1;
}
CMD:kiss(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	LoopingAnim(playerid,"KISSING", "Grlfrd_Kiss_02", 1.800001, 1, 0, 0, 1, 600);
	return 1;
}
CMD:rollfall(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	LoopingAnim(playerid,"PED","BIKE_fallR",4.0,0,1,1,1,0);
	return 1;
}
CMD:lay2(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	LoopingAnim(playerid,"SUNBATHE","Lay_Bac_in",3.0,0,1,1,1,0);
	return 1;
}
CMD:hitch(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	LoopingAnim(playerid,"MISC","Hiker_Pose", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:beach(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	LoopingAnim(playerid,"BEACH","SitnWait_loop_W",4.1,0,1,1,1,1);
	return 1;
}
CMD:medic(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	LoopingAnim(playerid,"MEDIC","CPR",4.1,0,1,1,1,1);
	return 1;
}
CMD:scratch(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	LoopingAnim(playerid,"MISC","Scratchballs_01", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:sit(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	LoopingAnim(playerid,"PED","SEAT_idle", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
CMD:drunk(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	LoopingAnim(playerid,"PED","WALK_DRUNK",4.0,1,1,1,1,0);
	return 1;
}
CMD:bomb(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
   	ClearAnimations(playerid);
   	OnePlayAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
	return 1;
}
CMD:getarrested(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    LoopingAnim(playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1, -1);
	return 1;
}
CMD:chat(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    OnePlayAnim(playerid,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
	return 1;
}
CMD:fucku(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    OnePlayAnim(playerid,"PED","fucku",4.0,0,0,0,0,0);
	return 1;
}
CMD:taichi(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    LoopingAnim(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0);
	return 1;
}
CMD:knife(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	new test;
    if(sscanf(params, "d",test)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/knife <1-4>");
	switch (test)
	{
	    case 1: LoopingAnim(playerid,"KNIFE","KILL_Knife_Ped_Damage",4.0,0,1,1,1,0);
     	case 2: LoopingAnim(playerid,"KNIFE","KILL_Knife_Ped_Die",4.0,0,1,1,1,0);
      	case 3: OnePlayAnim(playerid,"KNIFE","KILL_Knife_Player",4.0,0,0,0,0,0);
     	case 4: LoopingAnim(playerid,"KNIFE","KILL_Partial",4.0,0,1,1,1,1);
    	default: SendClientMessage(playerid,COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/knife <1-4>");
	}
	return 1;
}
CMD:basket(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	new test;
    if(sscanf(params, "d",test)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/basket <1-6>");
	switch (test)
 	{
    	case 1: LoopingAnim(playerid,"BSKTBALL","BBALL_idleloop",4.0,1,0,0,0,0);
    	case 2: OnePlayAnim(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0);
     	case 3: OnePlayAnim(playerid,"BSKTBALL","BBALL_pickup",4.0,0,0,0,0,0);
     	case 4: LoopingAnim(playerid,"BSKTBALL","BBALL_run",4.1,1,1,1,1,1);
    	case 5: LoopingAnim(playerid,"BSKTBALL","BBALL_def_loop",4.0,1,0,0,0,0);
       	case 6: LoopingAnim(playerid,"BSKTBALL","BBALL_Dnk",4.0,1,0,0,0,0);
    	default: SendClientMessage(playerid,COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/basket <1-6>");
	}
	return 1;
}
CMD:dance(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	if(PlayerInfo[playerid][pPaintBallG] > 0) return SCM(playerid,COLOR_WHITE,"{FFF8C6}Command is not currently accessible.");
	{
		new test;
		if(sscanf(params, "d",test)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/dance <1-4>");
		if(test < 1 || test > 4) return SendClientMessage(playerid,COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/dance <1-4>");
		if(test == 1)
		{
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
		}
		else if(test== 2)
		{
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
		}
		else if(test == 3)
		{
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
		}
		else if(test == 4)
		{
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
		}
	}
	return 1;
}
CMD:smoke(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
	if(PlayerInfo[playerid][pPaintBallG] > 0) return SCM(playerid,COLOR_WHITE,"{FFF8C6}Command is not currently accessible.");
	{
		new test;
		if(sscanf(params, "d",test)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/smoke <1-2>");
		if(test < 1 || test > 2) return SendClientMessage(playerid,COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/smoke <1-2>");
		if(test == 1)
		{
		    ApplyAnimation(playerid, "SMOKING", "M_smk_in", 4.0, 0, 0, 0, 0, 0);
		}
		else if(test== 2)
		{
		    ApplyAnimation(playerid, "SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
		}
	}
	return 1;
}
CMD:jumpwater(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(PlayerInfo[playerid][pSleeping] > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nu poti folosi o animatie deoarece dormi.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "{999999}Animations are inaccessible on foot.");
    ApplyAnimation(playerid,"DAM_JUMP","DAM_LAUNCH",2,0,1,1,0,0);
	return 1;
}
CMD:bizwithdraw(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pPbiskey];
		if (bouse == 255) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't own a business.");
		new cashdeposit,string[64];
		if(sscanf(params, "d",cashdeposit))
		{
            SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/bizwithdraw <Amount of Money>");
            if(cashdeposit > 10000000) return SCM(playerid,COLOR_WHITE,"{FFB870}Maxim amount of money is $10,000,000.");
			format(string, sizeof(string), "{FFFF00}You have $%s in your till.", FormatNumber(BizzInfo[bouse][bTill]));
			SendClientMessage(playerid, COLOR_WHITE, string);
			return 1;
		}
		if (cashdeposit > BizzInfo[bouse][bTill] || cashdeposit < 1) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You dont have that much.");
		if (!PlayerToPoint(5.0, playerid,BizzInfo[bouse][bEntranceX],BizzInfo[bouse][bEntranceY],BizzInfo[bouse][bEntranceZ]))
		{
			SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are to far from your business.");
			return 1;
		}
		else
		{
			GivePlayerCash(playerid,cashdeposit);
			BizzInfo[bouse][bTill] -= cashdeposit;
			format(string, sizeof(string), "{FFFF00}You have withdrawn $%s from your till. Total: $%s.", FormatNumber(cashdeposit),FormatNumber(BizzInfo[bouse][bTill]));
			SendClientMessage(playerid, COLOR_YELLOW, string);
	        new str1[184];
			mysql_format(SQL,str1,sizeof(str1),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[bouse][bTill],bouse);
			mysql_tquery(SQL,str1,"","");
			Update(playerid, pCashx);
			return 1;
		}
	}
	return 1;
}
CMD:bizfee(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pPbiskey];
		if (bouse == 255) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't own a business.");
		new fee,string[64];
		if(sscanf(params, "d",fee)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/bizfee <Money>");
		if(fee < 1 || fee > 5000) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}Minimum fee is $1, maximum fee is $5,000.");
		BizzInfo[bouse][bEntranceCost] = fee;
		format(string, sizeof(string), "{FFFF00}Entrance fee set to $%s.", FormatNumber(BizzInfo[bouse][bEntranceCost]));
        new str1[184];
		mysql_format(SQL,str1,sizeof(str1),"UPDATE `bizz` SET `EntranceCost`='%d' WHERE `ID`='%d'",BizzInfo[bouse][bEntranceCost],bouse);
		mysql_tquery(SQL,str1,"","");
		OnPropTextdrawUpdate(2,bouse);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	return 1;
}
CMD:bizname(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
	{
		new bouse = PlayerInfo[playerid][pPbiskey];
		if (bouse == 255) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't own a business.");
		new result[60],string[128];
		if(sscanf(params, "s[60]",result)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/bizname <Message>");
		new maxc = strlen(result);
		if(maxc > 20) return SCM(playerid,COLOR_WHITE,"{FFB870}Maximum caracter is 20.");
		new result2[250];
		mysql_real_escape_string(result, result2);
		strmid(BizzInfo[bouse][bMessage], result2, 0, 64, 255);
		format(string, sizeof(string), "{FFFF00}Business name set to %s.",BizzInfo[bouse][bMessage]);
        new str1[184];
		mysql_format(SQL,str1,sizeof(str1),"UPDATE bizz SET Message='%s' WHERE ID='%d'",BizzInfo[bouse][bMessage],bouse);
		mysql_tquery(SQL,str1,"","");
		OnPropTextdrawUpdate(2, bouse);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	return 1;
}
CMD:sellbizto(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		new money,giveplayerid,sendername[25],giveplayer[25],string[150],playername[25],other[128];
		GetPlayerName(playerid, playername, sizeof(playername));
	    if(PlayerInfo[playerid][pPbiskey] == 255) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't own a bussines.");
		if(sscanf(params, "uiS(NULL)",giveplayerid,money,other)) return SendClientMessage(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/sellbizto <Name/Playerid> <Price>");
		if(strcmp(other, "NULL", true)) return SCM(playerid,COLOR_WHITE,"Do not use spaces in price.");
		if(money < 1 || money > 1000000000) return SendClientMessage(playerid, COLOR_WHITE,"{FFF8C6}Price can't be lower than $1 - $1,000,000,000.");
		if(PlayerInfo[giveplayerid][pPbiskey] != 255) return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}This player already own a Bussines.");
		if(IsPlayerConnected(giveplayerid))
		{
		    if(giveplayerid != INVALID_PLAYER_ID)
		    {
		        if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if(PlayerInfo[giveplayerid][pLevel] < BizzInfo[PlayerInfo[playerid][pPbiskey]][bLevelNeeded]) return SCM(playerid,COLOR_WHITE,"{FFF8C6}This player don't have needed level.");
					if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}You can't sell Bussines to yourself.");
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "{B8FFDB}* You offered to sell your Bussines to %s for $%s.", giveplayer, FormatNumber(money));
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "{B8FFDB}* %s wants to sell his Bussines to you for $%s, (type /accept biz %d) to accept.", sendername, FormatNumber(money),playerid);
					SendClientMessage(giveplayerid, COLOR_WHITE, string);
					bizid[giveplayerid] = PlayerInfo[playerid][pPbiskey];
					bizprice[giveplayerid] = money;
					bizoffer[giveplayerid] = playerid;
					return 1;
				}
    			else return SCM(playerid,COLOR_WHITE,"{FFFFCC}This player is not near you.");
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "{FFFFCC}Error: Player not connected.");
	}
	return 1;
}
CMD:sellbiztostate(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
	{
		new string[70];
		if(PlayerInfo[playerid][pPbiskey] == 255) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't own a bussines.");
		if(strcmp(PlayerInfo[playerid][pNormalName], BizzInfo[PlayerInfo[playerid][pPbiskey]][bOwner], true) == 0)
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			BizzInfo[bouse][bLocked] = 1;
			BizzInfo[bouse][bOwned] = 0;
			strmid(BizzInfo[bouse][bOwner], "AdmBot", 0, strlen("AdmBot"), 255);
			new cashb = floatround(floatmul(BizzInfo[bouse][bBuyPrice],0.70),floatround_ceil);
			GivePlayerCash(playerid,cashb);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "~w~Congratulations~n~ You have sold your property for ~n~~g~$%d",cashb);
			GameTextForPlayer(playerid, string, 10000, 3);
			PlayerInfo[playerid][pPbiskey] = 255;
            new str1[184];
			mysql_format(SQL,str1,sizeof(str1),"UPDATE `bizz` SET `Locked`='0',`Owned`='0',`Till`='0',`Owner`='AdmBot' WHERE `ID`='%d'",bouse);
			mysql_tquery(SQL,str1,"","");
			Update(playerid,pCashx);
			Update(playerid,pPbiskeyx);
			OnPropTextdrawUpdate(2,bouse);
			return 1;
		}
		else return SCM(playerid,COLOR_WHITE,"{FFB870}You don't own a business.");
	}
	return 1;
}
CMD:buybiz(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		new string[128],sendername[25],stringcasa[128];
		if(PlayerInfo[playerid][pPbiskey] != 255) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You already own a business, type /sellbiztostate if you want to buy this one.");
		for(new b = 1; b < sizeof(BizzInfo); b++)
		{
			if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0)
			{
				if(PlayerInfo[playerid][pLevel] < BizzInfo[b][bLevelNeeded])
				{
					format(string, sizeof(string), "{FFB870}You must be level %d to purchase this.",BizzInfo[b][bLevelNeeded]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					return 1;
				}
				if(GetPlayerCash(playerid) > BizzInfo[b][bBuyPrice])
				{
					PlayerInfo[playerid][pPbiskey] = b;
					BizzInfo[b][bOwned] = 1;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					strmid(BizzInfo[b][bOwner], PlayerInfo[playerid][pNormalName], 0, 25, 255);
					GivePlayerCash(playerid,-BizzInfo[b][bBuyPrice]);
					GameTextForPlayer(playerid, "~w~Welcome~n~You can exit at any time by moving to this door and press enter", 5000, 3);
					if(BizzInfo[b][bSbiz] == 0)
					{
						PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
						PlayerInfo[playerid][pLocal] = b ;
						InBussines[playerid] = b;
						SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
						SetPlayerVirtualWorld(playerid, BizzInfo[b][bVirtual]);
						PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
						SetPlayerPosEx(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
					}
					SendClientMessage(playerid, COLOR_WHITE, "Congratulations, On Your New Purchase.");
					SendClientMessage(playerid, COLOR_WHITE, "Type /help to review the new business help section.");
					format(stringcasa, sizeof(stringcasa), "%s [user:%d] Bought The Biz [bizz:%d] For $%s.",sendername,PlayerInfo[playerid][pSQLID],b,FormatNumber(BizzInfo[b][bBuyPrice]));
                    ABroadCast(COLOR_YELLOW, stringcasa,1);
                    new var100[256],y,m,d,h,mi,s,string2[256],string3[256];
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string2,sizeof(string2),"[%02d-%02d-%d %02d:%02d:%02d] %s[user:%d] bought bizz %d for $%s.",d,m,y,h,mi,s,sendername,PlayerInfo[playerid][pSQLID],b,FormatNumber(BizzInfo[b][bBuyPrice]));
 					mysql_real_escape_string(string2, string3);
					mysql_format(SQL, var100, sizeof(var100), "INSERT INTO playerlogs (`playerid`,`giverid`,`action`,`time`) VALUES ('%d','0','%s','%02d-%02d-%d %02d:%02d:%02d')", PlayerInfo[playerid][pSQLID],string3,d,m,y,h,mi,s);
					mysql_tquery(SQL,var100,"","");
					new str1[256];
					mysql_format(SQL,str1,sizeof(str1),"UPDATE users SET `Money`='%d',`Bizz`='%d' WHERE `name`='%s'",GetPlayerCash(playerid),PlayerInfo[playerid][pPbiskey],PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,str1,"","");
					mysql_format(SQL,str1,sizeof(str1),"UPDATE `bizz` SET `Owned`='1',`Owner`='%s' WHERE `ID`='%d'",BizzInfo[b][bOwner],b);
					mysql_tquery(SQL,str1,"","");
					OnPropTextdrawUpdate(2,b);
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "You don't have the cash for that");
					return 1;
				}
			}
		}
	}
	return 1;
}

/*CMD:staff(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		new szString[2500];
		format( szString, sizeof( szString ), "%s|__________| STAFF New Land RP |__________|\n",szString);
		format( szString, sizeof( szString ), "%sFounder :> Knight\n",szString);
		format( szString, sizeof( szString ), "%sDeveloper :> MaWReZ\n",szString);
		format( szString, sizeof( szString ), "%sManager :> _MeTi_\n",szString);
		ShowPlayerDialog( playerid, DIALOG_FACTIONS, DIALOG_STYLE_MSGBOX, "Menu STAFF", szString, "Ok", "" );
	}
	return 1;
}*/
CMD:forum(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		new szString[2500];
		format( szString, sizeof( szString ), "%sNew Land Community's Forum : NL-Gaming.iR/forum\n",szString);
		ShowPlayerDialog( playerid, DIALOG_FACTIONS, DIALOG_STYLE_MSGBOX, "Forum RP", szString, "Ok", "" );
	}
	return 1;
}
CMD:ucp(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if(IsPlayerConnected(playerid))
    {
		new szString[2500];
		format( szString, sizeof( szString ), "%sNew Land Community's {00ff00}U{ffffff}ser {00ff00}C{ffffff}ontrol {00ff00}P{ffffff}anel : ucp.NL-Gaming.iR\n",szString);
		ShowPlayerDialog( playerid, DIALOG_FACTIONS, DIALOG_STYLE_MSGBOX, "Panel RP", szString, "Ok", "" );
	}
	return 1;
}
CMD:setkey(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 10) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,x_nr[10],key;
	if(sscanf(params, "s[10]ud",x_nr,id,key)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/setkey <Car-House-Bussines> <Name/Playerid> <Key ID(House(999)-Bussines(255)-Car(0)-Moto(0)-Heli(0)-PCar(0)-PCar2(0)-Plus(0)-Plus2(0)>");
    if(strcmp(x_nr,"house",true) == 0)
 	{
		PlayerInfo[id][pPhousekey] = key;
		Update(id,pPhousekeyx);
	    return 1;
	}
    if(strcmp(x_nr,"bussines",true) == 0)
 	{
		PlayerInfo[id][pPbiskey] = key;
		Update(id,pPbiskeyx);
   	    return 1;
	}
    if(strcmp(x_nr,"car",true) == 0)
 	{
		PlayerInfo[id][pPcarkey] = key;
		Update(id,pPcarkeyx);
		return 1;
	}
    if(strcmp(x_nr,"car2",true) == 0)
 	{
		PlayerInfo[id][pmotokey] = key;
		Update(id,pmotokeyx);
		return 1;
	}
	if(strcmp(x_nr,"pcar2",true) == 0)
 	{
		PlayerInfo[id][pprcarkey2] = key;
		Update(id,pprcarkey2x);
		return 1;
	}
	if(strcmp(x_nr,"plus",true) == 0)
 	{
		PlayerInfo[id][pPPluscarkey] = key;
		Update(id,pPPluscarkeyx);
		return 1;
	}
	if(strcmp(x_nr,"plus2",true) == 0)
 	{
		PlayerInfo[id][pPPluscarkey2] = key;
		Update(id,pPPluscarkey2x);
		return 1;
	}
    if(strcmp(x_nr,"pcar",true) == 0)
 	{
		PlayerInfo[id][pprcarkey] = key;
		Update(id,pprcarkeyx);
		return 1;
	}
    return 1;
}
CMD:setpremium(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 11) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[128];
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/setpremium <Name/Playerid>");
	PlayerInfo[id][pPremiumAccount] = 1;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `Premium`='1' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:removepremium(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 11) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[128];
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/removepremium <Name/Playerid>");
	PlayerInfo[id][pPremiumAccount] = 0;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `Premium`='0' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:setbeta(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 9) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[128],sendername[30],giveplayer[30];
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/setbeta <Name/Playerid>");
	format(string, sizeof(string), "Admin %s has promoted %s's to Beta Tester.", sendername,giveplayer);
	ABroadCast(COLOR_ADMIN,string,1);
	format(string, sizeof(string), "Admin %s promoted you Beta Tester.", sendername);
	SCM(id,COLOR_LIGHTBLUE, string);
	PlayerInfo[id][pBeta] = 1;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `Beta`='1' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:removebeta(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 9) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[128],sendername[30],giveplayer[30];
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/removebeta <Name/Playerid>");
	format(string, sizeof(string), "Admin %s has removed %s's to Beta Tester.", sendername,giveplayer);
	ABroadCast(COLOR_ADMIN,string,1);
	format(string, sizeof(string), "Admin %s removed you Beta Tester.", sendername);
	SCM(id,COLOR_LIGHTBLUE, string);
	PlayerInfo[id][pBeta] = 0;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `Beta`='0' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:setml(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[128],sendername[30],giveplayer[30];
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/setmanagerlideri <Name/Playerid>");
	format(string, sizeof(string), "Admin %s has promoted %s's to Manager Leader.", sendername,giveplayer);
	ABroadCast(COLOR_ADMIN,string,1);
	format(string, sizeof(string), "Admin %s promoted you Manager Leader.", sendername);
	SCM(id,COLOR_LIGHTBLUE, string);
	PlayerInfo[id][pManagerLideri] = 1;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `ManagerLideri`='1' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:removeml(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[128],sendername[30],giveplayer[30];
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/removemanagerlideri <Name/Playerid>");
	format(string, sizeof(string), "Admin %s has removed %s's to Manager Leader.", sendername,giveplayer);
	ABroadCast(COLOR_ADMIN,string,1);
	format(string, sizeof(string), "Admin %s removed you Manager Leader.", sendername);
	SCM(id,COLOR_LIGHTBLUE, string);
	PlayerInfo[id][pManagerLideri] = 0;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `ManagerLideri`='0' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:setmlsupport(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[128],sendername[30],giveplayer[30];
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/setmanagerliderisupport <Name/Playerid>");
	format(string, sizeof(string), "Admin %s has promoted %s's to Manager Leader and Support.", sendername,giveplayer);
	ABroadCast(COLOR_ADMIN,string,1);
	format(string, sizeof(string), "Admin %s promoted you Manager Leader and Support.", sendername);
	SCM(id,COLOR_LIGHTBLUE, string);
	PlayerInfo[id][pManagerLideriSupport] = 1;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `ManagerLideriSupport`='1' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:removemlsupport(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[128],sendername[30],giveplayer[30];
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/removemanagerliderisupport <Name/Playerid>");
	format(string, sizeof(string), "Admin %s has removed %s's to Manager Leader and Support.", sendername,giveplayer);
	ABroadCast(COLOR_ADMIN,string,1);
	format(string, sizeof(string), "Admin %s removed you Manager Leader and Support.", sendername);
	SCM(id,COLOR_LIGHTBLUE, string);
	PlayerInfo[id][pManagerLideriSupport] = 0;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `ManagerLideriSupport`='0' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:setmd(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[128],sendername[30],giveplayer[30];
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/setmanagerdepartamente <Name/Playerid>");
	format(string, sizeof(string), "Admin %s has promoted %s's to Manager Department", sendername,giveplayer);
	ABroadCast(COLOR_ADMIN,string,1);
	format(string, sizeof(string), "Admin %s promoted you Manager Department", sendername);
	SCM(id,COLOR_LIGHTBLUE, string);
	PlayerInfo[id][pManagerDepartamente] = 1;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `ManagerDepartamente`='1' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:removemd(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[128],sendername[30],giveplayer[30];
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/removemanagerdepartamente <Name/Playerid>");
	format(string, sizeof(string), "Admin %s has removed %s's to Manager Department", sendername,giveplayer);
	ABroadCast(COLOR_ADMIN,string,1);
	format(string, sizeof(string), "Admin %s removed you Manager Department", sendername);
	SCM(id,COLOR_LIGHTBLUE, string);
	PlayerInfo[id][pManagerDepartamente] = 0;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `ManagerDepartamente`='0' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:setmt(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[128],sendername[30],giveplayer[30];
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/setmanagertaxi <Name/Playerid>");
	format(string, sizeof(string), "Admin %s has promoted %s's to Manager Taxi.", sendername,giveplayer);
	ABroadCast(COLOR_ADMIN,string,1);
	format(string, sizeof(string), "Admin %s promoted you Manager Taxi.", sendername);
	SCM(id,COLOR_LIGHTBLUE, string);
	PlayerInfo[id][pManagerTaxi] = 1;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `ManagerTaxi`='1' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:removemt(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[128],sendername[30],giveplayer[30];
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/removemanagertaxi <Name/Playerid>");
	format(string, sizeof(string), "Admin %s has removed %s's to Manager Taxi.", sendername,giveplayer);
	ABroadCast(COLOR_ADMIN,string,1);
	format(string, sizeof(string), "Admin %s removed you Manager Taxi.", sendername);
	SCM(id,COLOR_LIGHTBLUE, string);
	PlayerInfo[id][pManagerTaxi] = 0;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `ManagerTaxi`='0' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:setmi(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[128],sendername[30],giveplayer[30];
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/setmanagerinstructori <Name/Playerid>");
	format(string, sizeof(string), "Admin %s has promoted %s's to Manager Instructor", sendername,giveplayer);
	ABroadCast(COLOR_ADMIN,string,1);
	format(string, sizeof(string), "Admin %s promoted you Manager Instructor.", sendername);
	SCM(id,COLOR_LIGHTBLUE, string);
	PlayerInfo[id][pManagerInstructori] = 1;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `ManagerInstructori`='1' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:removemi(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[128],sendername[30],giveplayer[30];
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/removemanagerinstructori <Name/Playerid>");
	format(string, sizeof(string), "Admin %s has removed %s's to Manager Instructor", sendername,giveplayer);
	ABroadCast(COLOR_ADMIN,string,1);
	format(string, sizeof(string), "Admin %s removed you Manager Instructor", sendername);
	SCM(id,COLOR_LIGHTBLUE, string);
	PlayerInfo[id][pManagerInstructori] = 0;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `ManagerInstructori`='0' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:setmm(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[128],sendername[30],giveplayer[30];
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/setmanagermedici <Name/Playerid>");
	format(string, sizeof(string), "Admin %s has promoted %s's to Manager Medic", sendername,giveplayer);
	ABroadCast(COLOR_ADMIN,string,1);
	format(string, sizeof(string), "Admin %s promoted you Manager Medic", sendername);
	SCM(id,COLOR_LIGHTBLUE, string);
	PlayerInfo[id][pManagerMedici] = 1;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `ManagerMedici`='1' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:removemm(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[128],sendername[30],giveplayer[30];
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/removemanagermedici <Name/Playerid>");
	format(string, sizeof(string), "Admin %s has removed %s's to Manager Medic", sendername,giveplayer);
	ABroadCast(COLOR_ADMIN,string,1);
	format(string, sizeof(string), "Admin %s removed you Manager Medic", sendername);
	SCM(id,COLOR_LIGHTBLUE, string);
	PlayerInfo[id][pManagerMedici] = 0;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `ManagerMedici`='0' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:setmh(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[128],sendername[30],giveplayer[30];
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/setmanagerhitman <Name/Playerid>");
	format(string, sizeof(string), "Admin %s has promoted %s's to Manager Hitman", sendername,giveplayer);
	ABroadCast(COLOR_ADMIN,string,1);
	format(string, sizeof(string), "Admin %s promoted you Manager Hitman", sendername);
	SCM(id,COLOR_LIGHTBLUE, string);
	PlayerInfo[id][pManagerHitman] = 1;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `ManagerHitman`='1' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:removemh(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
    if (PlayerInfo[playerid][pAdmin] < 7) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new id,string[128],sendername[30],giveplayer[30];
	GetPlayerName(id, giveplayer, sizeof(giveplayer));
    GetPlayerName(playerid, sendername, sizeof(sendername));
	if(sscanf(params, "u",id)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/removemanagerhitman <Name/Playerid>");
	format(string, sizeof(string), "Admin %s has removed %s's to Manager Hitman", sendername,giveplayer);
	ABroadCast(COLOR_ADMIN,string,1);
	format(string, sizeof(string), "Admin %s removed you Manager Hitman", sendername);
	SCM(id,COLOR_LIGHTBLUE, string);
	PlayerInfo[id][pManagerHitman] = 0;
    mysql_format(SQL, string, sizeof(string), "UPDATE users SET `ManagerHitman`='0' WHERE `name`='%s'",PlayerInfo[id][pNormalName]);
    mysql_tquery(SQL,string,"","");
    return 1;
}
CMD:hprice(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if (PlayerInfo[playerid][pAdmin] < 9) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new cashdeposit,string[356];
	if(sscanf(params, "d",cashdeposit)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/hprice <Amount of Money>");
    for(new i = 1; i < sizeof(HouseInfo); i++)
	{
		if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
		{
			HouseInfo[i][hValue] = cashdeposit;
	        mysql_format(SQL, string, sizeof(string), "UPDATE houses SET `Value`='%d' WHERE ID=%d",cashdeposit,i);
	        mysql_tquery(SQL,string,"","");
	        OnPropTextdrawUpdate(1,i);
		}
	}
	for(new i = 1; i < sizeof(BizzInfo); i++)
	{
		if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
		{
			BizzInfo[i][bBuyPrice] = cashdeposit;
	        mysql_format(SQL, string, sizeof(string), "UPDATE bizz SET `BuyPrice`='%d' WHERE ID=%d",cashdeposit,i);
	        mysql_tquery(SQL,string,"","");
	        OnPropTextdrawUpdate(2,i);
		}
	}
	return 1;
}
CMD:hlevel(playerid,params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if (PlayerInfo[playerid][pAdmin] < 9) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new cashdeposit,string[356];
	if(sscanf(params, "d",cashdeposit)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/hlevel <Level>");
    for(new i = 1; i < sizeof(HouseInfo); i++)
	{
		if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
		{
			HouseInfo[i][hLevel] = cashdeposit;
	        mysql_format(SQL, string, sizeof(string), "UPDATE houses SET `Level`='%d' WHERE ID=%d",cashdeposit,i);
	        mysql_tquery(SQL,string,"","");
	        OnPropTextdrawUpdate(1,i);
		}
	}
	for(new i = 1; i < sizeof(BizzInfo); i++)
	{
		if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
		{
			BizzInfo[i][bLevelNeeded] = cashdeposit;
	        mysql_format(SQL, string, sizeof(string), "UPDATE bizz SET `LevelNeeded`='%d' WHERE ID=%d",cashdeposit,i);
	        mysql_tquery(SQL,string,"","");
	        OnPropTextdrawUpdate(2,i);
		}
	}
	return 1;
}
CMD:eat(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(IsPlayerConnected(playerid))
	{
		if(BizzInfo[InBussines[playerid]][bType] == 7 || BizzInfo[InBussines[playerid]][bType] == 9 || BizzInfo[InBussines[playerid]][bType] == 14)
		{
		    new bid = InBussines[playerid],str[256];
			if(GetPlayerCash(playerid) < 100) return SCM(playerid,COLOR_GREY,"You don't have enough money.");
		 	new Float:health;
    		GetPlayerHealthEx(playerid,health);
			if(health >= 75)
			{
                SetPlayerHealthEx(playerid, 100);
                ApplyAnimation(playerid,"FOOD","EAT_Burger", 3.0, 0, 0, 0, 0, 0);
                GivePlayerCash(playerid, -100);
                GameTextForPlayer(playerid, "~r~-100$", 5000, 1);
				BizzInfo[bid][bTill] += 100;
				Update(playerid,pCashx);
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[bid][bTill],bid);
				mysql_tquery(SQL,str,"","");
			}
			else
			{
				SetPlayerHealthEx (playerid, health+25);
				ApplyAnimation(playerid,"FOOD","EAT_Burger", 3.0, 0, 0, 0, 0, 0);
				GivePlayerCash(playerid, -100);
				GameTextForPlayer(playerid, "~r~-100$", 5000, 1);
				BizzInfo[bid][bTill] += 100;
				Update(playerid,pCashx);
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[bid][bTill],bid);
				mysql_tquery(SQL,str,"","");
			}
		}
		return 1;
	}
	return 1;
}
CMD:buyfood(playerid, params[])
{
	return cmd_eat(playerid, params);
}
CMD:elevator(playerid, params[])
{
	//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
	if(!IsACop(playerid)) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not a cop.");
	if(IsPlayerInRangeOfPoint(playerid, 4.0, 1568.5184,-1690.2205,5.8906))
	{
	    SetPlayerPosEx(playerid,1564.8662,-1666.4962,28.3956);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, 1564.8662,-1666.4962,28.3956))
	{
	    SetPlayerPosEx(playerid,1568.5184,-1690.2205,5.8906);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, 2340.2810,2456.5625,14.9688))
	{
	    SetPlayerPosEx(playerid,2339.3237,2461.2197,38.6837);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, 2339.3237,2461.2197,38.6837))
	{
	    SetPlayerPosEx(playerid,2340.2810,2456.5625,14.9688);
	}
	return 1;
}
CMD:givesalary(playerid, params[])
{
    if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "You need to login first.");
	{
	    if(PlayerInfo[playerid][pLeader] != 0)
	    {
	        new id, s1[500], s2[500];
	        if(sscanf(params, "i",id))
			{
		 		SCM(playerid,COLOR_WHITE,"{FF9900}[SYNTAX]: {33CCFF}/givesalary <Player/Name>");
		 		return 1;
			}
			//if(GetWeekDay() == 6) return SendClientMessage(playerid, COLOR_WHITE, "You can use this command only on Sunday.");
			if(PlayerInfo[playerid][pLeader] == PlayerInfo[id][pMember])
			{
				new money,sender[75],giv[75];
				money = (150000 + PlayerInfo[id][pLevel]) * PlayerInfo[id][pPaydayuri];
				GivePlayerCash(id, money);
				GetPlayerName(playerid,sender,75);
				GetPlayerName(id,giv,75);
				format(s2,500,"Leader %s Gave You Salary : %s | Paydays : %d.",sender,FormatNumber(money),PlayerInfo[id][pPaydayuri]);
				SCM(id,COLOR_YELLOW,s2);
				format(s1,500,"Leader %s Give Salary To %s | Amount : $%s.",sender,giv,FormatNumber(money));
				SendFamilyMessage(PlayerInfo[id][pMember],COLOR_LEADER,s1);
				PlayerInfo[id][pPaydayuri] = 0;
				Update(id, pCashx);
				Update(id, pPaydayurix);
			}
			else return SCM(playerid, -1,"{FF0033}This player is not part of the faction.");
		}
	    else return SCM(playerid, -1, "{FF0033}You are not a leader.");
	}
	return 1;
}
CMD:giveallpp(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 11) return SCM(playerid,COLOR_ERROR, AdminOnly);
	new premiump, admname[25];
	new string[128];
	GetPlayerName(playerid,admname,sizeof(admname));

	if(sscanf(params, "d",premiump)) return SCM(playerid, COLOR_WHITE, "{FF9900}[SYNTAX]: {33CCFF}/giveallpp <Premium Points>");
	foreach(Player, i)
	{
		PlayerInfo[i][pPremiumPoints] += premiump;
		Update(i, pPremiumPointsx);

		format(string, sizeof(string), "Admin %s Has Give %d Premium Points To All | Now You Have %d.", admname, premiump, PlayerInfo[i][pPremiumPoints]);
		SendClientMessage(i, COLOR_LIGHTBLUE, string);
	}
	SendClientMessage(playerid, COLOR_LIGHTRED, "You gave Premium Points to all the players connected.");
	return 1;
}
CMD:giveallrobp(playerid, params[])
{
    if(gPlayerLogged[playerid] == 0) return SCM(playerid, COLOR_ERROR, "Nu esti logat!");
	{
	    if(PlayerInfo[playerid][pAdmin] >= 11)
		{
		    new points;
		    if(sscanf(params, "i", points)) return SCM(playerid, COLOR_GREY, "{A9C4E4}[SYNTAX]: {FFFFFF}/giveallrobp <Ammount>");
		    for(new i = 0; i < MAX_PLAYERS; i++)
		    {
		        PlayerInfo[i][pRob] += points;
		        Update(i, pRobx);
		    }
		    format(MGLOBAL, sizeof(MGLOBAL),"{ba9789}Admin %s Has Give %s Rob Points To All Players Online[/rob]",GetName(playerid),FormatNumber(points));
			SendClientMessageToAll(0xFFE4B5FF,MGLOBAL);
		}
		else return SCM(playerid, -1, AdminOnly);
	}
	return 1;
}
/*
CMD:testtw( playerid, params[ ] )
{
	if( PlayerInfo[ playerid ][ pAdmin ] < 1 ) return SendClientMessage( playerid, -1, AdminOnly );
	new id;
	if( sscanf( params, "u", id ) ) return SendClientMessage( playerid, -1, "Use: /testtw [ playerid/playername ]" );
	SetPVarInt( id, "AdminTWIDIOT", playerid );
	new string[ 512 ];
	format( string, sizeof( string ), "Health, Admin %s Want To Test You In TeamViewer\n If you will be teleported to the administrator\n If you refuse, you will automatically receive a 7-day ban.", GetName( playerid ) );
	ShowPlayerDialog( id, DIALOG_TW, DIALOG_STYLE_MSGBOX, "Test TeamViewer", string, "Accept", "Refuse" );
	return 1;
}
*/
public OnPlayerCommandReceived(playerid, cmdtext[])
{
	if(TutTime[playerid] >= 1 || RegistrationStep[playerid] >= 1) return 0;
    if (cmdtext[0] && !strcmp(cmdtext, LastText[playerid]) && LastTextTime[playerid] > GetTickCount() && PlayerInfo[playerid][pAdmin] < 1 ) return 0;
	LastTextTime[playerid] = GetTickCount() + SECONDS_BETWEEN_SAME_MSGS * 1000;
	strcpy(LastText[playerid], cmdtext, 128);
    return 1;
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(success)
	{
		SpamCheck[playerid] = GetTickCount();
	}
	if(!success) return SCM(playerid, COLOR_WHITE, "{0080FF}[INFO]{FFFFFF} This Command Is'nt Submited !");
	return 1;
}

public HouseLevel(playerid)
{
	new h = PlayerInfo[playerid][pPhousekey];
	if(h == 999)
	{
		return 0;
	}
	if(h <= 4)
	{
		return 1;
	}
	if(h >= 5 && h <= 9)
	{
		return 2;
	}
	if(h >= 10 && h <= 18)
	{
		return 3;
	}
	if(h >= 19 && h <= 22)
	{
		return 4;
	}
	if(h >= 23 && h <= 25)
	{
		return 5;
	}
	if(h == 26)
	{
		return 6;
	}
	if(h == 27)
	{
		return 7;
	}
	if(h >= 28 && h <= 31)
	{
		return 7;
	}
	return 0;
}

public CHouseLevel(houseid)
{
	if(houseid <= 4)
	{
		return 3;
	}
	if(houseid >= 29 && houseid <= 30)
	{
		return 4;
	}
	if(houseid >= 5 && houseid <= 9)
	{
		return 5;
	}
	if(houseid >= 10 && houseid <= 18 || houseid == 28)
	{
		return 7;
	}
	if(houseid >= 19 && houseid <= 22)
	{
		return 8;
	}
	if(houseid >= 23 && houseid <= 25)
	{
		return 9;
	}
	if(houseid == 26)
	{
		return 10;
	}
	if(houseid == 27)
	{
		return 11;
	}
	if(houseid >= 28 && houseid <= 31)
	{
		return 12;
	}
	return 0;
}

public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		foreach(Player,i)
		{
			if(GetPlayerInterior(playerid) == GetPlayerInterior(i) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
						SendClientMessage(i, col1, string);
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
						SendClientMessage(i, col2, string);
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
						SendClientMessage(i, col3, string);
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
						SendClientMessage(i, col4, string);
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
						SendClientMessage(i, col5, string);
					}
				}
				else
				{
					SendClientMessage(i, col1, string);
				}
			}
		}
	}
	return 1;
}

public CrimInRange(Float:radi, playerid,copid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(copid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(copid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public payala2(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    payala[playerid] = 0;
	}
	return 0;
}
public ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public OnPropTextdrawUpdate(update, h)
{
	new PropertyString[512];
	if(update == 1)
	{
		if(HouseInfo[h][hOwned] == 0)
		{
			DestroyDynamic3DTextLabel(HouseLabel[h]);
			format(PropertyString, sizeof(PropertyString),"{FFBE00}[House {FFFFFF}%d{FFBE00}] \n{00FF00}This House Is For Sale [/BuyHouse] ! \n{FFBE00}Owner: {FFFFFF}AdmBot\n{FFBE00}Description: {FFFFFF}%s \n{FFBE00}Price: {FFFFFF}$%s \n{FFBE00}Level: {FFFFFF}%d",h,HouseInfo[h][hDiscription],FormatNumber(HouseInfo[h][hValue]),HouseInfo[h][hLevel]);
			HouseLabel[h] = CreateDynamic3DTextLabel(PropertyString ,0x09FF00CC,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
			DestroyDynamicPickup(HousePickup[h]);
			HousePickup[h] = CreateDynamicPickup(1273, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
		}
		else if(HouseInfo[h][hOwned] == 1)
		{
			new tenants=0,query[256];
			format(query, sizeof(query), "SELECT * FROM `users` WHERE `Rented` = '%d'", h);
			new Cache: membresult = mysql_query(SQL, query);
			for(new i, j = cache_get_row_count (); i != j; ++i)
			{
				tenants++;
			}
			cache_delete(membresult);
			if(HouseInfo[h][hRentabil] == 1)
			{
				DestroyDynamic3DTextLabel(HouseLabel[h]);
				format(PropertyString, sizeof(PropertyString),"{FFBE00}[House {FFFFFF}%d{FFBE00}] \n{FFFFFF}%s \n{FFBE00}Owner: {FFFFFF}%s \n{FFBE00}Tenants: {FFFFFF}%d \n{FFBE00}Rent: {FFFFFF}$%s \n{FFBE00}Level: {FFFFFF}%d \n{00FF00}To Rent A Room Type /RentRoom",h,HouseInfo[h][hDiscription],HouseInfo[h][hOwner],tenants,FormatNumber(HouseInfo[h][hRent]),HouseInfo[h][hLevel]);
				HouseLabel[h] = CreateDynamic3DTextLabel(PropertyString ,0x09FF00CC,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
				DestroyDynamicPickup(HousePickup[h]);
				HousePickup[h] = CreateDynamicPickup(1272, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
			}
			else
			{
				DestroyDynamic3DTextLabel(HouseLabel[h]);
				format(PropertyString, sizeof(PropertyString),"{FFBE00}[House {FFFFFF}%d{FFBE00}] \n{FFFFFF}%s \n{FFBE00}Owner: {FFFFFF}%s \n{FFBE00}Tenants: {FFFFFF}%d \n{FFBE00}Level: {FFFFFF}%d",h,HouseInfo[h][hDiscription],HouseInfo[h][hOwner], tenants, HouseInfo[h][hLevel]);
				HouseLabel[h] = CreateDynamic3DTextLabel(PropertyString ,0x09FF00CC,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
				DestroyDynamicPickup(HousePickup[h]);
				HousePickup[h] = CreateDynamicPickup(1272, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
			}
		}
	}
	else if(update == 2)
	{
		if(BizzInfo[h][bOwned] == 0)
		{
			DestroyDynamic3DTextLabel(BizzLabel[h]);
			format(PropertyString, sizeof(PropertyString),"{FFFFFF}%s \n{00AFFF}[Business {FFFFFF}%d{00AFFF}] \n{00FF00}This Business Is For Sale [/BuyBiz] ! \n{00AFFF}Owner: {FFFFFF}AdmBot \n {00AFFF}Price: {FFFFFF}%s \n{00AFFF}Level: {FFFFFF}%d",BizzInfo[h][bMessage],h,FormatNumber(BizzInfo[h][bBuyPrice]),BizzInfo[h][bLevelNeeded]);
			BizzLabel[h] = CreateDynamic3DTextLabel(PropertyString ,0x0066FFCC,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
		}
		else if(BizzInfo[h][bOwned] == 1)
		{
			DestroyDynamic3DTextLabel(BizzLabel[h]);
			format(PropertyString, sizeof(PropertyString),"{FFFFFF}%s \n{00AFFF}[Business {FFFFFF}%d{00AFFF}] \n{00AFFF}Owner: {FFFFFF}%s \n{00AFFF}Fee: {FFFFFF}$%s",BizzInfo[h][bMessage],h,BizzInfo[h][bOwner],FormatNumber(BizzInfo[h][bEntranceCost]),BizzInfo[h][bLevelNeeded]);
			BizzLabel[h] = CreateDynamic3DTextLabel(PropertyString ,0x0066FFCC,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],25, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
		}
	}
	return 1;
}

stock GetPlayerTag(playerid)
{

  SetPlayerName(playerid, PlayerInfo[playerid][pNormalName]);

}

stock Carspeed(playerid,mode = 1)
{
    new Float:Velocity [3];
    GetVehicleVelocity ( GetPlayerVehicleID ( playerid ) , Velocity [ 0 ] , Velocity [ 1 ] , Velocity [ 2 ] ) ;
    return IsPlayerInAnyVehicle ( playerid ) ? floatround ( ( ( floatsqroot ( ( ( Velocity [ 0 ] * Velocity [ 0 ] ) + ( Velocity [ 1 ] * Velocity [ 1 ] ) + ( Velocity [ 2 ] * Velocity [ 2 ] ) ) ) * ( !mode ? 105.0 : 170.0 ) ) ) * 1 ) : 0;
}

AntiFlood_Check( playerid, bool:inc=true )
{
	AntiFlood_Data[playerid][floodRate] += inc ? RATE_INC : 0;
	AntiFlood_Data[playerid][floodRate] = AntiFlood_Data[playerid][floodRate] - ( GetTickCount() - AntiFlood_Data[playerid][lastCheck] );
	AntiFlood_Data[playerid][lastCheck] = GetTickCount();
	AntiFlood_Data[playerid][floodRate] = AntiFlood_Data[playerid][floodRate] < 0 ? 0 : AntiFlood_Data[playerid][floodRate];

	if ( AntiFlood_Data[playerid][floodRate] >= RATE_MAX )
	{
		#if THRESOLD_ACTION == 1
			SendClientMessage(playerid,COLOR_LIGHTRED,"Kick: You got kicked because you did spam.");
			Kick(playerid);
		#elseif THRESOLD_ACTION == 2
			SendClientMessage(playerid,COLOR_LIGHTRED,"Kick: You got kicked because you did spam.");
			Kick(playerid);
		#else
			SendClientMessage(playerid, COLOR_LIGHTRED, "Please stop spam." );
		#endif

		return false;
	}

	return true;
}

AntiFlood_InitPlayer( playerid )
{
	AntiFlood_Data[playerid][lastCheck] = GetTickCount();
	AntiFlood_Data[playerid][floodRate] = 0;
}

public OnPlayerText(playerid, text[])
{
	if(TutTime[playerid] >= 1 || RegistrationStep[playerid] >= 1) return 0;
    new string[256];
	if(text[0] && !strcmp (text, LastText[playerid]) && LastTextTime[playerid] > GetTickCount () && PlayerInfo[playerid][pAdmin] < 1) return 0;
    LastTextTime[playerid] = GetTickCount() + SECONDS_BETWEEN_SAME_MSGS * 1000;
	strcpy(LastText[playerid], text, 128);
	new var100[300],queryyy[300],totalchats,resulttt[300],result3[300];
	if(Mobile[playerid] != -1)
	{
		format(result3, sizeof(result3),"(cellphone) %s",text);
	}
	else
	{
		format(result3, sizeof(result3),"%s",text);
	}
	mysql_real_escape_string(result3, resulttt);
 	mysql_format(SQL, var100, sizeof(var100), "INSERT INTO chat_logs (`playerid`,`text`) VALUES ('%d','%s')", PlayerInfo[playerid][pSQLID],resulttt);
	mysql_tquery(SQL,var100,"","");
	format(queryyy, sizeof(queryyy), "SELECT * FROM `chat_logs` WHERE `playerid`='%d'", PlayerInfo[playerid][pSQLID]);
	new Cache: chatnums = mysql_query(SQL, queryyy);
	for(new i=0, j = cache_get_row_count (); i != j; ++i)
	{
	    totalchats++;
	}
	cache_delete(chatnums);
	if(totalchats >= 12)
	{
	    mysql_format(SQL, var100, sizeof(var100), "DELETE FROM `chat_logs` WHERE `playerid`='%d' ORDER BY `ID` ASC limit 2", PlayerInfo[playerid][pSQLID]);
	    mysql_tquery(SQL,var100,"","");
	}
    if(FindIP(text)) /// Anti-Reclame a
    {
        new advertiser[MAX_PLAYER_NAME];
        GetPlayerName(playerid, advertiser, sizeof(advertiser));
        format(string, sizeof(string), "{ba9789}[WARNING]: %s(%d) typed %s in chat.", advertiser, playerid, text);
		ABroadCast(COLOR_SERVER,string,1);
    }
    for(new i; i < sizeof(TLD); i++)
	{
		if(strfind(text, TLD[i], true) != -1)
		{
			if(strfind(text, ".", true) != -1 || strfind(text, ".", true) != -1 || strfind(text, ".", true) != -1) break;
			new advertiser[MAX_PLAYER_NAME];
			GetPlayerName(playerid, advertiser, sizeof(advertiser));
			format(string, sizeof(string), "{f03337}[WARNING]: %s(%d) typed %s in chat.", advertiser, playerid, text);
			ABroadCast(COLOR_WHITE,string,1);
		}
	}

	new sendername[MAX_PLAYER_NAME];
	new tmp[256];
	format(string, sizeof(string), "\"%s\"", text);
	SetPlayerChatBubble(playerid, text, COLOR_CHATBUBBLE, 10.0, 10000);
    if(PlayerInfo[playerid][pMuted] == 1)
    {
	    format(string, sizeof(string), "You can not speak, you have been silenced for %d seconds.",PlayerInfo[playerid][pMuteTime]);
	    SendClientMessage(playerid, COLOR_LIGHTRED, string);
		return 0;
	}
	assert(AntiFlood_Check(playerid));
	if(Answered == 0)
	{
	    new idx;
	    tmp = strtok(text, idx);
		if ((strcmp(FastString, tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen(FastString)))
		{
		    new money = random(19000) + 1000;
			Answered = 1;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[Fast-Event]: {FFFFFF}%s Won The Fast Event & Recieved $%s !", sendername, FormatNumber(money));
			OOCNews(COLOR_LIGHTRED, string);
			GivePlayerCash(playerid, money);
			return 0;
		}
	}
	if(TalkingLive[playerid] != 0)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pMember] == 9)
		{
		    format(string, sizeof(string), "NewsReporter %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
		}
		else
		{
		    format(string, sizeof(string), "Live Contact %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
		}
		return 0;
	}
	if(Mobile[playerid] != -1)
	{
		new idx;
		tmp = strtok(text, idx);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "(cellphone) %s: %s", sendername, text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		if(IsPlayerConnected(Mobile[playerid]))
		{
		    if(Mobile[Mobile[playerid]] == playerid)
		    {
				if(PlayerInfo[Mobile[playerid]][pSpeaker] == 1)
				{
					ProxDetector(20.0, Mobile[playerid], string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else
				{
				    SendClientMessage(Mobile[playerid], COLOR_YELLOW,string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_YELLOW,"Theres nobody there");
		}
		format(string, sizeof(string), "(cellphone) \"%s\"", text);
		SetPlayerChatBubble(playerid, string, COLOR_CHATBUBBLE, 10.0, 10000);
		return 0;
	}
	if (realchat)
	{
		if(gPlayerLogged[playerid] == 0)
		{
				return 0;
  }

		new szMessage[1000];
		new szPlayerName[32];
		GetPlayerName(playerid, szPlayerName, 32);
		if(PlayerInfo[playerid][pPaintBallG] > 0)
		{
			format(szMessage,sizeof(szMessage),"{BA3FC1}%s [%d kills]{FFFFFF}: %s",szPlayerName,PlayerInfo[playerid][pPaintBallKills],text);
			foreach(Player, idd)
			{
				if(idd != playerid)
				{
					if(PlayerInfo[idd][pPaintBallG] == PlayerInfo[playerid][pPaintBallG])
					{
						SendClientMessage(idd, COLOR_WHITE, szMessage);
					}
				}
			}
		}
		else
		{
			if(PlayerInfo[playerid][pColor] == 0)
			{
				format(szMessage, sizeof(szMessage), "{CECECE}%s:{FFFFFF} %s", szPlayerName, text);
			}
			else if(PlayerInfo[playerid][pColor] == 1)
			{
				format(szMessage, sizeof(szMessage), "{4169E1}%s:{FFFFFF} %s", szPlayerName, text);
			}
			else if(PlayerInfo[playerid][pColor] == 2)
			{
				format(szMessage, sizeof(szMessage), "{662BBE}%s:{FFFFFF} %s", szPlayerName, text);
			}
			else if(PlayerInfo[playerid][pColor] == 3)
			{
				format(szMessage, sizeof(szMessage), "{FFE600}%s:{FFFFFF} %s", szPlayerName, text);
			}
			else if(PlayerInfo[playerid][pColor] == 4)
			{
				format(szMessage, sizeof(szMessage), "{FF00FF}%s:{FFFFFF} %s", szPlayerName, text);
			}
			else if(PlayerInfo[playerid][pColor] == 5)
			{
				format(szMessage, sizeof(szMessage), "{3FFF3F}%s:{FFFFFF} %s", szPlayerName, text);
			}
			else if(PlayerInfo[playerid][pColor] == 6)
			{
				format(szMessage, sizeof(szMessage), "{83D553}%s:{FFFFFF} %s", szPlayerName, text);
			}
			else if(PlayerInfo[playerid][pColor] == 7)
			{
				format(szMessage, sizeof(szMessage), "{187700}%s:{FFFFFF} %s", szPlayerName, text);
			}
			else if(PlayerInfo[playerid][pColor] == 8)
			{
			    format(szMessage, sizeof(szMessage), "{FF9A00}%s:{FFFFFF} %s", szPlayerName, text);
			}
			else if(PlayerInfo[playerid][pColor] == 9)
			{
			    format(szMessage, sizeof(szMessage), "{222222}%s:{FFFFFF} %s", szPlayerName, text);
			}
			else if(PlayerInfo[playerid][pColor] == 10)
			{
			    format(szMessage, sizeof(szMessage), "{FF2C9D}%s:{FFFFFF} %s", szPlayerName, text);
			}
            else if(PlayerInfo[playerid][pColor] == 28)
			{
				format(szMessage, sizeof(szMessage), "{66CC00}V.I.P {FFFFFF}%s:{FFFFFF} %s", szPlayerName, text);
            }
            else if(PlayerInfo[playerid][pColor] == 29)
			{
				format(szMessage, sizeof(szMessage), "{660033}Membru V.I.P {FFFFFF}%s:{FFFFFF} %s", szPlayerName, text);
            }
			if(PlayerInfo[playerid][pLeader] >= 1) format(szMessage, sizeof(szMessage), "{FF8000}Leader{FFFFFF} %s:{FFFFFF} %s", szPlayerName, text);
			if(PlayerInfo[playerid][pHelper] >= 1) format(szMessage, sizeof(szMessage), "{FFC800}Helper{FFFFFF} %s:{FFFFFF} %s", szPlayerName, text);
			if(PlayerInfo[playerid][pAdmin] == 1 ) format(szMessage, sizeof(szMessage), "{0091FF}Admin 1{FFFFFF} %s:{FFFFFF} %s", szPlayerName, text);
			if(PlayerInfo[playerid][pAdmin] == 2 ) format(szMessage, sizeof(szMessage), "{0091FF}Admin 2{FFFFFF} %s:{FFFFFF} %s", szPlayerName, text);
			if(PlayerInfo[playerid][pAdmin] == 3 ) format(szMessage, sizeof(szMessage), "{0091FF}Admin 3{FFFFFF} %s:{FFFFFF} %s", szPlayerName, text);
			if(PlayerInfo[playerid][pAdmin] == 4 ) format(szMessage, sizeof(szMessage), "{0091FF}Admin 4{FFFFFF} %s:{FFFFFF} %s", szPlayerName, text);
			if(PlayerInfo[playerid][pAdmin] == 5 ) format(szMessage, sizeof(szMessage), "{0091FF}Admin 5{FFFFFF} %s:{FFFFFF} %s", szPlayerName, text);
			if(PlayerInfo[playerid][pAdmin] == 6 ) format(szMessage, sizeof(szMessage), "{0091FF}Admin 6{FFFFFF} %s:{FFFFFF} %s", szPlayerName, text);
			if(PlayerInfo[playerid][pAdmin] == 7 ) format(szMessage, sizeof(szMessage), "{0091FF}Donater{FFFFFF} %s:{FFFFFF} %s", szPlayerName, text);
			if(PlayerInfo[playerid][pAdmin] == 8 ) format(szMessage, sizeof(szMessage), "{0091FF}SuperVisor{FFFFFF} %s:{FFFFFF} %s", szPlayerName, text);
			if(PlayerInfo[playerid][pYoutuber] == 1 ) format(szMessage, sizeof(szMessage), "{FFC800}Aparater{FFFFFF} %s:{FFFFFF} %s", szPlayerName, text);
			if(PlayerInfo[playerid][pAdmin] == 9 ) format(szMessage, sizeof(szMessage), "{0091FF}Operator{FFFFFF} %s:{FFFFFF} %s", szPlayerName, text);
			if(PlayerInfo[playerid][pAdmin] == 10 ) format(szMessage, sizeof(szMessage), "{0091FF}Operator Plus{FFFFFF} %s:{FFFFFF} %s", szPlayerName, text);
			if(PlayerInfo[playerid][pAdmin] == 11 ) format(szMessage, sizeof(szMessage), "{0091FF}Manager{FFFFFF} %s:{FFFFFF} %s", szPlayerName, text);
			if(PlayerInfo[playerid][pAdmin] == 12 ) format(szMessage, sizeof(szMessage), "{0091FF}Developer{FFFFFF} %s:{FFFFFF} %s", szPlayerName, text);
			if(PlayerInfo[playerid][pAdmin] == 13 ) format(szMessage, sizeof(szMessage), "{0091FF}Owner{FFFFFF} %s:{FFFFFF} %s", szPlayerName, text);
			if(PlayerInfo[playerid][pAdmin] == 14 ) format(szMessage, sizeof(szMessage), "{0091FF}Founder{FFFFFF} %s:{FFFFFF} %s", szPlayerName, text);
		}
		new len = strlen(szMessage),
			_iL = len / EX_SPLITLENGTHH;
		if( ( len % EX_SPLITLENGTHH ) ) _iL++;
		new _Line[EX_SPLITLENGTHH+5];
		new _:_i@Index;
		while( _i@Index < _iL )
		{
			if( _i@Index == 0 )
				strmid( _Line, szMessage, ( _i@Index * EX_SPLITLENGTHH ), ( _i@Index * EX_SPLITLENGTHH ) + EX_SPLITLENGTHH );
			else
				strmid( _Line, szMessage, ( _i@Index * EX_SPLITLENGTHH ), ( _i@Index * EX_SPLITLENGTHH ) + EX_SPLITLENGTHH );

			if( _iL > 1 )
			{
				if( _i@Index > 0 )
				{
					format( _Line, sizeof _Line, "... %s", _Line );
				}
			}
			ProxDetector(20.0, playerid, _Line, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
			_i@Index++;
		}
		format(szMessage, sizeof(szMessage), "\"%s\"", text);
		SetPlayerChatBubble(playerid, szMessage, COLOR_CHATBUBBLE, 15.0, 10000);
		return 0;
	}
	return 1;
}

public FixHour(hour)
{
	hour = timeshift+hour;
	if (hour < 0)
	{
		hour = hour+24;
	}
	else if (hour > 23)
	{
		hour = hour-24;
	}
	shifthour = hour;
	return 1;
}

public RobFunc(playerid)
{
	KillTimer(RobTimer[playerid]);
	BusinessRob[playerid] = 2;
	RobTime[playerid] = 0;
	new rand = random(sizeof(gRandomRob));
	SetPlayerCheckpoint(playerid, gRandomRob[rand][0],gRandomRob[rand][1],gRandomRob[rand][2], 4.0);
	SendClientMessage(playerid, COLOR_ROB,"Go To The Checkpoint To Complete Your Rob !");
    return 1;
}

public UnFreezeStation(playerid)
{
    PlayerTextDrawHide(playerid, Bus1[playerid]);
    PlayerTextDrawHide(playerid, Bus2[playerid]);
	TogglePlayerControllable(playerid, 1);
	return 1;
}

public Fisher(playerid)
{
	FishTimer[playerid]--;
	switch(FishTimer[playerid]) {
		case 1: {
		    new string[MAX_STRING],sendername[30],money;
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    KillTimer(FishTimerr[playerid]);
		    Fishing[playerid] = 0;
		    FishTimer[playerid] = 0;
		    if(TipPeste[playerid] == 1)
			{
				money = 10000 + random(15000);
				PlayerInfo[playerid][pFishPrice] = money;
			    SendClientMessage(playerid, COLOR_DARKPINK, "You caught a regular fish!");
			    format(string,sizeof(string),"Fish caught by you is worth it $%d!", money);
			    SendClientMessage(playerid, COLOR_DARKPINK, string);
			    SendClientMessage(playerid, COLOR_WHITE, "To sell fish, go to a 24/7 store.");
		     	format(string,sizeof(string),"* %s caught a common fish that can be sold for about $%d.", sendername, money);
        		ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				PlayerInfo[playerid][pFishes] = 1;
			}
			else if(TipPeste[playerid] == 2)
			{
				money = 15000 + random(18000);
				PlayerInfo[playerid][pFishPrice] = money;
			    SendClientMessage(playerid, COLOR_BLUE, "You caught a rare fish!");
			    format(string,sizeof(string),"Fish caught by you is worth it $%d!", money);
			    SendClientMessage(playerid, COLOR_DARKPINK, string);
			    SendClientMessage(playerid, COLOR_WHITE, "To sell fish, go to a 24/7 store.");
		     	format(string,sizeof(string),"* %s caught a rare fish that can be sold for about $%d.", sendername, money);
        		ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				PlayerInfo[playerid][pFishes] = 1;
			}
			else if(TipPeste[playerid] == 3)
			{
				money = 60000 + random(150000);
				PlayerInfo[playerid][pFishPrice] = money;
			    SendClientMessage(playerid, COLOR_YELLOW, "You caught a rare fish!");
			    format(string,sizeof(string),"Fish caught by you is worth it $%d!", money);
			    SendClientMessage(playerid, COLOR_DARKPINK, string);
			    SendClientMessage(playerid, COLOR_WHITE, "To sell fish, go to a 24/7 store.");
		     	format(string,sizeof(string),"* %s caught a very rare fish that can be sold for about $%d.", sendername, money);
        		ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				PlayerInfo[playerid][pFishes] = 1;
			}
			TipPeste[playerid] = 0;
		}
	    case 2: {
		 	ClearAnimations(playerid);
		 	TogglePlayerControllable(playerid, 1);
		 	new randfish = random(99);
		 	if(PlayerInfo[playerid][pFishSkill] == 1)
		 	{
				if(randfish >= 0 && randfish <= 87) TipPeste[playerid] = 1;
				else if(randfish >= 88 && randfish <= 98) TipPeste[playerid] = 2;
				else if(randfish >= 99) TipPeste[playerid] = 3;
			}
			else if(PlayerInfo[playerid][pFishSkill] == 2)
		 	{
				if(randfish >= 0 && randfish <= 83) TipPeste[playerid] = 1;
				else if(randfish >= 84 && randfish <= 97) TipPeste[playerid] = 2;
				else if(randfish >= 98) TipPeste[playerid] = 3;
			}
			else if(PlayerInfo[playerid][pFishSkill] == 3)
		 	{
				if(randfish >= 0 && randfish <= 79) TipPeste[playerid] = 1;
				else if(randfish >= 80 && randfish <= 96) TipPeste[playerid] = 2;
				else if(randfish >= 97) TipPeste[playerid] = 3;
			}
			else if(PlayerInfo[playerid][pFishSkill] == 4)
		 	{
				if(randfish >= 0 && randfish <= 75) TipPeste[playerid] = 1;
				else if(randfish >= 76 && randfish <= 95) TipPeste[playerid] = 2;
				else if(randfish >= 96) TipPeste[playerid] = 3;
			}
			else if(PlayerInfo[playerid][pFishSkill] == 5)
		 	{
				if(randfish >= 0 && randfish <= 71) TipPeste[playerid] = 1;
				else if(randfish >= 72 && randfish <= 94) TipPeste[playerid] = 2;
				else if(randfish >= 95) TipPeste[playerid] = 3;
			}
			else if(PlayerInfo[playerid][pFishSkill] >= 6)
		 	{
				if(randfish >= 0 && randfish <= 67) TipPeste[playerid] = 1;
				else if(randfish >= 68 && randfish <= 93) TipPeste[playerid] = 2;
				else if(randfish >= 94) TipPeste[playerid] = 3;
			}
	    }
	    case 7: GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~w~FISHING...", 4110, 5);
	    case 12: GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~w~FISHING...", 5110, 5);
	    case 19: GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~w~FISHING...", 5110, 5);
	}
 	return 1;
}

public Fisher2(playerid)
{
	Fishing[playerid] = 0;
	SCM(playerid,COLOR_WHITE,"{999999}Now you can fish again.");
	return 1;
}

public RespawnTruck(playerid)
{
    if(!IsVehicleOccupied(TruckID[playerid]))
    {
		SetVehicleToRespawn(TruckID[playerid]);
		TruckID[playerid] = 0;
	}
	else
	{
	    TruckID[playerid] = 0;
	}
	DisablePlayerCheckpoint(playerid);
	DestroyVehicle(viddd[playerid]);
	viddd[playerid] = 0;
	Trucker[playerid] = 0;
	KillTimer(restruck[playerid]);
}

public TowAgain(playerid)
{
	TowAcc[playerid] = 0;
	SCM(playerid,COLOR_GREY,"Job reload time ended.");
	return 1;
}
public gateadminclose()
{
    MoveObject(gatehqa, 907.50238, -1666.58813, 13.40640, 2, 0.00000, -91.00000, -90.00000);
    return 1;
}
public lspdgateclose()
{
    MoveObject(gatelspd, 1592.67676, -1638.05225, 14.95110, 1.5, -1000.0, -1000.0, -1000.0);
    return 1;
}

public lvpdgateclose()
{
    MoveDynamicObject(gatelvpd, 2334.8999000, 2444.3999000, 8.3000000, 1.5, -1000.0, -1000.0, -1000.0);
    return 1;
}

public lvpdgateclose2()
{
    MoveDynamicObject(gatelvpd2, 2294.2000000, 2499.1001000, 5.7000000, 1.5, -1000.0, -1000.0, -1000.0);
    return 1;
}

forward VamaGate();
public VamaGate()
{
	MoveDynamicObject(VamaGates[0], 72.22410, -1541.56580, 6.97300, 5);
    return 1;
}

forward VamaGate1();
public VamaGate1()
{
	MoveDynamicObject(VamaGates[1], 74.23540, -1527.57202, 6.97300, 5);
    return 1;
}

forward VamaGate2();
public VamaGate2()
{
	MoveDynamicObject(VamaGates[2], 95.23903, -1282.30798, 15.62902, 5);
    return 1;
}

forward VamaGate3();
public VamaGate3()
{
	MoveDynamicObject(VamaGates[3], 79.06650, -1261.49048, 15.62902, 5);
    return 1;
}

forward VamaGate4();
public VamaGate4()
{
	MoveDynamicObject(VamaGates[4], 1744.61487, 515.08691, 30.01192, 5);
    return 1;
}

forward VamaGate5();
public VamaGate5()
{
	MoveDynamicObject(VamaGates[5], 1729.38416, 520.69910, 29.99904, 5);
    return 1;
}

forward VamaGate6();
public VamaGate6()
{
	MoveDynamicObject(VamaGates[6], -1491.78479, 717.57526, 47.59902, 5);
    return 1;
}

forward VamaGate7();
public VamaGate7()
{
	MoveDynamicObject(VamaGates[7], -1503.27661, 728.37793, 47.59902, 5);
    return 1;
}

public nggateclose()
{
    MoveDynamicObject(gateng, 135.2833, 1941.3331, 21.6932, 1.5, -1000.0, -1000.0, -1000.0);
    return 1;
}
public lspdbarclose()
{
    MoveDynamicObject(lspdbar, 1544.7007, -1630.7527, 13.2983, 1.5,0.0000, 90.0200, 90.0000);
    return 1;
}
public taxibaraclose()
{
	MoveObject(taxibar,  1811.57495, -1895.00598, 13.54720,1.5,   0.00000, -91.00000, -90.34000);
    return 1;
}
public lvpdbarclose()
{
    MoveDynamicObject(lvpdbar, 2238.22021, 2450.44312, 10.58781, 1.5,0.0000, 90.0200, 90.0000);
    return 1;
}
stock strvalEx( const string[] )
{
   if( strlen( string ) >= 50 ) return 0;
   return strval(string);
}

public UnsetAfterTutorial(playerid)
{
	if(IsPlayerConnected(playerid))
	{
        AfterTutorial[playerid] = 0;
	}
	return 1;
}

public BackupClear(playerid, calledbytimer)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1)
		{
			if (PlayerInfo[playerid][pRequestingBackup] == 1)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(IsACop(i))
						{
							CP[i] = 0;
							DisablePlayerCheckpoint(i);
						}
					}
				}
				if (calledbytimer != 1)
				{
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "Your backup request has been cleared.");
				}
				else
				{
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "Your backup request has been cleared automatically.");
				}
				PlayerInfo[playerid][pRequestingBackup] = 0;
			}
			else
			{
				if (calledbytimer != 1)
				{
					SendClientMessage(playerid, COLOR_DARKNICERED, "You don't have an active backup request!");
				}
			}
		}
		else
		{
			if (calledbytimer != 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "You are not a cop!");
			}
		}
	}
	return 1;
}

public OnVehicleDeath(vehicleid)
{
 	new engine,lights,alarm,doors,bonnet,boot,objective;
 	vehEngine[vehicleid] = 0;
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
 	SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
    if(IsAnOwnableCar(vehicleid))
 	{
        if(CarInfo[OwnedVeh(vehicleid)][cOwned]==1)
        {
            CarInfo[OwnedVeh(vehicleid)][cTimed] += 1;
            CarInfo[OwnedVeh(vehicleid)][cInscarprice] += 15;
			CarInfo[OwnedVeh(vehicleid)][cHP] += 1000.0;
     	 	if(CarInfo[OwnedVeh(vehicleid)][cInsurancecar] != 0)
     	 	{
             	CarInfo[OwnedVeh(vehicleid)][cInsurancecar]--;
    	 	}
	    	vUpdate(OwnedVeh(vehicleid), cTimedx);
			vUpdate(OwnedVeh(vehicleid), cInscarpricex);
			vUpdate(OwnedVeh(vehicleid), cInsurancecarx);
			vUpdate(OwnedVeh(vehicleid), cKMx);
			vUpdate(OwnedVeh(vehicleid), cHPx);
		}
 	}
 	if(Destroycar == 1)
 	{
		if(Carspawn[vehicleid] != 0)
		{
			DestroyVehicle(Carspawn[vehicleid]);
			Carspawn[vehicleid] = 0;
		}
	}
	StopAudioStreamForPlayersInCar(vehicleid);
 	return 1;
}

public Float:GetDistance(playerid, Float:x, Float:y)
{
	new Float:x2, Float:y2, Float:z2;
	GetPlayerPos(playerid, x2, y2, z2);
	x = x - x2;
	y = y - y2;
	return floatsqroot(x*x+y*y);
}

stock BanCheck(playerid)
{
	new playername[30],name[30],playerip[16],admin[30],reason[128],ip[16],permanent,string[256],qstr[612],ipban,time,date[6];
	GetPlayerName(playerid, playername, sizeof(playername));
	GetPlayerIp(playerid, playerip, sizeof(playerip));
	format(qstr,sizeof(qstr),"SELECT * FROM bans WHERE `PlayerName`='%s' AND `Active`='1'",playername);
    new Cache: banuri = mysql_query(SQL,qstr);
    if(cache_get_row_count() > 0)
    {
        cache_get_field_content(0, "PlayerName", name, SQL, 30);
		cache_get_field_content(0, "AdminName", admin, SQL, 30);
		cache_get_field_content(0, "Reason", reason, SQL, 128);
    	cache_get_field_content(0, "IP", ip, SQL, 16);
    	permanent                    	= cache_get_field_content_int(0, "Permanent");
    	ipban                           = cache_get_field_content_int(0, "IPBan");
    	time                            = cache_get_field_content_int(0, "Time");

		if(ipban == 0)
		{
		    if(gettime() < time || permanent > 0)
		    {
		        if(permanent > 0)
		        {
		            format(string,sizeof(string),"This account (%s) is banned!",playername);
		    		SendClientMessage(playerid, COLOR_RED, string);
		    		format(string,sizeof(string),"Banned By: %s | Reason: %s.",admin,reason);
		    		SendClientMessage(playerid, COLOR_GENANNOUNCE, string);
		    		SendClientMessage(playerid, COLOR_GENANNOUNCE, "This is a permanent ban.");
		    		SendClientMessage(playerid, COLOR_GENANNOUNCE, "You Can Post An UnBan Request On Our Ucp > UCP.NL-GaminG.iR");
            		GameTextForPlayer(playerid, "Banned", 5000, 2);
					KickEx(playerid);
				}
				else
				{
			    	format(string,sizeof(string),"This account (%s) is banned!",playername);
			    	SendClientMessage(playerid, COLOR_RED, string);
			    	format(string,sizeof(string),"Banned by: %s, reason: %s.",admin,reason);
			    	SendClientMessage(playerid, COLOR_GENANNOUNCE, string);
	   				TimestampToDate(time,date[0],date[1],date[2],date[3],date[4],date[5],2);
	   				format(string,sizeof(string),"Ban will expire on %02d.%02d.%02d-%02d:%02d:%02d.",date[2],date[1],date[0],date[3],date[4],date[5]);
	   				SendClientMessage(playerid, COLOR_GENANNOUNCE, string);
	   				SendClientMessage(playerid, COLOR_GENANNOUNCE, "You Can Post An UnBan Request On Our Ucp > UCP.NL-GaminG.iR");
	            	GameTextForPlayer(playerid, "Banned", 5000, 2);
					KickEx(playerid);
				}
			}
			else
			{
		    	new str2[128];
		    	mysql_format(SQL, str2, sizeof(str2), "UPDATE bans SET `Active`='0' WHERE `PlayerName`='%s'",name);
      			mysql_tquery(SQL,str2,"","");
      			IPBanCheck(playerid);
			}
		}
		else
		{
		    IPBanCheck(playerid);
		}
	}
	else
	{
		IPBanCheck(playerid);
	}
	cache_delete(banuri);
	return 1;
}

stock IPBanCheck(playerid)
{
	new name[30],playerip[16],admin[30],reason[128],ip[16],permanent,string[256],qstr[612],ipban,time,date[6];
	GetPlayerIp(playerid, playerip, sizeof(playerip));
	format(qstr,sizeof(qstr),"SELECT * FROM bans WHERE `IP`='%s' AND `Active`='1'",playerip);
    new Cache: banuri = mysql_query(SQL,qstr);
    if(cache_get_row_count() > 0)
    {
        cache_get_field_content(0, "PlayerName", name, SQL, 30);
		cache_get_field_content(0, "AdminName", admin, SQL, 30);
		cache_get_field_content(0, "Reason", reason, SQL, 128);
    	cache_get_field_content(0, "IP", ip, SQL, 16);
    	permanent                    	= cache_get_field_content_int(0, "Permanent");
    	ipban                           = cache_get_field_content_int(0, "IPBan");
    	time                          	= cache_get_field_content_int(0, "Time");

		if(ipban == 1)
		{
			if(gettime() < time || permanent > 0)
			{
			    if(permanent > 0)
				{
		    		format(string,sizeof(string),"This IP (%s) is banned!",playerip);
		    		SendClientMessage(playerid, COLOR_RED, string);
		    		format(string,sizeof(string),"Banned by: %s, reason: %s.",admin,reason);
		    		SendClientMessage(playerid, COLOR_GENANNOUNCE, string);
		    		SendClientMessage(playerid, COLOR_GENANNOUNCE, "This is a permanent ban.");
		    		SendClientMessage(playerid, COLOR_GENANNOUNCE, "You Can Post An UnBan Request On Our Ucp > UCP.NL-GaminG.iR");
            		GameTextForPlayer(playerid, "Banned", 5000, 2);
					KickEx(playerid);
				}
				else
				{
		    		format(string,sizeof(string),"This IP (%s) is banned!",playerip);
		    		SendClientMessage(playerid, COLOR_RED, string);
		    		format(string,sizeof(string),"Banned by: %s, reason: %s.",admin,reason);
		    		SendClientMessage(playerid, COLOR_GENANNOUNCE, string);
					TimestampToDate(time,date[0],date[1],date[2],date[3],date[4],date[5],2);
	   				format(string,sizeof(string),"Ban will expire on %02d.%02d.%02d-%02d:%02d:%02d.",date[2],date[1],date[0],date[3],date[4],date[5]);
	   				SendClientMessage(playerid, COLOR_GENANNOUNCE, string);
   					SendClientMessage(playerid, COLOR_GENANNOUNCE, "You Can Post An UnBan Request On Our Ucp > UCP.NL-GaminG.iR");
            		GameTextForPlayer(playerid, "Banned", 5000, 2);
					KickEx(playerid);
				}
			}
			else
			{
		    	new str2[128];
		    	mysql_format(SQL, str2, sizeof(str2), "UPDATE bans SET `Active`='0' WHERE `IP`='%s'",ip);
      			mysql_tquery(SQL,str2,"","");
      			// PLAYER LOGIN
				new pnamee[25];
				GetPlayerName(playerid, pnamee, sizeof(pnamee));
				format(qstr,sizeof(qstr),"SELECT * FROM users WHERE `name`='%s'",pnamee);
				new Cache: abcd = mysql_query(SQL,qstr);
				if(cache_get_row_count() > 0)
				{
					gPlayerAccount[playerid] = 1;
				}
				else
				{
					gPlayerAccount[playerid] = 0;
				}
				cache_delete(abcd);
			}
		}
		else
		{
   			// PLAYER LOGIN
			new pnamee[25];
			GetPlayerName(playerid, pnamee, sizeof(pnamee));
			format(qstr,sizeof(qstr),"SELECT * FROM users WHERE `name`='%s'",pnamee);
			new Cache: abcd = mysql_query(SQL,qstr);
			if(cache_get_row_count() > 0)
			{
				gPlayerAccount[playerid] = 1;
			}
			else
			{
				gPlayerAccount[playerid] = 0;
			}
			cache_delete(abcd);
		}
	}
	else
	{
		// PLAYER LOGIN
		new pnamee[25];
		GetPlayerName(playerid, pnamee, sizeof(pnamee));
		format(qstr,sizeof(qstr),"SELECT * FROM users WHERE `name`='%s'",pnamee);
		new Cache: abcd = mysql_query(SQL,qstr);
		if(cache_get_row_count() > 0)
		{
			gPlayerAccount[playerid] = 1;
		}
		else
		{
			gPlayerAccount[playerid] = 0;
		}
		cache_delete(abcd);
	}
	cache_delete(banuri);
	return 1;
}

stock IsMonth31(month)
{
 	switch (month)
	{
	    case 1: return 1;
	    case 3: return 1;
	    case 5: return 1;
	    case 7: return 1;
	    case 8: return 1;
	    case 10: return 1;
	    case 12: return 1;
	    default: return 0;
	}
	return 0;
}

stock IsMonth29(year)
{
 	new y = 2000;
 	for(new i = 4; i < 3000; i += 4) if ((y+i) == year) return 1;
 	return 0;
}

stock strtok2(const string[], &idx)
{
    new length = strlen(string);
	while ((idx < length) && (string[idx] <= ' '))
	{
		idx++;
	}
	new offset = idx;
	new result[128];
	while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
	{
		result[idx - offset] = string[idx];
		idx++;
	}
	result[idx - offset] = EOS;
	return result;
}
stock LoadNeon(playerid, vehicleid)
{
	//if(CarInfo[OwnedVeh(vehicleid)][cVIP] == 0)return 0;
	if(CarInfo[OwnedVeh(vehicleid)][cNeon] == 1)
	{
        vNeon[vehicleid][playerid] =  CreateDynamicObject(18648,0,0,0,0,0,0);
        vNeon2[vehicleid][playerid] =  CreateDynamicObject(18648,0,0,0,0,0,0);
        AttachDynamicObjectToVehicle(vNeon[vehicleid][playerid], vehicleid, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
        AttachDynamicObjectToVehicle(vNeon2[vehicleid][playerid], vehicleid, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	}
	if(CarInfo[OwnedVeh(vehicleid)][cNeon] == 2)
	{
        vNeon[vehicleid][playerid] = CreateDynamicObject(18647,0,0,0,0,0,0);
        vNeon2[vehicleid][playerid] = CreateDynamicObject(18647,0,0,0,0,0,0);
        AttachDynamicObjectToVehicle(vNeon[vehicleid][playerid], vehicleid, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
        AttachDynamicObjectToVehicle(vNeon2[vehicleid][playerid], vehicleid, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	}
	if(CarInfo[OwnedVeh(vehicleid)][cNeon] == 3)
	{
        vNeon[vehicleid][playerid] = CreateDynamicObject(18649,0,0,0,0,0,0);
        vNeon2[vehicleid][playerid] = CreateDynamicObject(18649,0,0,0,0,0,0);
        AttachDynamicObjectToVehicle(vNeon[vehicleid][playerid], vehicleid, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
        AttachDynamicObjectToVehicle(vNeon2[vehicleid][playerid], vehicleid,0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	}
	if(CarInfo[OwnedVeh(vehicleid)][cNeon] == 4)
	{
	    vNeon[vehicleid][playerid] = CreateDynamicObject(18652,0,0,0,0,0,0);
	    vNeon2[vehicleid][playerid] = CreateDynamicObject(18652,0,0,0,0,0,0);
	    AttachDynamicObjectToVehicle(vNeon[vehicleid][playerid], vehicleid, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	    AttachDynamicObjectToVehicle(vNeon2[vehicleid][playerid],vehicleid, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	}
	if(CarInfo[OwnedVeh(vehicleid)][cNeon] == 5)
	{
        vNeon[vehicleid][playerid] = CreateDynamicObject(18651,0,0,0,0,0,0);
        vNeon2[vehicleid][playerid] = CreateDynamicObject(18651,0,0,0,0,0,0);
        AttachDynamicObjectToVehicle(vNeon[vehicleid][playerid], vehicleid, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
        AttachDynamicObjectToVehicle(vNeon2[vehicleid][playerid], vehicleid, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	}
	if(CarInfo[OwnedVeh(vehicleid)][cNeon] == 6)
	{
        vNeon[vehicleid][playerid] = CreateDynamicObject(18650,0,0,0,0,0,0);
        vNeon2[vehicleid][playerid] = CreateDynamicObject(18650,0,0,0,0,0,0);
        AttachDynamicObjectToVehicle(vNeon[vehicleid][playerid], vehicleid, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
        AttachDynamicObjectToVehicle(vNeon2[vehicleid][playerid], vehicleid, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	}
	return 1;
}
stock DestroyNeon(playerid, vehicleid)
{
	DestroyDynamicObject(vNeon[vehicleid][playerid]);
	DestroyDynamicObject(vNeon2[vehicleid][playerid]);

	return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    new vehicleid = GetPlayerVehicleID(playerid);
	new sendername[25];
	new string[300];
    new maimuta[MAX_PLAYER_NAME];
	for(new i; i < sizeof(antisqlinjection); i++)
    {
        if(strfind(inputtext, antisqlinjection[i], true) != -1)
        {
            GetPlayerName(playerid, maimuta, sizeof(maimuta));
			format(string,sizeof(string),"Hey %s , You are not allowed to use such characters.",maimuta);
		    SCM(playerid, COLOR_LIGHTRED, string);
            return 1;
        }
	}
	if( dialogid == DIALOG_TW )
	{
	    if( !response )
	    {
	        new year,month,day;
		    getdate(year, month, day);
		    day += 7;
		    if (IsMonth31(month))
		    {
		        if (day > 31)
		        {
		            month += 1;
		            if (month > 12)
		            {
		                year += 1;
		                while(day > 31) day -= 31;
		            }
		            else while(day > 31) day -= 31;
		        }
		    }
		    else if (!IsMonth31(month))
		    {
		        if (day > 30)
		        {
		            month += 1;
		            if (month > 12)
		            {
		                year += 1;
		                while(day > 30) day -= 30;
		            }
		            else while(day > 30) day -= 30;
		        }
		    }
		    else if (!IsMonth31(month) && IsMonth29(year) && month == 2)
		    {
		        if (day > 29)
		        {
		            month += 1;
		            if (month > 12)
		            {
		                year += 1;
		                while(day > 29) day -= 29;
		            }
		            else while(day > 29) day -= 29;
		        }
		    }
		    else if (!IsMonth31(month) && !IsMonth29(year) && month == 2)
		    {
		        if (day > 28)
		        {
		            month += 1;
		            if (month > 12)
		            {
		                year += 1;
		                while(day > 28) day -= 28;
		            }
		            else while(day > 28) day -= 28;
		        }
		    }
			PlayerInfo[playerid][pBTemp] = 1;
			PlayerInfo[playerid][pBYear] = year;
			PlayerInfo[playerid][pBMonth] = month;
			PlayerInfo[playerid][pBDay] = day;
			format( PlayerInfo[playerid][pBBy], 255, "AdmBot" );
			format( PlayerInfo[playerid][pBReason], 255, "Refuse Test TW" );
			Update(playerid,pBTempx);
			Update(playerid,pBYearx);
			Update(playerid,pBMonthx);
			Update(playerid,pBDayx);
			Update(playerid,pBByx);
			Update(playerid,pBReasonx);
			format(string, sizeof(string), "[AdmBot]: %s Kicked because he refused the TW test", GetName( playerid ) );
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			KickEx( playerid );
	    }
	    else
	    {
	        new idadmin = GetPVarInt( playerid, "AdminTWIDIOT" );
			new Float:POS[ 3 ];
	        GetPlayerPos( idadmin, POS[ 0 ], POS[ 1 ], POS[ 2 ] );
	        SetPlayerPos( playerid, POS[ 0 ], POS[ 1 ], POS[ 2 ] );
	        SCM( playerid, -1, "{FF0000}Info: {FFFFFF}You accepted the TW test and you were teleported successfully!" );
	    }
	    return 1;
	}
	if(dialogid == 6267)
	{
	    if(response)
		{
		    switch(listitem)
		    {
		        case 0:
		        {
		            PlayerInfo[playerid][pColor] = 0;
		            SCM(playerid, COLOR_WHITE,"{CECECE}Server:{FFFFFF} Nick color changed! Hope you like the new color!");
		        }
		        case 1:
		        {
		            PlayerInfo[playerid][pColor] = 1;
		            SCM(playerid, COLOR_WHITE,"{4169E1}Server:{FFFFFF} Nick color changed! Hope you like the new color!");
		        }
		        case 2:
		        {
		            PlayerInfo[playerid][pColor] = 2;
		            SCM(playerid, COLOR_WHITE,"{662BBE}Server:{FFFFFF} Nick color changed! Hope you like the new color!");
		        }
				case 3:
		        {
		            PlayerInfo[playerid][pColor] = 3;
		            SCM(playerid, COLOR_WHITE,"{FFE600}Server:{FFFFFF} Nick color changed! Hope you like the new color!");
		        }
				case 4:
		        {
		            PlayerInfo[playerid][pColor] = 4;
		            SCM(playerid, COLOR_WHITE,"{FF00FF}Server:{FFFFFF} Nick color changed! Hope you like the new color!");
		        }
		        case 5:
		        {
		            PlayerInfo[playerid][pColor] = 5;
		            SCM(playerid, COLOR_WHITE,"{3FFF3F}Server:{FFFFFF} Nick color changed! Hope you like the new color!");
		        }
		        case 6:
		        {
		            PlayerInfo[playerid][pColor] = 6;
		            SCM(playerid, COLOR_WHITE,"{83D553}Server:{FFFFFF} Nick color changed! Hope you like the new color!");
		        }
				case 7:
		        {
		            PlayerInfo[playerid][pColor] = 7;
		            SCM(playerid, COLOR_WHITE,"{187700}Server:{FFFFFF} Nick color changed! Hope you like the new color!");
		        }
				case 8:
		        {
		            PlayerInfo[playerid][pColor] = 8;
		            SCM(playerid, COLOR_WHITE,"{FF9A00}Server:{FFFFFF} Nick color changed! Hope you like the new color!");
		        }
		        case 9:
		        {
		            PlayerInfo[playerid][pColor] = 9;
		            SCM(playerid, COLOR_WHITE,"{222222}Server:{FFFFFF} Nick color changed! Hope you like the new color!");
		        }
				case 10:
		        {
		            PlayerInfo[playerid][pColor] = 10;
		            SCM(playerid, COLOR_WHITE,"{FF2C9D}Server:{FFFFFF} Nick color changed! Hope you like the new color!");
		        }
		    }
		}
	}
	if(dialogid == DIALOG_VEHSPAWN)
	{
	    if(response)
	    {
	    	if(listitem == 0)
			{
				new stringg[456];
				new carid = PlayerInfo[playerid][pPcarkey];
				if(carid == 0) return 1;
				if(personalcar[0][playerid] != 0)
	   			{
		   			format(stringg, sizeof(stringg), "Manage your %s (%d)",CarInfo[carid][cDescription],CarInfo[carid][cID]);
					if(CarInfo[carid][cVIP] != 411)return ShowPlayerDialog(playerid,DIALOG_VEHSPAWN1,DIALOG_STYLE_LIST,stringg,"{FFFFFF}Vehicle Info\nTow vehicle (/park)\nFind Vehicle\nBuy Insurance\nClear Age and KM - {FFFF00}20 premium points\nUnstuck vehicle","Select","Close");
					ShowPlayerDialog(playerid,DIALOG_VEHSPAWN1,DIALOG_STYLE_LIST,stringg,"{FFFFFF}Vehicle Info\nTow vehicle (/park)\nFind Vehicle\nBuy Insurance\nClear Age and KM - {FFFF00}45 premium points\nUnstuck vehicle","Select","Close");
	   			}
	   			else
	   			{
					format(stringg, sizeof(stringg), "Manage your %s (%d)",CarInfo[carid][cDescription],CarInfo[carid][cID]);
					ShowPlayerDialog(playerid,DIALOG_VEHSPAWN1,DIALOG_STYLE_LIST,stringg,"{FFFFFF}Vehicle Info\nTow vehicle\nFind Vehicle\nBuy Insurance\nClear Age and KM - {FFFF00}45 premium points","Select","Close");

			    	new car = CreateVehicle(CarInfo[carid][cModel],CarInfo[carid][cLocationx],CarInfo[carid][cLocationy],CarInfo[carid][cLocationz],CarInfo[carid][cAngle],CarInfo[carid][cColorOne],CarInfo[carid][cColorTwo],500000);
			    	SetVehicleNumberPlate(car, CarInfo[carid][cLicense]);
					SetVehicleHealth(car, CarInfo[carid][cHP]);
					UpdateVehicleDamageStatus(car, CarInfo[carid][cDamage1], CarInfo[carid][cDamage2], CarInfo[carid][cDamage3], CarInfo[carid][cDamage4]);
					Gas[car] = CarInfo[carid][cGas];
					if(CarInfo[carid][cLock] == 1)
					{
  						foreach(Player, i)
			  		    {
			  		        SetVehicleParamsForPlayer(car, i, 0, 1);
			  		        new engine, lights, alarm, doors, bonnet, boot, objective;
							GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
							SetVehicleParamsEx(car, engine, lights, alarm, 1, bonnet, boot, objective);
			  		    }
			  		    SetVehicleParamsForPlayer(car, playerid, 0, 0);
					}
					if(CarInfo[carid][cLock] == 0)
					{
						foreach(Player, i)
			  		    {
			  		        SetVehicleParamsForPlayer(car, i, 0, 0);
			  		        new engine, lights, alarm, doors, bonnet, boot, objective;
							GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
							SetVehicleParamsEx(car, engine, lights, alarm, 0, bonnet, boot, objective);
			  		    }
			  		    SetVehicleParamsForPlayer(car, playerid, 0, 0);
					}
					OwnedVeh(car) = carid;
					personalcar[0][playerid] = car;
					SwitchKey[playerid] = 1;
					ModVehicle(car);
					if(CarInfo[OwnedVeh(car)][cVIP] == 1)
					{
						VipTextVehicle(car, playerid);
						LoadNeon(playerid, car);
					}
	   			}
   			}
   			if(listitem == 1)
			{
				new stringg[456];
				new carid = PlayerInfo[playerid][pmotokey];
				if(carid == 0) return 1;
				if(personalcar[1][playerid] != 0)
	   			{
		   			format(stringg, sizeof(stringg), "Manage your %s (%d)",CarInfo[carid][cDescription],CarInfo[carid][cID]);
		   			if(CarInfo[carid][cVIP] != 451)return ShowPlayerDialog(playerid,DIALOG_VEHSPAWN2,DIALOG_STYLE_LIST,stringg,"{FFFFFF}Vehicle Info\nTow vehicle (/park)\nFind Vehicle\nBuy Insurance\nClear Age and KM - {FFFF00}45 premium points\nUnstuck vehicle","Select","Close");
					ShowPlayerDialog(playerid,DIALOG_VEHSPAWN2,DIALOG_STYLE_LIST,stringg,"{FFFFFF}Vehicle Info\nTow vehicle (/park)\nFind Vehicle\nBuy Insurance\nClear Age and KM - {FFFF00}45 premium points\nUnstuck vehicle","Select","Close");
	   			}
	   			else
	   			{
					format(stringg, sizeof(stringg), "Manage your %s (%d)",CarInfo[carid][cDescription],CarInfo[carid][cID]);
					ShowPlayerDialog(playerid,DIALOG_VEHSPAWN2,DIALOG_STYLE_LIST,stringg,"{FFFFFF}Vehicle Info\nTow vehicle\nFind Vehicle\nBuy Insurance\nClear Age and KM - {FFFF00}45 premium points","Select","Close");

                    new car = CreateVehicle(CarInfo[carid][cModel],CarInfo[carid][cLocationx],CarInfo[carid][cLocationy],CarInfo[carid][cLocationz],CarInfo[carid][cAngle],CarInfo[carid][cColorOne],CarInfo[carid][cColorTwo],500000);
			    	SetVehicleNumberPlate(car, CarInfo[carid][cLicense]);
					SetVehicleHealth(car, CarInfo[carid][cHP]);
					UpdateVehicleDamageStatus(car, CarInfo[carid][cDamage1], CarInfo[carid][cDamage2], CarInfo[carid][cDamage3], CarInfo[carid][cDamage4]);
					Gas[car] = CarInfo[carid][cGas];
					if(CarInfo[carid][cLock] == 1)
					{
  						foreach(Player, i)
			  		    {
			  		        SetVehicleParamsForPlayer(car, i, 0, 1);
			  		        new engine, lights, alarm, doors, bonnet, boot, objective;
							GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
							SetVehicleParamsEx(car, engine, lights, alarm, 1, bonnet, boot, objective);
			  		    }
			  		    SetVehicleParamsForPlayer(car, playerid, 0, 0);
					}
					if(CarInfo[carid][cLock] == 0)
					{
						foreach(Player, i)
			  		    {
			  		        SetVehicleParamsForPlayer(car, i, 0, 0);
			  		        new engine, lights, alarm, doors, bonnet, boot, objective;
							GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
							SetVehicleParamsEx(car, engine, lights, alarm, 0, bonnet, boot, objective);
			  		    }
			  		    SetVehicleParamsForPlayer(car, playerid, 0, 0);
					}
					OwnedVeh(car) = carid;
					personalcar[1][playerid] = car;
					SwitchKey[playerid] = 1;
					ModVehicle(car);
					if(CarInfo[OwnedVeh(car)][cVIP] == 1)
					{
						VipTextVehicle(car, playerid);
						LoadNeon(playerid, car);
					}
		   		}
			}
   			if(listitem == 2)
			{
				new stringg[456];
				new carid = PlayerInfo[playerid][pprcarkey];
				if(carid == 0) return 1;
				if(personalcar[2][playerid] != 0)
	   			{
		   			format(stringg, sizeof(stringg), "Manage your %s (%d)",CarInfo[carid][cDescription],CarInfo[carid][cID]);
		   			if(CarInfo[carid][cVIP] != 541)return ShowPlayerDialog(playerid,DIALOG_VEHSPAWN3,DIALOG_STYLE_LIST,stringg,"{FFFFFF}Vehicle Info\nTow vehicle (/park)\nFind Vehicle\nBuy Insurance\nClear Age and KM - {FFFF00}45 premium points\nUnstuck vehicle","Select","Close");
					ShowPlayerDialog(playerid,DIALOG_VEHSPAWN3,DIALOG_STYLE_LIST,stringg,"{FFFFFF}Vehicle Info\nTow vehicle (/park)\nFind Vehicle\nBuy Insurance\nClear Age and KM - {FFFF00}45 premium points\nUnstuck vehicle","Select","Close");
	   			}
	   			else
	   			{
					format(stringg, sizeof(stringg), "Manage your %s (%d)",CarInfo[carid][cDescription],CarInfo[carid][cID]);
					ShowPlayerDialog(playerid,DIALOG_VEHSPAWN3,DIALOG_STYLE_LIST,stringg,"{FFFFFF}Vehicle Info\nTow vehicle\nFind Vehicle\nBuy Insurance\nClear Age and KM - {FFFF00}45 premium points","Select","Close");

                    new car = CreateVehicle(CarInfo[carid][cModel],CarInfo[carid][cLocationx],CarInfo[carid][cLocationy],CarInfo[carid][cLocationz],CarInfo[carid][cAngle],CarInfo[carid][cColorOne],CarInfo[carid][cColorTwo],500000);
			    	SetVehicleNumberPlate(car, CarInfo[carid][cLicense]);
					SetVehicleHealth(car, CarInfo[carid][cHP]);
					UpdateVehicleDamageStatus(car, CarInfo[carid][cDamage1], CarInfo[carid][cDamage2], CarInfo[carid][cDamage3], CarInfo[carid][cDamage4]);
					Gas[car] = CarInfo[carid][cGas];
					if(CarInfo[carid][cLock] == 1)
					{
  						foreach(Player, i)
			  		    {
			  		        SetVehicleParamsForPlayer(car, i, 0, 1);
			  		        new engine, lights, alarm, doors, bonnet, boot, objective;
							GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
							SetVehicleParamsEx(car, engine, lights, alarm, 1, bonnet, boot, objective);
			  		    }
			  		    SetVehicleParamsForPlayer(car, playerid, 0, 0);
					}
					if(CarInfo[carid][cLock] == 0)
					{
						foreach(Player, i)
			  		    {
			  		        SetVehicleParamsForPlayer(car, i, 0, 0);
			  		        new engine, lights, alarm, doors, bonnet, boot, objective;
							GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
							SetVehicleParamsEx(car, engine, lights, alarm, 0, bonnet, boot, objective);
			  		    }
			  		    SetVehicleParamsForPlayer(car, playerid, 0, 0);
					}
					OwnedVeh(car) = carid;
					personalcar[2][playerid] = car;
					SwitchKey[playerid] = 1;
					ModVehicle(car);
					if(CarInfo[OwnedVeh(car)][cVIP] == 1)
					{
						VipTextVehicle(car, playerid);
						LoadNeon(playerid, car);
					}
				}
			}
   			if(listitem == 3)
			{
				new stringg[456];
				new carid = PlayerInfo[playerid][pprcarkey2];
				if(carid == 0) return 1;
				if(personalcar[3][playerid] != 0)
	   			{
		   			format(stringg, sizeof(stringg), "Manage your %s (%d)",CarInfo[carid][cDescription],CarInfo[carid][cID]);
		   			if(CarInfo[carid][cVIP] != 560)return ShowPlayerDialog(playerid,DIALOG_VEHSPAWN4,DIALOG_STYLE_LIST,stringg,"{FFFFFF}Vehicle Info\nTow vehicle (/park)\nFind Vehicle\nBuy Insurance\nClear Age and KM - {FFFF00}45 premium points\nUnstuck vehicle","Select","Close");
					ShowPlayerDialog(playerid,DIALOG_VEHSPAWN4,DIALOG_STYLE_LIST,stringg,"{FFFFFF}Vehicle Info\nTow vehicle (/park)\nFind Vehicle\nBuy Insurance\nClear Age and KM - {FFFF00}45 premium points\nUnstuck vehicle","Select","Close");
	   			}
	   			else
	   			{
					format(stringg, sizeof(stringg), "Manage your %s (%d)",CarInfo[carid][cDescription],CarInfo[carid][cID]);
					ShowPlayerDialog(playerid,DIALOG_VEHSPAWN4,DIALOG_STYLE_LIST,stringg,"{FFFFFF}Vehicle Info\nTow vehicle\nFind Vehicle\nBuy Insurance\nClear Age and KM - {FFFF00}45 premium points","Select","Close");

                    new car = CreateVehicle(CarInfo[carid][cModel],CarInfo[carid][cLocationx],CarInfo[carid][cLocationy],CarInfo[carid][cLocationz],CarInfo[carid][cAngle],CarInfo[carid][cColorOne],CarInfo[carid][cColorTwo],500000);
			    	SetVehicleNumberPlate(car, CarInfo[carid][cLicense]);
					SetVehicleHealth(car, CarInfo[carid][cHP]);
					UpdateVehicleDamageStatus(car, CarInfo[carid][cDamage1], CarInfo[carid][cDamage2], CarInfo[carid][cDamage3], CarInfo[carid][cDamage4]);
					Gas[car] = CarInfo[carid][cGas];
					if(CarInfo[carid][cLock] == 1)
					{
  						foreach(Player, i)
			  		    {
			  		        SetVehicleParamsForPlayer(car, i, 0, 1);
			  		        new engine, lights, alarm, doors, bonnet, boot, objective;
							GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
							SetVehicleParamsEx(car, engine, lights, alarm, 1, bonnet, boot, objective);
			  		    }
			  		    SetVehicleParamsForPlayer(car, playerid, 0, 0);
					}
					if(CarInfo[carid][cLock] == 0)
					{
						foreach(Player, i)
			  		    {
			  		        SetVehicleParamsForPlayer(car, i, 0, 0);
			  		        new engine, lights, alarm, doors, bonnet, boot, objective;
							GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
							SetVehicleParamsEx(car, engine, lights, alarm, 0, bonnet, boot, objective);
			  		    }
			  		    SetVehicleParamsForPlayer(car, playerid, 0, 0);
					}
					OwnedVeh(car) = carid;
					personalcar[3][playerid] = car;
					SwitchKey[playerid] = 1;
					ModVehicle(car);
					if(CarInfo[car][cVIP] == 1)
					{
						VipTextVehicle(car, playerid);
						LoadNeon(playerid, car);
					}
				}
			}
			if(listitem == 4)
			{
				new stringg[456];
				new carid = PlayerInfo[playerid][pPPluscarkey];
				if(carid == 0) return 1;
				if(personalcar[4][playerid] != 0)
	   			{
		   			format(stringg, sizeof(stringg), "Manage your %s (%d)",CarInfo[carid][cDescription],CarInfo[carid][cID]);
		   			if(CarInfo[carid][cVIP] != 411)return ShowPlayerDialog(playerid,DIALOG_VEHSPAWN5,DIALOG_STYLE_LIST,stringg,"{FFFFFF}Vehicle Info\nTow vehicle (/park)\nFind Vehicle\nBuy Insurance\nClear Age and KM - {FFFF00}45 premium points\nUnstuck vehicle","Select","Close");
					ShowPlayerDialog(playerid,DIALOG_VEHSPAWN5,DIALOG_STYLE_LIST,stringg,"{FFFFFF}Vehicle Info\nTow vehicle (/park)\nFind Vehicle\nBuy Insurance\nClear Age and KM - {FFFF00}45 premium points\nUnstuck vehicle","Select","Close");
	   			}
	   			else
	   			{
					format(stringg, sizeof(stringg), "Manage your %s (%d)",CarInfo[carid][cDescription],CarInfo[carid][cID]);
					ShowPlayerDialog(playerid,DIALOG_VEHSPAWN5,DIALOG_STYLE_LIST,stringg,"{FFFFFF}Vehicle Info\nTow vehicle\nFind Vehicle\nBuy Insurance\nClear Age and KM - {FFFF00}45 premium points","Select","Close");

                    new car = CreateVehicle(CarInfo[carid][cModel],CarInfo[carid][cLocationx],CarInfo[carid][cLocationy],CarInfo[carid][cLocationz],CarInfo[carid][cAngle],CarInfo[carid][cColorOne],CarInfo[carid][cColorTwo],500000);
			    	SetVehicleNumberPlate(car, CarInfo[carid][cLicense]);
					SetVehicleHealth(car, CarInfo[carid][cHP]);
					UpdateVehicleDamageStatus(car, CarInfo[carid][cDamage1], CarInfo[carid][cDamage2], CarInfo[carid][cDamage3], CarInfo[carid][cDamage4]);
					Gas[car] = CarInfo[carid][cGas];
					if(CarInfo[carid][cLock] == 1)
					{
  						foreach(Player, i)
			  		    {
			  		        SetVehicleParamsForPlayer(car, i, 0, 1);
			  		        new engine, lights, alarm, doors, bonnet, boot, objective;
							GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
							SetVehicleParamsEx(car, engine, lights, alarm, 1, bonnet, boot, objective);
			  		    }
			  		    SetVehicleParamsForPlayer(car, playerid, 0, 0);
					}
					if(CarInfo[carid][cLock] == 0)
					{
						foreach(Player, i)
			  		    {
			  		        SetVehicleParamsForPlayer(car, i, 0, 0);
			  		        new engine, lights, alarm, doors, bonnet, boot, objective;
							GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
							SetVehicleParamsEx(car, engine, lights, alarm, 0, bonnet, boot, objective);
			  		    }
			  		    SetVehicleParamsForPlayer(car, playerid, 0, 0);
					}
					OwnedVeh(car) = carid;
					personalcar[4][playerid] = car;
					SwitchKey[playerid] = 1;
					ModVehicle(car);
					if(CarInfo[OwnedVeh(car)][cVIP] == 1)
					{
						VipTextVehicle(car, playerid);
						LoadNeon(playerid, car);
					}
				}
			}
			if(listitem == 5)
			{
				new stringg[456];
				new carid = PlayerInfo[playerid][pPPluscarkey2];
				if(carid == 0) return 1;
				if(personalcar[5][playerid] != 0)
	   			{
		   			format(stringg, sizeof(stringg), "Manage your %s (%d)",CarInfo[carid][cDescription],CarInfo[carid][cID]);
		   			if(CarInfo[carid][cVIP] != 1)return ShowPlayerDialog(playerid,DIALOG_VEHSPAWN6,DIALOG_STYLE_LIST,stringg,"{FFFFFF}Vehicle Info\nTow vehicle (/park)\nFind Vehicle\nBuy Insurance\nClear Age and KM - {FFFF00}20 premium points\nUnstuck vehicle","Select","Close");
					ShowPlayerDialog(playerid,DIALOG_VEHSPAWN6,DIALOG_STYLE_LIST,stringg,"{FFFFFF}Vehicle Info\nTow vehicle (/park)\nFind Vehicle\nBuy Insurance\nClear Age and KM - {FFFF00}20 premium points\nUnstuck vehicle","Select","Close");
	   			}
	   			else
	   			{
					format(stringg, sizeof(stringg), "Manage your %s (%d)",CarInfo[carid][cDescription],CarInfo[carid][cID]);
					ShowPlayerDialog(playerid,DIALOG_VEHSPAWN6,DIALOG_STYLE_LIST,stringg,"{FFFFFF}Vehicle Info\nTow vehicle\nFind Vehicle\nBuy Insurance\nClear Age and KM - {FFFF00}20 premium points","Select","Close");

                    new car = CreateVehicle(CarInfo[carid][cModel],CarInfo[carid][cLocationx],CarInfo[carid][cLocationy],CarInfo[carid][cLocationz],CarInfo[carid][cAngle],CarInfo[carid][cColorOne],CarInfo[carid][cColorTwo],500000);
			    	SetVehicleNumberPlate(car, CarInfo[carid][cLicense]);
					SetVehicleHealth(car, CarInfo[carid][cHP]);
					UpdateVehicleDamageStatus(car, CarInfo[carid][cDamage1], CarInfo[carid][cDamage2], CarInfo[carid][cDamage3], CarInfo[carid][cDamage4]);
					Gas[car] = CarInfo[carid][cGas];
     				if(CarInfo[carid][cLock] == 1)
					{
  						foreach(Player, i)
			  		    {
			  		        SetVehicleParamsForPlayer(car, i, 0, 1);
			  		        new engine, lights, alarm, doors, bonnet, boot, objective;
							GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
							SetVehicleParamsEx(car, engine, lights, alarm, 1, bonnet, boot, objective);
			  		    }
			  		    SetVehicleParamsForPlayer(car, playerid, 0, 0);
					}
					if(CarInfo[carid][cLock] == 0)
					{
						foreach(Player, i)
			  		    {
			  		        SetVehicleParamsForPlayer(car, i, 0, 0);
			  		        new engine, lights, alarm, doors, bonnet, boot, objective;
							GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
							SetVehicleParamsEx(car, engine, lights, alarm, 0, bonnet, boot, objective);
			  		    }
			  		    SetVehicleParamsForPlayer(car, playerid, 0, 0);
					}
					OwnedVeh(car) = carid;
					personalcar[5][playerid] = car;
					SwitchKey[playerid] = 1;
					ModVehicle(car);
					if(CarInfo[OwnedVeh(car)][cVIP] == 1)
					{
						VipTextVehicle(car, playerid);
						LoadNeon(playerid, car);
					}
				}
			}
		}
	    return 1;
	}
	if(dialogid == DIALOG_JOBULETES)
	{
	    if(response)
	    {
	        UsedFind[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			foreach(Player, i)
			{
				if(IsACop(playerid))
				{
					if(caser[playerid] == i)
					{
						cased[i] --;
						caser[playerid] = 1001;
					}
				}

			}
			DisablePlayerCheckpoint(playerid);
 			DisablePlayerRaceCheckpoint(playerid);
			SCM(playerid,COLOR_DARKPINK,"Checkpoint Canceled !");
			CP[playerid] = 0;
			if(GotoMats[playerid] > 0)
			{
			    DisablePlayerCheckpoint(playerid);
			    GotoMats[playerid] = 0;
			}
			if(JCurier[playerid][0] > 0)
			{
				if(JCurier[playerid][1] > 0)
				{
					DisableRemoteVehicleCollisions(playerid, 0);
				}
				DestroyVehicle(JCurier[playerid][2]);
				JCurier[playerid][0] = -1;
				JCurier[playerid][1] = -1;
				JCurier[playerid][2] = -1;
				JCurier[playerid][3] = 0;
				SCM(playerid, COLOR_ERROR, "Job Canceled ! You Killed CheckPoint !");
				DisablePlayerCheckpoint(playerid);
			}
			if(IsATruck(GetPlayerVehicleID(playerid)))
			{
			    RemovePlayerFromVehicle(playerid);
	    		restruck[playerid] = SetTimerEx("RespawnTruck", 1, 0, "i",playerid);
			}

    		if(TakingLesson[playerid] == 1)
    		{
        		PlayerTextDrawHide(playerid, DMVexam[playerid]);
        		PlayerTextDrawHide(playerid, DMVcheck[playerid]);
				DestroyVehicle(examcar[playerid]);
				DisableRemoteVehicleCollisions(playerid, 0);
				examcar[playerid] = -1;
        		TakingLesson[playerid] = 0;
	    		DisablePlayerRaceCheckpoint(playerid);
    		}
			if(IsCollectingRubbish[playerid] > 0)
			{
				DisablePlayerCheckpoint(playerid);
				PlayerInfo[playerid][pGarbageTime] = 0;
		    	IsCollectingRubbish[playerid] = 0;
		    	PlayerTextDrawHide(playerid, gunoierr[playerid]);
			}
			if(farmerc[playerid] == 1)
			{
				farmerc[playerid] = 0;
				farmertime[playerid] = 1;
				PlayerTextDrawHide(playerid, farmjob[playerid]);
				PlayerTextDrawHide(playerid, farmbox[playerid]);
				PlayerTextDrawHide(playerid, farmtime[playerid]);
				PlayerTextDrawHide(playerid, farmspeed[playerid]);
				PlayerTextDrawHide(playerid, farmwanted[playerid]);
				KillTimer(timerfarmm[playerid]);
			}
			if(CarJacker[playerid] > 0)
			{
		    	DisablePlayerCheckpoint(playerid);
		    	CarJacker[playerid] = 0;
		    	JackAcc[playerid] = 0;
			}
			if(Trucker[playerid] >= 1)
			{
			    RemovePlayerFromVehicle(playerid);
		   		Trucker[playerid] = 0;
	        	Trucker2[playerid] = 0;
	        	DestroyVehicle(viddd[playerid]);
	        	viddd[playerid] = 0;
	        	SetVehicleToRespawn(TruckID[playerid]);
	        	TruckID[playerid] = 0;
	        	DisablePlayerCheckpoint(playerid);
	    		restruck[playerid] = SetTimerEx("RespawnTruck", 1, 0, "i",playerid);
			}
			if(busc[playerid] == 1)
			{
		    	busc[playerid] = 0;
		    	PlayerTextDrawHide(playerid, BusJob[playerid]);
		    	PlayerTextDrawHide(playerid, BusCheck[playerid]);
		    	KillTimer(timerbus[playerid]);
		    	DisablePlayerRaceCheckpoint(playerid);
		    	if(JobStep[playerid] >= 1)
		    	{
      				JobStep[playerid] = 0;
	    			GivePlayerCash(playerid, -2500);
		    		SendClientMessage(playerid, COLOR_GREEN, "(-) You Paid $2.500 To Bus Company For Tax");
				}
			}
			if(MatsHolding[playerid] > 0)
			{
			    MatsHolding[playerid] = 0;
			    DisablePlayerCheckpoint(playerid);
			    DisablePlayerRaceCheckpoint(playerid);
			    CP[playerid] = 0;
			}
			if(CheckBus[playerid] > 0)
			{
			    busc[playerid] = 0;
				CheckBus[playerid] = 0;
			}
			if(CP[playerid] == 34)
			{
			    new towedcar = GetVehicleTrailer(GetPlayerVehicleID(playerid));
				SetVehicleToRespawn(towedcar);
				CP[playerid] = 0;
			}
			if(MechanicCallTime[playerid] > 0)
			{
			    MechanicCallTime[playerid] = 0;
			}
			if(TaxiCallTime[playerid] > 0 && TaxiAccepted[playerid] < 999)
			{
	    		TaxiAccepted[playerid] = 999;
				TaxiCallTime[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
			}
			if(CP[playerid] == 340 || CP[playerid] == 341 || CP[playerid] == 342 || CP[playerid] == 343 || CP[playerid] == 344 || CP[playerid] == 345 || CP[playerid] == 346 || CP[playerid] == 347)
			{
 				DisablePlayerCheckpoint(playerid);
				CP[playerid] = 0;
			}

		}
		return 1;
	}
	if(dialogid == DIALOG_VEHSPAWN1)
	{
	    if(response)
	    {
	    	if(listitem == 0)
			{
			    new carid = PlayerInfo[playerid][pPcarkey],stringgg[256],speed;
			    speed = MySQLCheckSpeed(CarInfo[carid][cModel]);
			    format(stringgg,sizeof(stringgg),"Vehicle Model: %d\nDistance Traveled: %.0f KM\nVehicle Age: %d days\nInsurance Price: $%s\nInsurance Points: %d\nTop speed: %d km/h",CarInfo[carid][cModel],CarInfo[carid][cKM],CarInfo[carid][cDays],FormatNumber(CarInfo[carid][cInscarprice]),CarInfo[carid][cInsurancecar],speed);
				ShowPlayerDialog(playerid,DIALOG_VEHINFO,DIALOG_STYLE_MSGBOX,"Vehicle Info",stringgg,"Close","");
				return 1;
			}
			if(listitem == 1)
			{
				new car = personalcar[0][playerid],car2 = PlayerInfo[playerid][pPcarkey];
				if(IsTrailerAttachedToVehicle(car)) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}On a mission right now, can't use this command.");
				TowCar(car,car2,playerid);
			}
			if(listitem == 2)
			{
			    if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}On a mission right now, can't use this command.");
				if(BusinessRob[playerid] > 0) return SendClientMessage(playerid,COLOR_WHITE,"You can't use this while robbing the bank.");
			    if(CP[playerid] < 1 && IsCollectingRubbish[playerid] < 1 && !IsATruck(GetPlayerVehicleID(playerid)) && MechanicCallTime[playerid] < 1 && CheckBus[playerid] < 1 && GotoMats[playerid] < 1)
				{
			    	new car = personalcar[0][playerid];
					LocateCar(car,playerid);
                }
				else
				{
	    			ShowPlayerDialog(playerid, DIALOG_JOBULETES, DIALOG_STYLE_MSGBOX, "Checkpoint Cancel", "Are You Sure You Want To Cancel CHeckpoint ?", "Yeah", "No");
				}
			}
			if(listitem == 3)
			{
			    new carid = OwnedVeh(personalcar[0][playerid]),inscarpricee = CarInfo[carid][cInscarprice],stringul[200];
			    if(CarInfo[carid][cInsurancecar] < 5)
			    {
			        if(GetPlayerCash(playerid) >= inscarpricee)
	      			{
	      			    format(stringul,sizeof(stringul),"You want to buy 1 insurance for $%d?",inscarpricee);
	      			    ShowPlayerDialog(playerid, DIALOG_INSURANCEBUY, DIALOG_STYLE_MSGBOX, "Insurance", stringul, "Yes", "No");
						Selected2[playerid] = 1;
					}
				}
				else
				{
 			    	ShowPlayerDialog(playerid, DIALOG_INSURANCEBUY2, DIALOG_STYLE_MSGBOX, "Insurance", "You can't have more than 5 insurance", "OK", "");
				}
			}
			if(listitem == 4)
			{
			    if(PlayerInfo[playerid][pPremiumPoints] <= 19)
				{
				    ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
				    return 1;
				}
				PlayerInfo[playerid][pPremiumPoints] -= 20;
				CarInfo[OwnedVeh(personalcar[0][playerid])][cDays] = 0;
				CarInfo[OwnedVeh(personalcar[0][playerid])][cKM] = 0;
				vUpdate(OwnedVeh(personalcar[0][playerid]), cDaysx);
				vUpdate(OwnedVeh(personalcar[0][playerid]), cKMx);
				new strings[200],name[30],stringss[200],str1[300];
				SendClientMessage(playerid, COLOR_YELLOW, "You have cleared your car KM and days! (-20 premium points)");
				GetPlayerName(playerid, name, sizeof(name));
				format(strings, sizeof(strings), "/shop: %s bought clear car KM and days reset.",name);
				ABroadCast(COLOR_YELLOW,strings,6);
				mysql_real_escape_string(strings, stringss);
				mysql_format(SQL,str1,sizeof(str1), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
				mysql_tquery(SQL,str1,"","");
			}
			if(listitem == 5)
			{
			    if(IsPlayerInAnyVehicle(playerid))return SCM(playerid, -1, "You can't use this command if you are in a vehicle.");
				if(!CarTow(OwnedVeh(personalcar[0][playerid])))return SCM(playerid, -1, "Car is use.");
				ShowPlayerDialog(playerid, DIALOG_UNSTUCK1, DIALOG_STYLE_MSGBOX,"Unstuck Vehicle", "Are you sure you want to do this?\nYour vehicle will be teleported to a parking lot in Las Venturas!", "Ok", "Cancel");
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_VEHSPAWN2)
	{
	    if(response)
	    {
	    	if(listitem == 0)
			{
			    new carid = PlayerInfo[playerid][pmotokey],stringgg[256],speed;
			    speed = MySQLCheckSpeed(CarInfo[carid][cModel]);
			    format(stringgg,sizeof(stringgg),"Vehicle Model: %d\nDistance Traveled: %.0f KM\nVehicle Age: %d days\nInsurance Price: $%s\nInsurance Points: %d\nTop speed: %d km/h",CarInfo[carid][cModel],CarInfo[carid][cKM],CarInfo[carid][cDays],FormatNumber(CarInfo[carid][cInscarprice]),CarInfo[carid][cInsurancecar],speed);
				ShowPlayerDialog(playerid,DIALOG_VEHINFO,DIALOG_STYLE_MSGBOX,"Vehicle Info",stringgg,"Close","");
				return 1;
			}
			if(listitem == 1)
			{
				new car = personalcar[1][playerid],car2 = PlayerInfo[playerid][pmotokey];
				if(IsTrailerAttachedToVehicle(car)) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}On a mission right now, can't use this command.");
				TowCar(car,car2,playerid);
			}
			if(listitem == 2)
			{
			    if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}On a mission right now, can't use this command.");
			    if(BusinessRob[playerid] > 0) return SendClientMessage(playerid,COLOR_WHITE,"You can't use this while robbing the bank.");
				if(CP[playerid] < 1 && IsCollectingRubbish[playerid] < 1 && !IsATruck(GetPlayerVehicleID(playerid)) && MechanicCallTime[playerid] < 1 && CheckBus[playerid] < 1 && GotoMats[playerid] < 1)
				{
			    	new car = personalcar[1][playerid];
					LocateCar(car,playerid);
                }
				else
				{
	    			ShowPlayerDialog(playerid, DIALOG_JOBULETES, DIALOG_STYLE_MSGBOX, "Checkpoint Cancel", "Are You Sure You Want To Cancel CHeckpoint ?", "Yeah", "No");
				}
			}
			if(listitem == 3)
			{
			    new carid = OwnedVeh(personalcar[1][playerid]),inscarpricee = CarInfo[carid][cInscarprice],stringul[200];
			    if(CarInfo[carid][cInsurancecar] < 5)
			    {
			        if(GetPlayerCash(playerid) >= inscarpricee)
	      			{
	      			    format(stringul,sizeof(stringul),"You want to buy 1 insurance for $%d?",inscarpricee);
	      			    ShowPlayerDialog(playerid, DIALOG_INSURANCEBUY, DIALOG_STYLE_MSGBOX, "Insurance", stringul, "Yes", "No");
						Selected2[playerid] = 2;
					}
				}
				else
				{
 			    	ShowPlayerDialog(playerid, DIALOG_INSURANCEBUY2, DIALOG_STYLE_MSGBOX, "Insurance", "You can't have more than 5 insurance", "OK", "");
				}
			}
			if(listitem == 4)
			{
			    if(PlayerInfo[playerid][pPremiumPoints] <= 19)
				{
    				ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
				    return 1;
				}
				PlayerInfo[playerid][pPremiumPoints] -= 20;
				CarInfo[OwnedVeh(personalcar[1][playerid])][cDays] = 0;
				CarInfo[OwnedVeh(personalcar[1][playerid])][cKM] = 0;
				vUpdate(OwnedVeh(personalcar[1][playerid]), cDaysx);
				vUpdate(OwnedVeh(personalcar[1][playerid]), cKMx);
				new strings[200],name[30],stringss[200],str1[300];
				SendClientMessage(playerid, COLOR_YELLOW, "You have cleared your car KM and days! (-20 premium points)");
				GetPlayerName(playerid, name, sizeof(name));
				format(strings, sizeof(strings), "/shop: %s bought clear car KM and days reset.",name);
				ABroadCast(COLOR_YELLOW,strings,6);
				mysql_real_escape_string(strings, stringss);
				mysql_format(SQL,str1,sizeof(str1), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
				mysql_tquery(SQL,str1,"","");
			}
			if(listitem == 5)
			{
			    if(IsPlayerInAnyVehicle(playerid))return SCM(playerid, -1, "You can't use this command if you are in a vehicle.");
				if(!CarTow(OwnedVeh(personalcar[1][playerid])))return SCM(playerid, -1, "Car is use.");
				ShowPlayerDialog(playerid, DIALOG_UNSTUCK2, DIALOG_STYLE_MSGBOX,"Unstuck Vehicle", "Are You Sure ?\nYour vehicle will be teleported to a parking lot in Las Venturas!", "Ok", "Cancel");
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_VEHSPAWN3)
	{
	    if(response)
	    {
	    	if(listitem == 0)
			{
			    new carid = PlayerInfo[playerid][pprcarkey],stringgg[256],speed;
			    speed = MySQLCheckSpeed(CarInfo[carid][cModel]);
			    format(stringgg,sizeof(stringgg),"Vehicle Model: %d\nDistance Traveled: %.0f KM\nVehicle Age: %d days\nInsurance Price: $%s\nInsurance Points: %d\nTop speed: %d km/h",CarInfo[carid][cModel],CarInfo[carid][cKM],CarInfo[carid][cDays],FormatNumber(CarInfo[carid][cInscarprice]),CarInfo[carid][cInsurancecar],speed);
				ShowPlayerDialog(playerid,DIALOG_VEHINFO,DIALOG_STYLE_MSGBOX,"Vehicle Info",stringgg,"Close","");
				return 1;
			}
			if(listitem == 1)
			{
				new car = personalcar[2][playerid],car2 = PlayerInfo[playerid][pprcarkey];
				if(IsTrailerAttachedToVehicle(car)) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}On a mission right now, can't use this command.");
				TowCar(car,car2,playerid);
			}
			if(listitem == 2)
			{
			    if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}On a mission right now, can't use this command.");
			    if(BusinessRob[playerid] > 0) return SendClientMessage(playerid,COLOR_WHITE,"You can't use this while robbing the bank.");
				if(CP[playerid] < 1 && IsCollectingRubbish[playerid] < 1 && !IsATruck(GetPlayerVehicleID(playerid)) && MechanicCallTime[playerid] < 1 && CheckBus[playerid] < 1 && GotoMats[playerid] < 1)
				{
			    	new car = personalcar[2][playerid];
					LocateCar(car,playerid);
                }
				else
				{
	    			ShowPlayerDialog(playerid, DIALOG_JOBULETES, DIALOG_STYLE_MSGBOX, "Checkpoint Cancel", "Are You Sure You Want To Cancel CHeckpoint ?", "Yeah", "No");
				}
			}
			if(listitem == 3)
			{
			    new carid = OwnedVeh(personalcar[2][playerid]),inscarpricee = CarInfo[carid][cInscarprice],stringul[200];
			    if(CarInfo[carid][cInsurancecar] < 5)
			    {
			        if(GetPlayerCash(playerid) >= inscarpricee)
	      			{
	      			    format(stringul,sizeof(stringul),"You want to buy 1 insurance for $%d?",inscarpricee);
	      			    ShowPlayerDialog(playerid, DIALOG_INSURANCEBUY, DIALOG_STYLE_MSGBOX, "Insurance", stringul, "Yes", "No");
						Selected2[playerid] = 3;
					}
				}
				else
				{
 			    	ShowPlayerDialog(playerid, DIALOG_INSURANCEBUY2, DIALOG_STYLE_MSGBOX, "Insurance", "You can't have more than 5 insurance", "OK", "");
				}
			}
			if(listitem == 4)
			{
			    if(PlayerInfo[playerid][pPremiumPoints] <= 19)
				{
    				ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
				    return 1;
				}
				PlayerInfo[playerid][pPremiumPoints] -= 20;
				CarInfo[OwnedVeh(personalcar[2][playerid])][cDays] = 0;
				CarInfo[OwnedVeh(personalcar[2][playerid])][cKM] = 0;
				vUpdate(OwnedVeh(personalcar[2][playerid]), cDaysx);
				vUpdate(OwnedVeh(personalcar[2][playerid]), cKMx);
				new strings[200],name[30],stringss[200],str1[300];
				SendClientMessage(playerid, COLOR_YELLOW, "You have cleared your car KM and days! (-20 premium points)");
				GetPlayerName(playerid, name, sizeof(name));
				format(strings, sizeof(strings), "/shop: %s bought clear car KM and days reset.",name);
				ABroadCast(COLOR_YELLOW,strings,6);
				mysql_real_escape_string(strings, stringss);
				mysql_format(SQL,str1,sizeof(str1), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
				mysql_tquery(SQL,str1,"","");
			}
			if(listitem == 5)
			{
			    if(IsPlayerInAnyVehicle(playerid))return SCM(playerid, -1, "You can't use this command if you are in a vehicle.");
				if(!CarTow(OwnedVeh(personalcar[2][playerid])))return SCM(playerid, -1, "Car is use.");
				ShowPlayerDialog(playerid, DIALOG_UNSTUCK3, DIALOG_STYLE_MSGBOX,"Unstuck Vehicle", "Are You Sure ?\nYour vehicle will be teleported to a parking lot in Las Venturas!", "Ok", "Cancel");
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_VEHSPAWN4)
	{
	    if(response)
	    {
	    	if(listitem == 0)
			{
			    new carid = PlayerInfo[playerid][pprcarkey2],stringgg[256],speed;
			    speed = MySQLCheckSpeed(CarInfo[carid][cModel]);
			    format(stringgg,sizeof(stringgg),"Vehicle Model: %d\nDistance Traveled: %.0f KM\nVehicle Age: %d days\nInsurance Price: $%s\nInsurance Points: %d\nTop speed: %d km/h",CarInfo[carid][cModel],CarInfo[carid][cKM],CarInfo[carid][cDays],FormatNumber(CarInfo[carid][cInscarprice]),CarInfo[carid][cInsurancecar],speed);
				ShowPlayerDialog(playerid,DIALOG_VEHINFO,DIALOG_STYLE_MSGBOX,"Vehicle Info",stringgg,"Close","");
				return 1;
			}
			if(listitem == 1)
			{
				new car = personalcar[3][playerid],car2 = PlayerInfo[playerid][pprcarkey2];
				if(IsTrailerAttachedToVehicle(car)) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}On a mission right now, can't use this command.");
				TowCar(car,car2,playerid);
			}
			if(listitem == 2)
			{
			    if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}On a mission right now, can't use this command.");
			    if(BusinessRob[playerid] > 0) return SendClientMessage(playerid,COLOR_WHITE,"You can't use this while robbing the bank.");
				if(CP[playerid] < 1 && IsCollectingRubbish[playerid] < 1 && !IsATruck(GetPlayerVehicleID(playerid)) && MechanicCallTime[playerid] < 1 && CheckBus[playerid] < 1 && GotoMats[playerid] < 1)
				{
			    	new car = personalcar[3][playerid];
					LocateCar(car,playerid);
                }
				else
				{
	    			ShowPlayerDialog(playerid, DIALOG_JOBULETES, DIALOG_STYLE_MSGBOX, "Checkpoint Cancel", "Are You Sure You Want To Cancel CHeckpoint ?", "Yeah", "No");
				}
			}
			if(listitem == 3)
			{
			    new carid = OwnedVeh(personalcar[3][playerid]),inscarpricee = CarInfo[carid][cInscarprice],stringul[200];
			    if(CarInfo[carid][cInsurancecar] < 5)
			    {
			        if(GetPlayerCash(playerid) >= inscarpricee)
	      			{
	      			    format(stringul,sizeof(stringul),"You want to buy 1 insurance for $%d?",inscarpricee);
	      			    ShowPlayerDialog(playerid, DIALOG_INSURANCEBUY, DIALOG_STYLE_MSGBOX, "Insurance", stringul, "Yes", "No");
						Selected2[playerid] = 4;
					}
				}
				else
				{
 			    	ShowPlayerDialog(playerid, DIALOG_INSURANCEBUY2, DIALOG_STYLE_MSGBOX, "Insurance", "You can't have more than 5 insurance", "OK", "");
				}
			}
			if(listitem == 4)
			{
			    if(PlayerInfo[playerid][pPremiumPoints] <= 19)
				{
    				ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
				    return 1;
				}
				PlayerInfo[playerid][pPremiumPoints] -= 20;
				CarInfo[OwnedVeh(personalcar[3][playerid])][cDays] = 0;
				CarInfo[OwnedVeh(personalcar[3][playerid])][cKM] = 0;
				vUpdate(OwnedVeh(personalcar[3][playerid]), cDaysx);
				vUpdate(OwnedVeh(personalcar[3][playerid]), cKMx);
				new strings[200],name[30],stringss[200],str1[300];
				SendClientMessage(playerid, COLOR_YELLOW, "You have cleared your car KM and days! (-20 premium points)");
				GetPlayerName(playerid, name, sizeof(name));
				format(strings, sizeof(strings), "/shop: %s bought clear car KM and days reset.",name);
				ABroadCast(COLOR_YELLOW,strings,6);
				mysql_real_escape_string(strings, stringss);
				mysql_format(SQL,str1,sizeof(str1), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
				mysql_tquery(SQL,str1,"","");
			}
			if(listitem == 5)
			{
			    if(IsPlayerInAnyVehicle(playerid))return SCM(playerid, -1, "You can't use this command if you are in a vehicle.");
				if(!CarTow(OwnedVeh(personalcar[3][playerid])))return SCM(playerid, -1, "Car is use.");
				ShowPlayerDialog(playerid, DIALOG_UNSTUCK4, DIALOG_STYLE_MSGBOX,"Unstuck Vehicle", "Are You Sure ?\nYour vehicle will be teleported to a parking lot in Las Venturas!", "Ok", "Cancel");
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_VEHSPAWN5)
	{
	    if(response)
	    {
	    	if(listitem == 0)
			{
			    new carid = PlayerInfo[playerid][pPPluscarkey],stringgg[256],speed;
			    speed = MySQLCheckSpeed(CarInfo[carid][cModel]);
			    format(stringgg,sizeof(stringgg),"Vehicle Model: %d\nDistance Traveled: %.0f KM\nVehicle Age: %d days\nInsurance Price: $%s\nInsurance Points: %d\nTop speed: %d km/h",CarInfo[carid][cModel],CarInfo[carid][cKM],CarInfo[carid][cDays],FormatNumber(CarInfo[carid][cInscarprice]),CarInfo[carid][cInsurancecar],speed);
				ShowPlayerDialog(playerid,DIALOG_VEHINFO,DIALOG_STYLE_MSGBOX,"Vehicle Info",stringgg,"Close","");
				return 1;
			}
			if(listitem == 1)
			{
				new car = personalcar[4][playerid],car2 = PlayerInfo[playerid][pPPluscarkey];
				if(IsTrailerAttachedToVehicle(car)) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}On a mission right now, can't use this command.");
				TowCar(car,car2,playerid);
			}
			if(listitem == 2)
			{
			    if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}On a mission right now, can't use this command.");
			    if(BusinessRob[playerid] > 0) return SendClientMessage(playerid,COLOR_WHITE,"You can't use this while robbing the bank.");
				if(CP[playerid] < 1 && IsCollectingRubbish[playerid] < 1 && !IsATruck(GetPlayerVehicleID(playerid)) && MechanicCallTime[playerid] < 1 && CheckBus[playerid] < 1 && GotoMats[playerid] < 1)
				{
			    	new car = personalcar[4][playerid];
					LocateCar(car,playerid);
                }
				else
				{
	    			ShowPlayerDialog(playerid, DIALOG_JOBULETES, DIALOG_STYLE_MSGBOX, "Checkpoint Cancel", "Are You Sure You Want To Cancel CHeckpoint ?", "Yeah", "No");
				}
			}
			if(listitem == 3)
			{
			    new carid = OwnedVeh(personalcar[4][playerid]),inscarpricee = CarInfo[carid][cInscarprice],stringul[200];
			    if(CarInfo[carid][cInsurancecar] < 5)
			    {
			        if(GetPlayerCash(playerid) >= inscarpricee)
	      			{
	      			    format(stringul,sizeof(stringul),"You want to buy 1 insurance for $%d?",inscarpricee);
	      			    ShowPlayerDialog(playerid, DIALOG_INSURANCEBUY, DIALOG_STYLE_MSGBOX, "Insurance", stringul, "Yes", "No");
						Selected2[playerid] = 5;
					}
				}
				else
				{
 			    	ShowPlayerDialog(playerid, DIALOG_INSURANCEBUY2, DIALOG_STYLE_MSGBOX, "Insurance", "You can't have more than 5 insurance", "OK", "");
				}
			}
			if(listitem == 4)
			{
			    if(PlayerInfo[playerid][pPremiumPoints] <= 19)
				{
    				ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
				    return 1;
				}
				PlayerInfo[playerid][pPremiumPoints] -= 20;
				CarInfo[OwnedVeh(personalcar[4][playerid])][cDays] = 0;
				CarInfo[OwnedVeh(personalcar[4][playerid])][cKM] = 0;
				vUpdate(OwnedVeh(personalcar[4][playerid]), cDaysx);
				vUpdate(OwnedVeh(personalcar[4][playerid]), cKMx);
				new strings[200],name[30],stringss[200],str1[300];
				SendClientMessage(playerid, COLOR_YELLOW, "You have cleared your car KM and days! (-20 premium points)");
				GetPlayerName(playerid, name, sizeof(name));
				format(strings, sizeof(strings), "/shop: %s bought clear car KM and days reset.",name);
				ABroadCast(COLOR_YELLOW,strings,6);
				mysql_real_escape_string(strings, stringss);
				mysql_format(SQL,str1,sizeof(str1), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
				mysql_tquery(SQL,str1,"","");
			}
			if(listitem == 5)
			{
			    if(IsPlayerInAnyVehicle(playerid))return SCM(playerid, -1, "You can't use this command if you are in a vehicle.");
				if(!CarTow(OwnedVeh(personalcar[4][playerid])))return SCM(playerid, -1, "Car is use.");
				ShowPlayerDialog(playerid, DIALOG_UNSTUCK5, DIALOG_STYLE_MSGBOX,"Unstuck Vehicle", "Are You Sure ?\nYour vehicle will be teleported to a parking lot in Las Venturas!", "Ok", "Cancel");
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_VEHSPAWN6)
	{
	    if(response)
	    {
	    	if(listitem == 0)
			{
			    new carid = PlayerInfo[playerid][pPPluscarkey2],stringgg[256],speed;
			    speed = MySQLCheckSpeed(CarInfo[carid][cModel]);
			    format(stringgg,sizeof(stringgg),"Vehicle Model: %d\nDistance Traveled: %.0f KM\nVehicle Age: %d days\nInsurance Price: $%s\nInsurance Points: %d\nTop speed: %d km/h",CarInfo[carid][cModel],CarInfo[carid][cKM],CarInfo[carid][cDays],FormatNumber(CarInfo[carid][cInscarprice]),CarInfo[carid][cInsurancecar],speed);
				ShowPlayerDialog(playerid,DIALOG_VEHINFO,DIALOG_STYLE_MSGBOX,"Vehicle Info",stringgg,"Close","");
				return 1;
			}
			if(listitem == 1)
			{
				new car = personalcar[5][playerid],car2 = PlayerInfo[playerid][pPPluscarkey2];
				if(IsTrailerAttachedToVehicle(car)) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}On a mission right now, can't use this command.");
				TowCar(car,car2,playerid);
			}
			if(listitem == 2)
			{
			    if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_WHITE, "{FFF8C6}On a mission right now, can't use this command.");
			    if(BusinessRob[playerid] > 0) return SendClientMessage(playerid,COLOR_WHITE,"You can't use this while robbing the bank.");
				if(CP[playerid] < 1 && IsCollectingRubbish[playerid] < 1 && !IsATruck(GetPlayerVehicleID(playerid)) && MechanicCallTime[playerid] < 1 && CheckBus[playerid] < 1 && GotoMats[playerid] < 1)
				{
			    	new car = personalcar[5][playerid];
					LocateCar(car,playerid);
                }
				else
				{
	    			ShowPlayerDialog(playerid, DIALOG_JOBULETES, DIALOG_STYLE_MSGBOX, "Checkpoint Cancel", "Are You Sure You Want To Cancel CHeckpoint ?", "Yeah", "No");
				}
			}
			if(listitem == 3)
			{
			    new carid = OwnedVeh(personalcar[5][playerid]),inscarpricee = CarInfo[carid][cInscarprice],stringul[200];
			    if(CarInfo[carid][cInsurancecar] < 5)
			    {
			        if(GetPlayerCash(playerid) >= inscarpricee)
	      			{
	      			    format(stringul,sizeof(stringul),"You want to buy 1 insurance for $%d?",inscarpricee);
	      			    ShowPlayerDialog(playerid, DIALOG_INSURANCEBUY, DIALOG_STYLE_MSGBOX, "Insurance", stringul, "Yes", "No");
						Selected2[playerid] = 6;
					}
				}
				else
				{
 			    	ShowPlayerDialog(playerid, DIALOG_INSURANCEBUY2, DIALOG_STYLE_MSGBOX, "Insurance", "You can't have more than 5 insurance", "OK", "");
				}
			}
			if(listitem == 4)
			{
			    if(PlayerInfo[playerid][pPremiumPoints] <= 19)
				{
    				ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
				    return 1;
				}
				PlayerInfo[playerid][pPremiumPoints] -= 20;
				CarInfo[OwnedVeh(personalcar[5][playerid])][cDays] = 0;
				CarInfo[OwnedVeh(personalcar[5][playerid])][cKM] = 0;
				vUpdate(OwnedVeh(personalcar[5][playerid]), cDaysx);
				vUpdate(OwnedVeh(personalcar[5][playerid]), cKMx);
				new strings[200],name[30],stringss[200],str1[300];
				SendClientMessage(playerid, COLOR_YELLOW, "You have cleared your car KM and days! (-20 premium points)");
				GetPlayerName(playerid, name, sizeof(name));
				format(strings, sizeof(strings), "/shop: %s bought clear car KM and days reset.",name);
				ABroadCast(COLOR_YELLOW,strings,6);
				mysql_real_escape_string(strings, stringss);
				mysql_format(SQL,str1,sizeof(str1), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
				mysql_tquery(SQL,str1,"","");
			}
			if(listitem == 5)
			{
			    if(IsPlayerInAnyVehicle(playerid))return SCM(playerid, -1, "You can't use this command if you are in a vehicle.");
				if(!CarTow(OwnedVeh(personalcar[5][playerid])))return SCM(playerid, -1, "Car is use.");
				ShowPlayerDialog(playerid, DIALOG_UNSTUCK6, DIALOG_STYLE_MSGBOX,"Unstuck Vehicle", "Are You Sure ?\nYour vehicle will be teleported to a parking lot in Las Venturas!", "Ok", "Cancel");
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_UNSTUCK1)
	{
	    if(response)
	    {
	        new randompark = random(8);
		    if(randompark == 0)
		    {
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationx] = 1283.1655;
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationy] = -1362.8055;
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationz] = 13.1689;
			}
	        else if(randompark == 1)
		    {
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationx] = 1283.2477;
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationy] = -1354.8217;
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationz] = 13.1909;
			}
			else if(randompark == 2)
		    {
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationx] = 1283.5618;
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationy] = -1346.5452;
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationz] = 13.1976;
			}
			else if(randompark == 3)
		    {
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationx] = 1282.6537;
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationy] = -1338.4841;
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationz] = 13.1909;
			}
			else if(randompark == 4)
		    {
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationx] = 1283.1270;
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationy] = -1330.3479;
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationz] = 13.1868;
			}
			else if(randompark == 5)
		    {
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationx] = 1283.0571;
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationy] = -1322.0959;
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationz] = 13.1847;
			}
			else if(randompark == 6)
		    {
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationx] = 1283.0668;
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationy] = -1314.3004;
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationz] = 13.1838;
			}
			else if(randompark == 7)
		    {
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationx] = 1283.2388;
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationy] = -1306.2563;
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationz] = 13.1836;
			}
			else if(randompark == 8)
		    {
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationx] = 1282.5757;
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationy] = -1298.1475;
		        CarInfo[OwnedVeh(personalcar[0][playerid])][cLocationz] = 13.1688;
			}

	        vUpdate(OwnedVeh(personalcar[0][playerid]), cLocationxx);
	        vUpdate(OwnedVeh(personalcar[0][playerid]), cLocationyx);
	        vUpdate(OwnedVeh(personalcar[0][playerid]), cLocationzx);

	        new car = personalcar[0][playerid],car2 = PlayerInfo[playerid][pPcarkey];
            ImpundCar(car, car2, playerid);
	    }
	}
	if(dialogid == DIALOG_UNSTUCK2)
	{
	    if(response)
	    {
            new randompark = random(8);
		    if(randompark == 0)
		    {
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationx] = 1283.1655;
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationy] = -1362.8055;
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationz] = 13.1689;
			}
	        else if(randompark == 1)
		    {
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationx] = 1283.2477;
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationy] = -1354.8217;
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationz] = 13.1909;
			}
			else if(randompark == 2)
		    {
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationx] = 1283.5618;
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationy] = -1346.5452;
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationz] = 13.1976;
			}
			else if(randompark == 3)
		    {
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationx] = 1282.6537;
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationy] = -1338.4841;
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationz] = 13.1909;
			}
			else if(randompark == 4)
		    {
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationx] = 1283.1270;
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationy] = -1330.3479;
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationz] = 13.1868;
			}
			else if(randompark == 5)
		    {
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationx] = 1283.0571;
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationy] = -1322.0959;
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationz] = 13.1847;
			}
			else if(randompark == 6)
		    {
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationx] = 1283.0668;
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationy] = -1314.3004;
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationz] = 13.1838;
			}
			else if(randompark == 7)
		    {
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationx] = 1283.2388;
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationy] = -1306.2563;
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationz] = 13.1836;
			}
			else if(randompark == 8)
		    {
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationx] = 1282.5757;
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationy] = -1298.1475;
		        CarInfo[OwnedVeh(personalcar[1][playerid])][cLocationz] = 13.1688;
			}


	        vUpdate(OwnedVeh(personalcar[1][playerid]), cLocationxx);
	        vUpdate(OwnedVeh(personalcar[1][playerid]), cLocationyx);
	        vUpdate(OwnedVeh(personalcar[1][playerid]), cLocationzx);

	        new car = personalcar[1][playerid],car2 = PlayerInfo[playerid][pmotokey];
            ImpundCar(car, car2, playerid);
	    }
	}
	if(dialogid == DIALOG_UNSTUCK3)
	{
	    if(response)
	    {
            new randompark = random(8);
		    if(randompark == 0)
		    {
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationx] = 1283.1655;
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationy] = -1362.8055;
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationz] = 13.1689;
			}
	        else if(randompark == 1)
		    {
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationx] = 1283.2477;
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationy] = -1354.8217;
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationz] = 13.1909;
			}
			else if(randompark == 2)
		    {
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationx] = 1283.5618;
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationy] = -1346.5452;
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationz] = 13.1976;
			}
			else if(randompark == 3)
		    {
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationx] = 1282.6537;
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationy] = -1338.4841;
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationz] = 13.1909;
			}
			else if(randompark == 4)
		    {
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationx] = 1283.1270;
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationy] = -1330.3479;
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationz] = 13.1868;
			}
			else if(randompark == 5)
		    {
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationx] = 1283.0571;
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationy] = -1322.0959;
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationz] = 13.1847;
			}
			else if(randompark == 6)
		    {
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationx] = 1283.0668;
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationy] = -1314.3004;
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationz] = 13.1838;
			}
			else if(randompark == 7)
		    {
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationx] = 1283.2388;
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationy] = -1306.2563;
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationz] = 13.1836;
			}
			else if(randompark == 8)
		    {
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationx] = 1282.5757;
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationy] = -1298.1475;
		        CarInfo[OwnedVeh(personalcar[2][playerid])][cLocationz] = 13.1688;
			}


	        vUpdate(OwnedVeh(personalcar[2][playerid]), cLocationxx);
	        vUpdate(OwnedVeh(personalcar[2][playerid]), cLocationyx);
	        vUpdate(OwnedVeh(personalcar[2][playerid]), cLocationzx);

	        new car = personalcar[2][playerid],car2 = PlayerInfo[playerid][pprcarkey];
            ImpundCar(car, car2, playerid);
	    }
	}
	if(dialogid == DIALOG_UNSTUCK4)
	{
	    if(response)
	    {
            new randompark = random(8);
		    if(randompark == 0)
		    {
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationx] = 1283.1655;
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationy] = -1362.8055;
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationz] = 13.1689;
			}
	        else if(randompark == 1)
		    {
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationx] = 1283.2477;
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationy] = -1354.8217;
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationz] = 13.1909;
			}
			else if(randompark == 2)
		    {
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationx] = 1283.5618;
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationy] = -1346.5452;
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationz] = 13.1976;
			}
			else if(randompark == 3)
		    {
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationx] = 1282.6537;
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationy] = -1338.4841;
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationz] = 13.1909;
			}
			else if(randompark == 4)
		    {
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationx] = 1283.1270;
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationy] = -1330.3479;
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationz] = 13.1868;
			}
			else if(randompark == 5)
		    {
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationx] = 1283.0571;
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationy] = -1322.0959;
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationz] = 13.1847;
			}
			else if(randompark == 6)
		    {
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationx] = 1283.0668;
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationy] = -1314.3004;
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationz] = 13.1838;
			}
			else if(randompark == 7)
		    {
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationx] = 1283.2388;
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationy] = -1306.2563;
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationz] = 13.1836;
			}
			else if(randompark == 8)
		    {
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationx] = 1282.5757;
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationy] = -1298.1475;
		        CarInfo[OwnedVeh(personalcar[3][playerid])][cLocationz] = 13.1688;
			}


	        vUpdate(OwnedVeh(personalcar[3][playerid]), cLocationxx);
	        vUpdate(OwnedVeh(personalcar[3][playerid]), cLocationyx);
	        vUpdate(OwnedVeh(personalcar[3][playerid]), cLocationzx);

	        new car = personalcar[3][playerid],car2 = PlayerInfo[playerid][pprcarkey2];
            ImpundCar(car, car2, playerid);
	    }
	}
	if(dialogid == DIALOG_UNSTUCK5)
	{
	    if(response)
	    {
            new randompark = random(8);
		    if(randompark == 0)
		    {
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationx] = 1283.1655;
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationy] = -1362.8055;
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationz] = 13.1689;
			}
	        else if(randompark == 1)
		    {
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationx] = 1283.2477;
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationy] = -1354.8217;
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationz] = 13.1909;
			}
			else if(randompark == 2)
		    {
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationx] = 1283.5618;
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationy] = -1346.5452;
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationz] = 13.1976;
			}
			else if(randompark == 3)
		    {
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationx] = 1282.6537;
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationy] = -1338.4841;
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationz] = 13.1909;
			}
			else if(randompark == 4)
		    {
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationx] = 1283.1270;
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationy] = -1330.3479;
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationz] = 13.1868;
			}
			else if(randompark == 5)
		    {
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationx] = 1283.0571;
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationy] = -1322.0959;
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationz] = 13.1847;
			}
			else if(randompark == 6)
		    {
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationx] = 1283.0668;
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationy] = -1314.3004;
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationz] = 13.1838;
			}
			else if(randompark == 7)
		    {
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationx] = 1283.2388;
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationy] = -1306.2563;
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationz] = 13.1836;
			}
			else if(randompark == 8)
		    {
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationx] = 1282.5757;
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationy] = -1298.1475;
		        CarInfo[OwnedVeh(personalcar[4][playerid])][cLocationz] = 13.1688;
			}


	        vUpdate(OwnedVeh(personalcar[4][playerid]), cLocationxx);
	        vUpdate(OwnedVeh(personalcar[4][playerid]), cLocationyx);
	        vUpdate(OwnedVeh(personalcar[4][playerid]), cLocationzx);

	        new car = personalcar[4][playerid],car2 = PlayerInfo[playerid][pPPluscarkey];
            ImpundCar(car, car2, playerid);
	    }
	}
	if(dialogid == DIALOG_UNSTUCK6)
	{
	    if(response)
	    {
            new randompark = random(8);
		    if(randompark == 0)
		    {
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationx] = 1283.1655;
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationy] = -1362.8055;
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationz] = 13.1689;
			}
	        else if(randompark == 1)
		    {
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationx] = 1283.2477;
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationy] = -1354.8217;
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationz] = 13.1909;
			}
			else if(randompark == 2)
		    {
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationx] = 1283.5618;
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationy] = -1346.5452;
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationz] = 13.1976;
			}
			else if(randompark == 3)
		    {
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationx] = 1282.6537;
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationy] = -1338.4841;
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationz] = 13.1909;
			}
			else if(randompark == 4)
		    {
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationx] = 1283.1270;
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationy] = -1330.3479;
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationz] = 13.1868;
			}
			else if(randompark == 5)
		    {
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationx] = 1283.0571;
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationy] = -1322.0959;
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationz] = 13.1847;
			}
			else if(randompark == 6)
		    {
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationx] = 1283.0668;
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationy] = -1314.3004;
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationz] = 13.1838;
			}
			else if(randompark == 7)
		    {
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationx] = 1283.2388;
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationy] = -1306.2563;
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationz] = 13.1836;
			}
			else if(randompark == 8)
		    {
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationx] = 1282.5757;
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationy] = -1298.1475;
		        CarInfo[OwnedVeh(personalcar[5][playerid])][cLocationz] = 13.1688;
			}


	        vUpdate(OwnedVeh(personalcar[5][playerid]), cLocationxx);
	        vUpdate(OwnedVeh(personalcar[5][playerid]), cLocationyx);
	        vUpdate(OwnedVeh(personalcar[5][playerid]), cLocationzx);

	        new car = personalcar[5][playerid],car2 = PlayerInfo[playerid][pPPluscarkey2];
            ImpundCar(car, car2, playerid);
	    }
	}
	if(dialogid == DIALOG_INSURANCEBUY)
	{
	    if(response)
	    {
	        new carid = OwnedVeh(personalcar[(Selected2[playerid]-1)][playerid]),inscarpricee = CarInfo[carid][cInscarprice];
	        CarInfo[carid][cInsurancecar] += 1;
        	format(string, sizeof(string), "{FFFFCC}Car insurance purchased for $%s.", FormatNumber(inscarpricee));
        	SCM(playerid, COLOR_WHITE, string);
        	GivePlayerCash(playerid, - inscarpricee);
			Update(playerid, pCashx);
			vUpdate(carid,cInsurancecarx);
			Selected2[playerid] = 0;
		}
		return 1;
	}
	if(dialogid == DIALOG_MATERIALS)
	{
	    if(response)
	    {
	    	if(listitem == 0)
			{
				if(GetPlayerCash(playerid) < 900000) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have enough cash with you.");
				PlayerInfo[playerid][pMats] += 1000000;
			    Update(playerid,pMatsx);
				SCM(playerid,COLOR_LIGHTBLUE,"You bought 1,000,000 materials for $900,000.");
				GivePlayerCash(playerid,-1000000);
				Update(playerid,pCashx);
			}
			if(listitem == 1)
			{
				if(GetPlayerCash(playerid) < 1700000) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have enough cash with you.");
			    PlayerInfo[playerid][pMats] += 2000000;
			    Update(playerid,pMatsx);
			    GivePlayerCash(playerid,-2000000);
			    Update(playerid,pCashx);
			    SCM(playerid,COLOR_LIGHTBLUE,"You bought 2,000,000 materials for $1,700,000.");
			}
		}
	    return 1;
	}
	if(dialogid == DIALOG_MUS)
	{
	    if(response)
	    {
			PlayAudioStreamForPlayersInCar(vehicleid, inputtext);
		}
	    return 1;
	}
	if(dialogid == DIALOG_YT)
	{
	    if(response)
	    {
			YoutubeStreamForPlayer(playerid, inputtext);
		}
	    return 1;
	}
	if(dialogid == DIALOG_EMAILS)
	{
	    if(response)
	    {
	        new query[256],read,message[256],result[256];
			format(query, sizeof(query), "SELECT * FROM `emails` WHERE `ID` = '%d'", EmailId[playerid][listitem]);
			new Cache: emailresult = mysql_query(SQL, query);
			for(new i, j = cache_get_row_count (); i != j; ++i)
			{
			    cache_get_field_content(i, "Message", result); format(message, sizeof(message), result);
		    	read                    = cache_get_field_content_int(i, "EmailRead");
		    	if(read > 0)
		    	{
		    	    mysql_format(SQL, query, sizeof(query), "UPDATE `emails` SET `EmailRead`='0'");
					mysql_tquery(SQL,query,"","");
				}
			}
			cache_delete(emailresult);
			PlayerInfo[playerid][pNextNotification] = 0;
			ShowPlayerDialog(playerid,DIALOG_EMAILS2,DIALOG_STYLE_MSGBOX,"Read email",message,"Back","Exit");
		}
		return 1;
	}
	if(dialogid == DIALOG_EMAILS2)
	{
	    if(response)
	    {
	        new result[300],message[300],stringy[5000],read,message2[40],finalmessage[40],query[500],emailid,idd=0;
	    	format(query, sizeof(query), "SELECT * FROM `emails` WHERE `playerid` = '%d' ORDER BY `ID` DESC LIMIT 10", PlayerInfo[playerid][pSQLID]);
			new Cache: emailresult = mysql_query(SQL, query);
			for(new i, j = cache_get_row_count (); i != j; ++i)
			{
		    	cache_get_field_content(i, "Message", result); format(message, sizeof(message), result);
		    	read                    = cache_get_field_content_int(i, "EmailRead");
		    	emailid                 = cache_get_field_content_int(i, "ID");
		    	EmailId[playerid][idd] = emailid;
		    	idd++;
		    	if(strlen(message) > 28)
		    	{
		    		strmid(message2, message, 0, 29, sizeof(message2));
      				format(finalmessage,sizeof(finalmessage), "%s...",message2);
				}
		   	 	if(read > 0)
		    	{
		    		format(stringy, sizeof(stringy), "%s[NEW]%s\n", stringy, finalmessage);
				}
				else
				{
			    	format(stringy, sizeof(stringy), "%s%s\n", stringy, finalmessage);
				}
			}
			cache_delete(emailresult);
       	 	ShowPlayerDialog(playerid,DIALOG_EMAILS,DIALOG_STYLE_LIST,"Emails",stringy,"Read","Exit");
		}
	}
	if(dialogid == DIALOG_NOSTOCK)
	{
	    if(response)
	    {
	        hidePlayerDialog(playerid);
	        BuyCar[playerid] = 0;
 		}
 		return 1;
	}
	if(dialogid == DIALOG_CARBUY5)
	{
	    if(response)
		{
		    new num = BuyCar[playerid];
		    if(GetPlayerCash(playerid) >= Stock[num][vPrice])
		    {
		        if(Stock[num][vStock] > 0)
		        {
		    		InsertCar(playerid,1,num);
				}
				else
				{
				    new stringg[MAX_STRING];
				    format(stringg,sizeof(stringg),"This car is no longer available in the Dealership. Sold out.\nYou can't buy this vehicle from the dealership. Out of stock.");
			 		ShowPlayerDialog(playerid, DIALOG_NOSTOCK, DIALOG_STYLE_MSGBOX, "Out of stock", stringg, "Close","");
				}
			}
			else return SendClientMessage(playerid, COLOR_GREY, "You don't have enough money to purchase this vehicle.");
		}
		return 1;
	}
	if(dialogid == DIALOG_CARBUY2)
	{
	    if(response)
	    {
	    	new num = listitem + 1;
    		BuyCar[playerid] = num;
			new string33[256], stringtitle[256];
			format(stringtitle, sizeof(stringtitle), "%s ($%s) - %s available", Stock[num][vName], FormatNumber(Stock[num][vPrice]), FormatNumber(Stock[num][vStock]));
			format(string33, sizeof(string33), "Vehicle name: %s\nVehicle price: %s\nNumber of cars available: %s\nTop speed: %s km/h", Stock[num][vName], FormatNumber(Stock[num][vPrice]), FormatNumber(Stock[num][vStock]), FormatNumber(Stock[num][vSpeed]));
			ShowPlayerDialog(playerid, DIALOG_CARBUY5, DIALOG_STYLE_MSGBOX, stringtitle, string33, "Buy car", "Back");
	    }
	    return 1;
	}
	if(dialogid == DIALOG_CARBUY3)
	{
	    if(response)
	    {
	        new cheapcars;
	        for(new xf = 0; xf < MAX_PERSONAL_CARS; xf++)
			{
			    if(Stock[xf][vPrice] > 0 && Stock[xf][vPrice] <= 7000000)
			    {
			        cheapcars = xf;
				}
			}
	    	new num = listitem + cheapcars + 1;
 	    	BuyCar[playerid] = num;
			new string33[256], stringtitle[256];
			format(stringtitle, sizeof(stringtitle), "%s ($%s) - %s available", Stock[num][vName], FormatNumber(Stock[num][vPrice]), FormatNumber(Stock[num][vStock]));
			format(string33, sizeof(string33), "Vehicle name: %s\nVehicle price: %s\nNumber of cars available: %s\nTop speed: %s km/h", Stock[num][vName], FormatNumber(Stock[num][vPrice]), FormatNumber(Stock[num][vStock]), FormatNumber(Stock[num][vSpeed]));
			ShowPlayerDialog(playerid, DIALOG_CARBUY5, DIALOG_STYLE_MSGBOX, stringtitle, string33, "Buy car", "Back");
		}
		return 1;
	}
	if(dialogid == DIALOG_CARBUY4)
	{
	    if(response)
        {
	    	new regcheapcars;
	    	for(new xf = 0; xf < MAX_PERSONAL_CARS; xf++)
			{
			    if(Stock[xf][vPrice] > 7000000 && Stock[xf][vPrice] <= 19999999)
			    {
       				regcheapcars = xf;
				}
			}
			new num = listitem + regcheapcars + 1;
   			BuyCar[playerid] = num;
			new string33[256], stringtitle[256];
			format(stringtitle, sizeof(stringtitle), "%s ($%s) - %s available", Stock[num][vName], FormatNumber(Stock[num][vPrice]), FormatNumber(Stock[num][vStock]));
			format(string33, sizeof(string33), "Vehicle name: %s\nVehicle price: %s\nNumber of cars available: %s\nTop speed: %s km/h", Stock[num][vName], FormatNumber(Stock[num][vPrice]), FormatNumber(Stock[num][vStock]), FormatNumber(Stock[num][vSpeed]));
			ShowPlayerDialog(playerid, DIALOG_CARBUY5, DIALOG_STYLE_MSGBOX, stringtitle, string33, "Buy car", "Back");
		}
		return 1;
	}
	if(dialogid == DIALOG_CARBUY)
	{
	    if(response)
	    {
	    	if(listitem == 0)
			{
			    new stringzz[MAX_STRING],stringy[MAX_STRING];
				for(new xf = 0; xf < MAX_PERSONAL_CARS; xf++)
				{
				    if(Stock[xf][vPrice] > 0 && Stock[xf][vPrice] <= 7000000)
				    {
						format(stringy, sizeof(stringy), "%s ($%d) - %d in stock\n", Stock[xf][vName], Stock[xf][vPrice], Stock[xf][vStock]);
  						strcat(stringzz,stringy);
					}
				}
			    ShowPlayerDialog(playerid, DIALOG_CARBUY2, DIALOG_STYLE_LIST, "Buy a car", stringzz, "Select", "Close");
			}
	    	if(listitem == 1)
			{
				new stringzz[MAX_STRING],stringy[MAX_STRING];
				for(new xf = 0; xf < MAX_PERSONAL_CARS; xf++)
				{
				    if(Stock[xf][vPrice] > 7000000 && Stock[xf][vPrice] <= 19999999)
				    {
						format(stringy, sizeof(stringy), "%s ($%d) - %d in stock\n", Stock[xf][vName], Stock[xf][vPrice], Stock[xf][vStock]);
  						strcat(stringzz,stringy);
					}
				}
			    ShowPlayerDialog(playerid, DIALOG_CARBUY3, DIALOG_STYLE_LIST, "Buy a car", stringzz, "Select", "Close");
			}
	    	if(listitem == 2)
			{
				new stringzz[MAX_STRING],stringy[MAX_STRING];
				for(new xf = 0; xf < MAX_PERSONAL_CARS; xf++)
				{
				    if(Stock[xf][vPrice] >= 20000000 && Stock[xf][vPrice] < 200000000)
				    {
						format(stringy, sizeof(stringy), "%s ($%d) - %d in stock\n", Stock[xf][vName], Stock[xf][vPrice], Stock[xf][vStock]);
  						strcat(stringzz,stringy);
					}
				}
			    ShowPlayerDialog(playerid, DIALOG_CARBUY4, DIALOG_STYLE_LIST, "Buy a car", stringzz, "Select", "Close");
			}
			if(listitem == 3)
			{
				new string2[MAX_STRING];
				format(string2,sizeof(string2),"Sparrow - 230 premium points\nHotring Racer - 250 premium points\nVortex - 250 premium points\nHotring Racer A - 250 premium points\nHotring Racer B - 250 premium points\nMaverick - 300 premium points");
			    ShowPlayerDialog(playerid, DIALOG_CARBUY8, DIALOG_STYLE_LIST, "Buy a car", string2, "Select", "Close");
			}
	    }
	    return 1;
	}
	/*if(dialogid == DIALOG_CARBUY8)
	{
	    if(response)
        {
	    	if(listitem == 0)
			{
			    if(PlayerInfo[playerid][pPremiumPoints] < 230) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have 230 premium points.");
			    PlayerInfo[playerid][pPremiumPoints] -= 230;
			    Update(playerid,pPremiumPointsx);
			    InsertPCar(playerid,469,Stock[95][vPrice],"Sparrow",1);
			}
			if(listitem == 1)
			{
			    if(PlayerInfo[playerid][pPremiumPoints] < 250) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have 250 premium points.");
			    PlayerInfo[playerid][pPremiumPoints] -= 250;
			    Update(playerid,pPremiumPointsx);
			    InsertPCar(playerid,494,Stock[96][vPrice],"Hotring Racer",1);
			}
			if(listitem == 2)
			{
			    if(PlayerInfo[playerid][pPremiumPoints] < 250) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have 250 premium points.");
			    PlayerInfo[playerid][pPremiumPoints] -= 250;
			    Update(playerid,pPremiumPointsx);
			    InsertPCar(playerid,539,Stock[97][vPrice],"Vortex",1);
			}
			if(listitem == 3)
			{
			    if(PlayerInfo[playerid][pPremiumPoints] < 250) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have 250 premium points.");
			    PlayerInfo[playerid][pPremiumPoints] -= 250;
			    Update(playerid,pPremiumPointsx);
			    InsertPCar(playerid,502,Stock[98][vPrice],"Hotring Racer A",1);
			}
			if(listitem == 4)
			{
			    if(PlayerInfo[playerid][pPremiumPoints] < 250) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have 250 premium points.");
			    PlayerInfo[playerid][pPremiumPoints] -= 250;
			    Update(playerid,pPremiumPointsx);
			    InsertPCar(playerid,503,Stock[99][vPrice],"Hotring Racer B",1);
			}
			if(listitem == 5)
			{
			    if(PlayerInfo[playerid][pPremiumPoints] < 300) return SCM(playerid,COLOR_WHITE,"{FFB870}You don't have 300 premium points.");
			    PlayerInfo[playerid][pPremiumPoints] -= 300;
			    Update(playerid,pPremiumPointsx);
			    InsertPCar(playerid,487,Stock[100][vPrice],"Maverick",1);
			}
		}
		return 1;
	}*/
	if(dialogid == DIALOG_CARDAMAGE)
	{
	    if(response)
        {
        	new carid = GetPlayerVehicleID(playerid);
			if(carid == 0) return SCM(playerid,COLOR_WHITE,"You are not in vehicle.");
   			new inscarp = CarInfo[OwnedVeh(carid)][cInscarprice];
			for(new v=0; v<MAX_PVEHS; v++)
			{
				if(carid == personalcar[v][playerid])
        		{
         			if (CarInfo[OwnedVeh(carid)][cInsurancecar] == 0)
  	        		{
         				if(GetPlayerCash(playerid) >= inscarp)
     			    	{
     		    			CarInfo[OwnedVeh(carid)][cInsurancecar] = 1;
      		    			GivePlayerCash(playerid, - inscarp);
       		    			Update(playerid,pCashx);
							vUpdate(OwnedVeh(carid),cInsurancecarx);
							return 1;
 						}
     					else
        				{
      	    				SendClientMessage(playerid, COLOR_WHITE, "{FFB870}** You don't have enough cash with you.");
         	    			RemovePlayerFromVehicle(playerid);
						}
 					}
     			}
       			else
         		{
          			SendClientMessage(playerid, COLOR_WHITE, "{FFB870}** This isn't your car.");
            		RemovePlayerFromVehicle(playerid);
				}
			}
		}
		else return RemovePlayerFromVehicle(playerid);
		return 1;
    }
    if(dialogid == DIALOG_PLATE)
    {
        if(response)
        {
	        new idcar = GetPlayerVehicleID(playerid);
	        if(idcar == 0) return SCM(playerid,COLOR_WHITE,"{FFB870}You are not in vehicle.");
            SetVehicleNumberPlate(idcar,inputtext);
			new plate[25];
            mysql_real_escape_string(inputtext, plate);
            strmid(CarInfo[OwnedVeh(idcar)][cLicense], plate, 0, strlen(plate), 999);
       	    GivePlayerCash(playerid, - 15000);
            GameTextForPlayer(playerid, "~r~-15000", 5000, 1);
            SendClientMessage(playerid, COLOR_WHITE, "You have successfully changed your pleasure from the car, to appear on the car respawn it and it will appear to you.");
			Update(playerid, pCashx);
			vUpdate(OwnedVeh(idcar),cLicensex);
		}
		return 1;
    }
    if(dialogid == DIALOG_CARSELL)
	{
	    if(response)
	    {
			new idcar = GetPlayerVehicleID(playerid);
			new engine,lights,alarm,doors,bonnet,boot,objective;
	    	if(IsPlayerInVehicle(playerid,CarID[playerid]))
	    	{
				if(GetPlayerVehicleID(playerid) == CarID[playerid])
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					if(strcmp(PlayerInfo[playerid][pNormalName], CarInfo[OwnedVeh(CarID[playerid])][cOwner], true) == 0)
					{
						if(PlayerInfo[playerid][pPcarkey] == OwnedVeh(CarID[playerid]))
						{
					   		PlayerInfo[playerid][pPcarkey] = 0;
					   		Update(playerid,pPcarkeyx);
						}
						else if(PlayerInfo[playerid][pmotokey] == OwnedVeh(CarID[playerid]))
						{
					   		PlayerInfo[playerid][pmotokey] = 0;
					   		Update(playerid,pmotokeyx);
						}
						else if(PlayerInfo[playerid][pprcarkey2] == OwnedVeh(CarID[playerid]))
						{
					   		PlayerInfo[playerid][pprcarkey2] = 0;
					   		Update(playerid,pprcarkey2x);
						}
						else if(PlayerInfo[playerid][pPPluscarkey] == OwnedVeh(CarID[playerid]))
						{
					   		PlayerInfo[playerid][pPPluscarkey] = 0;
					   		Update(playerid,pPPluscarkeyx);
						}
						else if(PlayerInfo[playerid][pPPluscarkey2] == OwnedVeh(CarID[playerid]))
						{
					   		PlayerInfo[playerid][pPPluscarkey2] = 0;
					   		Update(playerid,pPPluscarkey2x);
						}
						else if(PlayerInfo[playerid][pprcarkey] == OwnedVeh(CarID[playerid]))
						{
					   		PlayerInfo[playerid][pprcarkey] = 0;
					   		Update(playerid,pprcarkeyx);
						}
						vehEngine[idcar] = 0;
		    			GetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,boot,objective);
		      	    	SetVehicleParamsEx(idcar,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
		      	    	DestroyNeon(playerid, CarID[playerid]);
						CarInfo[OwnedVeh(CarID[playerid])][cNeon] = 0;
						vUpdate(OwnedVeh(CarID[playerid]), cNeonx);
		      	    	DestryVipTextVehicle(OwnedVeh(CarID[playerid]), playerid);
	                	SetPVarInt(playerid, "Engine", 0);
						CarInfo[OwnedVeh(CarID[playerid])][cID] = -2;
					   	CarInfo[OwnedVeh(CarID[playerid])][cOwned] = 0;
					   	CarInfo[OwnedVeh(CarID[playerid])][cSell] = 2;
					   	CarInfo[OwnedVeh(CarID[playerid])][cVIP] = 0;
					   	strmid(CarInfo[OwnedVeh(CarID[playerid])][cOwner], "Dealership", 0, strlen("Dealership"), 999);
					   	vUpdate(OwnedVeh(CarID[playerid]),cOwnedx);
					   	vUpdate(OwnedVeh(CarID[playerid]),cOwnerx);
					   	vUpdate(OwnedVeh(CarID[playerid]),cSellx);
					   	vUpdate(OwnedVeh(CarID[playerid]), cVIPx);
					   	DestroyVehicle(CarID[playerid]);
		               	TogglePlayerControllable(playerid, 1);
		 	        	new cashveh = floatround(floatmul(CarInfo[OwnedVeh(CarID[playerid])][cValue],0.60),floatround_ceil);
		 	        	GivePlayerCash(playerid, cashveh);
		  	        	format(string, sizeof(string), "{5CAD5C}* You have sold your car for $%s to state.",FormatNumber(cashveh));
						SendClientMessage(playerid, COLOR_WHITE, string);
						Update(playerid,pCashx);
						OwnedVeh(CarID[playerid]) = 0;
						CarID[playerid] = -1;
						new vvv = GetPlayerVehicleID(playerid);
						if(vvv == personalcar[0][playerid])
						    personalcar[0][playerid] = 0;
                        else if(vvv == personalcar[1][playerid])
						    personalcar[1][playerid] = 0;
                        else if(vvv == personalcar[2][playerid])
						    personalcar[2][playerid] = 0;
                        else if(vvv == personalcar[3][playerid])
						    personalcar[3][playerid] = 0;
                        else if(vvv == personalcar[4][playerid])
						    personalcar[4][playerid] = 0;
                        else if(vvv == personalcar[5][playerid])
						    personalcar[5][playerid] = 0;
					}
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}This is not your car.");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You have to sit at your own car to sell it.");
		}
		return 1;
	}
	if(dialogid == DIALOG_JOBS)
	{
		if(response)
	    {
	    	if(listitem == 0)
			{
				SetPlayerCheckpoint(playerid,607.8375,-1438.1827,14.0654,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			}
	    	if(listitem == 1)
			{
				SetPlayerCheckpoint(playerid,2165.3982,-1674.2762,15.0813,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			}
	    	if(listitem == 2)
			{
				SetPlayerCheckpoint(playerid,2122.9814,-1789.0095,13.5547,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			}
	    	if(listitem == 3)
			{
				SetPlayerCheckpoint(playerid,1448.7821,-2286.4836,13.5469,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			}
	    	if(listitem == 4)
			{
				SetPlayerCheckpoint(playerid,911.4478,-1232.7585,16.9852,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			}
	    	if(listitem == 5)
			{
				SetPlayerCheckpoint(playerid,1365.8931,-1289.0779,13.5469,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			}
	    	if(listitem == 6)
			{
				SetPlayerCheckpoint(playerid,2503.0581,2778.7229,10.8203,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			}
	    	if(listitem == 7)
			{
				SetPlayerCheckpoint(playerid,391.7160,-2064.2075,7.8359,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			}
	    	if(listitem == 8)
			{
				SetPlayerCheckpoint(playerid,-77.5034,-1136.4935,1.0781,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			}
	    	if(listitem == 9)
			{
				SetPlayerCheckpoint(playerid,-382.8333,-1426.0831,26.2830,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			}
			if(listitem == 10)
			{
				SetPlayerCheckpoint(playerid,2850.9663,891.8728,10.7500,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			}
			if(listitem == 11)
			{
				SetPlayerCheckpoint(playerid,816.7682,856.4895,12.7891,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			}
			if(listitem == 12)
			{
				SetPlayerCheckpoint(playerid,710.4517,1207.7200,13.8481,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_QUITCLAN)
	{
		if(response)
		{
			new szMessage[256],str1[300];
			if(PlayerInfo[playerid][pCRank] != 7)
			{
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(szMessage, sizeof(szMessage), "%s has left the clan (quit clan).", sendername);
				SendToClan(PlayerInfo[playerid][pClan], COLOR_YELLOW, szMessage);
				format(szMessage,sizeof(szMessage), "You have left the %s.",ClanInfo[PlayerInfo[playerid][pClan]][cClanName]);
				SendClientMessage(playerid,COLOR_WHITE,szMessage);
				format(string, sizeof(string), "%s", PlayerInfo[playerid][pNormalName]);
				format(str1,sizeof(str1),"{%s}[CLAN] %s left the clan (using /quitgroup).", ClanInfo[PlayerInfo[playerid][pClan]][cClanColor], sendername);
				SendToClan(PlayerInfo[playerid][pClan], COLOR_WHITE, str1);
				SetPlayerName(playerid,string);
				PlayerInfo[playerid][pClan] = 0;
				PlayerInfo[playerid][pCRank] = 0;
				PlayerInfo[playerid][pCWarns] = 0;
				mysql_format(SQL, str1, sizeof(str1), "UPDATE users SET `CRank`='0',`Clan`='0',`ClanJoin`='0',`ClanTime`='0',`ClanTag`='0',`ClanWarns`='0' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str1,"","");
				mysql_format(SQL, str1, sizeof(str1), "SELECT * FROM `clans`");
				mysql_tquery(SQL, str1, "LoadClanInfo", "");
			}
			else
			{
				new idd,query[256];
				format(query, sizeof(query), "SELECT id FROM `users` WHERE `Clan` = '%d' AND `CRank` < '7'", PlayerInfo[playerid][pClan]);
				new Cache: masta = mysql_query(SQL, query);
				if(cache_get_row_count() >= 1)
				{
					for(new i, j = cache_get_row_count (); i != j; ++i)
					{
						idd = cache_get_field_content_int(i, "id");
						mysql_format(SQL, str1, sizeof(str1), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','Ai fost dat afara din clan deoarece liderul l-a parasit.')",idd);
						mysql_tquery(SQL,str1,"","");
					}
				}
				cache_delete(masta);
				mysql_format(SQL, str1, sizeof(str1), "UPDATE users SET `CRank`='0',`Clan`='0',`ClanJoin`='0',`ClanTime`='0',`ClanTag`='0',`ClanWarns`='0' WHERE `Clan`='%d'",PlayerInfo[playerid][pClan]);
				mysql_tquery(SQL,str1,"","");
				mysql_format(SQL, str1, sizeof(str1), "UPDATE `clans` SET `clanName`='None',`clanTag`='[NONE]',`clanMOTD`='Expired',`clanActive`='0' WHERE `clanID`='%d'",PlayerInfo[playerid][pClan]);
				mysql_tquery(SQL,str1,"","");
				foreach(Player, i)
				{
					if(PlayerInfo[i][pClan] == PlayerInfo[playerid][pClan])
					{
						format(string, 256, "%s", PlayerInfo[i][pNormalName]);
						SetPlayerName(i,string);
						PlayerInfo[i][pClan] = 0;
						PlayerInfo[i][pCRank] = 0;
						PlayerInfo[i][pCWarns] = 0;
					}
				}
			}
		}
	}
	if(dialogid == DIALOG_QUITGROUP)
	{
		if(response)
		{
			new query[256],id;
			if(PlayerInfo[playerid][pMember] > 0 && PlayerInfo[playerid][pLeader] > 0)
			{
 				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "You Left Faction %s (rank %d) After %d Days | You Recieved 50 FP",NameOfFactions(PlayerInfo[playerid][pMember]), PlayerInfo[playerid][pRank], PlayerInfo[playerid][pFactionTime]);
		     	mysql_format(SQL, query, sizeof(query), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[id][pSQLID],string);
                mysql_tquery(SQL,query,"","");
                new string2[500];
				format(string2, sizeof(string2), "%s left faction %s (rank %d) after %d days using /quitgroup, with 50 FP.", sendername,DynamicFactions[PlayerInfo[playerid][pMember]][fName],PlayerInfo[playerid][pRank],PlayerInfo[playerid][pFactionTime]);
				mysql_format(SQL, query, sizeof(query), "INSERT INTO faction_logs (`text`,`player`,`leader`) VALUES ('%s','%d','0')", string2,PlayerInfo[playerid][pSQLID]);
				mysql_tquery(SQL,query,"","");
				format(string,sizeof(string),"%s left faction %s (rank %d) after %d days using /quitgroup, WITH 50 FP.",sendername,DynamicFactions[PlayerInfo[playerid][pMember]][fName],PlayerInfo[playerid][pRank],PlayerInfo[playerid][pFactionTime]);
				SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_GENANNOUNCE, string);
				gTeam[playerid] = 3;
				PlayerInfo[playerid][pTeam] = 3;
				PlayerInfo[playerid][pMember] = 0;
				PlayerInfo[playerid][pRank] = 0;
				PlayerInfo[playerid][pLeader] = 0;
				PlayerInfo[playerid][pFACWarns] = 0;
				PlayerInfo[playerid][pFpunish] = 50;
				PlayerInfo[playerid][pFactionTime] = 0;
				PlayerInfo[playerid][pModel] = 47;
				PlayerInfo[playerid][pCommands] = 0;
				Update(playerid,pCommandsx);
				new str[256];
                mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='0' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
   	            mysql_tquery(SQL,str,"","");
				tazer[playerid] = 0;
				OnDuty[playerid] = 0;
				SetPlayerArmourEx(playerid, 0);
				SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
				SpawnPlayer(playerid);
				mysql_format(SQL,query,sizeof(query),"UPDATE users SET `Team`='3',`Member`='0',`Leader`='0',`Rank`='0',`Model`='250',`FPunish`='50',`FWarn`='0', `FactionTime`='0',`FactionJoin`='0' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,query,"","");
			}
			if(PlayerInfo[playerid][pMember] > 0 && PlayerInfo[playerid][pLeader] < 1)
			{
				format(query, 256, "SELECT * FROM `users` WHERE `Member` = '%d' AND `Rank` = '7'", PlayerInfo[playerid][pMember]);
				new Cache: masta = mysql_query(SQL, query);
				if(cache_get_row_count() >= 1)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "You Left The Faction %s (rank %d) After %d Days | You Recieve 20 FP",NameOfFactions(PlayerInfo[playerid][pMember]), PlayerInfo[playerid][pRank], PlayerInfo[playerid][pFactionTime]);
		     	    mysql_format(SQL, query, sizeof(query), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[id][pSQLID],string);
                    mysql_tquery(SQL,query,"","");
                    new string2[500];
					format(string2, sizeof(string2), "%s left faction %s (rank %d) after %d days using /quitgroup, with 20 FP.", sendername,DynamicFactions[PlayerInfo[playerid][pMember]][fName],PlayerInfo[playerid][pRank],PlayerInfo[playerid][pFactionTime]);
					mysql_format(SQL, query, sizeof(query), "INSERT INTO faction_logs (`text`,`player`,`leader`) VALUES ('%s','%d','0')", string2,PlayerInfo[playerid][pSQLID]);
					mysql_tquery(SQL,query,"","");
					format(string,sizeof(string),"%s left faction %s (rank %d) after %d days using /quitgroup, WITH 20 FP.",sendername,DynamicFactions[PlayerInfo[playerid][pMember]][fName],PlayerInfo[playerid][pRank],PlayerInfo[playerid][pFactionTime]);
					SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_GENANNOUNCE, string);
					gTeam[playerid] = 3;
					PlayerInfo[playerid][pTeam] = 3;
					PlayerInfo[playerid][pMember] = 0;
					PlayerInfo[playerid][pRank] = 0;
					PlayerInfo[playerid][pLeader] = 0;
					PlayerInfo[playerid][pFACWarns] = 0;
					PlayerInfo[playerid][pFpunish] = 20;
					PlayerInfo[playerid][pFactionTime] = 0;
					PlayerInfo[playerid][pModel] = 47;
					PlayerInfo[playerid][pCommands] = 0;
					Update(playerid,pCommandsx);
					new str[256];
                    mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='0' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
   	                mysql_tquery(SQL,str,"","");
					tazer[playerid] = 0;
					OnDuty[playerid] = 0;
					SetPlayerArmourEx(playerid, 0);
					SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
					SpawnPlayer(playerid);
					mysql_format(SQL,query,sizeof(query),"UPDATE users SET `Team`='3',`Member`='0',`Leader`='0',`Rank`='0',`Model`='250',`FPunish`='20',`FWarn`='0', `FactionTime`='0',`FactionJoin`='0' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,query,"","");
				}
				else
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Ai parasit factiunea din care faceai parte %s (rank %d) dupa %d zile. You Have'nt primit FP, deoarece factiunea nu are lider",NameOfFactions(PlayerInfo[playerid][pMember]), PlayerInfo[playerid][pRank], PlayerInfo[playerid][pFactionTime]);
		     	    mysql_format(SQL, query, sizeof(query), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[id][pSQLID],string);
                    mysql_tquery(SQL,query,"","");
                    new string2[500];
					format(string2, sizeof(string2), "%s left faction %s (rank %d) after %d days using /quitgroup, without FP. The faction had no leader when he/she left.", sendername,DynamicFactions[PlayerInfo[playerid][pMember]][fName],PlayerInfo[playerid][pRank],PlayerInfo[playerid][pFactionTime]);
					mysql_format(SQL, query, sizeof(query), "INSERT INTO faction_logs (`text`,`player`,`leader`) VALUES ('%s','%d','0')", string2,PlayerInfo[playerid][pSQLID]);
					mysql_tquery(SQL,query,"","");
					format(string,sizeof(string),"%s left faction %s (rank %d) after %d days using /quitgroup, without FP.",sendername,DynamicFactions[PlayerInfo[playerid][pMember]][fName],PlayerInfo[playerid][pRank],PlayerInfo[playerid][pFactionTime]);
					SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_GENANNOUNCE, string);
					gTeam[playerid] = 3;
					PlayerInfo[playerid][pTeam] = 3;
					PlayerInfo[playerid][pMember] = 0;
					PlayerInfo[playerid][pRank] = 0;
					PlayerInfo[playerid][pLeader] = 0;
					PlayerInfo[playerid][pFACWarns] = 0;
					PlayerInfo[playerid][pFpunish] = 0;
					PlayerInfo[playerid][pFactionTime] = 0;
					PlayerInfo[playerid][pModel] = 47;
					PlayerInfo[playerid][pCommands] = 0;
					Update(playerid,pCommandsx);
					new str[256];
                    mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='0' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
   	                mysql_tquery(SQL,str,"","");
					tazer[playerid] = 0;
					OnDuty[playerid] = 0;
					SetPlayerArmourEx(playerid, 0);
					SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
					SpawnPlayer(playerid);
					mysql_format(SQL,query,sizeof(query),"UPDATE users SET `Team`='3',`Member`='0',`Leader`='0',`Rank`='0',`Model`='250',`FPunish`='0',`FWarn`='0', `FactionTime`='0',`FactionJoin`='0' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,query,"","");
				}
				cache_delete(masta);
			}
		}
	}
	if(dialogid == DIALOG_FRIENDS)
	{
		if(response)
		{
			if(listitem == 0)
			{
				ShowPlayerDialog(playerid, DIALOG_ADDFRIENDS, DIALOG_STYLE_INPUT, "Add friend", "Type ID of the player you want to add as a friend:", "Add Friend", "Exit");
			}
			if(listitem > 0)
			{
				new query[256],name[30],result[30],idd,status,title[50];
				format(query, sizeof(query), "SELECT name, id, Status FROM `users` WHERE `id`='%d'",Selected[playerid][listitem]);
				new Cache: membresult = mysql_query(SQL,query);
				for(new i, j = cache_get_row_count (); i != j; ++i)
				{
					cache_get_field_content(i, "name", result); format(name, 30, result);
					idd = cache_get_field_content_int(i, "id");
					status = cache_get_field_content_int(i, "Status");
					Selected2[playerid] = idd;
					if(status > 0)
					{
						format(title, sizeof(title), "[online] %s", name);
					}
					else if(status == 0)
					{
						format(title, sizeof(title), "[offline] %s", name);
					}
				}
				cache_delete(membresult);
				ShowPlayerDialog(playerid, DIALOG_FRIENDS2, DIALOG_STYLE_LIST, title, "Remove Friend\nView phone number", "Select", "Exit");
			}
		}
	}
	if(dialogid == DIALOG_FRIENDS2)
	{
		if(response)
		{
			if(listitem == 0)
			{
				new str1[200];
				mysql_format(SQL,str1, sizeof(str1), "DELETE FROM `friends` WHERE `FriendID`='%d'", Selected2[playerid]);
	       		mysql_tquery(SQL,str1,"","");
				SendClientMessage(playerid, COLOR_YELLOW, "Friend removed.");
			}
			if(listitem == 1)
			{
				new phone,query[256],name[30],result[30],strings[128];
				format(query, sizeof(query), "SELECT name, PhoneNr FROM `users` WHERE `id`='%d'",Selected2[playerid]);
				new Cache: membresult = mysql_query(SQL,query);
				for(new i, j = cache_get_row_count (); i != j; ++i)
				{
					phone = cache_get_field_content_int(i, "PhoneNr");
					cache_get_field_content(i, "name", result); format(name, 30, result);
					if(phone != 0)
					{
						format(strings, sizeof(strings), "Name: {CECECE}%s {FFFFFF}| Number: {CECECE}%d",name,phone);
					}
					else
					{
						format(strings, sizeof(strings), "Name: {CECECE}%s {FFFFFF}| Number: {CECECE}None",name,phone);
					}
					SendClientMessage(playerid, COLOR_WHITE, strings);
				}
				cache_delete(membresult);
			}
		}
	}
	if(dialogid == DIALOG_ADDFRIENDS)
	{
		if(response)
		{
			new text[50];
			mysql_real_escape_string(inputtext, text);
			if(IsNumeric(text))
			{
				new str1[256],id = strval(text);
				if(id == playerid) return SendClientMessage(playerid, COLOR_WHITE, "You can not add yourself to your friends list.");
				format(str1, sizeof(str1), "SELECT * FROM `friends` WHERE `FriendID`='%d' AND `PlayerID`='%d'",PlayerInfo[id][pSQLID],PlayerInfo[playerid][pSQLID]);
				new Cache: membresult = mysql_query(SQL,str1);
				if(cache_get_row_count () > 0)
				{
					SendClientMessage(playerid, COLOR_WHITE, "That player is already in your friends list.");
					return 1;
				}
				cache_delete(membresult);
				mysql_format(SQL, str1, sizeof(str1), "INSERT INTO `friends` (`PlayerID`,`FriendID`,`FriendName`) VALUES('%d','%d','%s')",PlayerInfo[playerid][pSQLID],PlayerInfo[id][pSQLID],PlayerInfo[id][pNormalName]);
				mysql_tquery(SQL,str1,"","");
				SendClientMessage(playerid, COLOR_YELLOW, "Friend added!");
			}
			else if(!IsNumeric(text))
			{
				new find = 0;
				foreach(Player, i)
				{
					if(IsPlayerConnected(i))
					{
						if(find == 0)
						{
							new name[30],str1[256];
							GetPlayerName(i, name, sizeof(name));
							if(strfind(name, text) != -1)
							{
								find = 1;
								if(i == playerid) return SendClientMessage(playerid, COLOR_WHITE, "You can not add yourself to your friends list.");
								format(str1, sizeof(str1), "SELECT * FROM `friends` WHERE `FriendID`='%d' AND `PlayerID`='%d'",PlayerInfo[i][pSQLID],PlayerInfo[playerid][pSQLID]);
								new Cache: membresult = mysql_query(SQL,str1);
								if(cache_get_row_count () > 0)
								{
									SendClientMessage(playerid, COLOR_WHITE, "That player is already in your friends list.");
									return 1;
								}
								cache_delete(membresult);
								mysql_format(SQL, str1, sizeof(str1), "INSERT INTO `friends` (`PlayerID`,`FriendID`,`FriendName`) VALUES('%d','%d','%s')",PlayerInfo[playerid][pSQLID],PlayerInfo[i][pSQLID],PlayerInfo[i][pNormalName]);
								mysql_tquery(SQL,str1,"","");
								SendClientMessage(playerid, COLOR_YELLOW, "Friend Added !");
							}
						}
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "ID invalid | You can only add players who are online to your friends list.");
				}
				if(find == 0)
				{
					SendClientMessage(playerid, COLOR_WHITE, "ID invalid | You can only add players who are online to your friends list.");
				}
			}
		}
	}
	if(dialogid == DIALOG_MEMBERS)
	{
		if(response)
		{
			if(listitem >= 0)
			{
				if(PlayerInfo[playerid][pRank] >= 6)
				{
					new name[30],result[30],query[300],test[5],strings[300];
					format(query, sizeof(query), "SELECT * FROM `users` WHERE `id`='%d'",Selected[playerid][listitem]);
					new Cache: membresult = mysql_query(SQL,query);
					for(new i, j = cache_get_row_count (); i != j; ++i)
					{
						cache_get_field_content(i, "name", result); format(name, 30, result);
						cache_get_field_content(i, "Rank", result); format(test, 5, result);
					}
					cache_delete(membresult);
					Selected2[playerid] = Selected[playerid][listitem];
					format(strings, sizeof(strings),"%s - %s",test,name);
					ShowPlayerDialog(playerid, DIALOG_MEMBERS2, DIALOG_STYLE_LIST, strings, "Change Rank\nFaction Warn\nClear FW\nUninvite - 20 FP\nUninvite - 0 FP\nVizualizare Raport\nReset Raport", "OK", "Exit");
				}
			}
		}
	}
	if(dialogid == DIALOG_MEMBERS2)
	{
		if(response)
		{
			if(listitem == 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Usage: /changerank <id> <rank>");
			}
			if(listitem == 1)
			{
				new string1[256],rank;
				if(PlayerInfo[playerid][pSQLID] == Selected2[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "You can not give yourself FW.");
				foreach(Player, i)
				{
					if(PlayerInfo[i][pSQLID] == Selected2[playerid])
					{
						if(PlayerInfo[playerid][pRank] == 6 && PlayerInfo[i][pRank] == 7 || PlayerInfo[playerid][pRank] == 6 && PlayerInfo[i][pRank] == 6) return SendClientMessage(playerid, COLOR_WHITE, "You can not give FW to a 6-7 member.");
					}
				}
				format(string1, sizeof(string1), "SELECT * FROM `users` WHERE `id`='%d'",Selected2[playerid]);
				new Cache: membresult = mysql_query(SQL,string1);
				for(new i, j = cache_get_row_count (); i != j; ++i)
				{
					rank = cache_get_field_content_int(i, "Rank");
				}
				cache_delete(membresult);
				if(PlayerInfo[playerid][pRank] == 6 && rank == 6 || PlayerInfo[playerid][pRank] == 6 && rank == 7) return SendClientMessage(playerid, COLOR_WHITE, "You can not give FW to a 6-7 member.");
				ShowPlayerDialog(playerid, DIALOG_FWARN, DIALOG_STYLE_MSGBOX, "Are You Sure ?", "Are you sure you want to give that FW to that member?", "Yeah", "No");
			}
			if(listitem == 2)
			{
				new string1[256],rank;
				if(PlayerInfo[playerid][pSQLID] == Selected2[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "You can not give yourself clear FW.");
				foreach(Player, i)
				{
					if(PlayerInfo[i][pSQLID] == Selected2[playerid])
					{
						if(PlayerInfo[playerid][pRank] == 6 && PlayerInfo[i][pRank] == 7 || PlayerInfo[playerid][pRank] == 6 && PlayerInfo[i][pRank] == 6) return SendClientMessage(playerid, COLOR_WHITE, "You can not give FW to a 6-7 member.");
					}
				}
				format(string1, sizeof(string1), "SELECT * FROM `users` WHERE `id`='%d'",Selected2[playerid]);
				new Cache: membresult = mysql_query(SQL,string1);
				for(new i, j = cache_get_row_count (); i != j; ++i)
				{
					rank = cache_get_field_content_int(i, "Rank");
				}
				cache_delete(membresult);
				if(PlayerInfo[playerid][pRank] == 6 && rank == 6 || PlayerInfo[playerid][pRank] == 6 && rank == 7) return SendClientMessage(playerid, COLOR_WHITE, "You can not give FW to a 6-7 member.");
				ShowPlayerDialog(playerid, DIALOG_FUNWARN, DIALOG_STYLE_MSGBOX, "Are You Sure ?", "Are you sure you want to delete the FW of that member?", "Yeah", "No");
			}
			if(listitem == 3)
			{
				if(PlayerInfo[playerid][pSQLID] == Selected2[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "You can not give yourself uninvited.");
				foreach(Player, i)
				{
					if(PlayerInfo[i][pSQLID] == Selected2[playerid])
					{
						if(PlayerInfo[playerid][pRank] == 6 && PlayerInfo[i][pRank] == 7 || PlayerInfo[playerid][pRank] == 6 && PlayerInfo[i][pRank] == 6) return SendClientMessage(playerid, COLOR_WHITE, "You can not give FW to a 6-7 member.");
					}
				}
				new stringtotal[500],string1[256],ftime,result[30],name[30],rank;
				format(string1, sizeof(string1), "SELECT * FROM `users` WHERE `id`='%d'",Selected2[playerid]);
				new Cache: membresult = mysql_query(SQL,string1);
				for(new i, j = cache_get_row_count (); i != j; ++i)
				{
					ftime = cache_get_field_content_int(i, "FactionTime");
					cache_get_field_content(i, "name", result); format(name, 30, result);
					rank = cache_get_field_content_int(i, "Rank");
				}
				cache_delete(membresult);
				if(PlayerInfo[playerid][pRank] == 6 && rank == 6 || PlayerInfo[playerid][pRank] == 6 && rank == 7) return SendClientMessage(playerid, COLOR_WHITE, "You can not give FW to a 6-7 member.");
				format(string1, sizeof(string1),"You're UnInviting %s With 20 FP.\nThat Player Have %d Days In Faction\nType A Reason :",name,ftime);
				format(stringtotal, sizeof(stringtotal),"Players over 14 days will be kicked out without FP unless they violate the rules of the faction\n%s",string1);
				ShowPlayerDialog(playerid, DIALOG_FPUNINVITE, DIALOG_STYLE_INPUT, "Uninvite - 20 FP", stringtotal, "Uninvite", "Exit");
			}
			if(listitem == 4)
			{
				if(PlayerInfo[playerid][pSQLID] == Selected2[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "You can not give yourself uninvited.");
				foreach(Player, i)
				{
					if(PlayerInfo[i][pSQLID] == Selected2[playerid])
					{
						if(PlayerInfo[playerid][pRank] == 6 && PlayerInfo[i][pRank] == 7 || PlayerInfo[playerid][pRank] == 6 && PlayerInfo[i][pRank] == 6) return SendClientMessage(playerid, COLOR_WHITE, "You can not give FW to a 6-7 member.");
					}
				}
				new stringtotal[500],string1[256],ftime,result[30],name[30],rank;
				format(string1, sizeof(string1), "SELECT * FROM `users` WHERE `id`='%d'",Selected2[playerid]);
				new Cache: membresult = mysql_query(SQL,string1);
				for(new i, j = cache_get_row_count (); i != j; ++i)
				{
					ftime = cache_get_field_content_int(i, "FactionTime");
					cache_get_field_content(i, "name", result); format(name, 30, result);
					rank = cache_get_field_content_int(i, "Rank");
				}
				cache_delete(membresult);
				if(PlayerInfo[playerid][pRank] == 6 && rank == 6 || PlayerInfo[playerid][pRank] == 6 && rank == 7) return SendClientMessage(playerid, COLOR_WHITE, "You can not give FW to a 6-7 member.");
				format(string1, sizeof(string1),"You Are UnInviting %s WhitOut FP\nHe/She Have %d Days In Faction\nType A Reason :",name,ftime);
				format(stringtotal, sizeof(stringtotal),"Careful!!! Players who have under 14 days in the faction will be kicked out with FP, unless a owner tells you that it's ok to give uninvites without FP.\n%s",string1);
				ShowPlayerDialog(playerid, DIALOG_NOUNINVITE, DIALOG_STYLE_INPUT, "Uninvite - 0 FP", stringtotal, "Uninvite", "Exit");
			}
			if(listitem == 5)
			{
		        new string1[256], string2[256];
    	        GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string1, sizeof(string1), "{FFFFFF}Member Raport {FF0000}%s{FFFFFF} From Faction {FF0000}%s{FFFFFF} (rank {FF0000}%d{FFFFFF}) Is {FF0000}%d/15",sendername,NameOfFactions(PlayerInfo[playerid][pMember]),PlayerInfo[playerid][pRank],PlayerInfo[playerid][pCommands]);
				format(string2, sizeof(string2), "%s",string1);
                ShowPlayerDialog(playerid, DIALOG_COLORID, DIALOG_STYLE_MSGBOX, "Member Raport:", string2, "Close","");
			}
			if(listitem == 6)
			{
				new stringtotal[500],string1[256],result[30],name[30];
				format(string1, sizeof(string1), "SELECT * FROM `users` WHERE `id`='%d'",Selected2[playerid]);
				new Cache: membresult = mysql_query(SQL,string1);
				for(new i, j = cache_get_row_count (); i != j; ++i)
				{
					cache_get_field_content(i, "name", result); format(name, 30, result);
				}
				cache_delete(membresult);
				format(string1, sizeof(string1),"You're Reseting Raports Of%s.\nReports Is %d/15 \nType A Reason :",name,PlayerInfo[playerid][pCommands]);
				format(stringtotal, sizeof(stringtotal),"Careful!!! Players who do not have the full report will be sanctioned with FW, unless a owner tells you that it's ok not to be sanctioned with FW.\n%s",string1);
				ShowPlayerDialog(playerid, DIALOG_COMMANDS, DIALOG_STYLE_INPUT, "Reset Raport", stringtotal, "Reset", "Exit");
			}
		}
	}
	if(dialogid == DIALOG_FPUNINVITE)
	{
		if(response)
		{
			new id,string1[300],result[30],name[30],rank,ftime,reason[128],idd;
			format(string1, sizeof(string1), "SELECT * FROM `users` WHERE `id`='%d'",Selected2[playerid]);
			new Cache: membresult = mysql_query(SQL,string1);
			for(new i, j = cache_get_row_count (); i != j; ++i)
			{
				cache_get_field_content(i, "name", result); format(name, 30, result);
				ftime = cache_get_field_content_int(i, "FactionTime");
				rank = cache_get_field_content_int(i, "Rank");
				idd = cache_get_field_content_int(i, "id");
			}
			cache_delete(membresult);
			mysql_real_escape_string(inputtext, reason);
			new string2[500],query[500];
			format(string, sizeof(string), "You Were Kicked %s From Faction %s (rank %d) After %d Days With 20 FP | Reason : %s.",sendername,NameOfFactions(PlayerInfo[id][pMember]),PlayerInfo[id][pRank],PlayerInfo[id][pFactionTime],reason);
			mysql_format(SQL, query, sizeof(query), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[id][pSQLID],string);
            mysql_tquery(SQL,query,"","");
			format(string2, sizeof(string2), "%s was uninvited by %s from faction %s (rank %d) after %d days, with 20 FP. Reason: %s.", name,PlayerInfo[playerid][pNormalName],DynamicFactions[PlayerInfo[playerid][pMember]][fName],rank,ftime,reason);
			mysql_format(SQL, query, sizeof(query), "INSERT INTO faction_logs (`text`,`player`,`leader`) VALUES ('%s','%d','%d')", string2, idd, PlayerInfo[playerid][pSQLID]);
			mysql_tquery(SQL,query,"","");
			mysql_format(SQL,string1,sizeof(string1),"UPDATE users SET `Team`='3',`Member`='0',`Leader`='0',`Rank`='0',`Model`='250',`FPunish`='20',`FWarn`='0',`FactionTime`='0',`FactionJoin`='0' WHERE `id`='%d'",Selected2[playerid]);
			mysql_tquery(SQL,string1,"","");
			foreach(Player, i)
			{
				if(PlayerInfo[i][pSQLID] == Selected2[playerid])
				{
					gTeam[i] = 3;
					PlayerInfo[i][pTeam] = 3;
					PlayerInfo[i][pMember] = 0;
					PlayerInfo[i][pRank] = 0;
      				PlayerInfo[i][pLeader] = 0;
					PlayerInfo[i][pFACWarns] = 0;
					PlayerInfo[i][pFpunish] = 20;
					PlayerInfo[i][pFactionTime] = 0;
					PlayerInfo[i][pModel] = 250;
					PlayerInfo[playerid][pCommands] = 0;
					Update(playerid,pCommandsx);
					new str[256];
                    mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='0' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
   	                mysql_tquery(SQL,str,"","");
					SetPlayerArmourEx(i, 0);
					tazer[i] = 0;
					OnDuty[i] = 0;
					SetPlayerSkin(i,PlayerInfo[i][pModel]);
					SpawnPlayer(i);
				}
			}
			format(string1, sizeof(string1),"%s was uninvited by %s from faction %s (rank %d) after %d days, with 20 FP. Reason: %s",name,PlayerInfo[playerid][pNormalName],DynamicFactions[PlayerInfo[playerid][pMember]][fName],rank,ftime,reason);
            Factionlog(PlayerInfo[playerid][pMember],idd,PlayerInfo[playerid][pSQLID],string1);
			SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_GENANNOUNCE, string1);
		}
		return 1;
	}
	if(dialogid == DIALOG_NOUNINVITE)
	{
		if(response)
		{
			new id,string1[300],result[30],name[30],rank,ftime,reason[128],idd;
			format(string1, sizeof(string1), "SELECT * FROM `users` WHERE `id`='%d'",Selected2[playerid]);
			new Cache: membresult = mysql_query(SQL,string1);
			for(new i, j = cache_get_row_count (); i != j; ++i)
			{
				cache_get_field_content(i, "name", result); format(name, 30, result);
				ftime = cache_get_field_content_int(i, "FactionTime");
				rank = cache_get_field_content_int(i, "Rank");
				idd = cache_get_field_content_int(i, "id");
			}
			cache_delete(membresult);
			mysql_real_escape_string(inputtext, reason);
			new string2[500],query[500];
			format(string, sizeof(string), "You Were Kicked %s From Faction %s (rank %d) After %d Days WithOut FP | Reason : %s.",sendername,NameOfFactions(PlayerInfo[id][pMember]),PlayerInfo[id][pRank],PlayerInfo[id][pFactionTime],reason);
			mysql_format(SQL, query, sizeof(query), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[id][pSQLID],string);
            mysql_tquery(SQL,query,"","");
			format(string2, sizeof(string2), "%s was uninvited by %s from faction %s (rank %d) after %d days, without FP. Reason: %s.", name,PlayerInfo[playerid][pNormalName],DynamicFactions[PlayerInfo[playerid][pMember]][fName],rank,ftime,reason);
			mysql_format(SQL, query, sizeof(query), "INSERT INTO faction_logs (`text`,`player`,`leader`) VALUES ('%s','%d','%d')", string2, idd, PlayerInfo[playerid][pSQLID]);
			mysql_tquery(SQL,query,"","");
			mysql_format(SQL,string1,sizeof(string1),"UPDATE users SET `Team`='3',`Member`='0',`Leader`='0',`Rank`='0',`Model`='250',`FPunish`='0',`FWarn`='0',`FactionTime`='0',`FactionJoin`='0' WHERE `id`='%d'",Selected2[playerid]);
			mysql_tquery(SQL,string1,"","");
			foreach(Player, i)
			{
				if(PlayerInfo[i][pSQLID] == Selected2[playerid])
				{
					gTeam[i] = 3;
					PlayerInfo[i][pTeam] = 3;
					PlayerInfo[i][pMember] = 0;
					PlayerInfo[i][pRank] = 0;
      				PlayerInfo[i][pLeader] = 0;
					PlayerInfo[i][pFACWarns] = 0;
					PlayerInfo[i][pFpunish] = 0;
					PlayerInfo[i][pFactionTime] = 0;
					PlayerInfo[i][pModel] = 250;
					PlayerInfo[playerid][pCommands] = 0;
					Update(playerid,pCommandsx);
					new str[256];
                    mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='0' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
   	                mysql_tquery(SQL,str,"","");
					SetPlayerArmourEx(i, 0);
					tazer[i] = 0;
					OnDuty[i] = 0;
					SetPlayerSkin(i,PlayerInfo[i][pModel]);
					SpawnPlayer(i);
				}
			}
			format(string1, sizeof(string1),"%s was uninvited by %s from faction %s (rank %d) after %d days, without FP. Reason: %s",name,PlayerInfo[playerid][pNormalName],DynamicFactions[PlayerInfo[playerid][pMember]][fName],rank,ftime,reason);
            Factionlog(PlayerInfo[playerid][pMember],idd,PlayerInfo[playerid][pSQLID],string1);
			SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_GENANNOUNCE, string1);
		}
		return 1;
	}
	if(dialogid == DIALOG_COMMANDS)
	{
		if(response)
		{
			new str[256],stringg[128],name[30],name2[30],result[30],idd,reason[128];
			format(stringg, sizeof(stringg), "SELECT * FROM `users` WHERE `id`='%d'",Selected2[playerid]);
			new Cache: membresult = mysql_query(SQL,stringg);
			for(new i, j = cache_get_row_count (); i != j; ++i)
			{
				cache_get_field_content(i, "name", result); format(name2, 30, result);
			}
			cache_delete(membresult);
			GetPlayerName(playerid, name, sizeof(name));
			mysql_real_escape_string(inputtext, reason);
			foreach(Player, i)
			{
				if(PlayerInfo[i][pSQLID] == Selected2[playerid])
				{
                    PlayerInfo[playerid][pCommands] = 0;
                    Update(playerid,pCommandsx);
                    mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Commands`='0' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
   	                mysql_tquery(SQL,str,"","");
					format(stringg, sizeof(stringg),"%s Has Reseted Your Raports | Reason : %s",name,reason);
					SendClientMessage(i, COLOR_GENANNOUNCE, stringg);
				}
			}
			format(str,sizeof(str),"%s Has Reseted %s Raports | Reason : %s",name2,name,reason);
			Factionlog(PlayerInfo[playerid][pMember],idd,PlayerInfo[playerid][pSQLID],str);
			SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_GENANNOUNCE, str);
		}
		return 1;
	}
	if(dialogid == DIALOG_FWARN)
	{
		if(response)
		{
			new id,query[500],str[256],stringg[128],fwarn,name[30],name2[30],result[30],idd;
			format(stringg, sizeof(stringg), "SELECT * FROM `users` WHERE `id`='%d'",Selected2[playerid]);
			new Cache: membresult = mysql_query(SQL,stringg);
			for(new i, j = cache_get_row_count (); i != j; ++i)
			{
				idd = cache_get_field_content_int(i, "id");
				cache_get_field_content(i, "name", result); format(name2, 30, result);
				fwarn = cache_get_field_content_int(i, "FWarn");
			}
			cache_delete(membresult);
			if(fwarn == 2) return SendClientMessage(playerid, COLOR_WHITE, "I can give a maximum of 2 FW to a member, the 3rd FW is given a little invisible.");
			mysql_format(SQL,str,sizeof(str),"UPDATE users SET FWarn = FWarn+1 WHERE id = %d",Selected2[playerid]);
			mysql_tquery(SQL,str,"","");
			SendClientMessage(playerid, COLOR_WHITE, "This player has received FW");
			GetPlayerName(playerid, name, sizeof(name));
			foreach(Player, i)
			{
				if(PlayerInfo[i][pSQLID] == Selected2[playerid])
				{
					PlayerInfo[i][pFACWarns] += 1;
					format(stringg, sizeof(stringg),"%s Gave You A FW (faction warn).",name);
					SendClientMessage(i, COLOR_GENANNOUNCE, stringg);
					format(stringg, sizeof(stringg),"FW: %s Gave You A FW (faction warn) | Now You Have %d/3 FW.",name,(fwarn+1));
					mysql_format(SQL, query, sizeof(query), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[id][pSQLID],string);
                    mysql_tquery(SQL,query,"","");
				}
			}
			format(str,sizeof(str),"%s received a faction warn from %s. FW: %d/3.",name2,name,(fwarn+1));
			Factionlog(PlayerInfo[playerid][pMember],idd,PlayerInfo[playerid][pSQLID],str);
		}
		return 1;
	}
	if(dialogid == DIALOG_FUNWARN)
	{
		if(response)
		{
			new id,query[500],str[256],stringg[128],fwarn,name[30],name2[30],result[30],idd;
			format(stringg, sizeof(stringg), "SELECT * FROM `users` WHERE `id`='%d'",Selected2[playerid]);
			new Cache: membresult = mysql_query(SQL,stringg);
			for(new i, j = cache_get_row_count (); i != j; ++i)
			{
				idd = cache_get_field_content_int(i, "id");
				cache_get_field_content(i, "name", result); format(name2, 30, result);
				fwarn = cache_get_field_content_int(i, "FWarn");
			}
			cache_delete(membresult);
			if(fwarn == 0) return SendClientMessage(playerid, COLOR_WHITE, "That member has no FW.");
			mysql_format(SQL,str,sizeof(str),"UPDATE users SET FWarn = FWarn-1 WHERE id = %d",Selected2[playerid]);
			mysql_tquery(SQL,str,"","");
			SendClientMessage(playerid, COLOR_WHITE, "Ready! That player was pulled out of a FW.");
			GetPlayerName(playerid, name, sizeof(name));
			foreach(Player, i)
			{
				if(PlayerInfo[i][pSQLID] == Selected2[playerid])
				{
					PlayerInfo[i][pFACWarns] += 1;
					format(stringg, sizeof(stringg),"%s Gave You A FW (faction warn).",name);
					SendClientMessage(i, COLOR_GENANNOUNCE, stringg);
					format(stringg, sizeof(stringg),"FW: %s Gave You A FW (faction warn) | Now You Have %d/3 FW",name,(fwarn-1));
					mysql_format(SQL, query, sizeof(query), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[id][pSQLID],string);
                    mysql_tquery(SQL,query,"","");
				}
			}
			format(str,sizeof(str),"%s got a FW clear from %s.",name2,name);
			Factionlog(PlayerInfo[playerid][pMember],idd,PlayerInfo[playerid][pSQLID],str);
		}
		return 1;
	}
	if(dialogid == DIALOG_CURIER)
	{
		if(response)
		{
			CP[playerid] = 151515;
			if(JCurier[playerid][3] > 6) JCurier[playerid][3] = 1;
			if(JCurier[playerid][3] == 1) SetPlayerCheckpoint(playerid, 1352.3694,-1753.3938,13.4537, 4.0); // cp1
			if(JCurier[playerid][3] == 2) SetPlayerCheckpoint(playerid, 2122.4026,-1769.8047,13.4902, 4.0); // cp2
			if(JCurier[playerid][3] == 3) SetPlayerCheckpoint(playerid, 2622.3555,1130.2948,10.9141, 4.0); // cp3
			if(JCurier[playerid][3] == 4) SetPlayerCheckpoint(playerid, 2185.4146,2010.0812,10.9138, 4.0); // cp4
			if(JCurier[playerid][3] == 5) SetPlayerCheckpoint(playerid, 1826.5072,-1843.0140,13.5854, 4.0); // cp5
			if(JCurier[playerid][3] == 6) SetPlayerCheckpoint(playerid, 995.9887,-915.3770,42.2735, 4.0); // cp6
		}
		else
		{
			if(JCurier[playerid][0] > 0)
			{
				JCurier[playerid][3] = 0;
				if(JCurier[playerid][1] > 0)
				{
					DisableRemoteVehicleCollisions(playerid, 0);
				}
				DestroyVehicle(JCurier[playerid][2]);
				JCurier[playerid][0] = -1;
				JCurier[playerid][1] = -1;
				JCurier[playerid][2] = -1;
				SCM(playerid, COLOR_ERROR, "Ai refuzat sa continui sa muncesti!");
				DisablePlayerCheckpoint(playerid);
			}
		}
	}
	if(dialogid == DIALOG_CLAN)
	{
			if(!response)
			{
				hidePlayerDialog(playerid);
			}
			else
			{
				if(PlayerInfo[playerid][pClan] >= 1)
				{
					switch(listitem)
					{
						case 0:
						{
							SendClientMessage(playerid, COLOR_GENANNOUNCE, "Clan help:");
							SendClientMessage(playerid, COLOR_GREY, "/clan - clan menu, /c - clan chat, /cinvite - invite member to clan, /quitclan - quit the clan");
						}
						case 1:
						{
							new aim[569],query[300],warns[5],test[5],result[300],idd,mid=1,aim2[600];
							format(query, sizeof(query), "SELECT * FROM `users` WHERE `Clan` = '%d' ORDER BY `CRank` DESC LIMIT 100",PlayerInfo[playerid][pClan]);
							new Cache: membresult = mysql_query(SQL,query);
							for(new i, j = cache_get_row_count (); i != j; ++i)
							{
								cache_get_field_content(i, "name", result); format(query, 30, result);
								cache_get_field_content(i, "CRank", result); format(test, 5, result);
								cache_get_field_content(i, "ClanWarns", result); format(warns, 5, result);
								idd = cache_get_field_content_int(i, "id");
								Selected[playerid][mid] = idd;
								format(aim, sizeof(aim), "%s[R%s] [%s/3 warns] %s\n",aim, test, warns, query);
								mid++;
							}
							cache_delete(membresult);
							format(aim2,sizeof(aim2),"{F89B0E}[+] Invite a new member\n%s",aim);
							ShowPlayerDialog(playerid, DIALOG_CLANMEMBERS, DIALOG_STYLE_LIST, "Clan Members", aim2, "Select", "Back");
						}
						case 2:
						{
							ShowPlayerDialog(playerid, DIALOG_CLANSETTINGS, DIALOG_STYLE_LIST, "Clan settings", "Clan Rank Names\nChange Clan Chat Color", "Select", "Back");
						}
						case 3:
						{
							new strings[256];
							format(strings,sizeof(strings),"Remove Clan Tag: %s\nUse Clan Tag 1: %s%s\nUse Clan Tag 2: %s%s",PlayerInfo[playerid][pNormalName],ClanInfo[PlayerInfo[playerid][pClan]][cClanTag],PlayerInfo[playerid][pNormalName],PlayerInfo[playerid][pNormalName],ClanInfo[PlayerInfo[playerid][pClan]][cClanTag]);
							ShowPlayerDialog(playerid, DIALOG_CLAN_TAG, DIALOG_STYLE_LIST, "Clan Tag",strings, "Select", "Back");
						}
					}
				}
				else
				{
					hidePlayerDialog(playerid);
				}
			}
		}
	if(dialogid == DIALOG_CLANMEMBERS)
	{
		if(response)
		{
			if(PlayerInfo[playerid][pClan] >= 1)
			{
				if(listitem == 0)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Usage: /cinvite <id>");
				}
				if(listitem > 0)
				{
					new name[30],result[30],query[300],test[5],warns[5],laston[64],clantime[5],clanjoin[64],strings[300];
					format(query, sizeof(query), "SELECT * FROM `users` WHERE `id`='%d'",Selected[playerid][listitem]);
					new Cache: membresult = mysql_query(SQL,query);
					for(new i, j = cache_get_row_count (); i != j; ++i)
					{
						cache_get_field_content(i, "name", result); format(name, 30, result);
						cache_get_field_content(i, "CRank", result); format(test, 5, result);
						cache_get_field_content(i, "ClanWarns", result); format(warns, 5, result);
						cache_get_field_content(i, "lastOn", result); format(laston, 64, result);
						cache_get_field_content(i, "ClanTime", result); format(clantime, 5, result);
						cache_get_field_content(i, "ClanJoin", result); format(clanjoin, 64, result);
					}
					cache_delete(membresult);
					Selected2[playerid] = Selected[playerid][listitem];
					format(strings,sizeof(strings),"User: %s\nRank: %s\nWarns: %s/3\nJoined: %s\nLast login: %s\nDays in clan: %s",name,test,warns,clanjoin,laston,clantime);
					if(PlayerInfo[playerid][pCRank] > 5)
					{
						ShowPlayerDialog(playerid, DIALOG_CLANMEMBERS2, DIALOG_STYLE_MSGBOX, "Manage user", strings, "Options", "Back");
					}
					else
					{
						ShowPlayerDialog(playerid, DIALOG_CLANMEMBERS2, DIALOG_STYLE_MSGBOX, "Manage user", strings, "Back", "");
					}
				}
			}
		}
		else return ShowPlayerDialog(playerid, DIALOG_CLAN, DIALOG_STYLE_LIST, "Clan", "Clan Help\nClan Members\nClan Settings\nClan Tag", "Select", "Close");
	}
	if(dialogid == DIALOG_CLANMEMBERS2)
	{
		if(response)
		{
			if(PlayerInfo[playerid][pCRank] > 5)
			{
				ShowPlayerDialog(playerid, DIALOG_CLANMEMBERS3, DIALOG_STYLE_LIST, "Manage user", "Set clan rank\nSet clan warn\nUninvite from clan", "Options", "Back");
			}
			else return ShowPlayerDialog(playerid, DIALOG_CLAN, DIALOG_STYLE_LIST, "Clan", "Clan Help\nClan Members\nClan Settings\nClan Tag", "Select", "Close");
		}
		else return ShowPlayerDialog(playerid, DIALOG_CLAN, DIALOG_STYLE_LIST, "Clan", "Clan Help\nClan Members\nClan Settings\nClan Tag", "Select", "Close");
	}
	if(dialogid == DIALOG_CLAN_WARNS)
	{
		if(response)
		{
			if(PlayerInfo[playerid][pCRank] >= 6)
			{
				if(listitem >= 0)
				{
					new name1[30],name2[30],rank,str1[300],result[30],clan = PlayerInfo[playerid][pClan],strings[128],str2[128];
					format(str1, sizeof(str1), "SELECT name, CRank FROM `users` WHERE `id`='%d'",Selected2[playerid]);
					new Cache: membresult = mysql_query(SQL,str1);
					for(new i, j = cache_get_row_count (); i != j; ++i)
					{
						cache_get_field_content(i, "name", result); format(name2, 30, result);
						rank = cache_get_field_content_int(i, "CRank");
					}
					cache_delete(membresult);
					if(rank > 5 && PlayerInfo[playerid][pCRank] < 7) return SendClientMessage(playerid, COLOR_WHITE, "Only Leader Can Give CW To Rank 5 Members");
					foreach(Player,i)
					{
						if(PlayerInfo[i][pSQLID] == Selected2[playerid])
						{
							PlayerInfo[i][pWarns] = (listitem);
						}
					}
					GetPlayerName(playerid, name1, sizeof(name1));
					format(str1,sizeof(str1),"{%s}[CLAN] %s changed %s's warn level to %d.", ClanInfo[clan][cClanColor], name1, name2, listitem);
					SendToClan(PlayerInfo[playerid][pClan], COLOR_WHITE, str1);
					mysql_format(SQL,str1, sizeof(str1), "UPDATE users SET `ClanWarns`='%d' WHERE `id`='%d'", listitem,Selected2[playerid]);
	       			mysql_tquery(SQL,str1,"","");
					format(str1, sizeof(str1), "%s changed %s's warn level to %d.",name1,name2,listitem);
					mysql_real_escape_string(str1, strings);
					mysql_format(SQL,str2,sizeof(str2),"INSERT INTO clan_logs (`action`,`clanid`) VALUES ('%s','%d')",strings,PlayerInfo[playerid][pClan]);
					mysql_tquery(SQL,str2,"","");
				}
			}
		}
		else return ShowPlayerDialog(playerid, DIALOG_CLAN, DIALOG_STYLE_LIST, "Clan", "Clan Help\nClan Members\nClan Settings\nClan Tag", "Select", "Close");
	}
	if(dialogid == DIALOG_CLAN_RANK)
	{
		if(response)
		{
			if(PlayerInfo[playerid][pCRank] == 6)
			{
				if(listitem >= 0 && listitem <= 5)
				{
					new name1[30],name2[30],rank,str1[300],result[30],clan = PlayerInfo[playerid][pClan],strings[128],str2[128];
					format(str1, sizeof(str1), "SELECT name, CRank FROM `users` WHERE `id`='%d'",Selected2[playerid]);
					new Cache: membresult = mysql_query(SQL,str1);
					for(new i, j = cache_get_row_count (); i != j; ++i)
					{
						cache_get_field_content(i, "name", result); format(name2, 30, result);
						rank = cache_get_field_content_int(i, "CRank");
					}
					cache_delete(membresult);
					if(rank > 5 && PlayerInfo[playerid][pCRank] < 7) return SendClientMessage(playerid, COLOR_WHITE, "Only Leader Can Give CW To Rank 5 Members");
					foreach(Player,i)
					{
						if(PlayerInfo[i][pSQLID] == Selected2[playerid])
						{
							PlayerInfo[i][pCRank] = (listitem+1);
						}
					}
					GetPlayerName(playerid, name1, sizeof(name1));
					format(str1,sizeof(str1),"{%s}[CLAN] %s changed %s's rank to %d.", ClanInfo[clan][cClanColor], name1, name2, (listitem+1));
					SendToClan(PlayerInfo[playerid][pClan], COLOR_WHITE, str1);
					mysql_format(SQL,str1, sizeof(str1), "UPDATE users SET `CRank`='%d' WHERE `id`='%d'", (listitem+1),Selected2[playerid]);
	       			mysql_tquery(SQL,str1,"","");
					format(str2, sizeof(str2), "%s changed %s's rank to %d.",name1,name2,(listitem+1));
					mysql_real_escape_string(str2, strings);
					mysql_format(SQL,str1,sizeof(str1),"INSERT INTO clan_logs (`action`,`clanid`) VALUES ('%s','%d')",strings,PlayerInfo[playerid][pClan]);
					mysql_tquery(SQL,str1,"","");
				}
				if(listitem > 5) return SendClientMessage(playerid, COLOR_WHITE, "Only the leader of the clan (rank 7) can rank 6 or 7.");
			}
			else if(PlayerInfo[playerid][pCRank] == 7)
			{
				if(listitem >= 0 && listitem <= 5)
				{
					new name1[30],name2[30],str1[300],result[30],clan = PlayerInfo[playerid][pClan],str2[128],strings[128];
					mysql_format(SQL,str1, sizeof(str1), "UPDATE users SET `CRank`='%d' WHERE `id`='%d'", (listitem+1),Selected2[playerid]);
	       			mysql_tquery(SQL,str1,"","");
					format(str1, sizeof(str1), "SELECT name FROM `users` WHERE `id`='%d'",Selected2[playerid]);
					new Cache: membresult = mysql_query(SQL,str1);
					for(new i, j = cache_get_row_count (); i != j; ++i)
					{
						cache_get_field_content(i, "name", result); format(name2, 30, result);
					}
					cache_delete(membresult);
					foreach(Player,i)
					{
						if(PlayerInfo[i][pSQLID] == Selected2[playerid])
						{
							PlayerInfo[i][pCRank] = (listitem+1);
						}
					}
					GetPlayerName(playerid, name1, sizeof(name1));
					format(str1,sizeof(str1),"{%s}[CLAN] %s changed %s's rank to %d.", ClanInfo[clan][cClanColor], name1, name2, (listitem+1));
					SendToClan(PlayerInfo[playerid][pClan], COLOR_WHITE, str1);
					format(str2, sizeof(str2), "%s changed %s's rank to %d.",name1,name2,(listitem+1));
					mysql_real_escape_string(str2, strings);
					mysql_format(SQL,str1,sizeof(str1),"INSERT INTO clan_logs (`action`,`clanid`) VALUES ('%s','%d')",strings,PlayerInfo[playerid][pClan]);
					mysql_tquery(SQL,str1,"","");
				}
				if(listitem == 6)
				{
					new name1[30],name2[30],str1[300],result[30],clan = PlayerInfo[playerid][pClan],str2[128],strings[128];
					mysql_format(SQL,str1, sizeof(str1), "UPDATE users SET `CRank`='7' WHERE `id`='%d'", Selected2[playerid]);
	       			mysql_tquery(SQL,str1,"","");
					mysql_format(SQL,str1, sizeof(str1), "UPDATE users SET `CRank`='6' WHERE `id`='%d'", PlayerInfo[playerid][pSQLID]);
	       			mysql_tquery(SQL,str1,"","");
					format(str1, sizeof(str1), "SELECT name FROM `users` WHERE `id`='%d'",Selected2[playerid]);
					new Cache: membresult = mysql_query(SQL,str1);
					for(new i, j = cache_get_row_count (); i != j; ++i)
					{
						cache_get_field_content(i, "name", result); format(name2, 30, result);
					}
					cache_delete(membresult);
					foreach(Player,i)
					{
						if(PlayerInfo[i][pSQLID] == Selected2[playerid])
						{
							PlayerInfo[i][pCRank] = 7;
						}
					}
					PlayerInfo[playerid][pCRank] = 6;
					GetPlayerName(playerid, name1, sizeof(name1));
					format(str1,sizeof(str1),"{%s}[CLAN] %s changed %s's rank to 7.", ClanInfo[clan][cClanColor], name1, name2);
					SendToClan(PlayerInfo[playerid][pClan], COLOR_WHITE, str1);
					format(str2, sizeof(str2), "%s changed %s's rank to 7.",name1,name2);
					mysql_real_escape_string(str2, strings);
					mysql_format(SQL,str1,sizeof(str1),"INSERT INTO clan_logs (`action`,`clanid`) VALUES ('%s','%d')",strings,PlayerInfo[playerid][pClan]);
					mysql_tquery(SQL,str1,"","");
				}
			}
		}
		else return ShowPlayerDialog(playerid, DIALOG_CLAN, DIALOG_STYLE_LIST, "Clan", "Clan Help\nClan Members\nClan Settings\nClan Tag", "Select", "Close");
	}
	if(dialogid == DIALOG_CLANMEMBERS3)
	{
		if(response)
		{
			if(listitem == 0)
			{
				if(PlayerInfo[playerid][pCRank] == 6)
				{
					ShowPlayerDialog(playerid, DIALOG_CLAN_RANK, DIALOG_STYLE_LIST, "Set user rank", "Set rank 1\nSet rank 2\nSet rank 3\nSet rank 4\nSet rank 5", "Select", "Back");
				}
				else if(PlayerInfo[playerid][pCRank] == 7)
				{
					ShowPlayerDialog(playerid, DIALOG_CLAN_RANK, DIALOG_STYLE_LIST, "Set user rank", "Set rank 1\nSet rank 2\nSet rank 3\nSet rank 4\nSet rank 5\nSet rank 6\nSet rank 7 - you will get demoted to rank 6", "Select", "Back");
				}
			}
			if(listitem == 1)
			{
				if(PlayerInfo[playerid][pCRank] > 5)
				{
					ShowPlayerDialog(playerid, DIALOG_CLAN_WARNS, DIALOG_STYLE_LIST, "Set user warns", "Warns: 0/3\nWarns: 1/3\nWarns: 2/3", "Select", "Back");
				}
			}
			if(listitem == 2)
			{
				if(PlayerInfo[playerid][pCRank] > 5)
				{
					new str1[300],name1[30],name2[30],rank,clan = PlayerInfo[playerid][pClan],stringname[128],result[30],strings[300],str2[128];
					format(str1, sizeof(str1), "SELECT name, CRank FROM `users` WHERE `id`='%d'",Selected2[playerid]);
					new Cache: membresult = mysql_query(SQL,str1);
					for(new i, j = cache_get_row_count (); i != j; ++i)
					{
						cache_get_field_content(i, "name", result); format(name2, 30, result);
						rank = cache_get_field_content_int(i, "CRank");
					}
					cache_delete(membresult);
					if(rank > 5 && PlayerInfo[playerid][pCRank] < 7) return SendClientMessage(playerid, COLOR_WHITE, "Only leader (rank 7) can give out members with rank higher than 5.");
					foreach(Player, userID)
					{
						if(PlayerInfo[userID][pSQLID] == Selected2[playerid])
						{
							GetPlayerName(playerid, name1, sizeof(name1));
							format(str1,sizeof(str1),"{%s}[CLAN] %s left the clan (uninvited by %s).", ClanInfo[clan][cClanColor], name2, name1);
							SendClientMessage(playerid, COLOR_WHITE, str1);
							SetPlayerName(userID, PlayerInfo[userID][pNormalName]);
							format(stringname,sizeof(stringname),"%s / New Land",PlayerInfo[userID][pNormalName]);
							PlayerInfo[userID][pClan] = 0;
							PlayerInfo[userID][pCRank] = 0;
							PlayerInfo[userID][pCWarns] = 0;
						}
					}
					format(str2, sizeof(str2), "%s left the clan (uninvited by %s).",name1,name2);
					mysql_real_escape_string(str2, strings);
					mysql_format(SQL,str1,sizeof(str1),"INSERT INTO clan_logs (`action`,`clanid`) VALUES ('%s','%d')",strings,PlayerInfo[playerid][pClan]);
					mysql_tquery(SQL,str1,"","");
					GetPlayerName(playerid, name1, sizeof(name1));
					mysql_format(SQL, str1, sizeof(str1), "UPDATE users SET `CRank`='0',`Clan`='0',`ClanJoin`='0',`ClanTime`='0',`ClanTag`='0',`ClanWarns`='0' WHERE `id`='%d'", Selected2[playerid]);
					mysql_tquery(SQL,str1,"","");
					format(strings,sizeof(strings),"%s te-a dat afara din clan-ul %s.", name1, ClanInfo[PlayerInfo[playerid][pClan]][cClanName]);
					mysql_format(SQL, str1, sizeof(str1), "INSERT INTO `emails` (`playerid`,`Message`) VALUES('%d','%s')",Selected2[playerid],strings);
					mysql_tquery(SQL,str1,"","");
					format(str1,sizeof(str1),"{%s}[CLAN] %s left the clan (uninvited by %s).", ClanInfo[clan][cClanColor], name2, name1);
					SendToClan(PlayerInfo[playerid][pClan], COLOR_WHITE, str1);
				}
			}
		}
		else return ShowPlayerDialog(playerid, DIALOG_CLAN, DIALOG_STYLE_LIST, "Clan", "Clan Help\nClan Members\nClan Settings\nClan Tag", "Select", "Close");
	}
	if(dialogid == DIALOG_CLANSETTINGS)
	{
		if(response)
		{
			if(listitem == 0)
			{
				if(PlayerInfo[playerid][pCRank] > 5)
				{
					new strings[500],i = PlayerInfo[playerid][pClan];
					format(strings,sizeof(string),"Rank 1: %s\nRank 2: %s\nRank 3: %s\nRank 4: %s\nRank 5: %s\nRank 6: %s\nRank 7: %s",ClanInfo[i][cClanRankName1],ClanInfo[i][cClanRankName2],ClanInfo[i][cClanRankName3],ClanInfo[i][cClanRankName4],ClanInfo[i][cClanRankName5],ClanInfo[i][cClanRankName6],ClanInfo[i][cClanRankName7]);
					ShowPlayerDialog(playerid, DIALOG_CLAN_CHANGERANK, DIALOG_STYLE_LIST, "Change clan ranks", strings, "Change", "Back");
				}
			}
			if(listitem == 1)
			{
				if(PlayerInfo[playerid][pCRank] > 5)
				{
					new strings[500];
					format(strings,sizeof(string),"You can go to . to get html color codes\nEnter the HTML code for the clan color (default FFCC99):");
					ShowPlayerDialog(playerid, DIALOG_CLAN_COLOR, DIALOG_STYLE_INPUT, "Clan color", strings, "Change", "Back");
				}
			}
		}
		else return ShowPlayerDialog(playerid, DIALOG_CLAN, DIALOG_STYLE_LIST, "Clan", "Clan Help\nClan Members\nClan Settings\nClan Tag", "Select", "Close");
	}
	if(dialogid == DIALOG_CLAN_CHANGERANK)
	{
		if(response)
		{
			if(PlayerInfo[playerid][pCRank] > 5)
			{
				new strings[256];
				if(listitem == 0)
				{
					format(strings,sizeof(strings),"Current clan rank 1: %s\n\nSet a new clan rank:",ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName1]);
					Selected2[playerid] = 1;
				}
				if(listitem == 1)
				{
					format(strings,sizeof(strings),"Current clan rank 2: %s\n\nSet a new clan rank:",ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName2]);
					Selected2[playerid] = 2;
				}
				if(listitem == 2)
				{
					format(strings,sizeof(strings),"Current clan rank 3: %s\n\nSet a new clan rank:",ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName3]);
					Selected2[playerid] = 3;
				}
				if(listitem == 3)
				{
					format(strings,sizeof(strings),"Current clan rank 4: %s\n\nSet a new clan rank:",ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName4]);
					Selected2[playerid] = 4;
				}
				if(listitem == 4)
				{
					format(strings,sizeof(strings),"Current clan rank 5: %s\n\nSet a new clan rank:",ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName5]);
					Selected2[playerid] = 5;
				}
				if(listitem == 5)
				{
					format(strings,sizeof(strings),"Current clan rank 6: %s\n\nSet a new clan rank:",ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName6]);
					Selected2[playerid] = 6;
				}
				if(listitem == 6)
				{
					format(strings,sizeof(strings),"Current clan rank 7: %s\n\nSet a new clan rank:",ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName7]);
					Selected2[playerid] = 7;
				}
				ShowPlayerDialog(playerid, DIALOG_CLAN_CHANGERANK2, DIALOG_STYLE_INPUT, "Change clan rank", strings, "Change", "Back");
			}
		}
		else return ShowPlayerDialog(playerid, DIALOG_CLAN, DIALOG_STYLE_LIST, "Clan", "Clan Help\nClan Members\nClan Settings\nClan Tag", "Select", "Close");
	}
	if(dialogid == DIALOG_CLAN_CHANGERANK2)
	{
		if(response)
		{
			if(PlayerInfo[playerid][pCRank] > 5)
			{
				if(strlen(inputtext) < 31)
				{
					new ranktext[40],str1[300],strings[128];
					mysql_real_escape_string(inputtext, ranktext);
					if(Selected2[playerid] == 1)
					{
						strmid(ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName1], ranktext, 0, strlen(ranktext), 40);
						mysql_format(SQL,str1, sizeof(str1), "UPDATE `clans` SET `clanRankName1`='%s' WHERE `clanID`='%d'", ranktext,PlayerInfo[playerid][pClan]);
						mysql_tquery(SQL,str1,"","");
						format(strings,sizeof(strings),"{%s}Clan rank 1: %s.",ClanInfo[PlayerInfo[playerid][pClan]][cClanColor],ranktext);
					}
					else if(Selected2[playerid] == 2)
					{
						strmid(ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName2], ranktext, 0, strlen(ranktext), 40);
						mysql_format(SQL,str1, sizeof(str1), "UPDATE `clans` SET `clanRankName2`='%s' WHERE `clanID`='%d'", ranktext,PlayerInfo[playerid][pClan]);
						mysql_tquery(SQL,str1,"","");
						format(strings,sizeof(strings),"{%s}Clan rank 2: %s.",ClanInfo[PlayerInfo[playerid][pClan]][cClanColor],ranktext);
					}
					else if(Selected2[playerid] == 3)
					{
						strmid(ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName3], ranktext, 0, strlen(ranktext), 40);
						mysql_format(SQL,str1, sizeof(str1), "UPDATE `clans` SET `clanRankName3`='%s' WHERE `clanID`='%d'", ranktext,PlayerInfo[playerid][pClan]);
						mysql_tquery(SQL,str1,"","");
						format(strings,sizeof(strings),"{%s}Clan rank 3: %s.",ClanInfo[PlayerInfo[playerid][pClan]][cClanColor],ranktext);
					}
					else if(Selected2[playerid] == 4)
					{
						strmid(ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName4], ranktext, 0, strlen(ranktext), 40);
						mysql_format(SQL,str1, sizeof(str1), "UPDATE `clans` SET `clanRankName4`='%s' WHERE `clanID`='%d'", ranktext,PlayerInfo[playerid][pClan]);
						mysql_tquery(SQL,str1,"","");
						format(strings,sizeof(strings),"{%s}Clan rank 4: %s.",ClanInfo[PlayerInfo[playerid][pClan]][cClanColor],ranktext);
					}
					else if(Selected2[playerid] == 5)
					{
						strmid(ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName5], ranktext, 0, strlen(ranktext), 40);
						mysql_format(SQL,str1, sizeof(str1), "UPDATE `clans` SET `clanRankName5`='%s' WHERE `clanID`='%d'", ranktext,PlayerInfo[playerid][pClan]);
						mysql_tquery(SQL,str1,"","");
						format(strings,sizeof(strings),"{%s}Clan rank 5: %s.",ClanInfo[PlayerInfo[playerid][pClan]][cClanColor],ranktext);
					}
					else if(Selected2[playerid] == 6)
					{
						strmid(ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName6], ranktext, 0, strlen(ranktext), 40);
						mysql_format(SQL,str1, sizeof(str1), "UPDATE `clans` SET `clanRankName6`='%s' WHERE `clanID`='%d'", ranktext,PlayerInfo[playerid][pClan]);
						mysql_tquery(SQL,str1,"","");
						format(strings,sizeof(strings),"{%s}Clan rank 6: %s.",ClanInfo[PlayerInfo[playerid][pClan]][cClanColor],ranktext);
					}
					else if(Selected2[playerid] == 7)
					{
						strmid(ClanInfo[PlayerInfo[playerid][pClan]][cClanRankName7], ranktext, 0, strlen(ranktext), 40);
						mysql_format(SQL,str1, sizeof(str1), "UPDATE `clans` SET `clanRankName7`='%s' WHERE `clanID`='%d'", ranktext,PlayerInfo[playerid][pClan]);
						mysql_tquery(SQL,str1,"","");
						format(strings,sizeof(strings),"{%s}Clan rank 7: %s.",ClanInfo[PlayerInfo[playerid][pClan]][cClanColor],ranktext);
					}
					SendClientMessage(playerid, COLOR_WHITE, strings);
				}
			}
		}
		else return ShowPlayerDialog(playerid, DIALOG_CLAN, DIALOG_STYLE_LIST, "Clan", "Clan Help\nClan Members\nClan Settings\nClan Tag", "Select", "Close");
	}
	if(dialogid == DIALOG_CLAN_COLOR)
	{
		if(response)
		{
			if(PlayerInfo[playerid][pCRank] > 5)
			{
				new len = strlen(inputtext),str1[300],colortext[7],strings[128];
				if(len == 6)
				{
					for(new i=0;i<len;i++)
					{
						if((inputtext[i] >= 'A' && inputtext[i] <= 'F') || (inputtext[i] >= '0' && inputtext[i] <= '9'))
						{
							mysql_real_escape_string(inputtext, colortext);
							strmid(ClanInfo[PlayerInfo[playerid][pClan]][cClanColor], colortext, 0, strlen(colortext), 64);
							mysql_format(SQL,str1, sizeof(str1), "UPDATE `clans` SET `clanColor`='%s' WHERE `clanID`='%d'", colortext,PlayerInfo[playerid][pClan]);
							mysql_tquery(SQL,str1,"","");
							format(strings,sizeof(strings),"Clan color changed to {%s}%s{FFFFFF}.",colortext,colortext);
						}
						else return SendClientMessage(playerid, COLOR_WHITE, "Color Invalid.");
					}
					SendClientMessage(playerid, COLOR_WHITE, strings);
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "Color Invalid.");
			}
		}
		else return ShowPlayerDialog(playerid, DIALOG_CLAN, DIALOG_STYLE_LIST, "Clan", "Clan Help\nClan Members\nClan Settings\nClan Tag", "Select", "Close");
	}
	if(dialogid == DIALOG_CLAN_TAG)
	{
			if(!response)
			{
				ShowPlayerDialog(playerid, DIALOG_CLAN, DIALOG_STYLE_LIST, "Clan", "Clan Help\nClan Members\nClan Settings\nClan Tag", "Select", "Close");
			}
			else
			{
				if(PlayerInfo[playerid][pClan] >= 1)
				{
					new szName[25],str111[256],str222[256],str333[256],stringname[128],strings[128];
					switch(listitem)
					{
						case 0:
						{
							format(szName, sizeof(szName), "%s", PlayerInfo[playerid][pNormalName]);
							SetPlayerName(playerid, PlayerInfo[playerid][pNormalName]);
							PlayerInfo[playerid][pClanTag] = 0;
                            mysql_format(SQL, str111, sizeof(str111), "UPDATE users SET `ClanTag`='0' WHERE `name`='%s'", PlayerInfo[playerid][pNormalName]);
	       				 	mysql_tquery(SQL,str111,"","");
						}
						case 1:
						{
							format(szName, sizeof(szName), "%s%s", ClanInfo[PlayerInfo[playerid][pClan]][cClanTag], PlayerInfo[playerid][pNormalName]);
                            SetPlayerName(playerid, szName);
							PlayerInfo[playerid][pClanTag] = 1;
                            mysql_format(SQL,str222, sizeof(str222), "UPDATE users SET `ClanTag`='1' WHERE `name`='%s'", PlayerInfo[playerid][pNormalName]);
	       				 	mysql_tquery(SQL,str222,"","");
						}
						case 2:
						{
							format(szName, sizeof(szName), "%s%s", PlayerInfo[playerid][pNormalName], ClanInfo[PlayerInfo[playerid][pClan]][cClanTag]);
                            SetPlayerName(playerid, szName);
							PlayerInfo[playerid][pClanTag] = 2;
                            mysql_format(SQL,str333, sizeof(str333), "UPDATE users SET `ClanTag`='2' WHERE `name`='%s'", PlayerInfo[playerid][pNormalName]);
	       				 	mysql_tquery(SQL,str333,"","");
						}
					}
					format(strings,sizeof(strings),"Your nickname is now: %s",szName);
					SendClientMessage(playerid, COLOR_GENANNOUNCE, strings);
					format(stringname,sizeof(stringname),"%s / New Land",szName);
				}
				else
				{
					hidePlayerDialog(playerid);
				}
			}
		}
    if(dialogid == DIALOG_REGISTER)
	{
		if(response)
    	{
		    PlayerInfo[playerid][pLanguage] = 2;
		    SendClientMessage(playerid, COLOR_WHITE, "Language : Persian");
		    SendClientMessage(playerid, COLOR_WHITE, "[EN] To set the language to English, use /eng.");
		    SendClientMessage(playerid, COLOR_YELLOW, "Jensiate Charachtere Khod Ra Entekhab Namaiid");
		    ShowPlayerDialog(playerid,DIALOG_REGISTER2,DIALOG_STYLE_LIST,"Jensiat :","Mard\nZan","Badi >","");
		    RegistrationStep[playerid] = 2;
		    SetPlayerSkin(playerid, 250);
			new str1[512];
			mysql_format(SQL,str1,512,"UPDATE users SET `Language`='2' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
			mysql_tquery(SQL,str1,"","");
		}
		else
		{
		    PlayerInfo[playerid][pLanguage] = 1;
		    SendClientMessage(playerid, COLOR_WHITE, "Language : English");
		    SendClientMessage(playerid, COLOR_WHITE, "[FA] Baraye Taghire Zaban Az /Persian Estefade Konid");
		    SendClientMessage(playerid, COLOR_YELLOW, "Choose Your Charachter's Sex :");
		    ShowPlayerDialog(playerid,DIALOG_REGISTER2,DIALOG_STYLE_LIST,"Your Charachter's Sex :","Male\nFemale","Choose","");
		    RegistrationStep[playerid] = 2;
		    SetPlayerSkin(playerid, 216);
			new str1[512];
			mysql_format(SQL,str1,512,"UPDATE users SET `Language`='1' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
			mysql_tquery(SQL,str1,"","");
		}
		return 1;
	}
	if(dialogid == DIALOG_REGISTER2)
	{
	    if(response)
		{
		    if(listitem == 0)
			{
				PlayerInfo[playerid][pSex] = 1;
				new str1[512];
				mysql_format(SQL,str1,512,"UPDATE users SET `Sex`='1',`Model`='250'  WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str1,"","");
				RegistrationStep[playerid] = 3;
				SetPlayerSkin(playerid, 250);
				if(PlayerInfo[playerid][pLanguage] == 2)
				{
					format(string, sizeof(string), "Jensiat : Mard");
					SendClientMessage(playerid, COLOR_YELLOW, string);
					ShowPlayerDialog(playerid, DIALOG_REGISTER3, DIALOG_STYLE_INPUT, "Senn", "Senne Charachtere Khod Ra Vared Konid :", "Badi >", "");
				}
				else
				{
				    format(string, sizeof(string), "Good! Gender set to: man.");
					SendClientMessage(playerid, COLOR_YELLOW, string);
					ShowPlayerDialog(playerid, DIALOG_REGISTER3, DIALOG_STYLE_INPUT, "Character Age", "Type The Age Of Your Character :", "Ok", "");
				}
			}
			if(listitem == 1)
			{
				PlayerInfo[playerid][pSex] = 2;
				new str1[512];
				mysql_format(SQL,str1,512,"UPDATE users SET `Sex`='2',`Model`='216' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str1,"","");
				RegistrationStep[playerid] = 3;
				SetPlayerSkin(playerid, 216);
				if(PlayerInfo[playerid][pLanguage] == 2)
				{
					format(string, sizeof(string), "Sex setat: femeie.");
					SendClientMessage(playerid, COLOR_YELLOW, string);
					ShowPlayerDialog(playerid, DIALOG_REGISTER3, DIALOG_STYLE_INPUT, "Senn", "Senne Charachtere Khod Ra Vared Konid:", "Ok", "");
				}
				else
				{
				    format(string, sizeof(string), "Good! Gender set to: female.");
					SendClientMessage(playerid, COLOR_YELLOW, string);
					ShowPlayerDialog(playerid, DIALOG_REGISTER3, DIALOG_STYLE_INPUT, "Character Age", "Type The Age Of Your Character :", "Ok", "");
				}
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_REGISTER3)
	{
        if(response)
	    {
			new tmppass[64];
			mysql_real_escape_string(inputtext, tmppass);
			new age = strval(tmppass);
			if(age > 1 && age < 100 && response)
			{
				PlayerInfo[playerid][pAge] = age;
				new str1[512];
				mysql_format(SQL,str1,512,"UPDATE users SET `Age`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pAge],PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str1,"","");
				RegistrationStep[playerid] = 4;
				if(PlayerInfo[playerid][pLanguage] == 2)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Emaile Khod Ra Vared Konid Va Ruye Ok Click Konid");
					SendClientMessage(playerid, COLOR_WHITE, "Emaile Vared Shode Jahate BazGardani Passworde Faramush Shode Shoma Estefade Khahad Shod");
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Type your email. If you don't want to set your email, just click ok.");
					SendClientMessage(playerid, COLOR_WHITE, "The email will help you to recover your password, in case you loose it.");
				}
				ShowPlayerDialog(playerid, DIALOG_REGISTER4, DIALOG_STYLE_INPUT, "Email", "[EX: my_email@yahoo.com]", "Ok", "");
			}
			else
			{
				ShowPlayerDialog(playerid,DIALOG_REGISTER2,DIALOG_STYLE_INPUT,"Your age:","Please enter below the age of your character:","Ok","");
				return 1;
			}
        }
        return 1;
 	}
 	if(dialogid == DIALOG_REGISTER4)
 	{
  		new emailtext[64];
		mysql_real_escape_string(inputtext, emailtext);
		strmid(PlayerInfo[playerid][pEmail], emailtext, 0, strlen(emailtext), 64);
		if(IsMail(inputtext) && response && strlen(inputtext)<30)
 	    {
 	        if(PlayerInfo[playerid][pLanguage] == 2)
 	        {
 	        	format(string, sizeof(string), "Email : %s.", PlayerInfo[playerid][pEmail]);
 	        	SendClientMessage(playerid, COLOR_YELLOW, string);
			}
			else
			{
			    format(string, sizeof(string), "Email : %s.", PlayerInfo[playerid][pEmail]);
 	        	SendClientMessage(playerid, COLOR_YELLOW, string);
			}
 	    }
 	    else
 	    {
 	        if(PlayerInfo[playerid][pLanguage] == 2)
			{
 	        	SendClientMessage(playerid, COLOR_YELLOW, "Shoma Emaili Entekhab Nakardid | Jahate Sabte Email Be UCP.NL-GaminG.iR Morajee Namaiid");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_YELLOW, "You choosed not to set an email. You can go to ./panel/ to set an email at a later date, if you want to.");
			}
		}
		RegistrationStep[playerid] = 0;
		TutTime[playerid] = 1;
		TogglePlayerSpectating(playerid, 1);
        ShowPlayerDialog(playerid, DIALOG_SKIP, DIALOG_STYLE_MSGBOX, "Happy Game !", "Omidvarim Lahazate Shadi Ra Tajrobe Namaiid", "Quit", "");
		new connectplayer[60],stringplayer[512];
		new ipplayer[16];
		GetPlayerIp(playerid, ipplayer, sizeof(ipplayer));
 		GetPlayerName(playerid,connectplayer,sizeof(connectplayer));
		format(stringplayer,sizeof(stringplayer),"{FF3C00}[New Account]: {FFFFFF}Nick: {0091FF}%s {FFFFFF}( {0091FF}%d {FFFFFF}) {FF0000}| {FFFFFF}User: {0091FF}%d {FF0000}| {FFFFFF}Email: {0091FF}%s",connectplayer,playerid,PlayerInfo[playerid][pSQLID],ipplayer,PlayerInfo[playerid][pEmail]);
 		HLChat(COLOR_RED2,stringplayer);
  		ABroadCast(COLOR_RED2,stringplayer,1);
		foreach(Player,iss)
		{
			if(PlayerInfo[iss][pHelper] > 0 || PlayerInfo[iss][pAdmin] > 0)
			{
				KillTimer(deathdeletetime[iss]);
				SendDeathMessageToPlayer(iss, INVALID_PLAYER_ID, playerid, 200);
				deathdeletetime[iss] = SetTimerEx("DeleteDeathMessage",30000,0,"d",iss);
			}
		}
		return 1;
 	}
	if(dialogid == DIALOG_PAINTBALLWEAPON)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	            new stringg[128],sendernamee[30];
	            if(paintrs[PlayerInfo[playerid][pPaintBallG]] < 1) return SendClientMessage(playerid, COLOR_WHITE, "You can't use this command now.");
				GetPlayerName(playerid, sendernamee, sizeof(sendernamee));
				paintvoteg[PlayerInfo[playerid][pPaintBallG]][0]++;
				gunvoted[PlayerInfo[playerid][pPaintBallG]]++;
				PlayerInfo[playerid][pPaintBallVoted2] = 1;
				foreach(Player, i)
				{
				    if(PlayerInfo[i][pPaintBallG] == PlayerInfo[playerid][pPaintBallG])
				    {
						format(stringg,sizeof(stringg),"[VOTE] %s voted for the weapon set that includes the weapons deagle, m4, grenade & spray.", sendernamee);
						SendClientMessage(i, COLOR_GENANNOUNCE, stringg);
					}
				}
			}
			if(listitem == 1)
	        {
	            new stringg[128],sendernamee[30];
	            if(paintrs[PlayerInfo[playerid][pPaintBallG]] < 1) return SendClientMessage(playerid, COLOR_WHITE, "You can't use this command now.");
				GetPlayerName(playerid, sendernamee, sizeof(sendernamee));
				paintvoteg[PlayerInfo[playerid][pPaintBallG]][1]++;
				gunvoted[PlayerInfo[playerid][pPaintBallG]]++;
				PlayerInfo[playerid][pPaintBallVoted2] = 1;
				foreach(Player, i)
				{
				    if(PlayerInfo[i][pPaintBallG] == PlayerInfo[playerid][pPaintBallG])
				    {
						format(stringg,sizeof(stringg),"[VOTE] %s voted for weapon baseball bat.", sendernamee);
						SendClientMessage(i, COLOR_GENANNOUNCE, stringg);
					}
				}
			}
			if(listitem == 2)
	        {
	            new stringg[128],sendernamee[30];
	            if(paintrs[PlayerInfo[playerid][pPaintBallG]] < 1) return SendClientMessage(playerid, COLOR_WHITE, "You can't use this command now.");
				GetPlayerName(playerid, sendernamee, sizeof(sendernamee));
				paintvoteg[PlayerInfo[playerid][pPaintBallG]][2]++;
				gunvoted[PlayerInfo[playerid][pPaintBallG]]++;
				PlayerInfo[playerid][pPaintBallVoted2] = 1;
				foreach(Player, i)
				{
				    if(PlayerInfo[i][pPaintBallG] == PlayerInfo[playerid][pPaintBallG])
				    {
						format(stringg,sizeof(stringg),"[VOTE] %s voted for weapon chainsaw.", sendernamee);
						SendClientMessage(i, COLOR_GENANNOUNCE, stringg);
					}
				}
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_PAINTBALLMAP)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	            new stringg[128],sendernamee[30];
	            if(paintrs[PlayerInfo[playerid][pPaintBallG]] < 1) return 1;
				GetPlayerName(playerid, sendernamee, sizeof(sendernamee));
				paintvotem[PlayerInfo[playerid][pPaintBallG]][0]++;
				mapvoted[PlayerInfo[playerid][pPaintBallG]]++;
				PlayerInfo[playerid][pPaintBallVoted] = 1;
				foreach(Player, i)
				{
				    if(PlayerInfo[i][pPaintBallG] == PlayerInfo[playerid][pPaintBallG])
				    {
						format(stringg,sizeof(stringg),"[VOTE] %s voted for map rc_arena.", sendernamee);
						SendClientMessage(i, COLOR_GENANNOUNCE, stringg);
					}
				}
			}
			if(listitem == 1)
	        {
	            new stringg[128],sendernamee[30];
	            if(paintrs[PlayerInfo[playerid][pPaintBallG]] < 1) return 1;
				GetPlayerName(playerid, sendernamee, sizeof(sendernamee));
				paintvotem[PlayerInfo[playerid][pPaintBallG]][1]++;
				mapvoted[PlayerInfo[playerid][pPaintBallG]]++;
				PlayerInfo[playerid][pPaintBallVoted] = 1;
				foreach(Player, i)
				{
				    if(PlayerInfo[i][pPaintBallG] == PlayerInfo[playerid][pPaintBallG])
				    {
						format(stringg,sizeof(stringg),"[VOTE] %s voted for map tennis.", sendernamee);
						SendClientMessage(i, COLOR_GENANNOUNCE, stringg);
					}
				}
			}
			if(listitem == 2)
	        {
	            new stringg[128],sendernamee[30];
	            if(paintrs[PlayerInfo[playerid][pPaintBallG]] < 1) return SendClientMessage(playerid, COLOR_WHITE, "You can't use this command now.");
				GetPlayerName(playerid, sendernamee, sizeof(sendernamee));
				paintvotem[PlayerInfo[playerid][pPaintBallG]][2]++;
				mapvoted[PlayerInfo[playerid][pPaintBallG]]++;
				PlayerInfo[playerid][pPaintBallVoted] = 1;
				foreach(Player, i)
				{
				    if(PlayerInfo[i][pPaintBallG] == PlayerInfo[playerid][pPaintBallG])
				    {
						format(stringg,sizeof(stringg),"[VOTE] %s voted for map farm.", sendernamee);
						SendClientMessage(i, COLOR_GENANNOUNCE, stringg);
					}
				}
			}
			if(listitem == 3)
	        {
	            new stringg[128],sendernamee[30];
	            if(paintrs[PlayerInfo[playerid][pPaintBallG]] < 1) return SendClientMessage(playerid, COLOR_WHITE, "You can't use this command now.");
				GetPlayerName(playerid, sendernamee, sizeof(sendernamee));
				paintvotem[PlayerInfo[playerid][pPaintBallG]][3]++;
				mapvoted[PlayerInfo[playerid][pPaintBallG]]++;
				PlayerInfo[playerid][pPaintBallVoted] = 1;
				foreach(Player, i)
				{
				    if(PlayerInfo[i][pPaintBallG] == PlayerInfo[playerid][pPaintBallG])
				    {
						format(stringg,sizeof(stringg),"[VOTE] %s voted for map beach.", sendernamee);
						SendClientMessage(i, COLOR_GENANNOUNCE, stringg);
					}
				}
			}
			if(listitem == 4)
	        {
	            new stringg[128],sendernamee[30];
	            if(paintrs[PlayerInfo[playerid][pPaintBallG]] < 1) return SendClientMessage(playerid, COLOR_WHITE, "You can't use this command now.");
				GetPlayerName(playerid, sendernamee, sizeof(sendernamee));
				paintvotem[PlayerInfo[playerid][pPaintBallG]][4]++;
				mapvoted[PlayerInfo[playerid][pPaintBallG]]++;
				PlayerInfo[playerid][pPaintBallVoted] = 1;
				foreach(Player, i)
				{
				    if(PlayerInfo[i][pPaintBallG] == PlayerInfo[playerid][pPaintBallG])
				    {
						format(stringg,sizeof(stringg),"[VOTE] %s voted for map lspd.", sendernamee);
						SendClientMessage(i, COLOR_GENANNOUNCE, stringg);
					}
				}
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_PAINTBALL)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	            new stringg[128],sendernamee[30];
	            if(paintp[1] >= 20) return SendClientMessage(playerid, COLOR_LIGHTRED, "This arena is full.");
				if(OnDuty[playerid] == 1)
				{
					OnDuty[playerid] = 0;
					SetPlayerArmourEx(playerid, 0);
				}
	            PlayerInfo[playerid][pPaintBallG] = 1;
	            foreach(Player, i)
	            {
	                if(PlayerInfo[i][pPaintBallG] == PlayerInfo[playerid][pPaintBallG])
	                {
	                    GetPlayerName(playerid, sendernamee, sizeof(sendernamee));
	                    format(stringg,sizeof(stringg),"%s has joined the paintball arena.", sendernamee);
	                    SendClientMessage(i, COLOR_YELLOW, stringg);
					 }
				}
	            paintp[1]++;
	            if(paintp[1] == 1)
	            {
	                PlayerTextDrawShow(playerid, PaintBallText[playerid]);
					PlayerTextDrawSetString(playerid, PaintBallText[playerid], "~g~WAITING FOR MORE PLAYERS TO JOIN...");
   					GameTextForPlayer(playerid, "~y~NOT ENOUGH PLAYERS TO START...", 5000, 5);
				}
	            if(paintp[1] == 2)
				{
					paintrs[1] = 31;
					paintt[1] = 0;
					preparepaint1 = SetTimer("PrepareRoundPaintBall1", 1000, 1);
				}
	            SpawnPlayer(playerid);
			}
			if(listitem == 1)
	        {
	            new stringg[128],sendernamee[30];
	            if(paintp[2] >= 20) return SendClientMessage(playerid, COLOR_LIGHTRED, "This arena is full.");
                if(OnDuty[playerid] == 1)
				{
					OnDuty[playerid] = 0;
					SetPlayerArmourEx(playerid, 0);
				}
				PlayerInfo[playerid][pPaintBallG] = 2;
	            foreach(Player, i)
	            {
	                if(PlayerInfo[i][pPaintBallG] == PlayerInfo[playerid][pPaintBallG])
	                {
	                    GetPlayerName(playerid, sendernamee, sizeof(sendernamee));
	                    format(stringg,sizeof(stringg),"%s has joined the paintball arena.", sendernamee);
	                    SendClientMessage(i, COLOR_YELLOW, stringg);
					 }
				}
	            paintp[2]++;
	            if(paintp[2] == 1)
	            {
	                PlayerTextDrawShow(playerid, PaintBallText[playerid]);
					PlayerTextDrawSetString(playerid, PaintBallText[playerid], "~g~WAITING FOR MORE PLAYERS TO JOIN...");
   					GameTextForPlayer(playerid, "~y~NOT ENOUGH PLAYERS TO START...", 5000, 5);
				}
	            if(paintp[2] == 2)
				{
					paintrs[2] = 31;
					paintt[2] = 0;
					preparepaint2 = SetTimer("PrepareRoundPaintBall2", 1000, 1);
				}
	            SpawnPlayer(playerid);
			}
			if(listitem == 2)
	        {
	            new stringg[128],sendernamee[30];
	            if(paintp[3] >= 20) return SendClientMessage(playerid, COLOR_LIGHTRED, "This arena is full.");
                if(OnDuty[playerid] == 1)
				{
					OnDuty[playerid] = 0;
					SetPlayerArmourEx(playerid, 0);
				}
				PlayerInfo[playerid][pPaintBallG] = 3;
	            foreach(Player, i)
	            {
	                if(PlayerInfo[i][pPaintBallG] == PlayerInfo[playerid][pPaintBallG])
	                {
	                    GetPlayerName(playerid, sendernamee, sizeof(sendernamee));
	                    format(stringg,sizeof(stringg),"%s has joined the paintball arena.", sendernamee);
	                    SendClientMessage(i, COLOR_YELLOW, stringg);
					 }
				}
	            paintp[3]++;
	            if(paintp[3] == 1)
	            {
	                PlayerTextDrawShow(playerid, PaintBallText[playerid]);
					PlayerTextDrawSetString(playerid, PaintBallText[playerid], "~g~WAITING FOR MORE PLAYERS TO JOIN...");
   					GameTextForPlayer(playerid, "~y~NOT ENOUGH PLAYERS TO START...", 5000, 5);
				}
	            if(paintp[3] == 2)
				{
					paintrs[3] = 31;
					paintt[3] = 0;
					preparepaint3 = SetTimer("PrepareRoundPaintBall3", 1000, 1);
				}
	            SpawnPlayer(playerid);
			}
			if(listitem == 3)
	        {
	            new stringg[128],sendernamee[30];
	            if(paintp[4] >= 20) return SendClientMessage(playerid, COLOR_LIGHTRED, "This arena is full.");
                if(OnDuty[playerid] == 1)
				{
					OnDuty[playerid] = 0;
					SetPlayerArmourEx(playerid, 0);
				}
				PlayerInfo[playerid][pPaintBallG] = 4;
	            foreach(Player, i)
	            {
	                if(PlayerInfo[i][pPaintBallG] == PlayerInfo[playerid][pPaintBallG])
	                {
	                    GetPlayerName(playerid, sendernamee, sizeof(sendernamee));
	                    format(stringg,sizeof(stringg),"%s has joined the paintball arena.", sendernamee);
	                    SendClientMessage(i, COLOR_YELLOW, stringg);
					 }
				}
	            paintp[4]++;
	            if(paintp[4] == 1)
	            {
	                PlayerTextDrawShow(playerid, PaintBallText[playerid]);
					PlayerTextDrawSetString(playerid, PaintBallText[playerid], "~g~WAITING FOR MORE PLAYERS TO JOIN...");
   					GameTextForPlayer(playerid, "~y~NOT ENOUGH PLAYERS TO START...", 5000, 5);
				}
	            if(paintp[4] == 2)
				{
					paintrs[4] = 31;
					paintt[4] = 0;
					preparepaint4 = SetTimer("PrepareRoundPaintBall4", 1000, 1);
				}
	            SpawnPlayer(playerid);
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_NEWPASS)
	{
		if(response)
    	{
	 		new length = strlen(inputtext);
			if(length == 0 || length > 15)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Please enter another password (maximum 15 characters).");
				PlayerInfo[playerid][pAcces] = 1;
				ShowPlayerDialog(playerid, DIALOG_NEWPASS,DIALOG_STYLE_INPUT, "Change password:","Type in box your new password:","Done","Close");
				return 1;
			}
	        if(strlen(inputtext) > 1 && strlen(inputtext) < 16)
			{
				new tmppass[64],namee[30],playerip[16];
				mysql_real_escape_string(inputtext, tmppass);
				strmid(PlayerInfo[playerid][pKey], tmppass, 0, strlen(tmppass), 255);
				format(string,sizeof(string),"Your new password is %s.",tmppass);
				SendClientMessage(playerid, COLOR_YELLOW,string);
				GetPlayerName(playerid, namee, sizeof(namee));
				GetPlayerIp(playerid, playerip, sizeof(playerip));
				format(string,sizeof(string),"%s[user:%d] changed his password. IP: %s",namee,PlayerInfo[playerid][pSQLID],playerip);
				ABroadCast(COLOR_YELLOW, string,1);
				GetPlayerName(playerid,sendername,sizeof(sendername));
				new str2[240];
		        mysql_format(SQL, str2, sizeof(str2), "UPDATE users SET `password`='%s' WHERE `name`='%s'",PlayerInfo[playerid][pKey], PlayerInfo[playerid][pNormalName]);
		        mysql_tquery(SQL,str2,"","");
				return 1;
			}
			else
			{
			    ShowPlayerDialog(playerid, DIALOG_NEWPASS,DIALOG_STYLE_INPUT, "Change password:","Type in box your new password:","Done","Close");
				return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_TRANSFER)
	{
		if(response)
    	{
			new giveplayer[30];
			GetPlayerName(TransferOffer[playerid],giveplayer,sizeof(giveplayer));
			GetPlayerName(playerid,sendername,sizeof(sendername));
		    new cashbank = floatround(floatmul(TransferMoney[playerid],0.10),floatround_ceil);
			PlayerInfo[playerid][pAccount] -= TransferMoney[playerid]+cashbank;
			PlayerInfo[TransferOffer[playerid]][pAccount] += TransferMoney[playerid];
			if(GetPlayerVirtualWorld(playerid) == 0)
			{
				BizzInfo[1][bTill] += cashbank;
			}
			else if(GetPlayerVirtualWorld(playerid) == 1)
			{
			    BizzInfo[21][bTill] += cashbank;
			}
			else if(GetPlayerVirtualWorld(playerid) == 2)
			{
			    BizzInfo[27][bTill] += cashbank;
			}
			format(string, sizeof(string), "{52CC52}You have transferd $%s to %s's account. Tax: $%s", FormatNumber(TransferMoney[playerid]), giveplayer,FormatNumber(cashbank));
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_WHITE, string);
		    format(string, sizeof(string), "{52CC52}You have recieved $%s to into your account from %s.", FormatNumber(TransferMoney[playerid]), sendername, playerid);
			SendClientMessage(TransferOffer[playerid], COLOR_WHITE, string);
			format(string, sizeof(string), "($) %s has transferd $%s to %s.", sendername, FormatNumber(TransferMoney[playerid]), giveplayer);
			ABroadCast(COLOR_YELLOW,string,1);
			new var100[256],y,m,d,h,mi,s,string2[256],string3[256];
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string2,sizeof(string2),"[%02d-%02d-%d %02d:%02d:%02d] %s[user:%d] transfered $%s to %s[user:%d].",d,m,y,h,mi,s,sendername,PlayerInfo[playerid][pSQLID],FormatNumber(TransferMoney[playerid]),giveplayer,PlayerInfo[TransferOffer[playerid]][pSQLID]);
			mysql_real_escape_string(string2, string3);
			mysql_format(SQL, var100, sizeof(var100), "INSERT INTO playerlogs (`playerid`,`giverid`,`action`,`time`) VALUES ('%d','%d','%s','%02d-%02d-%d %02d:%02d:%02d')", PlayerInfo[TransferOffer[playerid]][pSQLID],PlayerInfo[playerid][pSQLID],string3,d,m,y,h,mi,s);
			mysql_tquery(SQL,var100,"","");
			PlayerPlaySound(TransferOffer[playerid], 1052, 0.0, 0.0, 0.0);
 	 		new str[256];
			Update(playerid, pBank);
			Update(TransferOffer[playerid], pBank);
			if(GetPlayerVirtualWorld(playerid) == 0)
			{
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='1'",BizzInfo[1][bTill]);
				mysql_tquery(SQL,str,"","");
			}
			else if(GetPlayerVirtualWorld(playerid) == 1)
			{
			    mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='21'",BizzInfo[21][bTill]);
				mysql_tquery(SQL,str,"","");
			}
			else if(GetPlayerVirtualWorld(playerid) == 2)
			{
			    mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='27'",BizzInfo[27][bTill]);
				mysql_tquery(SQL,str,"","");
			}
			new ip1[42],ip2[42];
    		GetPlayerIp(playerid,ip1,sizeof(ip1));
    		GetPlayerIp(TransferOffer[playerid],ip2,sizeof(ip2));
			TransferOffer[playerid] = 999;
			TransferMoney[playerid] = 0;
		}
		return 1;
	}
	if(dialogid == DIALOG_HQS)
	{
	    if(response)
	    {
			if(listitem == 0)
			{
				SetPlayerCheckpoint(playerid,1554.6610,-1675.6371,16.1953,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			    return 1;
			}
			if(listitem == 1)
			{
				SetPlayerCheckpoint(playerid,157.4413,1903.3003,18.6682,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			    return 1;
			}
			if(listitem == 2)
			{
				SetPlayerCheckpoint(playerid,1081.0226,-345.1430,73.9839,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			    return 1;
			}
			if(listitem == 3)
			{
				SetPlayerCheckpoint(playerid,627.1133,-572.6523,17.8707,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			    return 1;
			}
			if(listitem == 4)
			{
				SetPlayerCheckpoint(playerid,-329.2862,1536.9629,76.6117,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			    return 1;
			}
			if(listitem == 5)
			{
				SetPlayerCheckpoint(playerid,2495.2554,-1689.8365,14.6800,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			    return 1;
			}
			if(listitem == 6)
			{
				SetPlayerCheckpoint(playerid,1455.0133,750.8113,11.0234,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			    return 1;
			}
			if(listitem == 7)
			{
				SetPlayerCheckpoint(playerid,1457.4807,2772.9023,10.8203,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			    return 1;
			}
			if(listitem == 8)
			{
				SetPlayerCheckpoint(playerid,2435.5708,1671.8771,10.8203,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			    return 1;
			}
			if(listitem == 9)
			{
				SetPlayerCheckpoint(playerid,1614.92480, 1816.09631, 10.91310,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			    return 1;
			}
			if(listitem == 10)
			{
				SetPlayerCheckpoint(playerid,725.1876,-1439.7456,13.5318,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			    return 1;
			}
			if(listitem == 11)
			{
				SetPlayerCheckpoint(playerid,1752.9529,-1894.4460,13.5573,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			    return 1;
			}
			if(listitem == 12)
			{
				SetPlayerCheckpoint(playerid,2286.9487,2431.9595,10.8203,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			    return 1;
			}
			if(listitem == 13)
			{
				SetPlayerCheckpoint(playerid,1457.4807,2772.9023,10.8203,4.0);
			    CP[playerid] = 43;
			    SCM(playerid,COLOR_LIGHTBLUE,"Server Placed A CheckPoint On Map | Follow It");
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == Dialog_gunshop)
	{
	    if(response)
	    {
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        new infostring[512];
	        if(listitem == 0)
			{
				if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 0)
				{
					format(infostring, 256, "* %s bought a baseball bat.",sendername);
					ProxDetector(50.0, playerid, infostring, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 1000);
					BizzInfo[2][bTill] += 1000;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='2'",BizzInfo[2][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 5, 1);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 1)
				{
			    	format(infostring, 256, "* %s bought a baseball bat.",sendername);
					ProxDetector(30.0, playerid, infostring, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 1000);
					BizzInfo[9][bTill] += 1000;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='9'",BizzInfo[9][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 5, 1);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 2)
				{
			    	format(infostring, 256, "* %s bought a baseball bat.",sendername);
					ProxDetector(50.0, playerid, infostring, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 1000);
					BizzInfo[22][bTill] += 1000;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='22'",BizzInfo[22][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 5, 1);
				}
			}
			else if(listitem == 1)
			{
			    if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 0)
				{
					format(infostring, 256, "* %s bought a SD Pistol.",sendername);
					ProxDetector(50.0, playerid, infostring,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 2000);
					BizzInfo[2][bTill] += 2000;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='2'",BizzInfo[2][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 23, 30);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 1)
				{
			    	format(infostring, 256, "* %s bought a SD Pistol.",sendername);
					ProxDetector(50.0, playerid, infostring,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 2000);
					BizzInfo[9][bTill] += 2000;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='9'",BizzInfo[9][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 23, 30);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 2)
				{
			    	format(infostring, 256, "* %s bought a SD Pistol.",sendername);
					ProxDetector(50.0, playerid, infostring,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 2000);
					BizzInfo[22][bTill] += 2000;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='22'",BizzInfo[22][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 23, 30);
				}
			}
			else if(listitem == 2)
			{
			    if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 0)
				{
					format(infostring, 256, "* %s bought a Desert eagle.",sendername);
					ProxDetector(50.0, playerid, infostring,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 3000);
					BizzInfo[2][bTill] += 3000;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='2'",BizzInfo[2][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 24, 50);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 1)
				{
			    	format(infostring, 256, "* %s bought a Desert eagle.",sendername);
					ProxDetector(50.0, playerid, infostring,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 3000);
					BizzInfo[9][bTill] += 3000;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='9'",BizzInfo[9][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 24, 50);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 2)
				{
			    	format(infostring, 256, "* %s bought a Desert eagle.",sendername);
					ProxDetector(50.0, playerid, infostring,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 3000);
					BizzInfo[22][bTill] += 3000;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='22'",BizzInfo[22][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 24, 50);
				}
			}
			else if(listitem == 3)
			{
			    if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 0)
				{
					format(infostring, 256, "* %s bought a Shotgun.",sendername);
					ProxDetector(50.0, playerid, infostring,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 4200);
					BizzInfo[2][bTill] += 4200;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='2'",BizzInfo[2][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 25, 20);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 1)
				{
			    	format(infostring, 256, "* %s bought a Shotgun.",sendername);
					ProxDetector(50.0, playerid, infostring,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 4200);
					BizzInfo[9][bTill] += 4200;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='9'",BizzInfo[9][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 25, 20);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 2)
				{
			    	format(infostring, 256, "* %s bought a Shotgun.",sendername);
					ProxDetector(50.0, playerid, infostring,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 4200);
					BizzInfo[22][bTill] += 4200;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='22'",BizzInfo[22][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 25, 20);
				}
			}
			else if(listitem == 4)
			{
			    if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 0)
				{
					format(infostring, 256, "* %s bought a MP5.",sendername);
					ProxDetector(50.0, playerid, infostring,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 4600);
					BizzInfo[2][bTill] += 4600;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='2'",BizzInfo[2][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 29, 150);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 1)
				{
			    	format(infostring, 256, "* %s bought a MP5.",sendername);
					ProxDetector(50.0, playerid, infostring,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 4600);
					BizzInfo[9][bTill] += 4600;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='9'",BizzInfo[9][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 29, 150);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 2)
				{
			    	format(infostring, 256, "* %s bought a MP5.",sendername);
					ProxDetector(50.0, playerid, infostring,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 4600);
					BizzInfo[22][bTill] += 4600;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='22'",BizzInfo[22][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 29, 150);
				}
			}
			else if(listitem == 5)
			{
			    if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 0)
				{
					format(infostring, 256, "* %s bought a AK47.",sendername);
					ProxDetector(50.0, playerid, infostring,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 7000);
					BizzInfo[2][bTill] += 7000;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='2'",BizzInfo[2][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 30, 100);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 1)
				{
			    	format(infostring, 256, "* %s bought a AK47.",sendername);
					ProxDetector(50.0, playerid, infostring,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 7000);
					BizzInfo[9][bTill] += 7000;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='9'",BizzInfo[9][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 30, 100);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 2)
				{
			    	format(infostring, 256, "* %s bought a AK47.",sendername);
					ProxDetector(50.0, playerid, infostring,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 7000);
					BizzInfo[22][bTill] += 7000;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='22'",BizzInfo[22][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 30, 100);
				}
			}
			else if(listitem == 6)
			{
			    if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 0)
				{
					format(infostring, 256, "* %s bought a M4.",sendername);
					ProxDetector(50.0, playerid, infostring,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 7000);
					BizzInfo[2][bTill] += 7000;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='2'",BizzInfo[2][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 31, 100);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 1)
				{
			    	format(infostring, 256, "* %s bought a M4.",sendername);
					ProxDetector(50.0, playerid, infostring,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 7000);
					BizzInfo[9][bTill] += 7000;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='9'",BizzInfo[9][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 31, 100);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 150.0, 313.7856,-134.1924,1004.0625) && GetPlayerVirtualWorld(playerid) == 2)
				{
			    	format(infostring, 256, "* %s bought a M4.",sendername);
					ProxDetector(50.0, playerid, infostring,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerCash(playerid, - 7000);
					BizzInfo[22][bTill] += 7000;
					Update(playerid,pCashx);
					mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='22'",BizzInfo[22][bTill]);
					mysql_tquery(SQL,string,"","");
					GivePlayerWeaponEx(playerid, 31, 100);
				}
			}
		}
	}
    if(dialogid == Dialog_radio)
	{
	    if(response)
	    {
            if(listitem == 0)
			{
				StopAudioStreamForPlayersInCar(vehicleid);
                PlayAudioStreamForPlayersInCar(vehicleid, "http://208.85.243.222");
                vehRadio[vehicleid] = 1;
			    return 1;
            }
			if(listitem == 1)
			{
				StopAudioStreamForPlayersInCar(vehicleid);
                PlayAudioStreamForPlayersInCar(vehicleid, "http://iranonair.no-ip.biz:8000/listen.pls");
                vehRadio[vehicleid] = 2;
			    return 1;
            }
			if(listitem == 2)
			{
                StopAudioStreamForPlayersInCar(vehicleid);
                PlayAudioStreamForPlayersInCar(vehicleid, "http://184.154.43.106:8011/stream");
                vehRadio[vehicleid] = 3;
			    return 1;
            }
			if(listitem == 3)
			{
                StopAudioStreamForPlayersInCar(vehicleid);
                PlayAudioStreamForPlayersInCar(vehicleid, "http://listen.shoutcast.com/IranianRadioDance");
                vehRadio[vehicleid] = 4;
			    return 1;
            }
			if(listitem == 4)
			{
                StopAudioStreamForPlayersInCar(vehicleid);
                PlayAudioStreamForPlayersInCar(vehicleid, "http://radiohotstyle.dyndns.biz:8000");
                vehRadio[vehicleid] = 5;
			    return 1;
            }
			if(listitem == 5)
			{
                StopAudioStreamForPlayersInCar(vehicleid);
                PlayAudioStreamForPlayersInCar(vehicleid, "http://www.radiodiz.com/livediz.m3u");
                vehRadio[vehicleid] = 6;
			    return 1;
            }
            if(listitem == 6)
			{
                StopAudioStreamForPlayersInCar(vehicleid);
                PlayAudioStreamForPlayersInCar(vehicleid, "http://necenzurat.radiotequila.ro:7000");
                vehRadio[vehicleid] = 7;
			    return 1;
            }
			if(listitem == 7)
			{
                StopAudioStreamForPlayersInCar(vehicleid);
                vehRadio[vehicleid] = 0;
			    return 1;
            }
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONS)
	{
	  	if(response)
	    {
			if(listitem == 0)
			{
				SetPlayerCheckpoint(playerid,1219.1234,-1812.3678,16.5938,4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 1)
			{
			    new string1[MAX_STRING],string2[MAX_STRING],allstring[MAX_STRING];
			    format(string1, sizeof(string1), "24/7 Store (5 businesses)\nClothing Store (3 businesses)\nBar (3 businesses)\nBank (2 businesses)\nRent car (1 business)\nGym (1 business)\nBurger Shot (2 businesses)\nPizza Stack (1 business)");
			    format(string2, sizeof(string2), "Gun Shop (2 businesses)\nCNN (1 business)\nGas Station (4 businesses)\nSex Shop (1 business)\nPay N Spray (4 businesses)\nCar Mod Shop (2 businesses)");
			    format(allstring, sizeof(allstring), "%s\n%s", string1, string2);
				ShowPlayerDialog(playerid, DIALOG_LOCATIONSLS, DIALOG_STYLE_LIST, "Los Santos Locations", allstring, "Find", "Back");
				return 1;
			}
			if(listitem == 2)
			{
			    new string1[MAX_STRING],string2[MAX_STRING],allstring[MAX_STRING];
			    format(string1, sizeof(string1), "24/7 Store (1 business)\nClothing Store (1 business)\nBank (1 business)\nCluckin' Bell (2 businesses)\nBurger Shot (4 businesses)\nGun Shop (1 business)\nCNN (1 business)");
			    format(string2, sizeof(string2), "Gas Station (6 businesses)\nCasino (1 business)\nSex Shop (1 business)\nPay N Spray (2 businesses)\nCar Mod Shop (1 business)");
			    format(allstring, sizeof(allstring), "%s\n%s", string1, string2);
				ShowPlayerDialog(playerid, DIALOG_LOCATIONSLV, DIALOG_STYLE_LIST, "Las Venturas Locations", allstring, "Find", "Back");
				return 1;
			}
			if(listitem == 3)
			{
			    ShowPlayerDialog(playerid, DIALOG_HQS, DIALOG_STYLE_LIST, "SERVER: HQ Locations", "Los Santos Police Department\nNational Guard\nHitman Agency\nFBI\nNews Reporters\nGrove Street\nGovernment\nBallas\nLos Aztecas\nSchool Instructors\nParamedic Department\nLos Vagos\nTaxi LS\nL.V Police Dep", "Checkpoint", "Back");
			    return 1;
			}
			if(listitem == 4)
			{
			    ShowPlayerDialog(playerid, DIALOG_LOCATIONSMODS, DIALOG_STYLE_LIST, "SERVER: Vehicle Mod Shop Locations", "Tuning LS\nTuning LV\nLowrider Tuning", "Checkpoint", "Back");
			    return 1;
			}
			if(listitem == 5) // PaintBall LS
			{
			    SetPlayerCheckpoint(playerid,1154.4122,-1440.0548,15.7969,4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 6)
			{
			    SetPlayerCheckpoint(playerid,1310.3213,-1369.3365,13.5612,4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSLS)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	            new Float: Position[3];
    			new Float: Distance[6];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[10][bEntranceX], BizzInfo[10][bEntranceY], BizzInfo[10][bEntranceZ]);
	            Distance[2] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[11][bEntranceX], BizzInfo[11][bEntranceY], BizzInfo[11][bEntranceZ]);
	            Distance[3] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[12][bEntranceX], BizzInfo[12][bEntranceY], BizzInfo[12][bEntranceZ]);
	            Distance[4] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[13][bEntranceX], BizzInfo[13][bEntranceY], BizzInfo[13][bEntranceZ]);
	            Distance[5] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[14][bEntranceX], BizzInfo[14][bEntranceY], BizzInfo[14][bEntranceZ]);
	            format(string1,sizeof(string1),"24/7 Store (%.1fm away)\n24/7 Store (%.1fm away)\n24/7 Store (%.1fm away)\n24/7 Store (%.1fm away)\n24/7 Store (%.1fm away)",Distance[1],Distance[2],Distance[3],Distance[4],Distance[5]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONS247LS, DIALOG_STYLE_LIST, "24/7 Store (5 businesses) Locations", string1, "Find", "Back");
			}
			if(listitem == 1)
	        {
	            new Float: Position[3];
    			new Float: Distance[4];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[30][bEntranceX], BizzInfo[30][bEntranceY], BizzInfo[30][bEntranceZ]);
	            Distance[2] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[32][bEntranceX], BizzInfo[32][bEntranceY], BizzInfo[32][bEntranceZ]);
	            Distance[3] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[53][bEntranceX], BizzInfo[53][bEntranceY], BizzInfo[53][bEntranceZ]);
	            format(string1,sizeof(string1),"Clothing Store (%.1fm away)\nClothing Store (%.1fm away)\nClothing Store (%.1fm away)",Distance[1],Distance[2],Distance[3]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSCLOTHINGLS, DIALOG_STYLE_LIST, "Clothing Store (3 businesses) Locations", string1, "Find", "Back");
			}
			if(listitem == 2)
	        {
	            new Float: Position[3];
    			new Float: Distance[4];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[3][bEntranceX], BizzInfo[3][bEntranceY], BizzInfo[3][bEntranceZ]);
	            Distance[2] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[4][bEntranceX], BizzInfo[4][bEntranceY], BizzInfo[4][bEntranceZ]);
	            Distance[3] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[5][bEntranceX], BizzInfo[5][bEntranceY], BizzInfo[5][bEntranceZ]);
	            format(string1,sizeof(string1),"Bar (%.1fm away)\nBar (%.1fm away)\nBar (%.1fm away)",Distance[1],Distance[2],Distance[3]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSBARLS, DIALOG_STYLE_LIST, "Bar (3 businesses) Locations", string1, "Find", "Back");
			}
			if(listitem == 3)
	        {
	            new Float: Position[3];
    			new Float: Distance[3];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[1][bEntranceX], BizzInfo[1][bEntranceY], BizzInfo[1][bEntranceZ]);
	            Distance[2] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[27][bEntranceX], BizzInfo[27][bEntranceY], BizzInfo[27][bEntranceZ]);
	            format(string1,sizeof(string1),"Bank (%.1fm away)\nBank (%.1fm away)",Distance[1],Distance[2]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSBANKLS, DIALOG_STYLE_LIST, "Bank (2 businesses) Locations", string1, "Find", "Back");
			}
			if(listitem == 4)
	        {
	            new Float: Position[3];
    			new Float: Distance[2];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[31][bEntranceX], BizzInfo[31][bEntranceY], BizzInfo[31][bEntranceZ]);
	            format(string1,sizeof(string1),"Rent car (%.1fm away)",Distance[1]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSRENTLS, DIALOG_STYLE_LIST, "Rent car (1 business) Locations", string1, "Find", "Back");
			}
			if(listitem == 5)
	        {
	            new Float: Position[3];
    			new Float: Distance[2];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[25][bEntranceX], BizzInfo[25][bEntranceY], BizzInfo[25][bEntranceZ]);
	            format(string1,sizeof(string1),"Gym (%.1fm away)",Distance[1]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSGYMLS, DIALOG_STYLE_LIST, "Gym (1 business) Locations", string1, "Find", "Back");
			}
			if(listitem == 6)
	        {
	            new Float: Position[3];
    			new Float: Distance[3];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[15][bEntranceX], BizzInfo[15][bEntranceY], BizzInfo[15][bEntranceZ]);
	            Distance[2] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[16][bEntranceX], BizzInfo[16][bEntranceY], BizzInfo[16][bEntranceZ]);
	            format(string1,sizeof(string1),"Burger Shot (%.1fm away)\nBurger Shot (%.1fm away)",Distance[1],Distance[2]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSBURGERLS, DIALOG_STYLE_LIST, "Burger Shot (2 businesses) Locations", string1, "Find", "Back");
			}
			if(listitem == 7)
	        {
	            new Float: Position[3];
    			new Float: Distance[2];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[26][bEntranceX], BizzInfo[26][bEntranceY], BizzInfo[26][bEntranceZ]);
	            format(string1,sizeof(string1),"Pizza Stack (%.1fm away)",Distance[1]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSPIZZALS, DIALOG_STYLE_LIST, "Pizza Stack (1 business) Locations", string1, "Find", "Back");
			}
			if(listitem == 8)
	        {
	            new Float: Position[3];
    			new Float: Distance[3];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[2][bEntranceX], BizzInfo[2][bEntranceY], BizzInfo[2][bEntranceZ]);
	            Distance[2] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[9][bEntranceX], BizzInfo[9][bEntranceY], BizzInfo[9][bEntranceZ]);
	            format(string1,sizeof(string1),"Gun Shop (%.1fm away)\nGun Shop (%.1fm away)",Distance[1],Distance[2]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSGSLS, DIALOG_STYLE_LIST, "Gun Shop (2 businesses) Locations", string1, "Find", "Back");
			}
			if(listitem == 9)
	        {
	            new Float: Position[3];
    			new Float: Distance[2];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[28][bEntranceX], BizzInfo[28][bEntranceY], BizzInfo[28][bEntranceZ]);
	            format(string1,sizeof(string1),"CNN (%.1fm away)",Distance[1]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSCNNLS, DIALOG_STYLE_LIST, "CNN (1 business) Locations", string1, "Find", "Back");
			}
			if(listitem == 10)
	        {
	            new Float: Position[3];
    			new Float: Distance[5];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[33][bEntranceX], BizzInfo[33][bEntranceY], BizzInfo[33][bEntranceZ]);
	            Distance[2] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[42][bEntranceX], BizzInfo[42][bEntranceY], BizzInfo[42][bEntranceZ]);
	            Distance[3] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[43][bEntranceX], BizzInfo[43][bEntranceY], BizzInfo[43][bEntranceZ]);
	            Distance[4] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[44][bEntranceX], BizzInfo[44][bEntranceY], BizzInfo[44][bEntranceZ]);
	            format(string1,sizeof(string1),"Gas Station (%.1fm away)\nGas Station (%.1fm away)\nGas Station (%.1fm away)\nGas Station (%.1fm away)",Distance[1],Distance[2],Distance[3],Distance[4]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSGASLS, DIALOG_STYLE_LIST, "Gas Station (4 businesses) Locations", string1, "Find", "Back");
			}
			if(listitem == 11)
	        {
	            new Float: Position[3];
    			new Float: Distance[2];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[7][bEntranceX], BizzInfo[7][bEntranceY], BizzInfo[7][bEntranceZ]);
	            format(string1,sizeof(string1),"Sex Shop (%.1fm away)",Distance[1]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSSEXLS, DIALOG_STYLE_LIST, "Sex Shop (1 business) Locations", string1, "Find", "Back");
			}
			if(listitem == 12)
	        {
	            new Float: Position[3];
    			new Float: Distance[5];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[34][bEntranceX], BizzInfo[34][bEntranceY], BizzInfo[34][bEntranceZ]);
	            Distance[2] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[35][bEntranceX], BizzInfo[35][bEntranceY], BizzInfo[35][bEntranceZ]);
	            Distance[3] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[36][bEntranceX], BizzInfo[36][bEntranceY], BizzInfo[36][bEntranceZ]);
	            Distance[4] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[37][bEntranceX], BizzInfo[37][bEntranceY], BizzInfo[37][bEntranceZ]);
	            format(string1,sizeof(string1),"Pay N Spray (%.1fm away)\nPay N Spray (%.1fm away)\nPay N Spray (%.1fm away)\nPay N Spray (%.1fm away)",Distance[1],Distance[2],Distance[3],Distance[4]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSPNSLS, DIALOG_STYLE_LIST, "Pay N Spray (4 businesses) Locations", string1, "Find", "Back");
			}
			if(listitem == 13)
	        {
	            new Float: Position[3];
    			new Float: Distance[3];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[38][bEntranceX], BizzInfo[38][bEntranceY], BizzInfo[38][bEntranceZ]);
	            Distance[2] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[39][bEntranceX], BizzInfo[39][bEntranceY], BizzInfo[39][bEntranceZ]);
	            format(string1,sizeof(string1),"Car Mod Shop (%.1fm away)\nCar Mod Shop (%.1fm away)",Distance[1],Distance[2]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSMODLS, DIALOG_STYLE_LIST, "Car Mod Shop (2 businesses) Locations", string1, "Find", "Back");
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSLV)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	            new Float: Position[3];
    			new Float: Distance[2];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[24][bEntranceX], BizzInfo[24][bEntranceY], BizzInfo[24][bEntranceZ]);
	            format(string1,sizeof(string1),"24/7 Store (%.1fm away)",Distance[1]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONS247LV, DIALOG_STYLE_LIST, "24/7 Store (1 business) Locations", string1, "Find", "Back");
			}
			if(listitem == 1)
	        {
	            new Float: Position[3];
    			new Float: Distance[2];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[29][bEntranceX], BizzInfo[29][bEntranceY], BizzInfo[29][bEntranceZ]);
	            format(string1,sizeof(string1),"Clothing Store (%.1fm away)",Distance[1]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSCLOTHINGLV, DIALOG_STYLE_LIST, "Clothing Store (1 business) Locations", string1, "Find", "Back");
			}
			if(listitem == 2)
	        {
	            new Float: Position[3];
    			new Float: Distance[2];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[21][bEntranceX], BizzInfo[21][bEntranceY], BizzInfo[21][bEntranceZ]);
	            format(string1,sizeof(string1),"Bank (%.1fm away)",Distance[1]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSBANKLV, DIALOG_STYLE_LIST, "Bank (1 business) Locations", string1, "Find", "Back");
			}
			if(listitem == 3)
	        {
	            new Float: Position[3];
    			new Float: Distance[3];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[4][bEntranceX], BizzInfo[4][bEntranceY], BizzInfo[4][bEntranceZ]);
	            Distance[2] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[54][bEntranceX], BizzInfo[54][bEntranceY], BizzInfo[54][bEntranceZ]);
	            format(string1,sizeof(string1),"Cluckin' Bell (%.1fm away)\nCluckin' Bell (%.1fm away)",Distance[1],Distance[2]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSCLUCKINLV, DIALOG_STYLE_LIST, "Cluckin' Bell (2 businesses) Locations", string1, "Find", "Back");
			}
			if(listitem == 4)
	        {
	            new Float: Position[3];
    			new Float: Distance[5];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[17][bEntranceX], BizzInfo[17][bEntranceY], BizzInfo[17][bEntranceZ]);
	            Distance[2] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[18][bEntranceX], BizzInfo[18][bEntranceY], BizzInfo[18][bEntranceZ]);
	            Distance[3] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[19][bEntranceX], BizzInfo[19][bEntranceY], BizzInfo[19][bEntranceZ]);
	            Distance[4] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[20][bEntranceX], BizzInfo[20][bEntranceY], BizzInfo[20][bEntranceZ]);
	            format(string1,sizeof(string1),"Burger Shot (%.1fm away)\nBurger Shot (%.1fm away)\nBurger Shot (%.1fm away)\nBurger Shot (%.1fm away)",Distance[1],Distance[2],Distance[3],Distance[4]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSBURGERLV, DIALOG_STYLE_LIST, "Burger Shot (4 businesses) Locations", string1, "Find", "Back");
			}
			if(listitem == 5)
	        {
	            new Float: Position[3];
    			new Float: Distance[3];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[22][bEntranceX], BizzInfo[22][bEntranceY], BizzInfo[22][bEntranceZ]);
	            format(string1,sizeof(string1),"Gun Shop (%.1fm away)",Distance[1]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSGSLV, DIALOG_STYLE_LIST, "Gun Shop (1 business) Locations", string1, "Find", "Back");
			}
			if(listitem == 6)
	        {
	            new Float: Position[3];
    			new Float: Distance[3];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[52][bEntranceX], BizzInfo[52][bEntranceY], BizzInfo[52][bEntranceZ]);
	            format(string1,sizeof(string1),"CNN (%.1fm away)",Distance[1]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSCNNLV, DIALOG_STYLE_LIST, "CNN (1 business) Locations", string1, "Find", "Back");
			}
			if(listitem == 7)
	        {
	            new Float: Position[3];
    			new Float: Distance[7];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[45][bEntranceX], BizzInfo[45][bEntranceY], BizzInfo[45][bEntranceZ]);
	            Distance[2] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[46][bEntranceX], BizzInfo[46][bEntranceY], BizzInfo[46][bEntranceZ]);
	            Distance[3] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[47][bEntranceX], BizzInfo[47][bEntranceY], BizzInfo[47][bEntranceZ]);
	            Distance[4] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[48][bEntranceX], BizzInfo[48][bEntranceY], BizzInfo[48][bEntranceZ]);
	            Distance[5] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[49][bEntranceX], BizzInfo[49][bEntranceY], BizzInfo[49][bEntranceZ]);
	            Distance[6] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[50][bEntranceX], BizzInfo[50][bEntranceY], BizzInfo[50][bEntranceZ]);
	            format(string1,sizeof(string1),"Gas Station (%.1fm away)\nGas Station (%.1fm away)\nGas Station (%.1fm away)\nGas Station (%.1fm away)\nGas Station (%.1fm away)\nGas Station (%.1fm away)",Distance[1],Distance[2],Distance[3],Distance[4],Distance[5],Distance[6]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSGASLV, DIALOG_STYLE_LIST, "Gas Station (6 businesses) Locations", string1, "Find", "Back");
			}
			if(listitem == 8)
	        {
	            new Float: Position[3];
    			new Float: Distance[2];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[8][bEntranceX], BizzInfo[8][bEntranceY], BizzInfo[8][bEntranceZ]);
	            format(string1,sizeof(string1),"Casino (%.1fm away)",Distance[1]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSCASINOLV, DIALOG_STYLE_LIST, "Casino (1 business) Locations", string1, "Find", "Back");
			}
			if(listitem == 9)
	        {
	            new Float: Position[3];
    			new Float: Distance[2];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[23][bEntranceX], BizzInfo[23][bEntranceY], BizzInfo[23][bEntranceZ]);
	            format(string1,sizeof(string1),"Sex Shop (%.1fm away)",Distance[1]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSSEXLV, DIALOG_STYLE_LIST, "Sex Shop (1 business) Locations", string1, "Find", "Back");
			}
			if(listitem == 10)
	        {
	            new Float: Position[3];
    			new Float: Distance[3];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[40][bEntranceX], BizzInfo[40][bEntranceY], BizzInfo[40][bEntranceZ]);
	            Distance[2] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[41][bEntranceX], BizzInfo[41][bEntranceY], BizzInfo[41][bEntranceZ]);
	            format(string1,sizeof(string1),"Pay N Spray (%.1fm away)\nPay N Spray (%.1fm away)",Distance[1],Distance[2]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSPNSLV, DIALOG_STYLE_LIST, "Pay N Spray (2 businesses) Locations", string1, "Find", "Back");
			}
			if(listitem == 11)
	        {
	            new Float: Position[3];
    			new Float: Distance[2];
	            new string1[MAX_STRING];
	            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	            Distance[1] = GetDistanceBetweenPoints(Position[0],Position[1], Position[2], BizzInfo[51][bEntranceX], BizzInfo[51][bEntranceY], BizzInfo[51][bEntranceZ]);
	            format(string1,sizeof(string1),"Car Mod Shop (%.1fm away)",Distance[1]);
	            ShowPlayerDialog(playerid, DIALOG_LOCATIONSMODLV, DIALOG_STYLE_LIST, "Car Mod Shop (1 business) Locations", string1, "Find", "Back");
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONS247LS)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[10][bEntranceX],BizzInfo[10][bEntranceY],BizzInfo[10][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[11][bEntranceX],BizzInfo[11][bEntranceY],BizzInfo[11][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 2)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[12][bEntranceX],BizzInfo[12][bEntranceY],BizzInfo[12][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 3)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[13][bEntranceX],BizzInfo[13][bEntranceY],BizzInfo[13][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 4)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[14][bEntranceX],BizzInfo[14][bEntranceY],BizzInfo[14][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSCLOTHINGLS)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[30][bEntranceX],BizzInfo[30][bEntranceY],BizzInfo[30][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[32][bEntranceX],BizzInfo[32][bEntranceY],BizzInfo[32][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 2)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[53][bEntranceX],BizzInfo[53][bEntranceY],BizzInfo[53][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSRENTLS)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[31][bEntranceX],BizzInfo[31][bEntranceY],BizzInfo[31][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSSEXLS)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[7][bEntranceX],BizzInfo[7][bEntranceY],BizzInfo[7][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSMODLS)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[38][bEntranceX],BizzInfo[38][bEntranceY],BizzInfo[38][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[39][bEntranceX],BizzInfo[39][bEntranceY],BizzInfo[39][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSCLOTHINGLV)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[29][bEntranceX],BizzInfo[29][bEntranceY],BizzInfo[29][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSCLUCKINLV)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[4][bEntranceX],BizzInfo[4][bEntranceY],BizzInfo[4][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[54][bEntranceX],BizzInfo[54][bEntranceY],BizzInfo[54][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSCASINOLV)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[8][bEntranceX],BizzInfo[8][bEntranceY],BizzInfo[8][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSSEXLV)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[23][bEntranceX],BizzInfo[23][bEntranceY],BizzInfo[23][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSMODLV)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[51][bEntranceX],BizzInfo[51][bEntranceY],BizzInfo[51][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSBARLS)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[3][bEntranceX],BizzInfo[3][bEntranceY],BizzInfo[3][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[4][bEntranceX],BizzInfo[4][bEntranceY],BizzInfo[4][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 2)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[5][bEntranceX],BizzInfo[5][bEntranceY],BizzInfo[5][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSBANKLS)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[1][bEntranceX],BizzInfo[1][bEntranceY],BizzInfo[1][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[27][bEntranceX],BizzInfo[27][bEntranceY],BizzInfo[27][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSGYMLS)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[25][bEntranceX],BizzInfo[25][bEntranceY],BizzInfo[25][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSBURGERLS)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[15][bEntranceX],BizzInfo[15][bEntranceY],BizzInfo[15][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[16][bEntranceX],BizzInfo[16][bEntranceY],BizzInfo[16][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSPIZZALS)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[26][bEntranceX],BizzInfo[26][bEntranceY],BizzInfo[26][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSGSLS)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[2][bEntranceX],BizzInfo[2][bEntranceY],BizzInfo[2][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[9][bEntranceX],BizzInfo[9][bEntranceY],BizzInfo[9][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSCNNLS)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[28][bEntranceX],BizzInfo[28][bEntranceY],BizzInfo[28][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSGASLS)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[33][bEntranceX],BizzInfo[33][bEntranceY],BizzInfo[33][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[42][bEntranceX],BizzInfo[42][bEntranceY],BizzInfo[42][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 2)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[43][bEntranceX],BizzInfo[43][bEntranceY],BizzInfo[43][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 3)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[44][bEntranceX],BizzInfo[44][bEntranceY],BizzInfo[44][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSPNSLS)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[34][bEntranceX],BizzInfo[34][bEntranceY],BizzInfo[34][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[35][bEntranceX],BizzInfo[35][bEntranceY],BizzInfo[35][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 2)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[36][bEntranceX],BizzInfo[36][bEntranceY],BizzInfo[36][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 3)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[37][bEntranceX],BizzInfo[37][bEntranceY],BizzInfo[37][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONS247LV)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[24][bEntranceX],BizzInfo[24][bEntranceY],BizzInfo[24][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSBANKLV)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[21][bEntranceX],BizzInfo[21][bEntranceY],BizzInfo[21][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSBURGERLV)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[17][bEntranceX],BizzInfo[17][bEntranceY],BizzInfo[17][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[18][bEntranceX],BizzInfo[18][bEntranceY],BizzInfo[18][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 2)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[19][bEntranceX],BizzInfo[19][bEntranceY],BizzInfo[19][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 3)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[20][bEntranceX],BizzInfo[20][bEntranceY],BizzInfo[20][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSGSLV)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[22][bEntranceX],BizzInfo[22][bEntranceY],BizzInfo[22][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSCNNLV)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[52][bEntranceX],BizzInfo[52][bEntranceY],BizzInfo[52][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSGASLV)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[45][bEntranceX],BizzInfo[45][bEntranceY],BizzInfo[45][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[42][bEntranceX],BizzInfo[42][bEntranceY],BizzInfo[42][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 2)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[43][bEntranceX],BizzInfo[43][bEntranceY],BizzInfo[43][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 3)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[44][bEntranceX],BizzInfo[44][bEntranceY],BizzInfo[44][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 4)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[45][bEntranceX],BizzInfo[45][bEntranceY],BizzInfo[45][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 5)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[46][bEntranceX],BizzInfo[46][bEntranceY],BizzInfo[46][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSPNSLV)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[40][bEntranceX],BizzInfo[40][bEntranceY],BizzInfo[40][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[41][bEntranceX],BizzInfo[41][bEntranceY],BizzInfo[41][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_LOCATIONSMODS)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[38][bEntranceX],BizzInfo[38][bEntranceY],BizzInfo[38][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[52][bEntranceX],BizzInfo[52][bEntranceY],BizzInfo[52][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
			if(listitem == 2)
			{
			    SetPlayerCheckpoint(playerid,BizzInfo[39][bEntranceX],BizzInfo[39][bEntranceY],BizzInfo[39][bEntranceZ],4.0);
			    CP[playerid] = 43;
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_WALKSTYLE)
	{
		if(response)
		{
			if(listitem == 0)
			{
				SetPlayerWalkingStyle (playerid, WALK_NORMAL);
			    return 1;
			}
			if(listitem == 1)
			{
				SetPlayerWalkingStyle (playerid, WALK_PED);
			    return 1;
			}
			if(listitem == 2)
			{
			    SetPlayerWalkingStyle (playerid, WALK_GANGSTA);
			    return 1;
			}
			if(listitem == 3)
			{
				SetPlayerWalkingStyle (playerid, WALK_GANGSTA2);
			    return 1;
			}
			if(listitem == 4)
			{
			    SetPlayerWalkingStyle (playerid, WALK_OLD);
			    return 1;
			}
			if(listitem == 5)
			{
			    SetPlayerWalkingStyle (playerid, WALK_FAT_OLD);
			    return 1;
			}
			if(listitem == 6)
			{
			    SetPlayerWalkingStyle (playerid, WALK_FAT);
			    return 1;
			}
			if(listitem == 7)
			{
			    SetPlayerWalkingStyle (playerid, WALK_LADY);
			    return 1;
			}
			if(listitem == 8)
			{
			    SetPlayerWalkingStyle (playerid, WALK_LADY2);
			    return 1;
			}
			if(listitem == 9)
			{
			    SetPlayerWalkingStyle (playerid, WALK_WHORE);
			    return 1;
			}
			if(listitem == 10)
			{
			    SetPlayerWalkingStyle (playerid, WALK_WHORE2);
			    return 1;
			}
			if(listitem == 11)
			{
			    SetPlayerWalkingStyle (playerid, WALK_DRUNK);
			    return 1;
			}
			if(listitem == 12)
			{
			    SetPlayerWalkingStyle (playerid, WALK_BLIND);
			    return 1;
			}
			if(listitem == 13)
			{
			    SetPlayerWalkingStyle (playerid, WALK_DEFAULT);
			    return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_FACTIONS)
	{
	    if(response)
		{
			new f = listitem+1;
			SelFac[playerid] = f;
			if(f >= 7)
			{
				f = f+1;
			}
			new szDialogs[512], titledialog[512], lead[MAX_PLAYER_NAME], query[256], result[100];
			format(lead, MAX_PLAYER_NAME, "None");
			format(query, 256, "SELECT * FROM `users` WHERE `Member` = '%d' AND `Rank` = '7'", f);
			new Cache: masta = mysql_query(SQL, query);
			if(cache_get_row_count() >= 1)
			{
				cache_get_field_content(0, "name", result);
				format(lead, MAX_PLAYER_NAME, result);
			}
			cache_delete(masta);
			new onmembers;
			foreach(Player, i)
			{
				if(PlayerInfo[i][pMember] == f)
				{
					onmembers++;
				}
			}
			if(strlen(lead) >= 1 && strcmp(lead, "None", true))
			{
				format(szDialogs, 512, "ID: %d\nFaction name: %s\nFaction leader: %s\n\nTotal members: %d\nMaximum members: %d\nOnline members: %d", f, DynamicFactions[f][fName], lead, GetFactionMembers(f), DynamicFactions[f][fMaxMembers], onmembers);
			}
			else
			{
				format(szDialogs, 512, "ID: %d\nFaction name: %s\nLeader: None\n\nTotal members: %d\nMaximum members: %d\nOnline members: %d", f, DynamicFactions[f][fName], GetFactionMembers(f), DynamicFactions[f][fMaxMembers], onmembers);
			}
			format(titledialog,sizeof(titledialog),"%s", DynamicFactions[f][fName]);
			ShowPlayerDialog(playerid, DIALOG_FACTIONS2, DIALOG_STYLE_MSGBOX, titledialog, szDialogs, "Back", "Exit");
		}
		else
		{
		    hidePlayerDialog(playerid);
			SelFac[playerid] = 0;
		}
	}
	if(dialogid == DIALOG_FACTIONS2)
	{
	    if(response)
	    {
	        SelFac[playerid] = 0;
	        ShowFactions(playerid);
		}
		else
		{
		    hidePlayerDialog(playerid);
			SelFac[playerid] = 0;
		}
	}
	if(dialogid == DIALOG_VOTEZ)
	{
	    if(response)
	    {
	        new nume[25], text[500];
	        GetPlayerName(playerid, nume, 25);
	        if(listitem == 0)
	        {
	            votefor1 += 1;
	            AVotatDeja[playerid] = 1;
	            format(text, sizeof(text), "@%s | You Voted For %s , It Has Now %d Votes !",nume, voteoption, votefor1);
	            SCM(playerid, COLOR_YELLOW, text);
	        }
	        if(listitem == 1)
	        {
	            votefor2 += 1;
	            AVotatDeja[playerid] = 1;
	            format(text, sizeof(text), "@%s | You Voted For %s , It Has Now %d Votes !",nume, voteoption2, votefor2);
	            SCM(playerid, COLOR_YELLOW, text);
	        }
	        if(listitem == 3)
	        {
	            votefor3 += 1;
	            AVotatDeja[playerid] = 1;
	            format(text, sizeof(text), "@%s | You Voted For %s , It Has Now %d Votes !",nume, voteoption3, votefor3);
	            SCM(playerid, COLOR_YELLOW, text);
	        }
	    }
	}
	if(dialogid == DIALOG_VOTE)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	            ShowPlayerDialog(playerid, DIALOG_CANDS, DIALOG_STYLE_LIST, "Vote System: Number Of Candidatees", "2\n3", "Select", "Cancel");
	        }
	        if(listitem == 1)
	        {
	            ShowPlayerDialog(playerid, DIALOG_NUMECAND, DIALOG_STYLE_INPUT,"Vote System: Name Candidatee", "Introdu numele Candidateului cu numarul 1.", "Select", "Cancel");
	        }
	        if(listitem == 2)
	        {
                ShowPlayerDialog(playerid, DIALOG_NUMECAND2, DIALOG_STYLE_INPUT,"Vote System: Name Candidatee", "Introdu numele Candidateului cu numarul 2.", "Select", "Cancel");
	        }
	        if(listitem == 3)
	        {
                ShowPlayerDialog(playerid, DIALOG_CANDFACTION, DIALOG_STYLE_LIST, "Vote System: Faction Leader", "Civil[not in use]\nLSPD\nFBI\nNG\nLos Aztecas\nGrove Street\nGovernment\nLos Vagos\nNo faction[not use]\nLVPD\nNR\nBallas\nHitman\nS.I LV\nTaxi LS\nLV Paramedic", "Select", "Cancel");
	        }
	        if(listitem == 4)
	        {
                InVote = 1;
	            new thename[25];
	            GetPlayerName(playerid, thename, 25);
	            new texts[500];
	            format(texts, 500, "(( %s Started A Vote For Leadering Faction %s Only Members Of That Faction Can Vote !))", thename, NameOfFactions(candfaction));
	            SendClientMessageToAll(COLOR_GENANNOUNCE, texts);
	            format(texts, sizeof(texts), "%s Started a vote, all staff members can participate in this vote !", thename);
	            ABroadCast(COLOR_RED, texts, 1);
	            HLChat(COLOR_RED, texts);
	        }
	    }
	}
	if(dialogid == DIALOG_VOTE1)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	            ShowPlayerDialog(playerid, DIALOG_CANDS, DIALOG_STYLE_LIST, "Vote System: Name Candidatees", "2\n3", "Select", "Cancel");
	        }
	        if(listitem == 1)
	        {
	            ShowPlayerDialog(playerid, DIALOG_NUMECAND, DIALOG_STYLE_INPUT,"Vote System: Name Candidate", "Enter Name Of Candidate 1.", "Select", "Cancel");
	        }
	        if(listitem == 2)
	        {
                ShowPlayerDialog(playerid, DIALOG_NUMECAND2, DIALOG_STYLE_INPUT,"Vote System: Name Candidate", "Enter Name Of Candidate 2.", "Select", "Cancel");
	        }
	        if(listitem == 3)
	        {
                ShowPlayerDialog(playerid, DIALOG_NUMECAND3, DIALOG_STYLE_INPUT,"Vote System: Name Candidate", "Enter Name Of Candidate 3", "Select", "Cancel");
	        }
	        if(listitem == 4)
	        {
	            ShowPlayerDialog(playerid, DIALOG_CANDFACTION, DIALOG_STYLE_LIST, "Vote System: Faction Leader", "Civil[not in use]\nLSPD\nFBI\nNG\nLos Aztecas\nGrove Street\nGovernment\nLos Vagos\nNo faction[not use]\nLVPD\nNR\nBallas\nHitman\nS.I LV\nTaxi LS\nLV Paramedic", "Select", "Cancel");
	        }
	        if(listitem == 5)
	        {
	            InVote = 1;
	            new thename[25];
	            GetPlayerName(playerid, thename, 25);
	            new texts[500];
	            format(texts, 500, "(( %s a pornit un vot pentru votarea liderului la factiunea %s ! Doar membrii acelei factiuni pot vota !))", thename, NameOfFactions(candfaction));
	            SendClientMessageToAll(COLOR_GENANNOUNCE, texts);
	            format(texts, sizeof(texts), "%s a pornit un vot, toti membrii staff pot participa la acest vot !", thename);
	            ABroadCast(COLOR_RED, texts, 1);
	            HLChat(COLOR_RED, texts);
	        }
	    }
	}
	if(dialogid == DIALOG_CANDFACTION)
	{
	    if(listitem > 0)
	    {
	        candfaction = listitem;
	        new text[500];
	        if(candsnumber == 3)
	        {
				format(text, sizeof(text), "Candidatees Number : %d\nCandidatee 1: %s\nCandidatee 2: %s\nCandidatee 3: %s\nLeader for faction: %s\nStart Vote", candsnumber, voteoption, voteoption2, voteoption3,NameOfFactions(candfaction));
				ShowPlayerDialog(playerid, DIALOG_VOTE1,DIALOG_STYLE_LIST, "Vote System: Ready", text, "Select", "Cancel");
			}
			if(candsnumber == 2)
	        {
				format(text, sizeof(text), "Candidatees Number: %d\nCandidatee 1: %s\nCandidatee 2: %s\nLeader for faction: %s\nStart Vote", candsnumber, voteoption, voteoption2,NameOfFactions(candfaction));
				ShowPlayerDialog(playerid, DIALOG_VOTE,DIALOG_STYLE_LIST, "Vote System: Ready", text, "Select", "Cancel");
			}
		}
	}
	if(dialogid == DIALOG_NUMECAND)
	{
		if(response)
		{
			new id = strval(inputtext);
			if(!IsPlayerConnected(id))
			{
			    SCM(playerid, COLOR_YELLOW, "This player is not logged in!");
			    ShowPlayerDialog(playerid, DIALOG_NUMECAND, DIALOG_STYLE_INPUT,"Vote System: ID Candidate", "Enter The Candidatee 1 ID Number ", "Select", "Cancel");
				return 1;
			}
			new candname[25];
			GetPlayerName(id, candname, sizeof(candname));
			voteoption = candname;
			new text2[500];
			if(candsnumber == 3)
			{
				format(text2, sizeof(text2), "Candidatees Number: %d\nCandidatee 1: %s\nCandidatee 2: %s\nCandidatee 3: %s\nLeader for faction: NONE", candsnumber, voteoption, voteoption2, voteoption3);
				ShowPlayerDialog(playerid, DIALOG_VOTE1, DIALOG_STYLE_LIST, "Vote System:", text2, "Select", "Cancel");
			}
			else if(candsnumber == 2)
			{
			    format(text2, sizeof(text2), "Candidatees Number: %d\nCandidatee 1: %s\nCandidatee 2: %s\nLeader for faction: NONE", candsnumber, voteoption, voteoption2);
			    ShowPlayerDialog(playerid, DIALOG_VOTE, DIALOG_STYLE_LIST, "Vote System:", text2, "Select", "Cancel");
			}
		}
	}
	if(dialogid == DIALOG_NUMECAND2)
	{
		if(response)
		{
            new id = strval(inputtext);
			if(!IsPlayerConnected(id))
			{
			    SCM(playerid, COLOR_YELLOW, "That Player Is'nt Logged In");
			    ShowPlayerDialog(playerid, DIALOG_NUMECAND2, DIALOG_STYLE_INPUT,"Vote System: ID Candidate", "Enter The Candidatee 2 ID Number", "Select", "Cancel");
				return 1;
			}
			new candname[25];
			GetPlayerName(id, candname, sizeof(candname));
			voteoption2 = candname;
			new text2[500];
			if(candsnumber == 3)
			{
				format(text2, sizeof(text2), "Candidatees Number: %d\nCandidatee 1: %s\nCandidatee 2: %s\nCandidatee 3: %s\nLeader for faction: NONE", candsnumber, voteoption, voteoption2, voteoption3);
				ShowPlayerDialog(playerid, DIALOG_VOTE1, DIALOG_STYLE_LIST, "Vote System:", text2, "Select", "Cancel");
			}
			else if(candsnumber == 2)
			{
			    format(text2, sizeof(text2), "Candidatees Number: %d\nCandidatee 1: %s\nCandidatee 2: %s\nLeader for faction: NONE", candsnumber, voteoption, voteoption2);
			    ShowPlayerDialog(playerid, DIALOG_VOTE, DIALOG_STYLE_LIST, "Vote System:", text2, "Select", "Cancel");
			}
		}
	}
	if(dialogid == DIALOG_NUMECAND3)
	{
		if(response)
		{
            new id = strval(inputtext);
			if(!IsPlayerConnected(id))
			{
			    SCM(playerid, COLOR_YELLOW, "That Player Is'nt Logged In");
			    ShowPlayerDialog(playerid, DIALOG_NUMECAND3, DIALOG_STYLE_INPUT,"Vote System: ID Candidate", "Enter The Cnadidate 3 ID Number", "Select", "Cancel");
				return 1;
			}
			new candname[25];
			GetPlayerName(id, candname, sizeof(candname));
			voteoption3 = candname;
			new text2[500];
			if(candsnumber == 3)
			{
				format(text2, sizeof(text2), "Candidates Number: %d\nCandidate 1: %s\nCandidate 2: %s\nCandidate 3: %s\nLeader for faction: NONE", candsnumber, voteoption, voteoption2, voteoption3);
				ShowPlayerDialog(playerid, DIALOG_VOTE1, DIALOG_STYLE_LIST, "Vote System:", text2, "Select", "Cancel");
			}
			else if(candsnumber == 2)
			{
			    format(text2, sizeof(text2), "Candidates Number: %d\nCandidate 1: %s\nCandidate 2: %s\nLeader for faction: NONE", candsnumber, voteoption, voteoption2);
			    ShowPlayerDialog(playerid, DIALOG_VOTE, DIALOG_STYLE_LIST, "Vote System:", text2, "Select", "Cancel");
			}
		}
	}
	if(dialogid == DIALOG_CANDS)
	{
	    if(response)
	    {
	        new text[500];
	        if(listitem == 0)
	        {
	            candsnumber = 2;
	            format(text, sizeof(text), "Candidates Number: %d\nCandidate 1: NONE\nCandidate 2: NONE", candsnumber);
	            ShowPlayerDialog(playerid, DIALOG_VOTE, DIALOG_STYLE_LIST, "Vote System:", text, "Select", "Cancel");
	        }
	        if(listitem == 1)
	        {
	            candsnumber = 3;
	            format(text, sizeof(text), "Candidates Number: %d\nCandidate 1: NONE\nCandidate 2: NONE", candsnumber);
	            ShowPlayerDialog(playerid, DIALOG_VOTE1, DIALOG_STYLE_LIST, "Vote System:", text, "Select", "Cancel");
	        }
	    }
	}
	if(dialogid == DIALOG_PINS)
	{
	    if(response)
	    {
	        if(listitem == 0)// login
	        {
	            ShowPlayerDialog(playerid, DIALOG_LOGINPIN,DIALOG_STYLE_INPUT,"{FFFFFF}Pin Login","{6666FF}Enter The Current Pin","Ok","Cancel");
	        }
	        if(listitem == 1)// cod pin
	        {
	            if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_YELLOW,"{6666FF}You can not see what PIN you have unless you are already logged in with that PIN.");
	            if(PinLogged[playerid] == 1)
	            {
	                new text[500];
	                new name[25];
	                GetPlayerName(playerid, name, sizeof(name));
	                format(text, sizeof(text),"%s, your pin is %d.",name,PlayerInfo[playerid][pPinCode]);
	                SCM(playerid, COLOR_YELLOW,text);
	            }
	        }
	        if(listitem == 2)// schimba codul
	        {
	            if(PlayerInfo[playerid][pPinCode] == 0)return SCM(playerid, COLOR_YELLOW,"You Have'nt Security Pin Code | Use /SetPin");
	            if(PinLogged[playerid] == 1)
	            {
	            	ShowPlayerDialog(playerid, DIALOG_CHANGEPIN,DIALOG_STYLE_INPUT,"{FFFFFF}Pin Change","{6666FF}Enter The New Pin Bellow\n Please note that the pins must be only numbers, if you use other characters you can lose your account.","Ok","Cancel");
				}
				if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_YELLOW,"You need to login pin.");
			}
	        if(listitem == 3)// blocheaza
	        {
	            if(PinLogged[playerid] == 0)
	            {
	                SCM(playerid, COLOR_YELLOW,"{6666FF}Your Account Is Already Locked");
	            }
	            if(PinLogged[playerid] == 1)
	            {
	                SCM(playerid, COLOR_YELLOW,"{6666FF}Your account is now blocked. You must reintroduce the pin.");
	                PinLogged[playerid] = 0;
	            }
	        }
	    }
	}
	if(dialogid == DIALOG_LOGINPIN)
	{
	    if(response)
	    {
	        new intigercode = strval(inputtext);
			if(intigercode != PlayerInfo[playerid][pPinCode])return SCM(playerid, 0x0091FFFF,"Cod pin incorect.");
			if(intigercode == PlayerInfo[playerid][pPinCode])
			{
			    SCM(playerid, 0x0091FFFF,"Pin Correct | Now you have total access to your account.");
				PinLogged[playerid] = 1;
			}
	    }
	}
	if(dialogid == DIALOG_CHANGEPIN)
	{
	    if(response)
	    {
	        new intigercode = strval(inputtext);
	        PlayerInfo[playerid][pPinCode] = intigercode;
	        Update(playerid, pPinCodex);
	        new text[500];
	        format(text, sizeof(text),"Your New Security Pin Is : %d",intigercode);
	        SCM(playerid, COLOR_PIN, text);
	    }
	}
 	if(dialogid == DIALOG_ASHOP2)
    {
        if(response)
        {
                  	if(listitem == 0)
                   {
                    if(PlayerInfo[playerid][pFpunish] <= 0)
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have any faction punish.");
                        return 1;
                    }
                    else if(PlayerInfo[playerid][pFpunish] >= 1)
                    {
                        new strings[200],name[30],stringss[200];
                        GetPlayerName(playerid, name, sizeof(name));
                        PlayerInfo[playerid][pFpunish] = 0;
                        new str[300];
                        mysql_format(SQL,str,sizeof(str),"UPDATE users SET `FPunish`='%d',`PremiumPoints`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pFpunish],PlayerInfo[playerid][pPremiumPoints],PlayerInfo[playerid][pNormalName]);
                        mysql_tquery(SQL,str,"","");
                        SendClientMessage(playerid, COLOR_YELLOW, "You have cleared your FP!");
                        mysql_real_escape_string(strings, stringss);
                        mysql_format(SQL,str,sizeof(str), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
                        mysql_tquery(SQL,str,"","");
                    }
                	}
               		if(listitem == 1)
                	{
                    new strings[200],name[30];
                    GetPlayerName(playerid, name, sizeof(name));
                    format(strings, sizeof(strings), "/shop: %s changed his name FREE.",name);
                    ABroadCast(COLOR_YELLOW,strings,6);
                    ShowPlayerDialog(playerid, DIALOG_CHANGENAME, DIALOG_STYLE_INPUT, "Change name:", "Please enter the new name below", "Select", "Cancel");
                	}
               		if(listitem == 2)
                	{
                    new strings[500];
                    format(strings,sizeof(strings),"IPhone Number:\n- Select A Number With 4Digits\n- You can deactivate calls if you only want to receive SMS.\n- In Chat Will Appear `* Player turns of his iPhone`.\n- Extra Option > /reply Can Reply Latest Recieved Message\n- Extra Option > /block Can Block SomeOne\n\nChoose A Phone Number:");
                    ShowPlayerDialog(playerid, DIALOG_IPHONE, DIALOG_STYLE_INPUT, "iPhone", strings, "Ok", "Cancel");
                	}
                	if(listitem == 3)
                	{
                    PlayerInfo[playerid][pFWorks] += 20;
                    new str2[300],strings[200],name[30],stringss[200];
                    mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `PremiumPoints`='%d',`FWorks`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPremiumPoints],PlayerInfo[playerid][pFWorks],PlayerInfo[playerid][pNormalName]);
                    mysql_tquery(SQL,str2,"","");
                    SendClientMessage(playerid, COLOR_YELLOW, "You have bought 20 fireworks, you can use /lightfw!");
                    GetPlayerName(playerid, name, sizeof(name));
                    format(strings, sizeof(strings), "/ashop: %s bought 20 fireworks FREE.",name);
                    ABroadCast(COLOR_YELLOW,strings,6);
                    mysql_real_escape_string(strings, stringss);
                    mysql_format(SQL,str2,sizeof(str2), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
                    mysql_tquery(SQL,str2,"","");
               		 }
        }
    }

	if(dialogid == DIALOG_NEON)
	{
        if(response)
        {
                new thecars = GetPlayerVehicleID(playerid);
                if(listitem == 0)
                {
                 	DestroyNeon(playerid, thecars);
                  	//blue
		            vNeon[thecars][playerid] = CreateDynamicObject(18648,0,0,0,0,0,0);
		            vNeon2[thecars][playerid] = CreateDynamicObject(18648,0,0,0,0,0,0);
		            AttachDynamicObjectToVehicle(vNeon[thecars][playerid], thecars, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		            AttachDynamicObjectToVehicle(vNeon2[thecars][playerid], thecars, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                }
                if(listitem == 1)
                {
                    DestroyNeon(playerid, thecars);
                    //red
                  	vNeon[thecars][playerid] = CreateDynamicObject(18647,0,0,0,0,0,0);
		            vNeon2[thecars][playerid] = CreateDynamicObject(18647,0,0,0,0,0,0);
		            AttachDynamicObjectToVehicle(vNeon[thecars][playerid], thecars, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		            AttachDynamicObjectToVehicle(vNeon2[thecars][playerid], thecars, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);

				}
                if(listitem == 2)
                {
                    DestroyNeon(playerid, thecars);
             		//green
                    vNeon[thecars][playerid] = CreateDynamicObject(18649,0,0,0,0,0,0);
		            vNeon2[thecars][playerid] = CreateDynamicObject(18649,0,0,0,0,0,0);
		            AttachDynamicObjectToVehicle(vNeon[thecars][playerid], thecars, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		            AttachDynamicObjectToVehicle(vNeon2[thecars][playerid], thecars, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                }
                if(listitem == 3)
                {
                    DestroyNeon(playerid, thecars);
                	//white
                    vNeon[thecars][playerid] = CreateDynamicObject(18652,0,0,0,0,0,0);
		            vNeon2[thecars][playerid] = CreateDynamicObject(18652,0,0,0,0,0,0);
		            AttachDynamicObjectToVehicle(vNeon[thecars][playerid], thecars, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		            AttachDynamicObjectToVehicle(vNeon2[thecars][playerid], thecars, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				}
                if(listitem == 4)
                {
	                    DestroyNeon(playerid, thecars);
	                	//pink
	                    vNeon[thecars][playerid] = CreateDynamicObject(18651,0,0,0,0,0,0);
			            vNeon2[thecars][playerid] = CreateDynamicObject(18651,0,0,0,0,0,0);
			            AttachDynamicObjectToVehicle(vNeon[thecars][playerid], thecars, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			            AttachDynamicObjectToVehicle(vNeon2[thecars][playerid], thecars, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				}
                if(listitem == 5)
                {
	                    DestroyNeon(playerid, thecars);
	                    //yellow
	                    vNeon[thecars][playerid] = CreateDynamicObject(18650,0,0,0,0,0,0);
			            vNeon2[thecars][playerid] = CreateDynamicObject(18650,0,0,0,0,0,0);
			            AttachDynamicObjectToVehicle(vNeon[thecars][playerid], thecars, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			            AttachDynamicObjectToVehicle(vNeon2[thecars][playerid], thecars, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				}
				if(listitem == 6)
				{
					DestroyNeon(playerid, thecars);

				}
		}
	}
	if(dialogid == DIALOG_HSHOP)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	            if(PlayerInfo[playerid][pHelpedPlayers] < 50)
             	{
					ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Helper Shop", "You do not have enough points to buy this item.", "OK", "");
					return 1;
				}
				new name[30];
				new strings[1000];
				GetPlayerName(playerid, name, sizeof(name));
				PlayerInfo[playerid][pHelpedPlayers] -= 50;
				Update(playerid,pHelpedPlayersx);
				GivePlayerCash(playerid, 3000000);
				Update(playerid, pCashx);
				SendClientMessage(playerid, COLOR_YELLOW, "Bought $3,000,000 (-50 Points)");
				GetPlayerName(playerid, name, sizeof(name));
				format(strings, sizeof(strings), "/hshop: %s  Bought $3,000,000.",name);
				ABroadCast(COLOR_YELLOW,strings,1);
	        }
	        if(listitem == 1)
	        {
	            if(PlayerInfo[playerid][pHelpedPlayers] < 70)
             	{
					ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Helper Shop", "You do not have enough points to buy this item.", "OK", "");
					return 1;
				}
				new name[30];
				new strings[1000];
				GetPlayerName(playerid, name, sizeof(name));
				PlayerInfo[playerid][pHelpedPlayers] -= 70;
				Update(playerid,pHelpedPlayersx);
				PlayerInfo[playerid][pFpunish] = 0;
				Update(playerid, pFpunishx);
				SendClientMessage(playerid, COLOR_YELLOW, "You Bought Clear FP (-70 Points)");
				GetPlayerName(playerid, name, sizeof(name));
				format(strings, sizeof(strings), "/hshop: %s Bought Clear FP.",name);
				ABroadCast(COLOR_YELLOW,strings,1);
	        }
	        if(listitem == 2)
	        {
	            if(PlayerInfo[playerid][pHelpedPlayers] < 100)
             	{
					ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Helper Shop", "You do not have enough points to buy this item.", "OK", "");
					return 1;
				}
				new name[30];
				new strings[1000];
				GetPlayerName(playerid, name, sizeof(name));
				PlayerInfo[playerid][pHelpedPlayers] -= 100;
				Update(playerid,pHelpedPlayersx);
				PlayerInfo[playerid][pHiddenColor] += 1;
				Update(playerid, pHiddenColorx);
				SendClientMessage(playerid, COLOR_YELLOW, "You Bought o Hidden Color (-100 Points)");
				GetPlayerName(playerid, name, sizeof(name));
				format(strings, sizeof(strings), "/hshop: %s Bought o Hidden Color.",name);
				ABroadCast(COLOR_YELLOW,strings,1);
	        }
	        if(listitem == 3)
			{
				    if(PlayerInfo[playerid][pPremiumAccount] == 0) return SCM(playerid, COLOR_ERROR, "You need Premium Account");
					if(PlayerInfo[playerid][pHelpedPlayers] < 500)
                    {
						ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Helper Shop", "You do not have enough points to buy this item.", "OK", "");
						return 1;
					}
					if(PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPlusSlot2] == 1)
					{
					    SendClientMessage(playerid, COLOR_ERROR, "You already have slots 1 and 2 unlocked.");
						return 1;
					}
					if(PlayerInfo[playerid][pPlusSlot1] == 0)
					{
					    PlayerInfo[playerid][pHelpedPlayers] -= 500;
						PlayerInfo[playerid][pPlusSlot1] = 1;
						new str2[300],strings[200],name[30],stringss[200];
						mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `HelpedPlayers`='%d',`PlusSlot1`='%d' WHERE `numewq9q5s6ad9`='%s'",PlayerInfo[playerid][pHelpedPlayers],PlayerInfo[playerid][pPlusSlot1],PlayerInfo[playerid][pNormalName]);
						mysql_tquery(SQL,str2,"","");
						SendClientMessage(playerid, COLOR_YELLOW, "You Bought un slot in plus pentru vehicule! (-500 Points)");
						GetPlayerName(playerid, name, sizeof(name));
						format(strings, sizeof(strings), "/hshop: %s  Bought +1 vehicle slot (1).",name);
						ABroadCast(COLOR_YELLOW,strings,1);
						mysql_real_escape_string(strings, stringss);
						mysql_format(SQL,str2,sizeof(str2), "INSERT INTO shop_logs (playerid,Message) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
						mysql_tquery(SQL,str2,"","");
					}
					else
					{
					    PlayerInfo[playerid][pHelpedPlayers] -= 500;
					    PlayerInfo[playerid][pPlusSlot2] = 1;
						new str2[300],strings[200],name[30],stringss[200];
						mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `HelpedPlayers`='%d',`PlusSlot2`='%d' WHERE `numewq9q5s6ad9`='%s'",PlayerInfo[playerid][pHelpedPlayers],PlayerInfo[playerid][pPlusSlot2],PlayerInfo[playerid][pNormalName]);
						mysql_tquery(SQL,str2,"","");
						SendClientMessage(playerid, COLOR_YELLOW, "You Bought Plus Vehicle Slot ! (-500 Points)");
						GetPlayerName(playerid, name, sizeof(name));
						format(strings, sizeof(strings), "/hshop: %s  Bought +1 vehicle slot (2).",name);
						ABroadCast(COLOR_YELLOW,strings,1);
						mysql_real_escape_string(strings, stringss);
						mysql_format(SQL,str2,sizeof(str2), "INSERT INTO shop_logs (playerid,Message) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
						mysql_tquery(SQL,str2,"","");
					}
			}
			if(listitem == 4)
			{
					if(PlayerInfo[playerid][pPremiumAccount] > 0)
				    {
				        SendClientMessage(playerid, COLOR_ERROR, "You already have a premium account.");
				        return 1;
					}
					if(PlayerInfo[playerid][pHelpedPlayers] < 1000)
                    {
						ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Helper Shop", "You do not have enough points to buy this item.", "OK", "");
						return 1;
					}
					PlayerInfo[playerid][pHelpedPlayers] -= 1000;
					PlayerInfo[playerid][pPremiumAccount] = 1;
					new str[300],strings[200],name[30],stringss[200];
					mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Premium`='1',`HelpedPlayers`='%d' WHERE `numewq9q5s6ad9`='%s'",PlayerInfo[playerid][pHelpedPlayers],PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,str,"","");
					SendClientMessage(playerid, COLOR_YELLOW, "You Bought Premium Account !(-1000 premium points)");
					GetPlayerName(playerid, name, sizeof(name));
					format(strings, sizeof(strings), "/hshop: %s  Bought Premium Account !",name);
					ABroadCast(COLOR_YELLOW,strings,1);
					mysql_real_escape_string(strings, stringss);
					mysql_format(SQL,str,sizeof(str), "INSERT INTO shop_logs (playerid,Message) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
					mysql_tquery(SQL,str,"","");
			}
	    }
	}
	if(dialogid == DIALOG_VIPWHEELS)
	{
	    if(response)
	    {
	        if(listitem == 0)//GOLD
	        {
                AddVehicleComponent(vehicleid, 1080);
                SaveComponent(vehicleid, 1080);
	        }
	        if(listitem == 1)//DOLLAR
	        {
	            AddVehicleComponent(vehicleid, 1083);
                SaveComponent(vehicleid, 1083);
	        }
	        if(listitem == 2)//SHADOW
	        {
	            AddVehicleComponent(vehicleid, 1073);
                SaveComponent(vehicleid, 1073);
	        }

		}
	}
	if(dialogid == DIALOG_VIPCOLORS)
	{
	    if(response)
	    {
	        if(listitem == 0)// V.I.P
	        {
	            PlayerInfo[playerid][pColor] = 28;
	        }
	        if(listitem == 1)// Membru V.I.P
			{
                PlayerInfo[playerid][pColor] = 29;
	        }
	    }
	}
	if(dialogid == DIALOG_SKIP)
	{
		if(response)
		{
            if(TutTime[playerid] >= 1)
            SendClientMessage(playerid, COLOR_WHITE, "");
            SendClientMessage(playerid, COLOR_WHITE, "");
            SendClientMessage(playerid, COLOR_WHITE, "");
            SendClientMessage(playerid, COLOR_WHITE, "");
            SendClientMessage(playerid, COLOR_WHITE, "");
            SendClientMessage(playerid, COLOR_WHITE, "");
            SendClientMessage(playerid, COLOR_WHITE, "");
            SendClientMessage(playerid, COLOR_WHITE, "");
            SendClientMessage(playerid, COLOR_WHITE, "");
            SendClientMessage(playerid, COLOR_WHITE, "");
            SendClientMessage(playerid, COLOR_WHITE, "");
            SendClientMessage(playerid, COLOR_WHITE, "");
            SendClientMessage(playerid, COLOR_WHITE, "");
            SendClientMessage(playerid, COLOR_WHITE, "");
            SendClientMessage(playerid, COLOR_WHITE, "");
            SendClientMessage(playerid, COLOR_WHITE, "");
            SendClientMessage(playerid, COLOR_WHITE, "");
            SendClientMessage(playerid, COLOR_WHITE, "");
            SendClientMessage(playerid, COLOR_WHITE, "");
			{
                TutTime[playerid] = 0; PlayerInfo[playerid][pTut] = 1;
			    gOoc[playerid] = 0; gNews[playerid] = 0; gFam[playerid] = 0;
			    TogglePlayerControllable(playerid, 1);
                SetCameraBehindPlayer(playerid);
                TogglePlayerSpectating(playerid, 0);
			    SetPlayerInterior(playerid, 0);
			    SetPlayerVirtualWorld(playerid,0);
			    SetPlayerPos(playerid, 1743.1161,-1836.8521,13.6117);
                PlayerInfo[playerid][pAccount] = 0;
                SpawnPlayer(playerid);
                ResetPlayerCash(playerid);
                GivePlayerCash(playerid, 0);
                SetPlayerInterior(playerid,0);
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerCheckpoint(playerid, 1205.1598,-1824.0554,13.5907, 4.0); // DMV
				StopAudioStreamForPlayer(playerid);
				CP[playerid] = 43;
			    SetPlayerSkin(playerid, 72);
                TogglePlayerControllable(playerid,true);
                {
	                new szString[2500];
	                format( szString, sizeof( szString ), "%sWelcome To New Land RolePlay Server\n",szString);
	                format( szString, sizeof( szString ), "%sYou Can Set 'Security Pin Code' With /SetPin \n",szString);
	                format( szString, sizeof( szString ), "%sYou Can Unlock Your Account Using /Pin\n",szString);
	                format( szString, sizeof( szString ), "%sWe Have A Bonus For New Players ! Type /Bonus\n",szString);
	                format( szString, sizeof( szString ), "%sIf You Like To See Our Updates Log , Use /Updates\n",szString);
	                format( szString, sizeof( szString ), "%sIf You Want To See Staff List m You Can Use /Staff\n",szString);
			        ShowPlayerDialog( playerid, DIALOG_FACTIONS, DIALOG_STYLE_MSGBOX, "Information {FF3300}New Land RP{FFFFFF}", szString, "Ok", "" );
	            }
                new str1[256];
                mysql_format(SQL,str1,256,"UPDATE users SET `Tutorial`='1',`Bank`='0',`Money`='0' WHERE `name`='%s'",PlayerInfo[playerid][pNormalName]);
                mysql_tquery(SQL,str1,"","");
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_HUD)
	{
	    if(response)
		{
		    new stringg[256];
		    if(listitem == 0)
		    {
		        format(stringg,sizeof(stringg),"Disable\n{C0C0C0}Grey\n{FF0000}Red\n{00FF00}Green\n{0000FF}Blue\n{FFFF00}Yellow");
		        ShowPlayerDialog(playerid,DIALOG_HUD1,DIALOG_STYLE_LIST, "HUD Options: HP", stringg, "Select","Close");
			}
			if(listitem == 1)
		    {
		        format(stringg,sizeof(stringg),"Disable\n{C0C0C0}Grey\n{FF0000}Red\n{00FF00}Green\n{0000FF}Blue\n{FFFF00}Yellow");
		        ShowPlayerDialog(playerid,DIALOG_HUD2,DIALOG_STYLE_LIST, "HUD Options: Armour", stringg, "Select","Close");
			}
			if(listitem == 2)
		    {
		        format(stringg,sizeof(stringg),"Disable\n{00FF00}Enable");
		        ShowPlayerDialog(playerid,DIALOG_HUD3,DIALOG_STYLE_LIST, "HUD Options: FPS", stringg, "Select","Close");
			}
		}
	}
	if(dialogid == DIALOG_HUD1)
	{
	    if(response)
		{
		    if(listitem == 0)
		    {
		        PlayerInfo[playerid][pHUD1] = 0;
		        PlayerTextDrawHide(playerid, HUD[1][playerid]);
			}
			if(listitem == 1)
			{
			    PlayerInfo[playerid][pHUD1] = 1;
			}
			if(listitem == 2)
			{
			    PlayerInfo[playerid][pHUD1] = 2;
			}
			if(listitem == 3)
			{
			    PlayerInfo[playerid][pHUD1] = 3;
			}
			if(listitem == 4)
			{
			    PlayerInfo[playerid][pHUD1] = 4;
			}
			if(listitem == 5)
			{
			    PlayerInfo[playerid][pHUD1] = 5;
			}
			Update(playerid, pHUD1x);
      		SendClientMessage(playerid, COLOR_DARKPINK, "HUD options updated!");
		}
	}
	if(dialogid == DIALOG_HUD2)
	{
	    if(response)
		{
		    if(listitem == 0)
		    {
		        PlayerInfo[playerid][pHUD2] = 0;
		        PlayerTextDrawHide(playerid, HUD[2][playerid]);
			}
			if(listitem == 1)
			{
			    PlayerInfo[playerid][pHUD2] = 1;
			}
			if(listitem == 2)
			{
			    PlayerInfo[playerid][pHUD2] = 2;
			}
			if(listitem == 3)
			{
			    PlayerInfo[playerid][pHUD2] = 3;
			}
			if(listitem == 4)
			{
			    PlayerInfo[playerid][pHUD2] = 4;
			}
			if(listitem == 5)
			{
			    PlayerInfo[playerid][pHUD2] = 5;
			}
			Update(playerid, pHUD2x);
      		SendClientMessage(playerid, COLOR_DARKPINK, "HUD options updated!");
		}
	}
	if(dialogid == DIALOG_HUD3)
	{
	    if(response)
		{
		    if(listitem == 0)
		    {
		        PlayerInfo[playerid][pHUD3] = 0;
		        PlayerTextDrawHide(playerid, HUD[3][playerid]);
			}
			if(listitem == 1)
			{
			    PlayerInfo[playerid][pHUD3] = 1;
			}
			Update(playerid, pHUD3x);
      		SendClientMessage(playerid, COLOR_DARKPINK, "FPS options updated!");
		}
	}
	if(dialogid == DIALOG_HELP)
	{
	    if(response)
		{
  			new string1[MAX_STRING],string2[MAX_STRING],string3[MAX_STRING],string4[MAX_STRING],string5[MAX_STRING],string6[MAX_STRING],string7[MAX_STRING],string8[MAX_STRING],string9[MAX_STRING],string10[MAX_STRING],string11[MAX_STRING],string12[MAX_STRING],stringy[MAX_STRING];
		  	if(listitem == 0)
	   		{
 	    		ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: General Commands", "/stats /accept /eject /ad /admins\n/helpers /time /id /changepass /pay /tie\n/buylevel /fill /fillgascan /gps /shop /unrentvehicle\n/contract /walkstyle /service /buydrink /licenses","Back","Exit");
			}
			if(listitem == 1)
			{
   				format(string1, sizeof(string1), "/o (global OOC message)\n/n (newbie chat message)\n/sms (OOCly SMS another player)\n/b (local OOC message)\n/w(hisper)\n/low (quiet message)\n/me (action)\n/do (action)\n/wt (walkie talkie)");
  	    		ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Chat Commands", string1,"Back","Exit");
			}
			if(listitem == 2)
  			{
				if(PlayerInfo[playerid][pMember] == 0)
				{
   					format(string1, sizeof(string1), "You're not in a group.");
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Group Commands", string1,"Back","Exit");
				}
				if(PlayerInfo[playerid][pMember] == 1)
				{
    				format(string1, sizeof(string1), "/mdc /su /arrest /free /ram /checkdays");
				    format(string2, sizeof(string2), "/m(egaphone) /tazer /cuff /untie /confiscate /takedrugs");
				    format(string3, sizeof(string3), "/uncuff /frisk /clear /d(epartments) /r(adio) /wanted");
				    format(string4, sizeof(string4), "/ticket /duty /backup /placespike /removespike /spikes");
				    format(stringy, sizeof(stringy), "%s\n%s\n%s\n%s", string1, string2, string3, string4);
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Group Commands", stringy,"Back","Exit");
				}
				if(PlayerInfo[playerid][pMember] == 2)
				{
    				format(string1, sizeof(string1), "/mdc /su /arrest /free /confiscate /takedrugs /m(egaphone)");
				    format(string2, sizeof(string2), "/tazer /cuff /untie /duty /backup /ram /wanted");
				    format(string3, sizeof(string3), "/uncuff /frisk /clear /d(epartments) /r(adio)");
				    format(string4, sizeof(string4), "/placespike /removespike /spikes /checkdays");
				    format(stringy, sizeof(stringy), "%s\n%s\n%s\n%s", string1, string2, string3, string4);
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Group Commands", stringy,"Back","Exit");
				}
				if(PlayerInfo[playerid][pMember] == 3)
				{
    				format(string1, sizeof(string1), "/mdc /su /arrest /free /confiscate /takedrugs /wanted");
				    format(string2, sizeof(string2), "/m(egaphone) /tazer /cuff /untie /duty /backup /ram");
				    format(string3, sizeof(string3), "/uncuff /frisk /clear /d(epartments) /r(adio)");
				    format(string4, sizeof(string4), "/placespike /removespike /spikes /checkdays");
				    format(stringy, sizeof(stringy), "%s\n%s\n%s\n%s", string1, string2, string3, string4);
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Group Commands", stringy,"Back","Exit");
				}
				if(PlayerInfo[playerid][pMember] == 4)
				{
    				format(string1, sizeof(string1), "/order /attack /f /fdrugs");
				    format(string2, sizeof(string2), "/fmats /fdeposit /tie /untie /checkdays");
				    format(stringy, sizeof(stringy), "%s\n%s", string1, string2);
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Group Commands", stringy,"Back","Exit");
				}
				if(PlayerInfo[playerid][pMember] == 5)
				{
    				format(string1, sizeof(string1), "/order /attack /f /fdrugs");
				    format(string2, sizeof(string2), "/fmats /fdeposit /tie /untie /checkdays");
				    format(stringy, sizeof(stringy), "%s\n%s", string1, string2);
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Group Commands", stringy,"Back","Exit");
				}
				if(PlayerInfo[playerid][pMember] == 6)
				{
	   				format(string1, sizeof(string1), "/order /attack /f /fdrugs");
				    format(string2, sizeof(string2), "/fmats /fdeposit /tie /untie /checkdays");
				    format(stringy, sizeof(stringy), "%s\n%s", string1, string2);
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Group Commands", stringy,"Back","Exit");
				}
				if(PlayerInfo[playerid][pMember] == 8)
				{
    				format(string1, sizeof(string1), "/mdc /su /arrest /free /ram");
				    format(string2, sizeof(string2), "/m(egaphone) /tazer /cuff /untie /confiscate /takedrugs");
				    format(string3, sizeof(string3), "/uncuff /frisk /clear /d(epartments) /r(adio) /wanted /checkdays");
				    format(string4, sizeof(string4), "/ticket /duty /backup /deployspike /destroyspike /spikes");
				    format(stringy, sizeof(stringy), "%s\n%s\n%s\n%s", string1, string2, string3, string4);
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Group Commands", stringy,"Back","Exit");
				}
				if(PlayerInfo[playerid][pMember] == 9)
				{
    				format(stringy, sizeof(stringy), "/news /live /checkdays");
    				ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Group Commands", stringy,"Back","Exit");
				}
				if(PlayerInfo[playerid][pMember] == 10)
				{
    				format(string1, sizeof(string1), "/order /attack /f /fdrugs");
				    format(string2, sizeof(string2), "/fmats /fdeposit /tie /untie /checkdays");
				    format(stringy, sizeof(stringy), "%s\n%s", string1, string2);
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Group Commands", stringy,"Back","Exit");
				}
				if(PlayerInfo[playerid][pMember] == 11)
				{
    				format(stringy, sizeof(stringy), "/undercover /f /checkdays");
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Group Commands", stringy,"Back","Exit");
				}
				if(PlayerInfo[playerid][pMember] == 12)
				{
    				format(string1, sizeof(string1), "/givelicense /startlesson /stoplesson /acceptlic");
				    format(string2, sizeof(string2), "/closelic /clicense /license /f /checkdays");
				    format(stringy, sizeof(stringy), "%s\n%s", string1, string2);
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Group Commands", stringy,"Back","Exit");
				}
				if(PlayerInfo[playerid][pMember] == 13)
				{
    				format(stringy, sizeof(stringy), "/fare /accept taxi /f /checkdays");
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Group Commands", stringy,"Back","Exit");
				}
				if(PlayerInfo[playerid][pMember] == 14)
				{
    				format(stringy, sizeof(stringy), "/healto /f /checkdays");
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Group Commands", stringy,"Back","Exit");
				}
			}
			if(listitem == 3)
  			{
	    		format(string1, sizeof(string1), "/lifejump /exhaust /rcarjack1 /lcarjack1 /rcarjack2 /lcarjack2 /hoodfrisked");
		    	format(string2, sizeof(string2), "/lightcig /tapcig /bat /lean /clearanim /dancing /box /lowthrow /highthrow /leftslap");
		    	format(string3, sizeof(string3), "/handsup /fall /fallback /sup /rap /push /akick /lowbodypush /spray /headbutt /pee");
		    	format(string4, sizeof(string4), "/koface /kostomach /kiss /rollfall /lay2 /hitch /beach /medic /scratch /sit /drunk");
		    	format(string5, sizeof(string5), "/bomb /getarrested /laugh /lookout /aim /crossarms /lay /hide /vomit /wave");
		    	format(string6, sizeof(string6), "/shouting /chant /frisked /exhausted /injured /slapass /deal /dealstance /crack");
		    	format(string7, sizeof(string7), "/wank /gro /sit /chat /fucku /taichi /knife /basket /jumpwater");
			    format(stringy, sizeof(stringy), "%s\n%s\n%s\n%s\n%s\n%s\n%s", string1, string2, string3, string4, string5, string6, string7);
    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Animations Commands", stringy,"Back","Exit");
			}
			if(listitem == 4)
  			{
	    		format(string1, sizeof(string1), "{FFFFFF}General Commands:\n/home - Show A Checkpoint On Your House");
		    	format(string2, sizeof(string2), "{FFFFFF}/buyhouse - Purchase House\n\nOther House Commands:\n/sellhouseto <playerid> - Sell Your House To Another Player");
		    	format(string3, sizeof(string3), "{FFFFFF}/open - Lock Or Unlock Doors\n/setrent - Set Rent Price\n/sellhousetostate - Sell House With 70% To State");
		    	format(string4, sizeof(string4), "{FFFFFF}/renters - Show Online Renters Of Your House\n/evict <playerid> - Kick Player From Your House !");
		    	format(string5, sizeof(string5), "{FFFFFF}/evictall - Kick All Renters From Your House\n/housewithdraw - Withdraw From House SafeBox");
		    	format(string6, sizeof(string6), "{FFFFFF}/housename - Set House Name\n/setrentable - Set House Rent Able");
		    	format(string7, sizeof(string7), "{FFFFFF}/heal - Heal In House\n/hu - Upgrade House Heal Feature");
			    format(stringy, sizeof(stringy), "%s\n%s\n%s\n%s\n%s\n%s\n%s", string1, string2, string3, string4, string5, string6, string7);
    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: House Commands", stringy,"Back","Exit");
			}
			if(listitem == 5)
  			{
				if(PlayerInfo[playerid][pJob] == 0)
				{
   					format(string1, sizeof(string1), "You don't have a public job or your job does not have any commands.");
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Job Commands", string1,"Back","Exit");
				}
				if(PlayerInfo[playerid][pJob] == 1)
				{
   					format(string1, sizeof(string1), "/find /cancel find");
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Job Commands", string1,"Back","Exit");
				}
				if(PlayerInfo[playerid][pJob] == 2)
				{
   					format(string1, sizeof(string1), "/dropcar");
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Job Commands", string1,"Back","Exit");
				}
				if(PlayerInfo[playerid][pJob] == 4)
				{
   					format(string1, sizeof(string1), "/selldrugs /getdrugs");
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Job Commands", string1,"Back","Exit");
				}
				if(PlayerInfo[playerid][pJob] == 5)
				{
   					format(string1, sizeof(string1), "/pizza");
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Job Commands", string1,"Back","Exit");
				}
				if(PlayerInfo[playerid][pJob] == 6)
				{
   					format(string1, sizeof(string1), "You don't have a public job or your job does not have any commands.");
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Job Commands", string1,"Back","Exit");
				}
				if(PlayerInfo[playerid][pJob] == 7)
				{
   					format(string1, sizeof(string1), "You don't have a public job or your job does not have any commands.");
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Job Commands", string1,"Back","Exit");
				}
				if(PlayerInfo[playerid][pJob] == 8)
				{
   					format(string1, sizeof(string1), "/refill /repair /tow");
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Job Commands", string1,"Back","Exit");
				}
				if(PlayerInfo[playerid][pJob] == 9)
				{
   					format(string1, sizeof(string1), "/sellgun /matsinfo /sellmaterials /getmats");
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Job Commands", string1,"Back","Exit");
				}
				if(PlayerInfo[playerid][pJob] == 10)
				{
   					format(string1, sizeof(string1), "/collect");
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Job Commands", string1,"Back","Exit");
				}
				if(PlayerInfo[playerid][pJob] == 13)
				{
   					format(string1, sizeof(string1), "/fish");
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Job Commands", string1,"Back","Exit");
				}
				if(PlayerInfo[playerid][pJob] == 14)
				{
   					format(string1, sizeof(string1), "Acest job nu are comenzi.");
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Job Commands", string1,"Back","Exit");
				}
				if(PlayerInfo[playerid][pJob] == 16)
				{
   					format(string1, sizeof(string1), "");
  	    			ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Job Commands", string1,"Back","Exit");
				}
			}
			if(listitem == 6)
  			{
				format(string1, sizeof(string1), "/bizstatus /bizfee /bizname /open /sellbizto /sellbiztostate /bizwithdraw");
 				ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Business Commands", string1,"Back","Exit");
			}
			if(listitem == 7)
  			{
  			    if(PlayerInfo[playerid][pHelper] == 0)
  			    {
  			        SendClientMessage(playerid, COLOR_GREY, "You aren't an official helper.");
  			        return 1;
				}
  			    if(PlayerInfo[playerid][pHelper] == 1)
  			    {
					format(string1, sizeof(string1), "/gototw /gotopeco /goto /respawn /viewnewbie /nre /nr /ndelete");
					format(string2, sizeof(string2), "/spec /specoff /nmute /hduty /gotocars /slap /up /ha");
					format(stringy, sizeof(stringy), "%s\n%s", string1, string2);
 					ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Helper Commands [1]", stringy,"Back","Exit");
				}
				if(PlayerInfo[playerid][pHelper] == 2)
  			    {
					format(string1, sizeof(string1), "/viewnewbie /nre /nr /ndelete /nmute /hduty /gotocars /slap /up /ha");
					format(string2, sizeof(string2), "/spec /specoff /gotolv /gotosf /goto /gotols");
					format(stringy, sizeof(stringy), "%s\n%s", string1, string2);
 					ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Helper Commands [2]", stringy,"Back","Exit");
				}
				if(PlayerInfo[playerid][pHelper] == 3)
  			    {
					format(string1, sizeof(string1), "/viewnewbie /nre /nr /ndelete /nmute /hduty /gotocars /slap /up /ha");
					format(string2, sizeof(string2), "/gotolv /gotosf /gotols");
					format(string3, sizeof(string3), "/goback /gotom /gotoin /kick");
					format(stringy, sizeof(stringy), "%s\n%s", string1, string2, string3);
 					ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Helper Commands [3]", stringy,"Back","Exit");
				}
			}
			if(listitem == 8)
  			{
				format(string1, sizeof(string1), "{FFFFFF}You need level 3 to buy a car. Cars can be bought from Dealership. You can use /gps if you do not know where the dealer is.");
				format(string2, sizeof(string2), "\n{FFFFFF}General Commands\n/v - Show Your Vehicles Menu\n/lock - Lock/Unlock Your Vehicle\n/findcar - Locate Your Vehicle On Map");
				format(string3, sizeof(string3), "{FFFFFF}/park - Park Your Vehicle\n/towcar - ReSpawn Your Vehicle");
				format(string4, sizeof(string4), "{FFFFFF}/engine (Press 2) - Start/Stop Vehicle Engine");
				format(string5, sizeof(string5), "{FFFFFF}/carradio - Set A Radio On Vehicle\n/eject - Eject A Player From Your Vehicle\n/carcolor - Change Your Vehicle Color | Use {FF0000}/colors");
				format(string6, sizeof(string6), "{FFFFFF}/removetunning - Remove Tuuned Options\n/carplate - Change Plate Of Vehicle\nSale O Buy Vehicle");
				format(string7, sizeof(string7), "{FF0000}(Scams are forbidden on the server)\n{FFFFFF}/sellcar - Sell Your Vehicle To CarShop For 60%.\n/sellcarto <playerid> <price> - Offer Your Vehicle To A Player");
				format(string8, sizeof(string8), "\n(FFFFFF}Other Commands:\n/givekey - Give the key to another player's car. The key is lost when the player exits the game or when you use /changelock \n /cars - displays a list of your cars");
				format(string9, sizeof(string9), "{FFFFFF}Insurance, Vehicle , KM Counter:\nEvery time your car is destroyed (explodes or falls into the water), the car loses 1 insurance point.");
				format(string10, sizeof(string10), "{FFFFFF}When the car reaches 0 insurance points, you have to pay the insurance to be able to drive it further.\nYou can buy insurance points using /buyinsurance");
				format(string11, sizeof(string11), "\n{FFFFFF}When you buy a car, an insurance point costs $ 100.\nEvery time your car is destroyed, the insurance price increases by $ 15.");
				format(string12, sizeof(string12), "\n{FFFFFF}Hidden Colors:\nHidden Color Are colors that look better than normal colors.\nYou Can Buy Hidden COlor From /Shop");
				format(stringy, sizeof(stringy), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s", string1, string2, string3, string4, string5, string6, string7, string8, string9, string10, string11, string12);
 				ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Vehicle Commands", stringy,"Back","Exit");
			}
			if(listitem == 9)
			{
			    format(stringy, sizeof(stringy), "/balance /withdraw /deposit");
 				ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Bank Commands", stringy,"Back","Exit");
			}
			if(listitem == 10)
			{
			    format(string1, sizeof(string1), "It can be given /rob by level 3. To give the rob you will have to go to the bank and use the command /rob.");
				format(string2, sizeof(string2), "\nRobbery skill is calculated based on successful slaves.\nSkill 1: 0-25 Rob\nSkill 2: 26-60 Rob\nSkill 3: 61-110 Rob\nSkill 4: 111-200 Rob\nSkill 5: 201-300 Rob");
				format(string3, sizeof(string3), "Skill 6: 300+ Rob\n\nRobbery money is calculated as follows: $180.000 + Extra $0 To $70.000 (random).\nFor each skill, they get $ 50,000 extra");
				format(stringy, sizeof(stringy), "%s\n%s\n%s", string1, string2, string3);
				ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Rob", stringy,"Back","Exit");
			}
			if(listitem == 11)
			{
              if (PlayerInfo[playerid][pLeader] < 1) return SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You are not a Leader.");
              format(string1, sizeof(string1), "Leader: /invite /changerank /givesalary /minlevel");
              format(string2, sizeof(string2), "Leader: /fwarn /funwarn /fvr /members /l /togapps");
              if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 10)
		      {
		    	format(string3, sizeof(string3),"Leader: /fwithdraw /fdrugs");
		      }
		      format(stringy, sizeof(stringy), "%s\n%s\n%s", string1, string2, string3);
		      ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "SERVER: Leader Help", stringy,"Back","Exit");
	        }
	        if(listitem == 12)
			{
              format(string1, sizeof(string1), "Aparaters: /gotom /gotols /gotolv /gotosf /fly");
			  ShowPlayerDialog(playerid, DIALOG_HELP2, DIALOG_STYLE_MSGBOX, "Aparater Commands", string1,"Back","Exit");
	        }
	  	}
	}
	if(dialogid == DIALOG_HELP2)
	{
	    if(response)
			{
			    ShowPlayerDialog(playerid,DIALOG_HELP,DIALOG_STYLE_LIST, "SERVER: Commands", "General\nChat\nGroups\nAnimations\nHouses\nJobs\nBusinesses\nHelpers\nVehicles\nBank\nRob\nAparater", "Select","Exit");
		}
		return 1;
	}
	if(dialogid == DIALOG_WANTEDON)
	{
		if(response)
		{
		    new id = Selectat[listitem][playerid];
			UsedFind[playerid] = 1;
			new Float:X,Float:Y,Float:Z;
			new galciala[MAX_PLAYER_NAME];
			GetPlayerName(id, galciala, sizeof(galciala));
			GetPlayerPos(id, X,Y,Z);
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid, X,Y,Z, 3.5);
			targetfind[playerid] = id;
			foreach(Player, i)
			{
				if(IsACop(playerid))
				{
			 		if(caser[playerid] == i)
					{
						cased[i] --;
					}
				}
			}
			if(IsACop(playerid))
			{
				cased[id] ++;
				caser[playerid] = id;
			}
			format(string,sizeof(string),"{FFFF00}Check Point Placed For Player %s | Distance : %.0f.",galciala,GetDistanceBetweenPlayers(playerid, id));
			SCM(playerid,COLOR_WHITE,string);
			GetPlayerName(id, sendername, sizeof(sendername));
			format(string, sizeof(string), "-- MDC [ID %d - %s][{FFFF00}W:%d{FFFFFF}][Chased by %d cops][Wanted expires in %d mins]",id, galciala, PlayerInfo[id][pWantedLevel], cased[id], wantedlost[id]/60+1);
			SendClientMessage(playerid, COLOR_WHITE,string);
			if(strcmp(PlayerInfo[id][pCrime1],  "Fara Crima", false) == 0) { }
			else
			{
				format(string, sizeof(string), "MDC Crimes: [%s]", PlayerInfo[id][pCrime1]);
				SendClientMessage(playerid,COLOR_WHITE,string);
			}
			if(strcmp(PlayerInfo[id][pCrime2],  "Fara Crima", false) == 0) { }
			else
			{
				format(string, sizeof(string), "MDC Crimes: [%s]", PlayerInfo[id][pCrime2]);
				SendClientMessage(playerid, COLOR_WHITE,string);
			}
			if(strcmp(PlayerInfo[id][pCrime3], "Fara Crima", false) == 0) { }
			else
			{
		 		format(string, sizeof(string), "MDC Crimes: [%s]", PlayerInfo[id][pCrime3]);
				SendClientMessage(playerid, COLOR_WHITE,string);
			}
		}
  		else SendClientMessage(playerid, COLOR_GREY, "Wanted dialog canceled");
	}
	if(dialogid == DIALOG_SHOP)
	{
	    if(response)
			{
			  	if(listitem == 0)
			   	{
					new string1[MAX_STRING],string2[MAX_STRING],string3[MAX_STRING],string4[MAX_STRING],string5[2400];
			        format(string1, sizeof(string1), "Players who want to help the community can buy premium points (with real money).");
			        format(string2, sizeof(string2), "You can buy premium points using paysafecard or paypal.");
			        format(string3, sizeof(string3), "10 Premium Points : 2.000T | 25 Premium Points : 5.000T | 50 Premium Points : 9.500T");
			        format(string4, sizeof(string4), "With the premium points, you can buy some stuff from /shop and some premium cars from the Dealership. For details go to ..");
			        format(string5, sizeof(string5), "%s\n%s\n\n%s\n%s", string1, string2, string3, string4);
			        ShowPlayerDialog(playerid, DIALOG_SHOP2, DIALOG_STYLE_MSGBOX, "Info", string5, "Close", "");
				}
				if(listitem == 1)
				{
				    if(PlayerInfo[playerid][pPremiumAccount] > 0)
				    {
				        SendClientMessage(playerid, COLOR_LIGHTRED, "You already have a premium account.");
				        return 1;
					}
					if(PlayerInfo[playerid][pPremiumPoints] <= 104)
					{
					    ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
					    return 1;
					}
					PlayerInfo[playerid][pPremiumPoints] -= 105;
					Update(playerid, pPremiumPointsx);
					PlayerInfo[playerid][pPremiumAccount] = 1;
					new str[300],strings[200],name[30],stringss[200];
					mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Premium`='1',`PremiumPoints`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPremiumPoints],PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,str,"","");
					SendClientMessage(playerid, COLOR_YELLOW, "You have bought a premium account!(-105 premium points)");
					GetPlayerName(playerid, name, sizeof(name));
					format(strings, sizeof(strings), "/shop: %s bought a premium account.",name);
					ABroadCast(COLOR_YELLOW,strings,6);
					mysql_real_escape_string(strings, stringss);
					mysql_format(SQL,str,sizeof(str), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
					mysql_tquery(SQL,str,"","");
				}
				if(listitem == 2)
				{
				    if(PlayerInfo[playerid][pPremiumPoints] <= 69)
					{
					    ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Change nickname", "You do not have enough premium points to change your nick\nYou need 20 premium points to change your nick", "Close", "");
					    return 1;
					}
		 			new str2[300],strings[200],name[30],stringss[200];
		 			PlayerInfo[playerid][pPremiumPoints] -= 70;
		 			Update(playerid, pPremiumPointsx);
					mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `PremiumPoints`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPremiumPoints],PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,str2,"","");
					GetPlayerName(playerid, name, sizeof(name));
					format(strings, sizeof(strings), "/shop: %s changed his name.",name);
					ABroadCast(COLOR_YELLOW,strings,6);
					mysql_real_escape_string(strings, stringss);
					mysql_format(SQL,str2,sizeof(str2), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
					mysql_tquery(SQL,str2,"","");
					ShowPlayerDialog(playerid, DIALOG_CHANGENAME, DIALOG_STYLE_INPUT, "Change name:", "Please enter the new name below", "Select", "Cancel");
				}
				if(listitem == 3)
				{
				    if(PlayerInfo[playerid][pFpunish] <= 0)
					{
						SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have any faction punish.");
						return 1;
					}
					if(PlayerInfo[playerid][pPremiumPoints] <= 34)
					{
					    ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
					    return 1;
					}
					new strings[200],name[30],stringss[200];
					GetPlayerName(playerid, name, sizeof(name));
					format(strings, sizeof(strings), "/shop: %s cleared his 10 FP.",name);
					ABroadCast(COLOR_YELLOW,strings,6);
					PlayerInfo[playerid][pPremiumPoints] -= 35;
					Update(playerid, pPremiumPointsx);
					PlayerInfo[playerid][pFpunish] -= 10;
					new str[300];
					mysql_format(SQL,str,sizeof(str),"UPDATE users SET `FPunish`='%d',`PremiumPoints`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pFpunish],PlayerInfo[playerid][pPremiumPoints],PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,str,"","");
					SendClientMessage(playerid, COLOR_YELLOW, "You have cleared your 10 FP! (-35 premium points)");
					mysql_real_escape_string(strings, stringss);
					mysql_format(SQL,str,sizeof(str), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
					mysql_tquery(SQL,str,"","");
				}
				if(listitem == 4)
				{
				    if(PlayerInfo[playerid][pFpunish] <= 0)
					{
						SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have any faction punish.");
						return 1;
					}
					if(PlayerInfo[playerid][pPremiumPoints] <= 59)
					{
					    ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
					    return 1;
					}
					new strings[200],name[30],stringss[200];
					GetPlayerName(playerid, name, sizeof(name));
					format(strings, sizeof(strings), "/shop: %s cleared his 20 FP.",name);
					ABroadCast(COLOR_YELLOW,strings,6);
					PlayerInfo[playerid][pPremiumPoints] -= 60;
					Update(playerid, pPremiumPointsx);
					PlayerInfo[playerid][pFpunish] -= 20;
					new str[300];
					mysql_format(SQL,str,sizeof(str),"UPDATE users SET `FPunish`='%d',`PremiumPoints`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pFpunish],PlayerInfo[playerid][pPremiumPoints],PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,str,"","");
					SendClientMessage(playerid, COLOR_YELLOW, "You have cleared your 20 FP! (-60 premium points)");
					mysql_real_escape_string(strings, stringss);
					mysql_format(SQL,str,sizeof(str), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
					mysql_tquery(SQL,str,"","");
				}
				if(listitem == 5)
				{
				    if(PlayerInfo[playerid][pWarns] <= 0)
                    {
						SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have any warn.");
						return 1;
					}
					if(PlayerInfo[playerid][pPremiumPoints] <= 94)
                    {
						ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
						return 1;
					}
					PlayerInfo[playerid][pPremiumPoints] -= 95;
					Update(playerid, pPremiumPointsx);
					PlayerInfo[playerid][pWarns] = 0;
					new str[300],strings[200],name[30],stringss[200];
					mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Warnings`='0',`PremiumPoints`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPremiumPoints],PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,str,"","");
					SendClientMessage(playerid, COLOR_YELLOW, "You have cleared your warns! (-95 premium points)");
					GetPlayerName(playerid, name, sizeof(name));
					format(strings, sizeof(strings), "/shop: %s cleared his warns.",name);
					ABroadCast(COLOR_YELLOW,strings,6);
					mysql_real_escape_string(strings, stringss);
					mysql_format(SQL,str,sizeof(str), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
					mysql_tquery(SQL,str,"","");
				}
				if(listitem == 6)
				{
					new i,stringyy[500];
					if(PlayerInfo[playerid][pPremiumPoints] >= 100)
					{
						if(PlayerInfo[playerid][pClan] == 0)
						{
							PlayerInfo[playerid][pPremiumPoints] -= 100;
							format(stringyy, sizeof(stringyy), "You have bought a clan! (-100 premium points)");
							SendClientMessage(playerid, COLOR_YELLOW, stringyy);
							format(stringyy, sizeof(stringyy), "[{FF0000}INFO{FFFFFF}]: You can administer your clan directly from the panel -> [Clan] . {00FFFF}/panel"); //test
							SendClientMessage(playerid, COLOR_YELLOW, stringyy);
							PlayerInfo[playerid][pCRank] = 7;

						//	mysql_format(SQL, safeString, sizeof(safeString), "INSERT INTO clans (clanName) VALUES('New Clan')");
						//	mysql_tquery(SQL,safeString,"","");
						//	i = mysql_insert_id();
							//========
							new Cache: resultoccc = mysql_query(SQL,  "INSERT INTO `clans` (`clanName`) VALUES('New Clan')");

							i = cache_insert_id();
        					cache_delete(resultoccc);

							ClanInfo[i][cClanExpire] = gettime() + (90*86400);

							PlayerInfo[playerid][pClan] = i;

							mysql_format(SQL, stringyy, sizeof(stringyy), "UPDATE `clans` SET `clanExpire`='%d' WHERE `clanID`='%d'",ClanInfo[i][cClanExpire],i);
							mysql_tquery(SQL, stringyy, "", "");

							new y,m,d,h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							mysql_format(SQL, stringyy, sizeof(stringyy), "UPDATE users SET `CRank`='7',`Clan`='%d',`PremiumPoints`='%d',`ClanJoin`='%02d-%02d-%d %02d:%02d:%02d' WHERE `name`='%s'", PlayerInfo[playerid][pClan], PlayerInfo[playerid][pPremiumPoints],d,m,y,h,mi,s,PlayerInfo[playerid][pNormalName]);
        					mysql_tquery(SQL,stringyy,"","");

							new strings[200],name[30],stringss[200],str[300];
        					GetPlayerName(playerid, name, sizeof(name));
							format(strings, sizeof(strings), "/shop: %s created a new clan.",name);
							ABroadCast(COLOR_YELLOW,strings,6);
							mysql_real_escape_string(strings, stringss);
							mysql_format(SQL,str,sizeof(str), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
							mysql_tquery(SQL,str,"","");
							ShowPlayerDialog(playerid, DIALOG_CHOOSECLANNAME, DIALOG_STYLE_INPUT, "Clan name", "Insert clan name in the box below:\n(You can't change it after that!)", "Ok", "");

						}
						else return SCM(playerid,COLOR_WHITE,"You already are in a clan! Use /quitclan first.");
					}
					else return ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
				}
				if(listitem == 7)
				{
				    if(PlayerInfo[playerid][pPcarkey] == 0 && PlayerInfo[playerid][pmotokey] == 0 && PlayerInfo[playerid][phelikey] == 0 && PlayerInfo[playerid][pprcarkey] == 0 && PlayerInfo[playerid][pprcarkey2] == 0 && PlayerInfo[playerid][pPPluscarkey] == 0 && PlayerInfo[playerid][pPPluscarkey2] == 0)
                    {
						SendClientMessage(playerid, COLOR_LIGHTRED, "You don't have a own vehicle.");
						return 1;
					}
					if(PlayerInfo[playerid][pPremiumPoints] <= 19)
                    {
						ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
						return 1;
					}
					PlayerInfo[playerid][pPremiumPoints] -= 20;
					PlayerInfo[playerid][pHiddenColor] += 1;
					Update(playerid, pHiddenColorx);
					new str2[300],strings[200],name[30],stringss[200];
					mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `PremiumPoints`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPremiumPoints],PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,str2,"","");
					SendClientMessage(playerid, COLOR_YELLOW, "You have bought a hidden color! (-20 premium points)");
					GetPlayerName(playerid, name, sizeof(name));
					format(strings, sizeof(strings), "/shop: %s bought a hidden color.",name);
					ABroadCast(COLOR_YELLOW,strings,6);
					mysql_real_escape_string(strings, stringss);
					mysql_format(SQL,str2,sizeof(str2), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
					mysql_tquery(SQL,str2,"","");
				}
				if(listitem == 8)
				{
					if(PlayerInfo[playerid][pPremiumPoints] <= 9)
                    {
						ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
						return 1;
					}
					PlayerInfo[playerid][pPremiumPoints] -= 10;
					Update(playerid, pPremiumPointsx);
					PlayerInfo[playerid][pFWorks] += 20;
					new str2[300],strings[200],name[30],stringss[200];
					mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `PremiumPoints`='%d',`FWorks`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPremiumPoints],PlayerInfo[playerid][pFWorks],PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,str2,"","");
					SendClientMessage(playerid, COLOR_YELLOW, "You have bought 20 fireworks, you can use /lightfw! (-10 premium points)");
					GetPlayerName(playerid, name, sizeof(name));
					format(strings, sizeof(strings), "/shop: %s bought 20 fireworks.",name);
					ABroadCast(COLOR_YELLOW,strings,6);
					mysql_real_escape_string(strings, stringss);
					mysql_format(SQL,str2,sizeof(str2), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
					mysql_tquery(SQL,str2,"","");
				}
				if(listitem == 9)
				{
				    if(PlayerInfo[playerid][pPremiumAccount] == 0)
				    {
				        SCM(playerid, -1, "{ffff00}You Have'nt cont premium");
				        return 1;
				    }
					if(PlayerInfo[playerid][pPremiumPoints] <= 59)
                    {
						ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
						return 1;
					}
					if(PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPlusSlot2] == 1)
					{
					    SendClientMessage(playerid, COLOR_LIGHTRED, "You can buy only 2 vehicle slots from /shop.");
						return 1;
					}
					if(PlayerInfo[playerid][pPlusSlot1] == 0)
					{
					    PlayerInfo[playerid][pPremiumPoints] -= 60;
						PlayerInfo[playerid][pPlusSlot1] = 1;
						new str2[300],strings[200],name[30],stringss[200];
						mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `PremiumPoints`='%d',`PlusSlot1`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPremiumPoints],PlayerInfo[playerid][pPlusSlot1],PlayerInfo[playerid][pNormalName]);
						mysql_tquery(SQL,str2,"","");
						SendClientMessage(playerid, COLOR_YELLOW, "You have bought a vehicle slot! (-60 premium points)");
						GetPlayerName(playerid, name, sizeof(name));
						format(strings, sizeof(strings), "/shop: %s bought a vehicle slot(1).",name);
						ABroadCast(COLOR_YELLOW,strings,6);
						mysql_real_escape_string(strings, stringss);
						mysql_format(SQL,str2,sizeof(str2), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
						mysql_tquery(SQL,str2,"","");
					}
					else
					{
					    PlayerInfo[playerid][pPremiumPoints] -= 60;
					    PlayerInfo[playerid][pPlusSlot2] = 1;
						new str2[300],strings[200],name[30],stringss[200];
						mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `PremiumPoints`='%d',`PlusSlot2`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPremiumPoints],PlayerInfo[playerid][pPlusSlot2],PlayerInfo[playerid][pNormalName]);
						mysql_tquery(SQL,str2,"","");
						SendClientMessage(playerid, COLOR_YELLOW, "You have bought a vehicle slot! (-60 premium points)");
						GetPlayerName(playerid, name, sizeof(name));
						format(strings, sizeof(strings), "/shop: %s bought a vehicle slot(2).",name);
						ABroadCast(COLOR_YELLOW,strings,6);
						mysql_real_escape_string(strings, stringss);
						mysql_format(SQL,str2,sizeof(str2), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
						mysql_tquery(SQL,str2,"","");
					}
				}
				if(listitem == 10)
				{
				    if(PlayerInfo[playerid][pPhone] == 1)
                    {
						SendClientMessage(playerid, COLOR_LIGHTRED, "You have already a iPhone.");
						return 1;
					}
					if(PlayerInfo[playerid][pPremiumPoints] <= 24)
                    {
						ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
						return 1;
					}
					new strings[500];
					format(strings,sizeof(strings),"IPhone Number:\n- Number Must Be Have 4Digits\n- You Can Disable Calls\n- In Chat Appear `* Player turns of his iPhone`.\n- Answer Latest Message Using /Reply\n- Block SomOne Using /Block\n\nChoose a phone number:");
					ShowPlayerDialog(playerid, DIALOG_IPHONE, DIALOG_STYLE_INPUT, "iPhone", strings, "Ok", "Cancel");
				}
				if(listitem == 11)
				{
						ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Clear KM & DAYS", "You Can Use This From /V Command !.", "Close", "");
						return 1;
				}
				if(listitem == 12)
				{
					if(PlayerInfo[playerid][pPremiumPoints] <= 199)
                    {
						ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
						return 1;
					}
					PlayerInfo[playerid][pPremiumPoints] -= 200;
					Update(playerid, pPremiumPointsx);
					PlayerInfo[playerid][pVIP] = 1;
					new str[300],strings[200],name[30],stringss[200];
					mysql_format(SQL,str,sizeof(str),"UPDATE users SET `VIP`='1',`PremiumPoints`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPremiumPoints],PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,str,"","");
					SendClientMessage(playerid, COLOR_YELLOW, "You have bought a V.I.P account.!(-200 premium points)");
					GetPlayerName(playerid, name, sizeof(name));
					format(strings, sizeof(strings), "/shop: %s bought a V.I.P account.",name);
					ABroadCast(COLOR_YELLOW,strings,6);
					mysql_real_escape_string(strings, stringss);
					mysql_format(SQL,str,sizeof(str), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
					mysql_tquery(SQL,str,"","");
				}
				if(listitem == 13)
				{
					if(PlayerInfo[playerid][pPremiumPoints] <= 24)
                    {
						ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
						return 1;
					}
					new name[30], strings[200];
					PlayerInfo[playerid][pPremiumPoints] -= 25;
					Update(playerid, pPremiumPointsx);
					GivePlayerCash(playerid, 3000000);
					Update(playerid, pCashx);
					SendClientMessage(playerid, COLOR_YELLOW, "You have bought a $3,000,000 (-25 premium points)");
					GetPlayerName(playerid, name, sizeof(name));
					format(strings, sizeof(strings), "/shop: %s bought a $3,000,000.",name);
					ABroadCast(COLOR_YELLOW,strings,6);
				}
				if(listitem == 14)
				{
					if(PlayerInfo[playerid][pPremiumPoints] <= 119)
                    {
						ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
						return 1;
					}
					new name[30], strings[200];
					PlayerInfo[playerid][pPremiumPoints] -= 120;
					Update(playerid, pPremiumPointsx);
					GivePlayerCash(playerid, 15000000);
					Update(playerid, pCashx);
					SendClientMessage(playerid, COLOR_YELLOW, "You have bought a $15,000,000 (-120 premium points)");
					GetPlayerName(playerid, name, sizeof(name));
					format(strings, sizeof(strings), "/shop: %s bought a $15,000,000.",name);
					ABroadCast(COLOR_YELLOW,strings,6);
				}
				if(listitem == 15)
				{
					if(PlayerInfo[playerid][pPremiumPoints] <= 219)
                    {
						ShowPlayerDialog(playerid, DIALOG_NOPP, DIALOG_STYLE_MSGBOX, "Not enough points", "You don't have enough premium points to do this.", "Close", "");
						return 1;
					}
					new name[30], strings[200];
					PlayerInfo[playerid][pPremiumPoints] -= 220;
					Update(playerid, pPremiumPointsx);
					GivePlayerCash(playerid, 30000000);
					Update(playerid, pCashx);
					SendClientMessage(playerid, COLOR_YELLOW, "You have bought a $30,000,000 (-220 premium points)");
					GetPlayerName(playerid, name, sizeof(name));
					format(strings, sizeof(strings), "/shop: %s bought a $30,000,000.",name);
					ABroadCast(COLOR_YELLOW,strings,6);
				}
			}
		}
	if(dialogid == DIALOG_CHOOSECLANNAME)
	{
	    if(response)
	    {
			if(strlen(inputtext) >= 3 && strlen(inputtext) <= 20)
			{
				new clanname[25],strings[128];
				mysql_real_escape_string(inputtext, clanname);
				strcpy(ClanInfo[PlayerInfo[playerid][pClan]][cClanName], clanname, sizeof(clanname));
				mysql_format(SQL, string, sizeof(string), "UPDATE clans SET `clanName`='%s' WHERE `clanID`='%d'", clanname, PlayerInfo[playerid][pClan]);
				mysql_tquery(SQL,string,"","");
				format(strings, sizeof(strings), "Clan name: %s.", clanname);
				SendClientMessage(playerid, COLOR_GENANNOUNCE, strings);
				ShowPlayerDialog(playerid, DIALOG_CHOOSECLANTAG, DIALOG_STYLE_INPUT, "Clan tag", "Insert clan tag in the box below:\n(You can't change it after that!)", "Ok", "");
			}
			else
			{
				ShowPlayerDialog(playerid, DIALOG_CHOOSECLANNAME, DIALOG_STYLE_INPUT, "Clan name", "Insert clan name in the box below:\nMinimum 3 characters and maximum 20 characters.\n(You can't change it after that!)", "Ok", "");
				return 1;
			}
		}
	}
	if(dialogid == DIALOG_CHOOSECLANTAG)
	{
	    if(response)
	    {
			if(strlen(inputtext) >= 2 && strlen(inputtext) <= 15)
			{
				new clanname[25],strings[256];
				mysql_real_escape_string(inputtext, clanname);
				strcpy(ClanInfo[PlayerInfo[playerid][pClan]][cClanTag], clanname, sizeof(clanname));
				mysql_format(SQL, strings, sizeof(strings), "UPDATE clans SET `clanTag`='%s' WHERE `clanID`='%d'", clanname, PlayerInfo[playerid][pClan]);
				mysql_tquery(SQL,strings,"","");
				format(strings, sizeof(strings), "Clan tag: %s.", clanname);
				SendClientMessage(playerid, COLOR_GENANNOUNCE, strings);
				mysql_format(SQL, strings, sizeof(strings), "SELECT * FROM `clans`");
				mysql_tquery(SQL, strings, "LoadClanInfo", "");
			}
			else
			{
				ShowPlayerDialog(playerid, DIALOG_CHOOSECLANTAG, DIALOG_STYLE_INPUT, "Clan tag", "Insert clan tag in the box below:\nMinimum 2 characters and maximum 15 characters.\n(You can't change it after that!)", "Ok", "");
				return 1;
			}
		}
	}
	if(dialogid == DIALOG_IPHONE)
	{
	    if(response)
	    {
	        if(IsNumeric(inputtext))
			{
			    if(strlen(inputtext) == 4)
				{
				    new numb = strval(inputtext);
					if((inputtext[0] != '0'))
					{
						new query[256];
						format(query, 256, "SELECT * FROM `users` WHERE `PhoneNr` = '%d' ORDER BY `id` ASC", numb);
						new Cache: res = mysql_query(SQL, query);
						if(cache_get_row_count() != 0)
						{
							SendClientMessage(playerid, COLOR_WHITE, "That phone number is used by another player. Choose another one.");
							return 1;
						}
						else
						{
							PlayerInfo[playerid][pPremiumPoints] -= 25;
							Update(playerid, pPremiumPointsx);
							PlayerInfo[playerid][pPhone] = 1;
							PlayerInfo[playerid][pPnumber] = numb;
							new str2[300],name[30],stringss[200];
							mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `PremiumPoints`='%d',`Phone`='1' WHERE `name`='%s'",PlayerInfo[playerid][pPremiumPoints],PlayerInfo[playerid][pNormalName]);
							mysql_tquery(SQL,str2,"","");
							format(string, sizeof(string), "You Bought un iPhone For 15 Premium Points | Your Phone Number : %d", numb);
							SendClientMessage(playerid, COLOR_GREEN, string);
							SendClientMessage(playerid, COLOR_GREEN, "You Can Use [/Turn Off Calls] To Disable Calls");
							SendClientMessage(playerid, COLOR_GREEN, "You Can Use [/Reply Text] To Send Reply For Latest Message");
							mysql_format(SQL,str2,sizeof(str2),"UPDATE users SET `PhoneNr`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pPnumber],PlayerInfo[playerid][pNormalName]);
							mysql_tquery(SQL,str2,"","");
							GetPlayerName(playerid, name, sizeof(name));
							format(str2, sizeof(str2), "/shop: %s bought a iPhone.",name);
							ABroadCast(COLOR_YELLOW,str2,6);
							mysql_real_escape_string(str2, stringss);
							mysql_format(SQL,str2,sizeof(str2), "INSERT INTO `shop_logs` (`playerid`,`Message`) VALUES('%d','%s')",PlayerInfo[playerid][pSQLID],stringss);
							mysql_tquery(SQL,str2,"","");
						}
						cache_delete(res);
					}
					else return SendClientMessage(playerid, COLOR_WHITE, "Phone Number Is Invalid | Use Numbers Between 1000 TO 9999");
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "Phone Number Is Invalid | Use Numbers Between 1000 TO 9999");
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "Phone Number Is Invalid | Use Numbers Between 1000 TO 9999");
		}
	}
	if(dialogid == DIALOG_CHANGENAME)
	{
	    if(response)
		{
		    if(!isnull(inputtext))
				{
					new newname = MySQLCheckAccount(inputtext);
					if(newname != 0) return SCM(playerid,COLOR_WHITE,"{FFB870}This name exist.");
					if(PlayerInfo[playerid][pPhousekey] != 999 && strcmp(PlayerInfo[playerid][pNormalName], HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
					{
						new houseid = PlayerInfo[playerid][pPhousekey];
						strmid(HouseInfo[houseid][hOwner], inputtext, 0, strlen(inputtext), 255);
						mysql_format(SQL,string,sizeof(string),"UPDATE `houses` SET `Owner`='%s' WHERE `ID`='%d'",inputtext,houseid);
						mysql_tquery(SQL,string,"","");
						OnPropTextdrawUpdate(1,PlayerInfo[playerid][pPhousekey]);
			   		}
					if(PlayerInfo[playerid][pPbiskey] != 255)
					{
						new bizid2 = PlayerInfo[playerid][pPbiskey];
						strmid(BizzInfo[bizid2][bOwner], inputtext, 0, strlen(inputtext), 255);
						mysql_format(SQL,string,sizeof(string),"UPDATE `bizz` SET `Owner`='%s' WHERE `ID`='%d'",inputtext,bizid2);
						mysql_tquery(SQL,string,"","");
						OnPropTextdrawUpdate(2,PlayerInfo[playerid][pPbiskey]);
			   		}
			   		if(PlayerInfo[playerid][pPcarkey] != 0)
					{
						new carid = PlayerInfo[playerid][pPcarkey];
						strmid(CarInfo[carid][cOwner], inputtext, 0, strlen(inputtext), 255);
						vUpdate(carid,cOwnerx);
					}
			   		if(PlayerInfo[playerid][pmotokey] != 0)
					{
						new carid = PlayerInfo[playerid][pmotokey];
						strmid(CarInfo[carid][cOwner], inputtext, 0, strlen(inputtext), 255);
						vUpdate(carid,cOwnerx);
					}
					if(PlayerInfo[playerid][pprcarkey2] != 0)
					{
						new carid = PlayerInfo[playerid][pprcarkey2];
						strmid(CarInfo[carid][cOwner], inputtext, 0, strlen(inputtext), 255);
						vUpdate(carid,cOwnerx);
					}
					if(PlayerInfo[playerid][pPPluscarkey] != 0)
					{
						new carid = PlayerInfo[playerid][pPPluscarkey];
						strmid(CarInfo[carid][cOwner], inputtext, 0, strlen(inputtext), 255);
						vUpdate(carid,cOwnerx);
					}
					if(PlayerInfo[playerid][pPPluscarkey2] != 0)
					{
						new carid = PlayerInfo[playerid][pPPluscarkey2];
						strmid(CarInfo[carid][cOwner], inputtext, 0, strlen(inputtext), 255);
						vUpdate(carid,cOwnerx);
					}
			   		if(PlayerInfo[playerid][pprcarkey] != 0)
					{
						new carid = PlayerInfo[playerid][pprcarkey];
						strmid(CarInfo[carid][cOwner], inputtext, 0, strlen(inputtext), 255);
						vUpdate(carid,cOwnerx);
					}
					new str[128],strings[256],name[30];
					mysql_format(SQL,str,sizeof(str),"UPDATE users SET `name`='%s' WHERE `name`='%s'",inputtext,PlayerInfo[playerid][pNormalName]);
					mysql_tquery(SQL,str,"","");
					GetPlayerName(playerid, name, sizeof(name));
					format(strings, sizeof(strings), "/shop: %s changed his name to %s.",name,inputtext);
					ABroadCast(COLOR_YELLOW,strings,6);
					SetPlayerName(playerid, inputtext);
					SCM(playerid,COLOR_LIGHTRED,"Your Name Changed ! | Please Relogin");
				}
				else
				{
					SendClientMessage(playerid, COLOR_LIGHTRED,"Invalid new nickname.");
				}
			}
		}
	if(dialogid == DIALOG_SEXSHOP)
	{
		if(response)
		{
			if(listitem == 0)
			{
				if(GetPlayerCash(playerid) <= 99) return SendClientMessage(playerid, COLOR_GREY, "You don't have enough money.");
				new str[184];
				GivePlayerCash(playerid,-100);
				BizzInfo[InBussines[playerid]][bTill] += 100;
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
				mysql_tquery(SQL,str,"","");
				GameTextForPlayer(playerid, "~r~-$100", 3000, 1);
				GivePlayerWeaponEx(playerid, 10, 1);
			}
			if(listitem == 1)
			{
				if(GetPlayerCash(playerid) <= 99) return SendClientMessage(playerid, COLOR_GREY, "You don't have enough money.");
				new str[184];
				GivePlayerCash(playerid,-100);
				BizzInfo[InBussines[playerid]][bTill] += 100;
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
				mysql_tquery(SQL,str,"","");
				GameTextForPlayer(playerid, "~r~-$100", 3000, 1);
				GivePlayerWeaponEx(playerid, 11, 1);
			}
			if(listitem == 2)
			{
				if(GetPlayerCash(playerid) <= 99) return SendClientMessage(playerid, COLOR_GREY, "You don't have enough money.");
				new str[184];
				GivePlayerCash(playerid,-100);
				BizzInfo[InBussines[playerid]][bTill] += 100;
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
				mysql_tquery(SQL,str,"","");
				GameTextForPlayer(playerid, "~r~-$100", 3000, 1);
				GivePlayerWeaponEx(playerid, 13, 1);
			}
			if(listitem == 3)
			{
				if(GetPlayerCash(playerid) <= 99) return SendClientMessage(playerid, COLOR_GREY, "You don't have enough money.");
				new str[184];
				GivePlayerCash(playerid,-100);
				BizzInfo[InBussines[playerid]][bTill] += 100;
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
				mysql_tquery(SQL,str,"","");
				GameTextForPlayer(playerid, "~r~-$100", 3000, 1);
				GivePlayerWeaponEx(playerid, 12, 1);
			}
			if(listitem == 4)
			{
				if(GetPlayerCash(playerid) <= 149) return SendClientMessage(playerid, COLOR_GREY, "You don't have enough money.");
				new str[184];
				GivePlayerCash(playerid,-150);
				BizzInfo[InBussines[playerid]][bTill] += 150;
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
				mysql_tquery(SQL,str,"","");
				GameTextForPlayer(playerid, "~r~-$150", 3000, 1);
				GivePlayerWeaponEx(playerid, 14, 1);
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_BAR)
	{
		if(response)
		{
			if(listitem == 0)
			{
				if(GetPlayerCash(playerid) <= 2) return SendClientMessage(playerid, COLOR_GREY, "You don't have enough money.");
				GivePlayerCash(playerid,-1);
				GameTextForPlayer(playerid, "~r~-1 Rials", 3000, 1);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
			}
			if(listitem == 1)
			{
				if(GetPlayerCash(playerid) <= 6) return SendClientMessage(playerid, COLOR_GREY, "You don't have enough money.");
				GivePlayerCash(playerid,-5);
				GameTextForPlayer(playerid, "~r~-5 Rials", 3000, 1);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			}
			if(listitem == 2)
			{
				if(GetPlayerCash(playerid) <= 7) return SendClientMessage(playerid, COLOR_GREY, "You don't have enough money.");
				if(PlayerDrunk[playerid] > 9) return SendClientMessage(playerid, COLOR_WHITE, "You are drunk.");
				GivePlayerCash(playerid,-6);
				GameTextForPlayer(playerid, "~r~-6 Rials", 3000, 1);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
				PlayerDrunk[playerid] += 1;
			}
			if(listitem == 3)
			{
				if(GetPlayerCash(playerid) <= 10) return SendClientMessage(playerid, COLOR_GREY, "You don't have enough money.");
				if(PlayerDrunk[playerid] > 9) return SendClientMessage(playerid, COLOR_WHITE, "You are drunk.");
				GivePlayerCash(playerid,-9);
				GameTextForPlayer(playerid, "~r~-9 Rials", 3000, 1);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
				PlayerDrunk[playerid] += 1;
			}
		}
		return 1;
	}
    if(dialogid == Dialog_24)
	{
	    if(response)
	    {
	        new bid = InBussines[playerid];
			if(listitem == 0)
			{
				if(GetPlayerCash(playerid) <= 499) return SendClientMessage(playerid, COLOR_GREY, "You don't have enough money.");
			    new str[184];
			    GivePlayerCash(playerid,-500);
				BizzInfo[bid][bTill] += 500;
    			mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[bid][bTill],bid);
				mysql_tquery(SQL,str,"","");
			    GameTextForPlayer(playerid, "~r~-$500", 3000, 1);
			    new randphone = 1000000 + random(9999);
		    	PlayerInfo[playerid][pPnumber] = randphone;
			    format(string, sizeof(string), "You have purchased a cell phone! Your number is %d.", randphone);
			    SendClientMessage(playerid, COLOR_WHITE, string);
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Money`='%d',`PhoneNr`='%d' WHERE `name`='%s'",GetPlayerCash(playerid),PlayerInfo[playerid][pPnumber],PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
			    return 1;
            }
			if(listitem == 1)
			{
				if(GetPlayerCash(playerid) <= 49) return SendClientMessage(playerid, COLOR_GREY, "You don't have enough money.");
			    GivePlayerCash(playerid,-50);
				BizzInfo[bid][bTill] += 50;
			    GameTextForPlayer(playerid, "~r~-$50", 3000, 1);
                PlayerInfo[playerid][pPhoneBook] = 1;
			    SendClientMessage(playerid, COLOR_WHITE, "You have purchased a phonebook. Use /number to trace a number down!");
	 	 		new str[184];
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Money`='%d',`Phonebook`='%d' WHERE `name`='%s'",GetPlayerCash(playerid),PlayerInfo[playerid][pPhoneBook],PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[bid][bTill],bid);
				mysql_tquery(SQL,str,"","");
			    return 1;
            }
			if(listitem == 2)
	    	{
				if(GetPlayerCash(playerid) <= 499) return SendClientMessage(playerid, COLOR_GREY, "You don't have enough money.");
				//if(PinLogged[playerid] == 0)return SCM(playerid, COLOR_DARKNICERED,"{FFFFFF}Your Account Is {ff0000}Blocked{FFFFFF}  | Use {ff0000}/Pin{ffffff} To Unlock That");
				if(PlayerInfo[playerid][pCredits] > 1000) return SCM(playerid,COLOR_WHITE,"{FFB870}You have too many credits.");
				if(GetPlayerCash(playerid) < 500) return SCM(playerid,COLOR_WHITE,"{FFB870}You do not have the money you need.");
				GivePlayerCash(playerid, - 500);
    		    BizzInfo[bid][bTill] += 500;
			    PlayerInfo[playerid][pCredits] += 300;
			    GameTextForPlayer(playerid, "~r~-$500", 3000, 1);
				SCM(playerid,COLOR_WHITE,"You have purchased a phone credit voucher.");
				Update(playerid, pCashx);
				Update(playerid, pCreditsx);
				new str[184];
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[bid][bTill],bid);
				mysql_tquery(SQL,str,"","");
				return 1;
			}
	    	if(listitem == 3)
			{
				if(GetPlayerCash(playerid) <= 1999) return SendClientMessage(playerid, COLOR_GREY, "You don't have enough money.");
    		    GivePlayerCash(playerid, - 2000);
    		    BizzInfo[bid][bTill] += 2000;
		        PlayerInfo[playerid][pWTalkie] = 1;
			    GameTextForPlayer(playerid, "~r~-$2,000", 3000, 1);
			    SendClientMessage(playerid, COLOR_WHITE, "You have purchased a walkie talkie - use /setfrequency to tune it, and /wt to speak.");
	 	 		new str[184];
				mysql_format(SQL,str,sizeof(str),"UPDATE users SET `Money`='%d',`WTalkie`='1' WHERE `name`='%s'",GetPlayerCash(playerid),PlayerInfo[playerid][pNormalName]);
				mysql_tquery(SQL,str,"","");
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[bid][bTill],bid);
				mysql_tquery(SQL,str,"","");
			    return 1;
	    	}
			if(listitem == 4)
			{
				if(GetPlayerCash(playerid) <= 1999) return SendClientMessage(playerid, COLOR_GREY, "You don't have enough money.");
    		    GivePlayerCash(playerid, - 2000);
    		    BizzInfo[bid][bTill] += 2000;
			    GameTextForPlayer(playerid, "~r~-$2,000", 3000, 1);
			    SendClientMessage(playerid, COLOR_WHITE, "You have purchased a digital camera.");
				GivePlayerWeaponEx(playerid, 43, 60);
	 	 		new str[184];
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[bid][bTill],bid);
				mysql_tquery(SQL,str,"","");
			    return 1;
	    	}
			if(listitem == 5)
			{
				if(GetPlayerCash(playerid) <= 4999) return SendClientMessage(playerid, COLOR_GREY, "You don't have enough money.");
    		    GivePlayerCash(playerid, - 5000);
    		    BizzInfo[bid][bTill] += 5000;
			    GameTextForPlayer(playerid, "~r~-$5,000", 3000, 1);
			    SendClientMessage(playerid, COLOR_WHITE, "You have purchased a gas can.");
				PlayerInfo[playerid][pGasCan] = 1;
				Update(playerid, pGasCanx);
	 	 		new str[184];
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[bid][bTill],bid);
				mysql_tquery(SQL,str,"","");
			    return 1;
	    	}
			else
    		{
		    	SendClientMessage(playerid, COLOR_WHITE, "{FFB870}You don't have the cash for that.");
			}
		}
    	return 1;
	}
	if(dialogid == DIALOG_CANCELJOB)
	{
	    if(response)
	    {
	        Trucker[playerid] = 0;
	        Trucker2[playerid] = 0;
	        DestroyVehicle(viddd[playerid]);
	        viddd[playerid] = 0;
	        SetVehicleToRespawn(TruckID[playerid]);
	        TruckID[playerid] = 0;
	        DisablePlayerCheckpoint(playerid);
	        SendClientMessage(playerid, COLOR_WHITE, "You have disabled your current checkpoint.");
		}
		return 1;
	}
	if(dialogid == DIALOG_TRUCKSELECTX)
	{
	    if(response)
	    {
			if(Trucker4[playerid] == 1)
			{
                SetTimerEx("Truckerr1", 200, 0, "i",playerid);
			}
			else if(Trucker4[playerid] == 2)
			{
			    SetTimerEx("Truckerr2", 200, 0, "i",playerid);
			}
			else if(Trucker4[playerid] == 3)
			{
			    SetTimerEx("Truckerr3", 200, 0, "i",playerid);
			}
			else if(Trucker4[playerid] == 4)
			{
			    SetTimerEx("Truckerr4", 200, 0, "i",playerid);
			}
			Trucker4[playerid] = 0;
		}
		return 1;
	}
	if(dialogid == DIALOG_TRUCKSELECT)
	{
	    if(response)
	    {
	        new Float:pX,Float:pY,Float:pZ,Float:vA;
			GetPlayerPos(playerid,pX,pY,pZ);
			GetVehicleZAngle(GetPlayerVehicleID(playerid),vA);
			SetTimerEx("AttachTrailerrr", 1000, 0, "i", playerid);
			Trucker2[playerid] = 0;
			SendClientMessage(playerid, COLOR_BLUE, "GoTo CheckPoints On The Map");
			DisablePlayerCheckpoint(playerid);
	        if(Trucker3[playerid] == 1)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[2][0],CHKTruck[2][1],CHKTruck[2][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 1;
			}
			else if(Trucker3[playerid] == 2)
			{
			    SetPlayerCheckpoint(playerid,CHKTruck[4][0],CHKTruck[4][1],CHKTruck[4][2],5.0);
				viddd[playerid] = CreateVehicle(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 2;
			}
			else if(Trucker3[playerid] == 3)
			{
			    SetPlayerCheckpoint(playerid,CHKTruck[11][0],CHKTruck[11][1],CHKTruck[11][2],5.0);
				viddd[playerid] = CreateVehicle(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 3;
			}
			else if(Trucker3[playerid] == 4)
			{
			    SetPlayerCheckpoint(playerid,CHKTruck[10][0],CHKTruck[10][1],CHKTruck[10][2],5.0);
				viddd[playerid] = CreateVehicle(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 4;
			}
			else if(Trucker3[playerid] == 5)
			{
			    SetPlayerCheckpoint(playerid,CHKTruck[7][0],CHKTruck[7][1],CHKTruck[7][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 5;
			}
			else if(Trucker3[playerid] == 6)
			{
			    SetPlayerCheckpoint(playerid,CHKTruck[6][0],CHKTruck[6][1],CHKTruck[6][2],5.0);
				viddd[playerid] = CreateVehicle(584, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				SetVehicleHealth(GetPlayerVehicleID(playerid), 315);
				Trucker[playerid] = 6;
			}
			else if(Trucker3[playerid] == 7)
			{
			    SetPlayerCheckpoint(playerid,CHKTruck[8][0],CHKTruck[8][1],CHKTruck[8][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 7;
			}
			else if(Trucker3[playerid] == 8)
			{
			    SetPlayerCheckpoint(playerid,CHKTruck[9][0],CHKTruck[9][1],CHKTruck[9][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 8;
			}
			else if(Trucker3[playerid] == 9)
			{
			    SetPlayerCheckpoint(playerid,CHKTruck[3][0],CHKTruck[3][1],CHKTruck[3][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 9;
			}
			else if(Trucker3[playerid] == 10)
			{
			    SetPlayerCheckpoint(playerid,CHKTruck[5][0],CHKTruck[5][1],CHKTruck[5][2],5.0);
				viddd[playerid] = CreateVehicle(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 10;
			}
			else if(Trucker3[playerid] == 11)
			{
			    SetPlayerCheckpoint(playerid,CHKTruck[12][0],CHKTruck[12][1],CHKTruck[12][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 11;
			}
			else if(Trucker3[playerid] == 12)
			{
			    SetPlayerCheckpoint(playerid,CHKTruck[13][0],CHKTruck[13][1],CHKTruck[13][2],5.0);
				viddd[playerid] = CreateVehicle(584, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				SetVehicleHealth(GetPlayerVehicleID(playerid), 315);
				Trucker[playerid] = 12;
			}
			else if(Trucker3[playerid] == 13)
			{
			    SetPlayerCheckpoint(playerid,CHKTruck[17][0],CHKTruck[17][1],CHKTruck[17][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 13;
			}
			else if(Trucker3[playerid] == 14)
			{
			    SetPlayerCheckpoint(playerid,CHKTruck[15][0],CHKTruck[15][1],CHKTruck[15][2],5.0);
				viddd[playerid] = CreateVehicle(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 14;
			}
			else if(Trucker3[playerid] == 15)
			{
			    SetPlayerCheckpoint(playerid,CHKTruck[16][0],CHKTruck[16][1],CHKTruck[16][2],5.0);
				viddd[playerid] = CreateVehicle(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 15;
			}
			else if(Trucker3[playerid] == 16)
			{
			    SetPlayerCheckpoint(playerid,CHKTruck[14][0],CHKTruck[14][1],CHKTruck[14][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 16;
			}
			Trucker3[playerid] = 0;
		}
		else
		{
			SetTimerEx("Truckerr1", 200, 0, "i",playerid);
		}
	}
	if(dialogid == DIALOG_TRUCKSELECT2)
	{
	    if(response)
	    {
     		new Float:pX,Float:pY,Float:pZ,Float:vA;
			GetPlayerPos(playerid,pX,pY,pZ);
			GetVehicleZAngle(GetPlayerVehicleID(playerid),vA);
			SetTimerEx("AttachTrailerrr", 1000, 0, "i", playerid);
			Trucker2[playerid] = 0;
			SendClientMessage(playerid, COLOR_BLUE, "Go To Checkpoints On The Map !");
			DisablePlayerCheckpoint(playerid);
			if(Trucker3[playerid] == 1)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[11][0],CHKTruck[11][1],CHKTruck[11][2],5.0);
				viddd[playerid] = CreateVehicle(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 3;
			}
			else if(Trucker3[playerid] == 2)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[10][0],CHKTruck[10][1],CHKTruck[10][2],5.0);
				viddd[playerid] = CreateVehicle(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 4;
			}
			else if(Trucker3[playerid] == 3)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[7][0],CHKTruck[7][1],CHKTruck[7][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 5;
			}
			else if(Trucker3[playerid] == 4)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[6][0],CHKTruck[6][1],CHKTruck[6][2],5.0);
				viddd[playerid] = CreateVehicle(584, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				SetVehicleHealth(GetPlayerVehicleID(playerid), 315);
				Trucker[playerid] = 6;
			}
			else if(Trucker3[playerid] == 5)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[8][0],CHKTruck[8][1],CHKTruck[8][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 7;
			}
			else if(Trucker3[playerid] == 6)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[9][0],CHKTruck[9][1],CHKTruck[9][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 8;
			}
			else if(Trucker3[playerid] == 7)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[0][0],CHKTruck[0][1],CHKTruck[0][2],5.0);
				viddd[playerid] = CreateVehicle(584, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				SetVehicleHealth(GetPlayerVehicleID(playerid), 315);
				Trucker[playerid] = 17;
			}
			else if(Trucker3[playerid] == 8)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[12][0],CHKTruck[12][1],CHKTruck[12][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 11;
			}
			else if(Trucker3[playerid] == 9)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[13][0],CHKTruck[13][1],CHKTruck[13][2],5.0);
				viddd[playerid] = CreateVehicle(584, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				SetVehicleHealth(GetPlayerVehicleID(playerid), 315);
				Trucker[playerid] = 12;
			}
			else if(Trucker3[playerid] == 10)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[17][0],CHKTruck[17][1],CHKTruck[17][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 13;
			}
			else if(Trucker3[playerid] == 11)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[15][0],CHKTruck[15][1],CHKTruck[15][2],5.0);
				viddd[playerid] = CreateVehicle(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 14;
			}
			else if(Trucker3[playerid] == 12)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[16][0],CHKTruck[16][1],CHKTruck[16][2],5.0);
				viddd[playerid] = CreateVehicle(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 15;
			}
			Trucker3[playerid] = 0;
		}
		else
		{
			SetTimerEx("Truckerr2", 200, 0, "i",playerid);
		}
	}
	if(dialogid == DIALOG_TRUCKSELECT3)
	{
	    if(response)
	    {
	        new Float:pX,Float:pY,Float:pZ,Float:vA;
			GetPlayerPos(playerid,pX,pY,pZ);
			GetVehicleZAngle(GetPlayerVehicleID(playerid),vA);
			SetTimerEx("AttachTrailerrr", 1000, 0, "i", playerid);
			Trucker2[playerid] = 0;
			SendClientMessage(playerid, COLOR_BLUE, "Go To Checkpoints On The Map !");
			DisablePlayerCheckpoint(playerid);
	        if(Trucker3[playerid] == 1)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[2][0],CHKTruck[2][1],CHKTruck[2][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 1;
			}
			else if(Trucker3[playerid] == 2)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[4][0],CHKTruck[4][1],CHKTruck[4][2],5.0);
				viddd[playerid] = CreateVehicle(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 2;
			}
			else if(Trucker3[playerid] == 3)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[3][0],CHKTruck[3][1],CHKTruck[3][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 9;
			}
			else if(Trucker3[playerid] == 4)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[5][0],CHKTruck[5][1],CHKTruck[5][2],5.0);
				viddd[playerid] = CreateVehicle(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 10;
			}
			else if(Trucker3[playerid] == 5)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[1][0],CHKTruck[1][1],CHKTruck[1][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 18;
			}
			else if(Trucker3[playerid] == 6)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[0][0],CHKTruck[0][1],CHKTruck[0][2],5.0);
				viddd[playerid] = CreateVehicle(584, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				SetVehicleHealth(GetPlayerVehicleID(playerid), 315);
				Trucker[playerid] = 17;
			}
			else if(Trucker3[playerid] == 7)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[12][0],CHKTruck[12][1],CHKTruck[12][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 11;
			}
			else if(Trucker3[playerid] == 8)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[13][0],CHKTruck[13][1],CHKTruck[13][2],5.0);
				viddd[playerid] = CreateVehicle(584, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				SetVehicleHealth(GetPlayerVehicleID(playerid), 315);
				Trucker[playerid] = 12;
			}
			else if(Trucker3[playerid] == 9)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[17][0],CHKTruck[17][1],CHKTruck[17][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 13;
			}
			else if(Trucker3[playerid] == 10)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[15][0],CHKTruck[15][1],CHKTruck[15][2],5.0);
				viddd[playerid] = CreateVehicle(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 14;
			}
			else if(Trucker3[playerid] == 11)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[16][0],CHKTruck[16][1],CHKTruck[16][2],5.0);
				viddd[playerid] = CreateVehicle(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 15;
			}
			else if(Trucker3[playerid] == 12)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[14][0],CHKTruck[14][1],CHKTruck[14][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 16;
			}
			Trucker3[playerid] = 0;
		}
		else
		{
			SetTimerEx("Truckerr3", 200, 0, "i",playerid);
		}
	}
	if(dialogid == DIALOG_TRUCKSELECT4)
	{
	    if(response)
	    {
	        new Float:pX,Float:pY,Float:pZ,Float:vA;
			GetPlayerPos(playerid,pX,pY,pZ);
			GetVehicleZAngle(GetPlayerVehicleID(playerid),vA);
			SetTimerEx("AttachTrailerrr", 1000, 0, "i", playerid);
			Trucker2[playerid] = 0;
			SendClientMessage(playerid, COLOR_BLUE, "Go To Checkpoints On The Map !");
			DisablePlayerCheckpoint(playerid);
	        if(Trucker3[playerid] == 1)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[2][0],CHKTruck[2][1],CHKTruck[2][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 1;
			}
			else if(Trucker3[playerid] == 2)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[4][0],CHKTruck[4][1],CHKTruck[4][2],5.0);
				viddd[playerid] = CreateVehicle(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 2;
			}
			else if(Trucker3[playerid] == 3)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[11][0],CHKTruck[11][1],CHKTruck[11][2],5.0);
				viddd[playerid] = CreateVehicle(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 3;
			}
			else if(Trucker3[playerid] == 4)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[10][0],CHKTruck[10][1],CHKTruck[10][2],5.0);
				viddd[playerid] = CreateVehicle(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 4;
			}
			else if(Trucker3[playerid] == 5)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[7][0],CHKTruck[7][1],CHKTruck[7][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 5;
			}
			else if(Trucker3[playerid] == 6)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[6][0],CHKTruck[6][1],CHKTruck[6][2],5.0);
				viddd[playerid] = CreateVehicle(584, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				SetVehicleHealth(GetPlayerVehicleID(playerid), 315);
				Trucker[playerid] = 6;
			}
			else if(Trucker3[playerid] == 7)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[8][0],CHKTruck[8][1],CHKTruck[8][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 7;
			}
			else if(Trucker3[playerid] == 8)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[9][0],CHKTruck[9][1],CHKTruck[9][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 8;
			}
			else if(Trucker3[playerid] == 9)
	        {
         		SetPlayerCheckpoint(playerid,CHKTruck[3][0],CHKTruck[3][1],CHKTruck[3][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 9;
			}
			else if(Trucker3[playerid] == 10)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[5][0],CHKTruck[5][1],CHKTruck[5][2],5.0);
				viddd[playerid] = CreateVehicle(450, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 10;
			}
			else if(Trucker3[playerid] == 11)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[1][0],CHKTruck[1][1],CHKTruck[1][2],5.0);
				viddd[playerid] = CreateVehicle(435, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				Trucker[playerid] = 18;
			}
			else if(Trucker3[playerid] == 12)
	        {
	            SetPlayerCheckpoint(playerid,CHKTruck[0][0],CHKTruck[0][1],CHKTruck[0][2],5.0);
				viddd[playerid] = CreateVehicle(584, pX+6, pY+6, pZ+6, vA, -1, -1, -1);
				SetVehicleHealth(GetPlayerVehicleID(playerid), 315);
				Trucker[playerid] = 17;
			}
			Trucker3[playerid] = 0;
		}
		else
		{
			SetTimerEx("Truckerr4", 200, 0, "i",playerid);
		}
	}
	if(dialogid == DIALOG_TRUCKER1)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
	            Trucker3[playerid] = 1;
			}
			if(listitem == 1)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 2)
	            {
	                format(string,sizeof(string),"You Need Skill 2 To the trucker job to carry illegal goods.\nType /Skills");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
					Trucker4[playerid] = 1;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 1)
				{
				    format(string,sizeof(string),"If you choose to deliver the stolen goods you will receive 25% more money, but you can be arrested if you are caught by the police.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 2;
				}
			}
			if(listitem == 2)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 2)
	            {
	                format(string,sizeof(string),"You need skill 2 at the trucker job to carry illegal goods.\n Type /Skills ");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 1;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 1)
				{
				    format(string,sizeof(string),"If you choose to deliver the stolen goods you will receive 25% more money, but you can be arrested if you are caught by the police.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 3;
				}
			}
			if(listitem == 3)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 2)
	            {
	                format(string,sizeof(string),"You need skill 2 at the trucker job to carry illegal goods.\nType /Skills");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 1;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 1)
				{
				    format(string,sizeof(string),"If you choose to deliver the stolen goods you will receive 25% more money, but you can be arrested if you are caught by the police.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 4;
				}
			}
			if(listitem == 4)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 5;
			}
			if(listitem == 5)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 3)
	            {
	                format(string,sizeof(string),"You Need Skill 3 To the trucker job to carry explosives.\nType /Skills ");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 1;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 2)
				{
				    format(string,sizeof(string),"If you choose to deliver explosive merchandise, you will receive 50% more money, but you can explode if you're hit.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 6;
				}
			}
			if(listitem == 6)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 7;
			}
			if(listitem == 7)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 8;
			}
			if(listitem == 8)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 9;
			}
			if(listitem == 9)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 2)
	            {
	                format(string,sizeof(string),"You Need Skill 2 To the trucker job to carry illegal goods.\nType /Skills 2.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 1;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 1)
				{
				    format(string,sizeof(string),"If you choose to deliver the stolen goods you will receive 25% more money, but you can be arrested if you are caught by the police.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 10;
				}
			}
			if(listitem == 10)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 11;
			}
			if(listitem == 11)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 3)
	            {
	                format(string,sizeof(string),"You Need Skill 3 To the trucker job to carry explosives.\nType /Skills ");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 1;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 2)
				{
				    format(string,sizeof(string),"If you choose to deliver explosive merchandise, you will receive 50% more money, but you can explode if you're hit.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 12;
				}
			}
			if(listitem == 12)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 13;
			}
			if(listitem == 13)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 2)
	            {
	                format(string,sizeof(string),"You Need Skill 2 To the trucker job to carry illegal goods.\nType /Skills 2.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 1;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 1)
				{
				    format(string,sizeof(string),"If you choose to deliver the stolen goods you will receive 25% more money, but you can be arrested if you are caught by the police.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 14;
				}
			}
			if(listitem == 14)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 2)
	            {
	                format(string,sizeof(string),"You Need Skill 2 To the trucker job to carry illegal goods.\nType /Skills 2.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 1;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 1)
				{
				    format(string,sizeof(string),"If you choose to deliver the stolen goods you will receive 25% more money, but you can be arrested if you are caught by the police.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 15;

				}
			}
			if(listitem == 15)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 16;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_TRUCKER2)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 2)
	            {
	                format(string,sizeof(string),"You Need Skill 2 To the trucker job to carry illegal goods.\nType /Skills 2.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 2;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 1)
				{
				    format(string,sizeof(string),"If you choose to deliver the stolen goods you will receive 25% more money, but you can be arrested if you are caught by the police.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT2, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 1;

				}
			}
			if(listitem == 1)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 2)
	            {
	                format(string,sizeof(string),"You Need Skill 2 To the trucker job to carry illegal goods.\nType /Skills 2.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 2;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 1)
				{
				    format(string,sizeof(string),"If you choose to deliver the stolen goods you will receive 25% more money, but you can be arrested if you are caught by the police.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT2, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 2;

				}
			}
			if(listitem == 2)
	        {
	           	format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT2, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 3;
			}
			if(listitem == 3)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 3)
	            {
	                format(string,sizeof(string),"You Need Skill 3 To the trucker job to carry explosives.\nType /Skills ");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 2;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 2)
				{
				    format(string,sizeof(string),"If you choose to deliver explosive merchandise, you will receive 50% more money, but you can explode if you're hit.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT2, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 4;
				}
			}
			if(listitem == 4)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT2, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 5;
			}
			if(listitem == 5)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT2, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 6;
			}
			if(listitem == 6)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 3)
	            {
	                format(string,sizeof(string),"You Need Skill 3 To the trucker job to carry explosives.\nType /Skills ");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 2;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 2)
				{
				    format(string,sizeof(string),"If you choose to deliver explosive merchandise, you will receive 50% more money, but you can explode if you're hit.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT2, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 7;
				}
			}
			if(listitem == 7)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT2, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 8;
			}
			if(listitem == 8)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 3)
	            {
	                format(string,sizeof(string),"You Need Skill 3 To the trucker job to carry explosives.\nType /Skills ");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 2;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 2)
				{
				    format(string,sizeof(string),"If you choose to deliver explosive merchandise, you will receive 50% more money, but you can explode if you're hit.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT2, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 9;
				}
			}
			if(listitem == 9)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT2, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 10;
			}
			if(listitem == 10)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 2)
	            {
	                format(string,sizeof(string),"You Need Skill 2 To the trucker job to carry illegal goods.\nType /Skills 2.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 2;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 1)
				{
				    format(string,sizeof(string),"If you choose to deliver the stolen goods you will receive 25% more money, but you can be arrested if you are caught by the police.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT2, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 11;

				}
			}
			if(listitem == 11)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 2)
	            {
	                format(string,sizeof(string),"You Need Skill 2 To the trucker job to carry illegal goods.\nType /Skills 2.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 2;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 1)
				{
				    format(string,sizeof(string),"If you choose to deliver the stolen goods you will receive 25% more money, but you can be arrested if you are caught by the police.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT2, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 12;

				}
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_TRUCKER3)
	{
	    if(response)
	    {
			if(listitem == 0)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT3, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 1;
			}
			if(listitem == 1)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 2)
	            {
	                format(string,sizeof(string),"You Need Skill 2 To the trucker job to carry illegal goods.\nType /Skills 2.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 3;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 1)
				{
				    format(string,sizeof(string),"If you choose to deliver the stolen goods you will receive 25% more money, but you can be arrested if you are caught by the police.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT3, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 2;

				}
			}
			if(listitem == 2)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT3, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 3;
			}
			if(listitem == 3)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 2)
	            {
	                format(string,sizeof(string),"You Need Skill 2 To the trucker job to carry illegal goods.\nType /Skills 2.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 3;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 1)
				{
				    format(string,sizeof(string),"If you choose to deliver the stolen goods you will receive 25% more money, but you can be arrested if you are caught by the police.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT3, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 4;

				}
			}
			if(listitem == 4)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT3, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 5;
			}
			if(listitem == 5)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 3)
	            {
	                format(string,sizeof(string),"You Need Skill 3 To the trucker job to carry explosives.\nType /Skills ");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 3;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 2)
				{
				    format(string,sizeof(string),"If you choose to deliver explosive merchandise, you will receive 50% more money, but you can explode if you're hit.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT3, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 6;
				}
			}
			if(listitem == 6)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT3, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 7;
			}
			if(listitem == 7)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 3)
	            {
	                format(string,sizeof(string),"You Need Skill 3 To the trucker job to carry explosives.\nType /Skills ");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 3;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 2)
				{
				    format(string,sizeof(string),"If you choose to deliver explosive merchandise, you will receive 50% more money, but you can explode if you're hit.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT3, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 8;
				}
			}
			if(listitem == 8)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT3, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 9;
			}
			if(listitem == 9)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 2)
	            {
	                format(string,sizeof(string),"You Need Skill 2 To the trucker job to carry illegal goods.\nType /Skills 2.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 3;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 1)
				{
				    format(string,sizeof(string),"If you choose to deliver the stolen goods you will receive 25% more money, but you can be arrested if you are caught by the police.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT3, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 10;

				}
			}
			if(listitem == 10)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 2)
	            {
	                format(string,sizeof(string),"You Need Skill 2 To the trucker job to carry illegal goods.\nType /Skills 2.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 3;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 1)
				{
				    format(string,sizeof(string),"If you choose to deliver the stolen goods you will receive 25% more money, but you can be arrested if you are caught by the police.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT3, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 11;

				}
			}
			if(listitem == 11)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT3, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 12;
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_TRUCKER4)
	{
	    if(response)
	    {
			if(listitem == 0)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT4, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 1;
			}
			if(listitem == 1)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 2)
	            {
	                format(string,sizeof(string),"You Need Skill 2 To the trucker job to carry illegal goods.\nType /Skills 2.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 4;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 1)
				{
				    format(string,sizeof(string),"If you choose to deliver the stolen goods you will receive 25% more money, but you can be arrested if you are caught by the police.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT4, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 2;

				}
			}
			if(listitem == 2)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 2)
	            {
	                format(string,sizeof(string),"You Need Skill 2 To the trucker job to carry illegal goods.\nType /Skills 2.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 4;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 1)
				{
				    format(string,sizeof(string),"If you choose to deliver the stolen goods you will receive 25% more money, but you can be arrested if you are caught by the police.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT4, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 3;

				}
			}
			if(listitem == 3)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 2)
	            {
	                format(string,sizeof(string),"You Need Skill 2 To the trucker job to carry illegal goods.\nType /Skills 2.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 4;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 1)
				{
				    format(string,sizeof(string),"If you choose to deliver the stolen goods you will receive 25% more money, but you can be arrested if you are caught by the police.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT4, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 4;

				}
			}
			if(listitem == 4)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT4, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 5;
			}
			if(listitem == 5)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 3)
	            {
	                format(string,sizeof(string),"You Need Skill 3 To the trucker job to carry explosives.\nType /Skills ");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 4;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 2)
				{
				    format(string,sizeof(string),"If you choose to deliver explosive merchandise, you will receive 50% more money, but you can explode if you're hit.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT4, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 6;
				}
			}
			if(listitem == 6)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT4, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 7;
			}
			if(listitem == 7)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT4, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 8;
			}
			if(listitem == 8)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT4, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 9;
			}
			if(listitem == 9)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 2)
	            {
	                format(string,sizeof(string),"You Need Skill 2 To the trucker job to carry illegal goods.\nType /Skills 2.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 4;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 1)
				{
				    format(string,sizeof(string),"If you choose to deliver the stolen goods you will receive 25% more money, but you can be arrested if you are caught by the police.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT4, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 10;

				}
			}
			if(listitem == 10)
	        {
	            format(string,sizeof(string),"If you do not want to risk being stopped by the police or delivering explosive goods, this is the best choice.");
	            ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT4, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                Trucker3[playerid] = 11;
			}
			if(listitem == 11)
	        {
	            if(PlayerInfo[playerid][pTruckSkill] < 3)
	            {
	                format(string,sizeof(string),"You Need Skill 3 To the trucker job to carry explosives.\nType /Skills ");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECTX, DIALOG_STYLE_MSGBOX, "Trucker", string, "Cancel", "");
                    Trucker4[playerid] = 4;
				}
				else if(PlayerInfo[playerid][pTruckSkill] > 2)
				{
				    format(string,sizeof(string),"If you choose to deliver explosive merchandise, you will receive 50% more money, but you can explode if you're hit.");
	            	ShowPlayerDialog(playerid, DIALOG_TRUCKSELECT4, DIALOG_STYLE_MSGBOX, "Trucker", string, "Choose", "Cancel");
                    Trucker3[playerid] = 12;
				}
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_SELLFISH)
	{
	    if(response)
	    {
			GivePlayerCash(playerid, PlayerInfo[playerid][pFishPrice]);
			Update(playerid, pCashx);
			format(string,sizeof(string),"You sold the fish for $%d", PlayerInfo[playerid][pFishPrice]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			PlayerInfo[playerid][pFishPrice] = 0;
			PlayerInfo[playerid][pFishes] = 0;
			PlayerInfo[playerid][pFishTimes]++;
			PlayerInfo[playerid][pFishRem]--;
			Update(playerid,pFishTimesx);
			Update(playerid,pFishRemx);
			if(PlayerInfo[playerid][pFishSkill] <= 5)
			{
				if(PlayerInfo[playerid][pFishRem] <= 0)
				{
					PlayerInfo[playerid][pFishSkill]++;
					if(PlayerInfo[playerid][pFishSkill] == 2)
					{
						PlayerInfo[playerid][pFishRem] = 34;
					}
					else if(PlayerInfo[playerid][pFishSkill] == 3)
					{
						PlayerInfo[playerid][pFishRem] = 49;
					}
					else if(PlayerInfo[playerid][pFishSkill] == 4)
					{
						PlayerInfo[playerid][pFishRem] = 89;
					}
					else if(PlayerInfo[playerid][pFishSkill] == 5)
					{
						PlayerInfo[playerid][pFishRem] = 99;
					}
					Update(playerid,pFishSkillx);
					Update(playerid,pFishRemx);
					format(string,sizeof(string),"Cngrats ! Your Skill Is Now %d For This Job !",PlayerInfo[playerid][pFishSkill]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				}
			}
		}
		return 1;
	}
    if(dialogid == Dialog_Gym)
	{
	    if(response)
	    {
	        new str[256];
			if(listitem == 0)
			{
				if(GetPlayerCash(playerid) <= 5999) return SendClientMessage(playerid, COLOR_WHITE, "You don't have enough money.");
                GivePlayerCash(playerid, -6000);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
				SendClientMessage(playerid, COLOR_WHITE, "You have successfully purchased this style of fighting.");
				GameTextForPlayer(playerid, "~r~-$6,000", 3000, 1);
				Update(playerid, pCashx);
                PlayerInfo[playerid][pFightStyle] = 1;
				Update(playerid, pFightStylex);
				BizzInfo[InBussines[playerid]][bTill] += 6000;
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
				mysql_tquery(SQL,str,"","");
            }
			if(listitem == 1)
			{
				if(GetPlayerCash(playerid) <= 9999) return SendClientMessage(playerid, COLOR_WHITE, "You don't have enough money.");
                GivePlayerCash(playerid, -10000);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
				SendClientMessage(playerid, COLOR_WHITE, "You have successfully purchased this style of fighting.");
				GameTextForPlayer(playerid, "~r~-$10,000", 3000, 1);
				Update(playerid, pCashx);
                PlayerInfo[playerid][pFightStyle] = 2;
				Update(playerid, pFightStylex);
				BizzInfo[InBussines[playerid]][bTill] += 10000;
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
				mysql_tquery(SQL,str,"","");
            }
			if(listitem == 2)
			{
				if(GetPlayerCash(playerid) <= 9999) return SendClientMessage(playerid, COLOR_WHITE, "You don't have enough money.");
                GivePlayerCash(playerid, -10000);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
				SendClientMessage(playerid, COLOR_WHITE, "You have successfully purchased this style of fighting.");
				GameTextForPlayer(playerid, "~r~-$10,000", 3000, 1);
				Update(playerid, pCashx);
				PlayerInfo[playerid][pFightStyle] = 3;
				Update(playerid, pFightStylex);
				BizzInfo[InBussines[playerid]][bTill] += 10000;
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
				mysql_tquery(SQL,str,"","");
            }
			if(listitem == 3)
			{
				if(GetPlayerCash(playerid) <= 9999) return SendClientMessage(playerid, COLOR_WHITE, "You don't have enough money.");
                GivePlayerCash(playerid, -10000);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
				SendClientMessage(playerid, COLOR_WHITE, "You have successfully purchased this style of fighting.");
				GameTextForPlayer(playerid, "~r~-$10,000", 3000, 1);
				Update(playerid, pCashx);
				PlayerInfo[playerid][pFightStyle] = 4;
				Update(playerid, pFightStylex);
				BizzInfo[InBussines[playerid]][bTill] += 10000;
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
				mysql_tquery(SQL,str,"","");
            }
			if(listitem == 4)
			{
				if(GetPlayerCash(playerid) <= 9999) return SendClientMessage(playerid, COLOR_WHITE, "You don't have enough money.");
                GivePlayerCash(playerid, -10000);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
				SendClientMessage(playerid, COLOR_WHITE, "You have successfully purchased this style of fighting.");
				GameTextForPlayer(playerid, "~r~-$10,000", 3000, 1);
				Update(playerid, pCashx);
				PlayerInfo[playerid][pFightStyle] = 5;
				Update(playerid, pFightStylex);
				BizzInfo[InBussines[playerid]][bTill] += 10000;
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
				mysql_tquery(SQL,str,"","");
            }
			if(listitem == 5)
			{
				if(GetPlayerCash(playerid) <= 1999) return SendClientMessage(playerid, COLOR_WHITE, "You don't have enough money.");
                GivePlayerCash(playerid, -2000);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
				SendClientMessage(playerid, COLOR_WHITE, "You have successfully purchased this style of fighting.");
				GameTextForPlayer(playerid, "~r~-$2,000", 3000, 1);
				Update(playerid, pCashx);
				PlayerInfo[playerid][pFightStyle] = 0;
				Update(playerid, pFightStylex);
				BizzInfo[InBussines[playerid]][bTill] += 2000;
				mysql_format(SQL,str,sizeof(str),"UPDATE `bizz` SET `Till`='%d' WHERE `ID`='%d'",BizzInfo[InBussines[playerid]][bTill],InBussines[playerid]);
				mysql_tquery(SQL,str,"","");
            }
		}
    	return 1;
	}
    if(dialogid == DIALOG_LOGIN2 || dialogid == DIALOG_LOGIN3)
	{
	    if(strlen(inputtext))
	    {
			new tmppass[64];
			mysql_real_escape_string(inputtext, tmppass);
			OnPlayerLogin(playerid,tmppass);
		}
		else
		{
			new stringyy[320];
			gPlayerLogTries[playerid] -= 1;
			if(gPlayerLogTries[playerid] == 1 || gPlayerLogTries[playerid] == 0)
			{
				format(stringyy,sizeof(stringyy),"{FF0000}Incorrect password. You have %d remaining login attempts left.", gPlayerLogTries[playerid]);
				SendClientMessage(playerid, COLOR_RED, stringyy);
			}
			ShowPlayerDialog(playerid,DIALOG_LOGIN2,DIALOG_STYLE_PASSWORD,"SERVER: Login","Welcome to the New Land RP Server.\n\nPlease enter your password below!","Login","Cancel");
			if(gPlayerLogTries[playerid] == -1)
			{
			    new stringkick[256],loginname[30];
			    GetPlayerName(playerid, loginname, sizeof(loginname));
		    	format(stringkick, sizeof(stringkick), "[AdmWarn]: {0087FF}%s {FFFFFF}has been kicked for entering the wrong password 2 times.",loginname);
		   		ABroadCast(COLOR_AdminWarn,stringkick,1);
				Kick(playerid);
			}
		}
	}
    if(dialogid == DIALOG_LOGIN1)
	{
	    if(strlen(inputtext) >= 4 && strlen(inputtext) <= 30)
	    {
			new tmppass[64];
			mysql_real_escape_string(inputtext, tmppass);
			OnPlayerRegister(playerid,tmppass);
		}
		else
		{
			ShowPlayerDialog(playerid,DIALOG_LOGIN1,DIALOG_STYLE_PASSWORD,"SERVER: Registration","Your password must exceed 4 characters!\n\nWelcome to the New Land RP Server.\n\nPlease enter your desired password below!","Register","Cancel");
		}
 	}
 	if(dialogid == DIALOG_REPORT1)
	{
	    if(response)
	    {
	    	if(listitem == 0)
			{
			    new string1[256], string2[256], string3[256], string4[256], string5[256],  string6[256], string7[256], string8[256], string9[256], string10[256], string11[256], string12[1024];
			    format(string1, sizeof(string1), "Account Locked");
			    format(string2, sizeof(string2), "If you have your account locked automatically you will have to wait 72 hours until it is unlocked.");
				format(string3, sizeof(string3), "If you have an account blocked by an admin, open a ticket at ./panel/");
			    format(string4, sizeof(string4), "From there you will be able to open a ticket to discuss with the admins what caused your account to be blocked.");
			    format(string5, sizeof(string5), "Admins will NOT unlock your game account. It's pointless to ask /report how you can unblock your account. You will not receive an answer.");
			    format(string6, sizeof(string6), "Account Damaged");
			    format(string7, sizeof(string7), "If you have your account broken, all you can do is open a ticket and wait for an answer. Responses are usually received in less than 24 hours.");
			    format(string8, sizeof(string8), "If your account was broken, it's just your fault. They are not guilty and no one has any obligation to help you.");
			    format(string9, sizeof(string9), "However, we are trying to help the players that can be helped. So, open a ticket and wait for an answer.");
			    format(string10, sizeof(string10), "To open a ticket, go to www.New Land.co.uk/panel/> Ticket> Open a new ticket");
			    format(string11, sizeof(string11), "DO NOT give /report to tell admins to respond faster to Tickets. You will receive suspend on / report and so on.");
     			format(string12, sizeof(string12), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",string1,string2,string3,string4,string5,string6,string7,string8,string9,string10,string11);
     			ShowPlayerDialog(playerid, DIALOG_REPORT2, DIALOG_STYLE_MSGBOX, "Account Locked", string12, "Close","");
			}
			if(listitem == 1)
			{
				if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] <= 0)
	            {
   				ShowPlayerDialog(playerid, DIALOG_REPORTDM1, DIALOG_STYLE_LIST, "DM Report", "I do not know the name of the player who attacked me\nI know the ID of the player who attacked me", "Select","Cancel");
				}
	            else return SendClientMessage(playerid, COLOR_WHITE, "You are an admin/helper.");
			}
			if(listitem == 2)
			{
                if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] <= 0)
	            {
   				ShowPlayerDialog(playerid, DIALOG_REPORTCH1, DIALOG_STYLE_LIST, "Cheater Report", "I do not know the name of the player using cheats\nI know the ID of the player using cheats", "Select","Cancel");
   				}
	            else return SendClientMessage(playerid, COLOR_WHITE, "You are an admin/helper.");
			}
			if(listitem == 3)
			{
			    new string1[256], string2[256], string3[512];
			    format(string1, sizeof(string1), "To donate and receive goods on this server, send a mail.");
			    format(string2, sizeof(string2), "MAIL: 98darkline@gmail.com\nIn the future donations will be made directly from the panel.");
     			format(string3, sizeof(string3), "%s\n%s",string1,string2);
     			ShowPlayerDialog(playerid, DIALOG_REPORT2, DIALOG_STYLE_MSGBOX, "Donate", string3, "Cancel","");
			}
			if(listitem == 4)
			{
                if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] <= 0)
	            {
				new string1[128],playername[30];
				if(ReportTime[playerid] == 4) return SCM(playerid, COLOR_WHITE,"{f03337}After 4 minutes you can use this action.");
				GetPlayerName(playerid, playername, sizeof(playername));
				SendClientMessage(playerid, COLOR_YELLOW, "Report Submitted .");
   				format(string1,sizeof(string1),"%s [%d] is stuck.",playername,playerid);
				format(reporttext[playerid], sizeof(string1), string1);
				reportreason[playerid] = 1;
				ABroadCast(COLOR_REPORT,string1,1);
				ReportTime[playerid] = 3;
				timerreport[playerid] = SetTimerEx("Reportul", 240000, 0, "%d", playerid);
				}
	            else return SendClientMessage(playerid, COLOR_WHITE, "You are an admin/helper.");
			}
			if(listitem == 5)
			{
                if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] <= 0)
	            {
				new string1[128],playername[30];
				if(ReportTime[playerid] == 4) return SCM(playerid, COLOR_WHITE,"{f03337}After 4 minutes you can use this action.");
				GetPlayerName(playerid, playername, sizeof(playername));
				SendClientMessage(playerid, COLOR_YELLOW, "Report submitted.");
   				format(string1,sizeof(string1),"Report from %s [%d, level %d]: I need an admin for a business",playername,playerid,PlayerInfo[playerid][pLevel]);
				format(reporttext[playerid], sizeof(string1), string1);
				ABroadCast(COLOR_REPORT,string1,1);
				ReportTime[playerid] = 4;
				timerreport[playerid] = SetTimerEx("Reportul", 240000, 0, "%d", playerid);
				}
	            else return SendClientMessage(playerid, COLOR_WHITE, "You are an admin/helper.");
			}
			if(listitem == 6)
			{
                if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] <= 0)
	            {
   				ShowPlayerDialog(playerid, DIALOG_REPORT_AP1, DIALOG_STYLE_INPUT, "Game Problems", "Write down the issue you have below.\nDo not write 'I need an admin', write exactly what you have.", "Send","Close");
   				}
	            else return SendClientMessage(playerid, COLOR_WHITE, "You are an admin/helper.");
			}
		}
	}
	if(dialogid == DIALOG_REPORTDM1)
	{
	    if(response)
	    {
	    	if(listitem == 0)
			{
                if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] <= 0)
	            {
			    ShowPlayerDialog(playerid, DIALOG_REPORTDM2, DIALOG_STYLE_INPUT, "DM Report", "Write below in which location are the players who attacked you.", "Send","Cancel");
			    }
	            else return SendClientMessage(playerid, COLOR_WHITE, "You are an admin/helper.");
			}
			if(listitem == 1)
			{
                if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] <= 0)
	            {
			    ShowPlayerDialog(playerid, DIALOG_REPORTDM3, DIALOG_STYLE_INPUT, "DM Report", "Write down the ID / name of the player who attacked you.", "Send","Cancel");
			    }
	            else return SendClientMessage(playerid, COLOR_WHITE, "You are an admin/helper.");
			}
		}
		else
		{
		    ShowPlayerDialog(playerid, DIALOG_REPORT1, DIALOG_STYLE_LIST, "Report", "My account is broken or blocked\nDM Report\nCheater Report\nQuestions about donations\nI'm stuck/Cad through the map\nI want to do a business and I need some help\nOther Problems", "OK", "Cancel");
		}
	}
	if(dialogid == DIALOG_REPORTCH1)
	{
	    if(response)
	    {
	    	if(listitem == 0)
			{
                if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] <= 0)
	            {
			    new string1[256], string2[256], string3[256], string4[1024];
			    format(string1, sizeof(string1), "If you know the cheat player's id, use /cheats.");
			    format(string2, sizeof(string2), "Abuse of this option is sanctioned by 2 hours on /report.");
			    format(string3, sizeof(string3), "Write here details about the cheat player/player.");
			    format(string4, sizeof(string4), "%s\n%s\n%s",string1,string2,string3);
			    ShowPlayerDialog(playerid, DIALOG_REPORTCH2, DIALOG_STYLE_INPUT, "Report player for cheats", string4, "Send","Cancel");
			    }
	            else return SendClientMessage(playerid, COLOR_WHITE, "You are an admin/helper.");
			}
			if(listitem == 1)
			{
                if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] <= 0)
	            {
			    ShowPlayerDialog(playerid, DIALOG_REPORTCH3, DIALOG_STYLE_MSGBOX, "Report player for cheats", "Type /cheats <id> <reason>", "Cancel","");
			    }
	            else return SendClientMessage(playerid, COLOR_WHITE, "You are an admin/helper.");
			}
		}
		else
		{
		    ShowPlayerDialog(playerid, DIALOG_REPORT1, DIALOG_STYLE_LIST, "Report", "My account is broken or blocked\nDM Report\nCheater Report\nQuestions about donations\nI'm stuck/Cad through the map\nI want to do a business and I need help \nThe other problem", "OK", "Cancel");
		}
	}
	if(dialogid == DIALOG_REPORT_AP1)
	{
		if(response)
		{
            if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] <= 0)
            {
	    	if(ReportTime[playerid] == 4) return SCM(playerid, COLOR_WHITE,"{f03337}After 4 minutes you can use this action.");
			//new sendername[MAX_PLAYER_NAME], string[300];
			GetPlayerName(playerid, sendername, sizeof(sendername));
            SendClientMessage(playerid, COLOR_YELLOW, "Report submitted.");
			format(string, sizeof(string), "Report From {FFA000}%s {FFFFFF}[%d - Level %d]: {009BFF}%s", sendername,playerid,PlayerInfo[playerid][pLevel],inputtext);
			format(reporttext[playerid], sizeof(string), string);
			ABroadCast(COLOR_REPORT,string,1);
			ReportTime[playerid] = 4;
	  		timerreport[playerid] = SetTimerEx("Reportul", 240000, 0, "%d", playerid);
	  		}
	        else return SendClientMessage(playerid, COLOR_WHITE, "You are an admin/helper.");
		}
		else
		{
		    ShowPlayerDialog(playerid, DIALOG_REPORT1, DIALOG_STYLE_LIST, "Report", "My account is broken or blocked\nDM Report\nCheater Report\nQuestions about donations\nI'm stuck/Cad through the map\nI want to do a business and I need some help\nOther Problems", "OK", "Cancel");
		}
	}
	if(dialogid == DIALOG_REPORTDM2)
	{
	    if(response)
	    {
            if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] <= 0)
            {
	    	if(ReportTime[playerid] == 4) return SCM(playerid, COLOR_WHITE,"{f03337}After 4 minutes you can use this action.");
			//new sendername[MAX_PLAYER_NAME], string[300];
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    SendClientMessage(playerid, COLOR_YELLOW, "Report submitted.");
			format(string, sizeof(string), "Report From {FFA000}%s {FFFFFF}[%d - Level %d]: {009BFF}%s", sendername,playerid,PlayerInfo[playerid][pLevel],inputtext);
			format(reporttext[playerid], sizeof(string), string);
			ABroadCast(COLOR_REPORT,string,1);
			ReportTime[playerid] = 4;
  			timerreport[playerid] = SetTimerEx("Reportul", 240000, 0, "%d", playerid);
  			}
	        else return SendClientMessage(playerid, COLOR_WHITE, "You are an admin/helper.");
		}
		else
		{
		    ShowPlayerDialog(playerid, DIALOG_REPORTDM1, DIALOG_STYLE_LIST, "DM Report", "I do not know the name of the player who attacked me\nI know the ID of the player who attacked me", "Select","Cancel");
		}
	}
	if(dialogid == DIALOG_REPORTDM3)
	{
		if(response)
		{
            if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] <= 0)
            {
			if(ReportTime[playerid] == 4) return SCM(playerid, COLOR_WHITE,"{f03337}After 4 minutes you can use this action.");
			//new sendername[MAX_PLAYER_NAME],string[300];
			if(!IsNumeric(inputtext)) return SCM(playerid, COLOR_WHITE,"Invalid ID.");
			new id = strval(inputtext),namee[30];
			if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_WHITE,"Player not connected.");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(id, namee, sizeof(namee));
            SendClientMessage(playerid, COLOR_YELLOW, "Report submitted.");
			format(string, sizeof(string), "%s [%d] Was Reported For DM By %s.", sendername,playerid,namee);
			format(reporttext[playerid], sizeof(string), string);
			reportreason[id] = 2;
			playerreported[playerid] = id;
			ABroadCast(COLOR_REPORT,string,1);
			ReportTime[playerid] = 4;
	  		timerreport[playerid] = SetTimerEx("Reportul", 240000, 0, "%d", playerid);
	  		}
	        else return SendClientMessage(playerid, COLOR_WHITE, "You are an admin/helper.");
		}
	  	else
		{
		    ShowPlayerDialog(playerid, DIALOG_REPORTDM1, DIALOG_STYLE_LIST, "DM Report", "I do not know the name of the player who attacked me\nI know the ID of the player who attacked me", "Select","Cancel");
		}
	}
	if(dialogid == DIALOG_REPORTCH2)
	{
	    if(response)
	    {
            if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] <= 0)
            {
	    	if(ReportTime[playerid] == 2) return SCM(playerid, COLOR_WHITE,"{f03337}You Need 3Minutes To Use This Command");
			//new sendername[MAX_PLAYER_NAME],string[300];
			new id = strval(inputtext);
			GetPlayerName(playerid, sendername, sizeof(sendername));
            SendClientMessage(playerid, COLOR_YELLOW, "Report Submitted !");
			format(string, sizeof(string), "{FFFFFF}Report From {00FF00}%s {FFFFFF}[%d , Level %d]: %s", sendername,playerid,PlayerInfo[playerid][pLevel],inputtext);
			format(cheattext[playerid], sizeof(string), string);
			ABroadCast(COLOR_REPORT,string,1);
			reportreason[id] = 3;
			ReportTime[playerid] = 3;
  			timerreport[playerid] = SetTimerEx("Reportul", 180000, 0, "%d", playerid);
            }
	        else return SendClientMessage(playerid, COLOR_WHITE, "You are an admin/helper.");
		}
		else
		{
		    ShowPlayerDialog(playerid, DIALOG_REPORTCH1, DIALOG_STYLE_LIST, "Cheater Report", "I do not know the name of the player using cheats\nI know the ID of the player using cheats", "Select","Cancel");
		}
	}
	// END REPORT SYSTEM
	return 1;
}

forward SetPlayerHealthEx(playerid, Float:health);
public SetPlayerHealthEx(playerid, Float:health)
{
	SetPlayerHealth(playerid, health);
	Health[playerid] = health;
	return 1;
}

forward GetPlayerHealthEx(playerid, &Float:health);
public GetPlayerHealthEx(playerid, &Float:health)
{
	health = Health[playerid];
	return 1;
}

forward SetPlayerArmourEx(playerid, Float:armour);
public SetPlayerArmourEx(playerid, Float:armour)
{
	SetPlayerArmour(playerid, armour);
	Armour[playerid] = armour;
	return 1;
}

forward GetPlayerArmourEx(playerid, &Float:armour);
public GetPlayerArmourEx(playerid, &Float:armour)
{
	armour = Armour[playerid];
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	new iswar = 0, attackers, defenders;
    if(GoChase[playerid] < 999) ShowPlayerNameTagForPlayer(forplayerid, playerid, 0);

    for(new i = 1; i < sizeof(Turfs) && iswar == 0; i++)
    {
        attackers = WarInfo[i][wAttacker];
		defenders = WarInfo[i][wFaction];
        if(WarInfo[i][wTime] > 1 && attackers != 0 && defenders != 0)
        {
			if( (PlayerInfo[playerid][pMember] == attackers || PlayerInfo[playerid][pMember] == defenders) && (PlayerInfo[forplayerid][pMember] == attackers || PlayerInfo[forplayerid][pMember] == defenders) ) iswar = 1;
		}
    }

	if(iswar == 1)
	{
		if( (PlayerInfo[playerid][pMember] == attackers || PlayerInfo[playerid][pMember] == defenders) && (PlayerInfo[forplayerid][pMember] == attackers || PlayerInfo[forplayerid][pMember] == defenders) )
		{
			SetPlayerMarkerForPlayer( playerid, forplayerid, GetPlayerColor( forplayerid ) );
			SetPlayerMarkerForPlayer( forplayerid, playerid, GetPlayerColor( playerid ) );
		}
		else
		{
			SetPlayerMarkerForPlayer( playerid, forplayerid, ( GetPlayerColor( forplayerid ) & 0xFFFFFF00 ) );
			SetPlayerMarkerForPlayer( forplayerid, playerid, ( GetPlayerColor( playerid ) & 0xFFFFFF00 ) );
		}
	}
	else
	{
		SetPlayerMarkerForPlayer( playerid, forplayerid, ( GetPlayerColor( forplayerid ) & 0xFFFFFF00 ) );
		SetPlayerMarkerForPlayer( forplayerid, playerid, ( GetPlayerColor( playerid ) & 0xFFFFFF00 ) );
	}
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
    SetPlayerMarkerForPlayer( playerid, forplayerid, ( GetPlayerColor( forplayerid ) & 0xFFFFFF00 ) );
	SetPlayerMarkerForPlayer( forplayerid, playerid, ( GetPlayerColor( playerid ) & 0xFFFFFF00 ) );
	return 1;
}

// CAR SYSTEM
public IsAnOwnableCar(vehicleid)
{
	if(OwnedVeh(vehicleid) != 0) { return 1; }
	return 0;
}

stock Findcar()
{
	new i;
	for(i = 1; i <= masini; i++)
	{
	    if(CarInfo[i][cID] == -2)
	    {
	        return i;
	    }
	}
	return 0;
}

// PREMIUM CARS
public InsertPCar(playerid,model,value,namecar[],type)
{
    new string[128],sendername[25];
    new idd = Findcar();
    GetPlayerName(playerid,sendername,sizeof(sendername));
    if(idd != 0)
	{
        if(type == 1)
        {
            if(PlayerInfo[playerid][pPremiumAccount] == 0 && PlayerInfo[playerid][pPlusSlot1] == 0 && PlayerInfo[playerid][pPlusSlot2] == 0)
            {
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
		        	Update(playerid,pPcarkeyx);
					CarInfo[idd][cLocationx] = 1570.9568;
					CarInfo[idd][cLocationy] = -1223.7570;
					CarInfo[idd][cLocationz] = 17.4541;
					CarInfo[idd][cAngle] = 183.8553;
				}
				else
				{
						if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1570.9568;
							CarInfo[idd][cLocationy] = -1223.7570;
							CarInfo[idd][cLocationz] = 17.4541;
							CarInfo[idd][cAngle] = 183.8553;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars.");
				}
			}
			if(PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0 && PlayerInfo[playerid][pPlusSlot2] == 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
					CarInfo[idd][cLocationx] = 1570.9568;
					CarInfo[idd][cLocationy] = -1223.7570;
					CarInfo[idd][cLocationz] = 17.4541;
					CarInfo[idd][cAngle] = 183.8553;
				}
				else
				{
				        if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1570.9568;
							CarInfo[idd][cLocationy] = -1223.7570;
							CarInfo[idd][cLocationz] = 17.4541;
							CarInfo[idd][cAngle] = 183.8553;
						}
				        else if(PlayerInfo[playerid][pPPluscarkey] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey] = idd;
							Update(playerid,pPPluscarkeyx);
							CarInfo[idd][cLocationx] = 1570.9568;
							CarInfo[idd][cLocationy] = -1223.7570;
							CarInfo[idd][cLocationz] = 17.4541;
							CarInfo[idd][cAngle] = 183.8553;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars + 1 plus car.");
				}
			}
			if(PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPlusSlot2] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
					CarInfo[idd][cLocationx] = 1570.9568;
					CarInfo[idd][cLocationy] = -1223.7570;
					CarInfo[idd][cLocationz] = 17.4541;
					CarInfo[idd][cAngle] = 183.8553;
				}
				else
				{
				        if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1570.9568;
							CarInfo[idd][cLocationy] = -1223.7570;
							CarInfo[idd][cLocationz] = 17.4541;
							CarInfo[idd][cAngle] = 183.8553;
						}
				        else if(PlayerInfo[playerid][pPPluscarkey] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey] = idd;
							Update(playerid,pPPluscarkeyx);
							CarInfo[idd][cLocationx] = 1570.9568;
							CarInfo[idd][cLocationy] = -1223.7570;
							CarInfo[idd][cLocationz] = 17.4541;
							CarInfo[idd][cAngle] = 183.8553;
						}
						else if(PlayerInfo[playerid][pPPluscarkey2] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey2] = idd;
							Update(playerid,pPPluscarkey2x);
							CarInfo[idd][cLocationx] = 1570.9568;
							CarInfo[idd][cLocationy] = -1223.7570;
							CarInfo[idd][cLocationz] = 17.4541;
							CarInfo[idd][cAngle] = 183.8553;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars + 2 plus cars.");
				}
			}
			if(PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPlusSlot2] == 0 && PlayerInfo[playerid][pPremiumAccount] > 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
					CarInfo[idd][cLocationx] = 388.5720;
					CarInfo[idd][cLocationy] = -1521.5009;
					CarInfo[idd][cLocationz] = 32.2055;
					CarInfo[idd][cAngle] = 39.49;
				}
				else
				{
				        if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
  							CarInfo[idd][cLocationx] = 388.5720;
							CarInfo[idd][cLocationy] = -1521.5009;
							CarInfo[idd][cLocationz] = 32.2055;
  							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey] == 0)
						{
							PlayerInfo[playerid][pprcarkey] = idd;
							Update(playerid,pprcarkeyx);
  							CarInfo[idd][cLocationx] = 388.5720;
							CarInfo[idd][cLocationy] = -1521.5009;
							CarInfo[idd][cLocationz] = 32.2055;
  							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey2] == 0)
						{
							PlayerInfo[playerid][pprcarkey2] = idd;
							Update(playerid,pprcarkey2x);
  							CarInfo[idd][cLocationx] = 388.5720;
							CarInfo[idd][cLocationy] = -1521.5009;
							CarInfo[idd][cLocationz] = 32.2055;
  							CarInfo[idd][cAngle] = 39.49;
						}
				        else if(PlayerInfo[playerid][pPPluscarkey] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey] = idd;
							Update(playerid,pPPluscarkeyx);
							CarInfo[idd][cLocationx] = 388.5720;
							CarInfo[idd][cLocationy] = -1521.5009;
							CarInfo[idd][cLocationz] = 32.2055;
							CarInfo[idd][cAngle] = 39.49;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars + 2 premium cars + 1 plus car.");
				}
			}
			if(PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPlusSlot2] == 1 && PlayerInfo[playerid][pPremiumAccount] > 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
					CarInfo[idd][cLocationx] = 388.5720;
					CarInfo[idd][cLocationy] = -1521.5009;
					CarInfo[idd][cLocationz] = 32.2055;
					CarInfo[idd][cAngle] = 39.49;
				}
				else
				{
				        if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
  							CarInfo[idd][cLocationx] = 388.5720;
							CarInfo[idd][cLocationy] = -1521.5009;
							CarInfo[idd][cLocationz] = 32.2055;
  							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey] == 0)
						{
							PlayerInfo[playerid][pprcarkey] = idd;
							Update(playerid,pprcarkeyx);
  							CarInfo[idd][cLocationx] = 388.5720;
							CarInfo[idd][cLocationy] = -1521.5009;
							CarInfo[idd][cLocationz] = 32.2055;
  							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey2] == 0)
						{
							PlayerInfo[playerid][pprcarkey2] = idd;
							Update(playerid,pprcarkey2x);
  							CarInfo[idd][cLocationx] = 388.5720;
							CarInfo[idd][cLocationy] = -1521.5009;
							CarInfo[idd][cLocationz] = 32.2055;
  							CarInfo[idd][cAngle] = 39.49;
						}
				        else if(PlayerInfo[playerid][pPPluscarkey] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey] = idd;
							Update(playerid,pPPluscarkeyx);
							CarInfo[idd][cLocationx] = 388.5720;
							CarInfo[idd][cLocationy] = -1521.5009;
							CarInfo[idd][cLocationz] = 32.2055;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pPPluscarkey2] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey2] = idd;
							Update(playerid,pPPluscarkey2x);
							CarInfo[idd][cLocationx] = 388.5720;
							CarInfo[idd][cLocationy] = -1521.5009;
							CarInfo[idd][cLocationz] = 32.2055;
							CarInfo[idd][cAngle] = 39.49;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars + 2 premium cars + 2 plus cars.");
				}
			}
			if(PlayerInfo[playerid][pPremiumAccount] > 0 && PlayerInfo[playerid][pPlusSlot1] == 0 && PlayerInfo[playerid][pPlusSlot2] == 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
 					CarInfo[idd][cLocationx] = 388.5720;
					CarInfo[idd][cLocationy] = -1521.5009;
					CarInfo[idd][cLocationz] = 32.2055;
					CarInfo[idd][cAngle] = 39.49;
 				}
 				else
		 		{
			 			if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
 							CarInfo[idd][cLocationx] = 388.5720;
							CarInfo[idd][cLocationy] = -1521.5009;
							CarInfo[idd][cLocationz] = 32.2055;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey] == 0)
						{
							PlayerInfo[playerid][pprcarkey] = idd;
							Update(playerid,pprcarkeyx);
 							CarInfo[idd][cLocationx] = 388.5720;
							CarInfo[idd][cLocationy] = -1521.5009;
							CarInfo[idd][cLocationz] = 32.2055;
							CarInfo[idd][cAngle] = 39.49;
 						}
 						else if(PlayerInfo[playerid][pprcarkey2] == 0)
						{
							PlayerInfo[playerid][pprcarkey2] = idd;
							Update(playerid,pprcarkey2x);
 							CarInfo[idd][cLocationx] = 388.5720;
							CarInfo[idd][cLocationy] = -1521.5009;
							CarInfo[idd][cLocationz] = 32.2055;
							CarInfo[idd][cAngle] = 39.49;
 						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 premium cars + 2 cars.");
				}
			}
		}

		CarInfo[idd][cSell] = 1;
        CarInfo[idd][cID] = idd;
        CarInfo[idd][cModel] = model;

        CarInfo[idd][cColorOne] = 1;
		CarInfo[idd][cColorTwo] = 1;
        strmid(CarInfo[idd][cOwner], PlayerInfo[playerid][pNormalName], 0, 25, 255);
        strmid(CarInfo[idd][cDescription],namecar, 0, strlen(namecar), 255);
        CarInfo[idd][cValue] = value;
        strmid(CarInfo[idd][cLicense], "NewCar", 0, 6, 255);
        CarInfo[idd][cOwned] = 1;
		CarInfo[idd][cLock] = 0;
		CarInfo[idd][cTimed] = 0;
		CarInfo[idd][cInscarprice] = 100;
		CarInfo[idd][cInsurancecar] = 4;
		CarInfo[idd][cKM] = 0.0;
		CarInfo[idd][cHP] = 1000.0;
		CarInfo[idd][cDamage1] = 0;
		CarInfo[idd][cDamage2] = 0;
		CarInfo[idd][cDamage3] = 0;
		CarInfo[idd][cDamage4] = 0;
		CarInfo[idd][cPaintJ] = 6;
		CarInfo[idd][mod1] = 0;
		CarInfo[idd][mod2] = 0;
		CarInfo[idd][mod3] = 0;
		CarInfo[idd][mod4] = 0;
		CarInfo[idd][mod5] = 0;
		CarInfo[idd][mod6] = 0;
		CarInfo[idd][mod7] = 0;
		CarInfo[idd][mod8] = 0;
		CarInfo[idd][mod9] = 0;
		CarInfo[idd][mod10] = 0;
		CarInfo[idd][mod11] = 0;
		CarInfo[idd][mod12] = 0;
		CarInfo[idd][mod13] = 0;
		CarInfo[idd][mod14] = 0;
		CarInfo[idd][mod15] = 0;
		CarInfo[idd][mod16] = 0;
		CarInfo[idd][mod17] = 0;
		CarInfo[idd][cDays] = 0;
		CarInfo[idd][cGas] = 100;

		vUpdate(idd, cModsx);
		vUpdate(idd, cPaintJx);
		vUpdate(idd, cSellx);
		vUpdate(idd, cLocationxx);
		vUpdate(idd, cLocationyx);
		vUpdate(idd, cLocationzx);
		vUpdate(idd, cAnglex);
		vUpdate(idd, cModelx);
		vUpdate(idd, cColorOnex);
		vUpdate(idd, cColorTwox);
		vUpdate(idd, cOwnerx);
		vUpdate(idd, cValuex);
		vUpdate(idd, cLicensex);
		vUpdate(idd, cDescriptionx);
		vUpdate(idd, cLockx);
		vUpdate(idd, cTimedx);
		vUpdate(idd, cInscarpricex);
		vUpdate(idd, cInsurancecarx);
		vUpdate(idd, cKMx);
		vUpdate(idd, cOwnedx);
		vUpdate(idd, cDaysx);
		vUpdate(idd, cHPx);
		vUpdate(idd, cDamage1x);
		vUpdate(idd, cDamage2x);
		vUpdate(idd, cDamage3x);
		vUpdate(idd, cDamage4x);
		vUpdate(idd, cGasx);

        new car = CreateVehicle(CarInfo[idd][cModel],CarInfo[idd][cLocationx],CarInfo[idd][cLocationy],CarInfo[idd][cLocationz],CarInfo[idd][cAngle],1,1,500000);
        SetVehicleNumberPlate(car,CarInfo[idd][cLicense]);

        new disp[184],nameee[30],stringsss[256];
        format(disp,sizeof(disp),"You Bought %s . Please take your car and park it elsewhere.",CarInfo[idd][cDescription]);
		SCM(playerid,COLOR_LIGHTBLUE,disp);
		GetPlayerName(playerid, nameee, sizeof(nameee));
		format(stringsss,sizeof(stringsss),"[AdmInfo]: {FFFFFF}%s [user:%d] bought a %s [car:%d] for $%s.",nameee,PlayerInfo[playerid][pSQLID],CarInfo[idd][cDescription],CarInfo[idd][cID],FormatNumber(value));
        ABroadCast(COLOR_YELLOW,stringsss,1);
        new var100[256],y,m,d,h,mi,s,string2[256],string3[256];
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string2,sizeof(string2),"[%02d-%02d-%d %02d:%02d:%02d] %s",d,m,y,h,mi,s,stringsss);
		mysql_real_escape_string(string2, string3);
		mysql_format(SQL, var100, sizeof(var100), "INSERT INTO playerlogs (`playerid`,`giverid`,`action`,`time`) VALUES ('%d','0','%s','%02d-%02d-%d %02d:%02d:%02d')", PlayerInfo[playerid][pSQLID],string3,d,m,y,h,mi,s);
		mysql_tquery(SQL,var100,"","");

		OwnedVeh(car) = idd;
		if(idd == PlayerInfo[playerid][pPcarkey])
		{
			personalcar[0][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pmotokey])
		{
		    personalcar[1][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pprcarkey])
		{
		    personalcar[2][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pprcarkey2])
		{
		    personalcar[3][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pPPluscarkey])
		{
		    personalcar[4][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pPPluscarkey2])
		{
		    personalcar[5][playerid] = car;
		}
        masini++;
        SwitchKey[playerid] = 1;
    }
    if(idd == 0)
    {

		new Cache: sar = mysql_query(SQL,"SELECT * FROM `cars`");
		idd = cache_num_rows()+1;
		cache_delete(sar);

	    if(type == 1)
        {
            if(PlayerInfo[playerid][pPremiumAccount] == 0 && PlayerInfo[playerid][pPlusSlot1] == 0 && PlayerInfo[playerid][pPlusSlot2] == 0)
            {
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
		        	Update(playerid,pPcarkeyx);
		        	CarInfo[idd][cLocationx] = 1283.1655;
					CarInfo[idd][cLocationy] = -1362.8055;
					CarInfo[idd][cLocationz] = 13.1689;
		        	CarInfo[idd][cAngle] = 39.49;
				}
				else
				{
						if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars.");
				}
			}
			if(PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0 && PlayerInfo[playerid][pPlusSlot2] == 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
		        	CarInfo[idd][cLocationx] = 1283.1655;
					CarInfo[idd][cLocationy] = -1362.8055;
					CarInfo[idd][cLocationz] = 13.1689;
		        	CarInfo[idd][cAngle] = 39.49;
				}
				else
				{
				        if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
				        else if(PlayerInfo[playerid][pPPluscarkey] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey] = idd;
							Update(playerid,pPPluscarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars + 1 plus car.");
				}
			}
			if(PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPlusSlot2] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
		        	CarInfo[idd][cLocationx] = 1283.1655;
					CarInfo[idd][cLocationy] = -1362.8055;
					CarInfo[idd][cLocationz] = 13.1689;
		        	CarInfo[idd][cAngle] = 39.49;
				}
				else
				{
				        if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
				        else if(PlayerInfo[playerid][pPPluscarkey] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey] = idd;
							Update(playerid,pPPluscarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pPPluscarkey2] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey2] = idd;
							Update(playerid,pPPluscarkey2x);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars + 2 plus cars.");
				}
			}
			if(PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPlusSlot2] == 0 && PlayerInfo[playerid][pPremiumAccount] > 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
		        	CarInfo[idd][cLocationx] = 1283.1655;
					CarInfo[idd][cLocationy] = -1362.8055;
					CarInfo[idd][cLocationz] = 13.1689;
		        	CarInfo[idd][cAngle] = 39.49;
				}
				else
				{
				        if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey] == 0)
						{
							PlayerInfo[playerid][pprcarkey] = idd;
							Update(playerid,pprcarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey2] == 0)
						{
							PlayerInfo[playerid][pprcarkey2] = idd;
							Update(playerid,pprcarkey2x);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
				        else if(PlayerInfo[playerid][pPPluscarkey] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey] = idd;
							Update(playerid,pPPluscarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars + 2 premium cars + 1 plus car.");
				}
			}
			if(PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPlusSlot2] == 1 && PlayerInfo[playerid][pPremiumAccount] > 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
		        	CarInfo[idd][cLocationx] = 1283.1655;
					CarInfo[idd][cLocationy] = -1362.8055;
					CarInfo[idd][cLocationz] = 13.1689;
		        	CarInfo[idd][cAngle] = 39.49;
				}
				else
				{
				        if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey] == 0)
						{
							PlayerInfo[playerid][pprcarkey] = idd;
							Update(playerid,pprcarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey2] == 0)
						{
							PlayerInfo[playerid][pprcarkey2] = idd;
							Update(playerid,pprcarkey2x);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
				        else if(PlayerInfo[playerid][pPPluscarkey] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey] = idd;
							Update(playerid,pPPluscarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pPPluscarkey2] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey2] = idd;
							Update(playerid,pPPluscarkey2x);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars + 2 premium cars + 2 plus cars.");
				}
			}
			if(PlayerInfo[playerid][pPremiumAccount] > 0 && PlayerInfo[playerid][pPlusSlot1] == 0 && PlayerInfo[playerid][pPlusSlot2] == 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
		        	CarInfo[idd][cLocationx] = 1283.1655;
					CarInfo[idd][cLocationy] = -1362.8055;
					CarInfo[idd][cLocationz] = 13.1689;
		        	CarInfo[idd][cAngle] = 39.49;
 				}
 				else
		 		{
			 			if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey] == 0)
						{
							PlayerInfo[playerid][pprcarkey] = idd;
							Update(playerid,pprcarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
 						}
 						else if(PlayerInfo[playerid][pprcarkey2] == 0)
						{
							PlayerInfo[playerid][pprcarkey2] = idd;
							Update(playerid,pprcarkey2x);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
 						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 premium cars + 2 cars.");
				}
			}
		}

        CarInfo[idd][cID] = idd;
        CarInfo[idd][cModel] = model;

        CarInfo[idd][cColorOne] = 1;
		CarInfo[idd][cColorTwo] = 1;
        strmid(CarInfo[idd][cOwner], PlayerInfo[playerid][pNormalName], 0, 25, 255);
        strmid(CarInfo[idd][cDescription],namecar, 0, strlen(namecar), 255);
        CarInfo[idd][cValue] = value;
        strmid(CarInfo[idd][cLicense], "NewCar", 0, 6, 255);
        CarInfo[idd][cOwned] = 1;
		CarInfo[idd][cLock] = 0;
		CarInfo[idd][cTimed] = 0;
		CarInfo[idd][cInscarprice] = 100;
		CarInfo[idd][cInsurancecar] = 4;
		CarInfo[idd][cKM] = 0.0;
		CarInfo[idd][cHP] = 1000.0;
		CarInfo[idd][cDamage1] = 0;
		CarInfo[idd][cDamage2] = 0;
		CarInfo[idd][cDamage3] = 0;
		CarInfo[idd][cDamage4] = 0;
		CarInfo[idd][cGas] = 100;
		CarInfo[idd][cSell] = 1;
		CarInfo[idd][cPaintJ] = 6;
		CarInfo[idd][mod1] = 0;
		CarInfo[idd][mod2] = 0;
		CarInfo[idd][mod3] = 0;
		CarInfo[idd][mod4] = 0;
		CarInfo[idd][mod5] = 0;
		CarInfo[idd][mod6] = 0;
		CarInfo[idd][mod7] = 0;
		CarInfo[idd][mod8] = 0;
		CarInfo[idd][mod9] = 0;
		CarInfo[idd][mod10] = 0;
		CarInfo[idd][mod11] = 0;
		CarInfo[idd][mod12] = 0;
		CarInfo[idd][mod13] = 0;
		CarInfo[idd][mod14] = 0;
		CarInfo[idd][mod15] = 0;
		CarInfo[idd][mod16] = 0;
		CarInfo[idd][mod17] = 0;
		CarInfo[idd][cDays] = 0;

        mysql_format(SQL, string, sizeof(string),"INSERT INTO cars (ID, Model) VALUES (%d, %d)",  idd, CarInfo[idd][cModel]);
        mysql_tquery(SQL,string,"","");

		vUpdate(idd, cModsx);
		vUpdate(idd, cPaintJx);
		vUpdate(idd, cSellx);
		vUpdate(idd, cLocationxx);
		vUpdate(idd, cLocationyx);
		vUpdate(idd, cLocationzx);
		vUpdate(idd, cAnglex);
		vUpdate(idd, cColorOnex);
		vUpdate(idd, cColorTwox);
		vUpdate(idd, cOwnerx);
		vUpdate(idd, cValuex);
		vUpdate(idd, cLicensex);
		vUpdate(idd, cDescriptionx);
		vUpdate(idd, cLockx);
		vUpdate(idd, cTimedx);
		vUpdate(idd, cInscarpricex);
		vUpdate(idd, cInsurancecarx);
		vUpdate(idd, cKMx);
		vUpdate(idd, cOwnedx);
		vUpdate(idd, cDaysx);
		vUpdate(idd, cHPx);
		vUpdate(idd, cDamage1x);
		vUpdate(idd, cDamage2x);
		vUpdate(idd, cDamage3x);
		vUpdate(idd, cDamage4x);
		vUpdate(idd, cGasx);

        new car = CreateVehicle(CarInfo[idd][cModel],CarInfo[idd][cLocationx],CarInfo[idd][cLocationy],CarInfo[idd][cLocationz],CarInfo[idd][cAngle],1,1,500000);
        SetVehicleNumberPlate(car,CarInfo[idd][cLicense]);

        new disp[184],namee3[30],stringsss[256];
        format(disp,sizeof(disp),"You Bought %s . Please take your car and park it elsewhere.",CarInfo[idd][cDescription]);
		SCM(playerid,COLOR_LIGHTBLUE,disp);
		GetPlayerName(playerid, namee3, sizeof(namee3));
		format(stringsss,sizeof(stringsss),"{FF0000}[AdmInfo]: {FFFFFF}%s [user:%d] bought a %s [car:%d] for $%s.",namee3,PlayerInfo[playerid][pSQLID],CarInfo[idd][cDescription],CarInfo[idd][cID],FormatNumber(value));
        ABroadCast(COLOR_YELLOW,stringsss,1);
        new var100[256],y,m,d,h,mi,s,string2[256],string3[256];
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string2,sizeof(string2),"[%02d-%02d-%d %02d:%02d:%02d] %s",d,m,y,h,mi,s,stringsss);
		mysql_real_escape_string(string2, string3);
		mysql_format(SQL, var100, sizeof(var100), "INSERT INTO playerlogs (`playerid`,`giverid`,`action`,`time`) VALUES ('%d','0','%s','%02d-%02d-%d %02d:%02d:%02d')", PlayerInfo[playerid][pSQLID],string3,d,m,y,h,mi,s);
		mysql_tquery(SQL,var100,"","");

		OwnedVeh(car) = idd;
		if(idd == PlayerInfo[playerid][pPcarkey])
		{
			personalcar[0][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pmotokey])
		{
		    personalcar[1][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pprcarkey])
		{
		    personalcar[2][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pprcarkey2])
		{
		    personalcar[3][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pPPluscarkey])
		{
		    personalcar[4][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pPPluscarkey2])
		{
		    personalcar[5][playerid] = car;
		}

        masini++;
        SwitchKey[playerid] = 1;
    }
    return 1;
}

// type 1 - car | 2 - moto/bike | 3 - heli | 4 - premium cars.
public InsertCar(playerid,type,stockid)
{
    new string[128],sendername[25],namecar[100];
    new idd = Findcar();
    new model = Stock[stockid][vModel];
	new value = Stock[stockid][vPrice];
	strmid(namecar,Stock[stockid][vName], 0, 100, 255);
    GetPlayerName(playerid,sendername,sizeof(sendername));
    BuyCar[playerid] = -1;
    if(idd != 0)
    {
        if(GetPlayerCash(playerid) < value) return SCM(playerid,COLOR_WHITE,"{FFB870}You do not have enough money.");
        if(type == 1)
        {
            if(PlayerInfo[playerid][pPremiumAccount] == 0 && PlayerInfo[playerid][pPlusSlot1] == 0 && PlayerInfo[playerid][pPlusSlot2] == 0)
            {
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
		        	Update(playerid,pPcarkeyx);
		        	CarInfo[idd][cLocationx] = 1283.1655;
					CarInfo[idd][cLocationy] = -1362.8055;
					CarInfo[idd][cLocationz] = 13.1689;
		        	CarInfo[idd][cAngle] = 39.49;
				}
				else
				{
						if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars.");
				}
			}
			if(PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0 && PlayerInfo[playerid][pPlusSlot2] == 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
		        	CarInfo[idd][cLocationx] = 1283.1655;
					CarInfo[idd][cLocationy] = -1362.8055;
					CarInfo[idd][cLocationz] = 13.1689;
		        	CarInfo[idd][cAngle] = 39.49;
				}
				else
				{
				        if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
				        else if(PlayerInfo[playerid][pPPluscarkey] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey] = idd;
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars + 1 plus car.");
				}
			}
			if(PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPlusSlot2] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
		        	CarInfo[idd][cLocationx] = 1283.1655;
					CarInfo[idd][cLocationy] = -1362.8055;
					CarInfo[idd][cLocationz] = 13.1689;
		        	CarInfo[idd][cAngle] = 39.49;
				}
				else
				{
				        if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
				        else if(PlayerInfo[playerid][pPPluscarkey] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey] = idd;
							Update(playerid,pPPluscarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pPPluscarkey2] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey2] = idd;
							Update(playerid,pPPluscarkey2x);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars + 2 plus cars.");
				}
			}
			if(PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPlusSlot2] == 0 && PlayerInfo[playerid][pPremiumAccount] > 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
		        	CarInfo[idd][cLocationx] = 1283.1655;
					CarInfo[idd][cLocationy] = -1362.8055;
					CarInfo[idd][cLocationz] = 13.1689;
		        	CarInfo[idd][cAngle] = 39.49;
				}
				else
				{
				        if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey] == 0)
						{
							PlayerInfo[playerid][pprcarkey] = idd;
							Update(playerid,pprcarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey2] == 0)
						{
							PlayerInfo[playerid][pprcarkey2] = idd;
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
				        else if(PlayerInfo[playerid][pPPluscarkey] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey] = idd;
							Update(playerid,pPPluscarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars + 2 premium cars + 1 plus car.");
				}
			}
			if(PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPlusSlot2] == 1 && PlayerInfo[playerid][pPremiumAccount] > 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
		        	CarInfo[idd][cLocationx] = 1283.1655;
					CarInfo[idd][cLocationy] = -1362.8055;
					CarInfo[idd][cLocationz] = 13.1689;
		        	CarInfo[idd][cAngle] = 39.49;
				}
				else
				{
				        if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey] == 0)
						{
							PlayerInfo[playerid][pprcarkey] = idd;
							Update(playerid,pprcarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey2] == 0)
						{
							PlayerInfo[playerid][pprcarkey2] = idd;
							Update(playerid,pprcarkey2x);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
				        else if(PlayerInfo[playerid][pPPluscarkey] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey] = idd;
							Update(playerid,pPPluscarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pPPluscarkey2] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey2] = idd;
							Update(playerid,pPPluscarkey2x);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars + 2 premium cars + 2 plus cars.");
				}
			}
			if(PlayerInfo[playerid][pPremiumAccount] > 0 && PlayerInfo[playerid][pPlusSlot1] == 0 && PlayerInfo[playerid][pPlusSlot2] == 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
		        	CarInfo[idd][cLocationx] = 1283.1655;
					CarInfo[idd][cLocationy] = -1362.8055;
					CarInfo[idd][cLocationz] = 13.1689;
		        	CarInfo[idd][cAngle] = 39.49;
 				}
 				else
		 		{
			 			if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey] == 0)
						{
							PlayerInfo[playerid][pprcarkey] = idd;
							Update(playerid,pprcarkeyx);
					      	CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
 						}
 						else if(PlayerInfo[playerid][pprcarkey2] == 0)
						{
							PlayerInfo[playerid][pprcarkey2] = idd;
							Update(playerid,pprcarkey2x);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
 						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 premium cars + 2 cars.");
				}
			}
		}

    	Stock[stockid][vStock]--;
        mysql_format(SQL, string, sizeof(string), "UPDATE stock SET Stock='%d' WHERE ID='%d'", Stock[stockid][vStock],stockid);
		mysql_tquery(SQL,string,"","");

		GivePlayerCash(playerid,-value);
		Update(playerid,pCashx);

		CarInfo[idd][cSell] = 1;
        CarInfo[idd][cID] = idd;
        CarInfo[idd][cModel] = model;

		foreach(Player, x)
		{
		    if(PlayerInfo[x][pAdmin] >= 6)
		    {
				new szMessage[1024];
				format(szMessage, sizeof(szMessage),"%s", PlayerInfo[x][pNormalName]);
		        CarInfo[idd][cObject] = CreateObject(19327, -2597.0762, -2638.4270, -5.3536, -87.6999, 90.4001, -87.1805);
				SetObjectMaterialText(CarInfo[idd][cObject], szMessage, 0, 50, "Arial", 25, 1, 0xFFFFFFFF, 0, 1);
				AttachObjectToVehicle(CarInfo[idd][cObject], idd, 0.0,-1.9, 0.3, 270.0, 0.0, 0.0);
				CarInfo[idd][cText] = szMessage;
			}
		}
        CarInfo[idd][cColorOne] = 1;
		CarInfo[idd][cColorTwo] = 1;
        strmid(CarInfo[idd][cOwner], PlayerInfo[playerid][pNormalName], 0, 25, 255);
        strmid(CarInfo[idd][cDescription],namecar, 0, strlen(namecar), 255);
        CarInfo[idd][cValue] = value;
        strmid(CarInfo[idd][cLicense], "NewCar", 0, 6, 255);
        CarInfo[idd][cOwned] = 1;
		CarInfo[idd][cLock] = 0;
		CarInfo[idd][cTimed] = 0;
		CarInfo[idd][cInscarprice] = 100;
		CarInfo[idd][cInsurancecar] = 4;
		CarInfo[idd][cKM] = 0.0;
		CarInfo[idd][cHP] = 1000.0;
		CarInfo[idd][cDamage1] = 0;
		CarInfo[idd][cDamage2] = 0;
		CarInfo[idd][cDamage3] = 0;
		CarInfo[idd][cDamage4] = 0;
		CarInfo[idd][cGas] = 100;
		CarInfo[idd][cPaintJ] = 6;
		CarInfo[idd][mod1] = 0;
		CarInfo[idd][mod2] = 0;
		CarInfo[idd][mod3] = 0;
		CarInfo[idd][mod4] = 0;
		CarInfo[idd][mod5] = 0;
		CarInfo[idd][mod6] = 0;
		CarInfo[idd][mod7] = 0;
		CarInfo[idd][mod8] = 0;
		CarInfo[idd][mod9] = 0;
		CarInfo[idd][mod10] = 0;
		CarInfo[idd][mod11] = 0;
		CarInfo[idd][mod12] = 0;
		CarInfo[idd][mod13] = 0;
		CarInfo[idd][mod14] = 0;
		CarInfo[idd][mod15] = 0;
		CarInfo[idd][mod16] = 0;
		CarInfo[idd][mod17] = 0;
		CarInfo[idd][cDays] = 0;

		vUpdate(idd, cModsx);
		vUpdate(idd, cPaintJx);
		vUpdate(idd, cSellx);
		vUpdate(idd, cLocationxx);
		vUpdate(idd, cLocationyx);
		vUpdate(idd, cLocationzx);
		vUpdate(idd, cAnglex);
		vUpdate(idd, cModelx);
		vUpdate(idd, cColorOnex);
		vUpdate(idd, cColorTwox);
		vUpdate(idd, cOwnerx);
		vUpdate(idd, cValuex);
		vUpdate(idd, cLicensex);
		vUpdate(idd, cDescriptionx);
		vUpdate(idd, cLockx);
		vUpdate(idd, cTimedx);
		vUpdate(idd, cInscarpricex);
		vUpdate(idd, cInsurancecarx);
		vUpdate(idd, cKMx);
		vUpdate(idd, cOwnedx);
		vUpdate(idd, cDaysx);
		vUpdate(idd, cHPx);
		vUpdate(idd, cDamage1x);
		vUpdate(idd, cDamage2x);
		vUpdate(idd, cDamage3x);
		vUpdate(idd, cDamage4x);
		vUpdate(idd, cGasx);

        new car = CreateVehicle(CarInfo[idd][cModel],CarInfo[idd][cLocationx],CarInfo[idd][cLocationy],CarInfo[idd][cLocationz],CarInfo[idd][cAngle],1,1,500000);
        SetVehicleNumberPlate(car,CarInfo[idd][cLicense]);

        new disp[184],stringsss[256],numele[30];
        format(disp,sizeof(disp),"You Bought %s . Please take your car and park it elsewhere.",CarInfo[idd][cDescription]);
		SCM(playerid,COLOR_LIGHTBLUE,disp);
		GetPlayerName(playerid, numele, sizeof(numele));
		format(stringsss,sizeof(stringsss),"{FF0000}[AdmInfo]: {FFFFFF}%s [user:%d] bought a %s [car:%d] for $%s.",numele,PlayerInfo[playerid][pSQLID],CarInfo[idd][cDescription],CarInfo[idd][cID],FormatNumber(value));
        ABroadCast(COLOR_YELLOW,stringsss,1);
        new var100[256],y,m,d,h,mi,s,string2[256],string3[256];
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string2,sizeof(string2),"[%02d-%02d-%d %02d:%02d:%02d] %s",d,m,y,h,mi,s,stringsss);
		mysql_real_escape_string(string2, string3);
		mysql_format(SQL, var100, sizeof(var100), "INSERT INTO playerlogs (`playerid`,`giverid`,`action`,`time`) VALUES ('%d','0','%s','%02d-%02d-%d %02d:%02d:%02d')", PlayerInfo[playerid][pSQLID],string3,d,m,y,h,mi,s);
		mysql_tquery(SQL,var100,"","");

		OwnedVeh(car) = idd;
		if(idd == PlayerInfo[playerid][pPcarkey])
		{
			personalcar[0][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pmotokey])
		{
		    personalcar[1][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pprcarkey])
		{
		    personalcar[2][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pprcarkey2])
		{
		    personalcar[3][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pPPluscarkey])
		{
		    personalcar[4][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pPPluscarkey2])
		{
		    personalcar[5][playerid] = car;
		}
        masini++;
        SwitchKey[playerid] = 1;
    }
    if(idd == 0)
    {
        if(GetPlayerCash(playerid) < value) return SCM(playerid,COLOR_WHITE,"{FFB870}You do not have enough money.");

		new Cache: sar = mysql_query(SQL,"SELECT * FROM `cars`");
		idd = cache_num_rows()+1;
		cache_delete(sar);

	    if(type == 1)
        {
            if(PlayerInfo[playerid][pPremiumAccount] == 0 && PlayerInfo[playerid][pPlusSlot1] == 0 && PlayerInfo[playerid][pPlusSlot2] == 0)
            {
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
		        	Update(playerid,pPcarkeyx);
		        	CarInfo[idd][cLocationx] = 1283.1655;
					CarInfo[idd][cLocationy] = -1362.8055;
					CarInfo[idd][cLocationz] = 13.1689;
		        	CarInfo[idd][cAngle] = 39.49;
				}
				else
				{
						if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars.");
				}
			}
			if(PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0 && PlayerInfo[playerid][pPlusSlot2] == 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
		        	CarInfo[idd][cLocationx] = 1283.1655;
					CarInfo[idd][cLocationy] = -1362.8055;
					CarInfo[idd][cLocationz] = 13.1689;
		        	CarInfo[idd][cAngle] = 39.49;
				}
				else
				{
				        if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
				        else if(PlayerInfo[playerid][pPPluscarkey] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey] = idd;
							Update(playerid,pPPluscarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars + 1 plus car.");
				}
			}
			if(PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPlusSlot2] == 1 && PlayerInfo[playerid][pPremiumAccount] == 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
		        	CarInfo[idd][cLocationx] = 1283.1655;
					CarInfo[idd][cLocationy] = -1362.8055;
					CarInfo[idd][cLocationz] = 13.1689;
		        	CarInfo[idd][cAngle] = 39.49;
				}
				else
				{
				        if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
				        else if(PlayerInfo[playerid][pPPluscarkey] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey] = idd;
							Update(playerid,pPPluscarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pPPluscarkey2] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey2] = idd;
							Update(playerid,pPPluscarkey2x);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars + 2 plus cars.");
				}
			}
			if(PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPlusSlot2] == 0 && PlayerInfo[playerid][pPremiumAccount] > 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
		        	CarInfo[idd][cLocationx] = 1283.1655;
					CarInfo[idd][cLocationy] = -1362.8055;
					CarInfo[idd][cLocationz] = 13.1689;
		        	CarInfo[idd][cAngle] = 39.49;
				}
				else
				{
				        if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey] == 0)
						{
							PlayerInfo[playerid][pprcarkey] = idd;
							Update(playerid,pprcarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey2] == 0)
						{
							PlayerInfo[playerid][pprcarkey2] = idd;
							Update(playerid,pprcarkey2x);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
				        else if(PlayerInfo[playerid][pPPluscarkey] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey] = idd;
							Update(playerid,pPPluscarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars + 2 premium cars + 1 plus car.");
				}
			}
			if(PlayerInfo[playerid][pPlusSlot1] == 1 && PlayerInfo[playerid][pPlusSlot2] == 1 && PlayerInfo[playerid][pPremiumAccount] > 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
		        	CarInfo[idd][cLocationx] = 1283.1655;
					CarInfo[idd][cLocationy] = -1362.8055;
					CarInfo[idd][cLocationz] = 13.1689;
		        	CarInfo[idd][cAngle] = 39.49;
				}
				else
				{
				        if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey] == 0)
						{
							PlayerInfo[playerid][pprcarkey] = idd;
							Update(playerid,pprcarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey2] == 0)
						{
							PlayerInfo[playerid][pprcarkey2] = idd;
							Update(playerid,pprcarkey2x);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
				        else if(PlayerInfo[playerid][pPPluscarkey] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey] = idd;
							Update(playerid,pPPluscarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;	
						}
						else if(PlayerInfo[playerid][pPPluscarkey2] == 0)
						{
							PlayerInfo[playerid][pPPluscarkey2] = idd;
							Update(playerid,pPPluscarkey2x);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 cars + 2 premium cars + 2 plus cars.");
				}
			}
			if(PlayerInfo[playerid][pPremiumAccount] > 0 && PlayerInfo[playerid][pPlusSlot1] == 0 && PlayerInfo[playerid][pPlusSlot2] == 0)
			{
				if(PlayerInfo[playerid][pPcarkey] == 0)
				{
					PlayerInfo[playerid][pPcarkey] = idd;
					Update(playerid,pPcarkeyx);
		        	CarInfo[idd][cLocationx] = 1283.1655;
					CarInfo[idd][cLocationy] = -1362.8055;
					CarInfo[idd][cLocationz] = 13.1689;
		        	CarInfo[idd][cAngle] = 39.49;
 				}
 				else
		 		{
			 			if(PlayerInfo[playerid][pmotokey] == 0)
						{
							PlayerInfo[playerid][pmotokey] = idd;
							Update(playerid,pmotokeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
						}
						else if(PlayerInfo[playerid][pprcarkey] == 0)
						{
							PlayerInfo[playerid][pprcarkey] = idd;
							Update(playerid,pprcarkeyx);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
 						}
 						else if(PlayerInfo[playerid][pprcarkey2] == 0)
						{
							PlayerInfo[playerid][pprcarkey2] = idd;
							Update(playerid,pprcarkey2x);
							CarInfo[idd][cLocationx] = 1283.1655;
							CarInfo[idd][cLocationy] = -1362.8055;
							CarInfo[idd][cLocationz] = 13.1689;
							CarInfo[idd][cAngle] = 39.49;
 						}
						else return SCM(playerid,COLOR_WHITE,"{FFB870}Already own 2 premium cars + 2 cars.");
				}
			}
		}

    	Stock[stockid][vStock]--;
        mysql_format(SQL, string, sizeof(string), "UPDATE stock SET Stock='%d' WHERE ID='%d'", Stock[stockid][vStock],stockid);
		mysql_tquery(SQL,string,"","");

		GivePlayerCash(playerid,-value);
		Update(playerid,pCashx);

        CarInfo[idd][cID] = idd;
        CarInfo[idd][cModel] = model;

        CarInfo[idd][cColorOne] = 1;
		CarInfo[idd][cColorTwo] = 1;
        strmid(CarInfo[idd][cOwner], PlayerInfo[playerid][pNormalName], 0, 25, 255);
        strmid(CarInfo[idd][cDescription],namecar, 0, strlen(namecar), 255);
        CarInfo[idd][cValue] = value;
        strmid(CarInfo[idd][cLicense], "NewCar", 0, 6, 255);
        CarInfo[idd][cOwned] = 1;
		CarInfo[idd][cLock] = 0;
		CarInfo[idd][cTimed] = 0;
		CarInfo[idd][cInscarprice] = 100;
		CarInfo[idd][cInsurancecar] = 4;
		CarInfo[idd][cKM] = 0.0;
		CarInfo[idd][cHP] = 1000.0;
		CarInfo[idd][cDamage1] = 0;
		CarInfo[idd][cDamage2] = 0;
		CarInfo[idd][cDamage3] = 0;
		CarInfo[idd][cDamage4] = 0;
		CarInfo[idd][cGas] = 100;
		CarInfo[idd][cSell] = 1;
		CarInfo[idd][cPaintJ] = 6;
		CarInfo[idd][mod1] = 0;
		CarInfo[idd][mod2] = 0;
		CarInfo[idd][mod3] = 0;
		CarInfo[idd][mod4] = 0;
		CarInfo[idd][mod5] = 0;
		CarInfo[idd][mod6] = 0;
		CarInfo[idd][mod7] = 0;
		CarInfo[idd][mod8] = 0;
		CarInfo[idd][mod9] = 0;
		CarInfo[idd][mod10] = 0;
		CarInfo[idd][mod11] = 0;
		CarInfo[idd][mod12] = 0;
		CarInfo[idd][mod13] = 0;
		CarInfo[idd][mod14] = 0;
		CarInfo[idd][mod15] = 0;
		CarInfo[idd][mod16] = 0;
		CarInfo[idd][mod17] = 0;
		CarInfo[idd][cDays] = 0;

        mysql_format(SQL, string, sizeof(string),"INSERT INTO cars (ID, Model) VALUES (%d, %d)",  idd, CarInfo[idd][cModel]);
        mysql_tquery(SQL,string,"","");

		vUpdate(idd, cModsx);
		vUpdate(idd, cPaintJx);
		vUpdate(idd, cSellx);
		vUpdate(idd, cLocationxx);
		vUpdate(idd, cLocationyx);
		vUpdate(idd, cLocationzx);
		vUpdate(idd, cAnglex);
		vUpdate(idd, cColorOnex);
		vUpdate(idd, cColorTwox);
		vUpdate(idd, cOwnerx);
		vUpdate(idd, cValuex);
		vUpdate(idd, cLicensex);
		vUpdate(idd, cDescriptionx);
		vUpdate(idd, cLockx);
		vUpdate(idd, cTimedx);
		vUpdate(idd, cInscarpricex);
		vUpdate(idd, cInsurancecarx);
		vUpdate(idd, cKMx);
		vUpdate(idd, cOwnedx);
		vUpdate(idd, cDaysx);
		vUpdate(idd, cHPx);
		vUpdate(idd, cDamage1x);
		vUpdate(idd, cDamage2x);
		vUpdate(idd, cDamage3x);
		vUpdate(idd, cDamage4x);
		vUpdate(idd, cGasx);

        new car = CreateVehicle(CarInfo[idd][cModel],CarInfo[idd][cLocationx],CarInfo[idd][cLocationy],CarInfo[idd][cLocationz],CarInfo[idd][cAngle],1,1,500000);
        SetVehicleNumberPlate(car,CarInfo[idd][cLicense]);

        new disp[184],stringsss[256],numele[30];
        format(disp,sizeof(disp),"You Bought %s . Please take your car and park it elsewhere.",CarInfo[idd][cDescription]);
		SCM(playerid,COLOR_LIGHTBLUE,disp);
		GetPlayerName(playerid, numele, sizeof(numele));
		format(stringsss,sizeof(stringsss),"[AdmInfo]: {FFFFFF}%s [user:%d] Bought A %s [car:%d] for $%s.",numele,PlayerInfo[playerid][pSQLID],CarInfo[idd][cDescription],CarInfo[idd][cID],FormatNumber(value));
        ABroadCast(COLOR_YELLOW,stringsss,1);
        new var100[256],y,m,d,h,mi,s,string2[256],string3[256];
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string2,sizeof(string2),"[%02d-%02d-%d %02d:%02d:%02d] %s",d,m,y,h,mi,s,stringsss);
		mysql_real_escape_string(string2, string3);
		mysql_format(SQL, var100, sizeof(var100), "INSERT INTO playerlogs (`playerid`,`giverid`,`action`,`time`) VALUES ('%d','0','%s','%02d-%02d-%d %02d:%02d:%02d')", PlayerInfo[playerid][pSQLID],string3,d,m,y,h,mi,s);
		mysql_tquery(SQL,var100,"","");

		OwnedVeh(car) = idd;
		if(idd == PlayerInfo[playerid][pPcarkey])
		{
			personalcar[0][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pmotokey])
		{
		    personalcar[1][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pprcarkey])
		{
		    personalcar[2][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pprcarkey2])
		{
		    personalcar[3][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pPPluscarkey])
		{
		    personalcar[4][playerid] = car;
		}
		if(idd == PlayerInfo[playerid][pPPluscarkey2])
		{
		    personalcar[5][playerid] = car;
		}

        masini++;
        SwitchKey[playerid] = 1;
    }
    return 1;
}

public vUpdate(vehicleid, type)
{
	new gQuery[1024];
	switch(type)
	{
	    case cLocationxx:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Locationx`='%f' WHERE `ID`='%d'",CarInfo[vehicleid][cLocationx],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cLocationyx:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Locationy`='%f' WHERE `ID`='%d'",CarInfo[vehicleid][cLocationy],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cLocationzx:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Locationz`='%f' WHERE `ID`='%d'",CarInfo[vehicleid][cLocationz],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cAnglex:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Angle`='%f' WHERE `ID`='%d'",CarInfo[vehicleid][cAngle],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cModelx:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Model`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cModel],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cColorOnex:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `ColorOne`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cColorOne],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
		/*
	    case cColorTw[OX]:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `ColorTwo`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cColorTwo],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
		*/
	    case cOwnerx:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Owner`='%s' WHERE `ID`='%d'",CarInfo[vehicleid][cOwner],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cValuex:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Value`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cValue],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cLicensex:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `License`='%s' WHERE `ID`='%d'",CarInfo[vehicleid][cLicense],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cDescriptionx:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Description`='%s' WHERE `ID`='%d'",CarInfo[vehicleid][cDescription],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cLockx:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Lockk`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cLock],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cTimedx:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Timed`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cTimed],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cInscarpricex:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Inscarprice`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cInscarprice],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cInsurancecarx:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Insurancecar`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cInsurancecar],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cKMx:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `KM`='%f' WHERE `ID`='%d'",CarInfo[vehicleid][cKM],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
		case cHPx:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `HP`='%f' WHERE `ID`='%d'",CarInfo[vehicleid][cHP],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
		case cGasx:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Gas`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cGas],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
		case cDamage1x:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Damage1`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cDamage1],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
		case cDamage2x:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Damage2`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cDamage2],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
		case cDamage3x:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Damage3`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cDamage3],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
		case cDamage4x:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Damage4`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cDamage4],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cOwnedx:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Owned`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cOwned],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cSellx:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Sell`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cSell],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cModsx:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `mod1`='%d',`mod2`='%d',`mod3`='%d',`mod4`='%d',`mod5`='%d',`mod6`='%d',`mod7`='%d',`mod8`='%d',`mod9`='%d',`mod10`='%d',`mod11`='%d',`mod12`='%d',`mod13`='%d',`mod14`='%d',`mod15`='%d',`mod16`='%d',`mod17`='%d' WHERE `ID`='%d'",
			CarInfo[vehicleid][mod1],
			CarInfo[vehicleid][mod2],
			CarInfo[vehicleid][mod3],
			CarInfo[vehicleid][mod4],
			CarInfo[vehicleid][mod5],
			CarInfo[vehicleid][mod6],
			CarInfo[vehicleid][mod7],
			CarInfo[vehicleid][mod8],
			CarInfo[vehicleid][mod9],
			CarInfo[vehicleid][mod10],
			CarInfo[vehicleid][mod11],
			CarInfo[vehicleid][mod12],
			CarInfo[vehicleid][mod13],
			CarInfo[vehicleid][mod14],
			CarInfo[vehicleid][mod15],
			CarInfo[vehicleid][mod16],
			CarInfo[vehicleid][mod17],
			vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cPaintJx:
        {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `PaintJ`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cPaintJ],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cDaysx:
        {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `days`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cDays],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cVIPx:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `VipCar`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cVIP],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cVipTextx:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `VipText`='%s' WHERE `ID`='%d'",CarInfo[vehicleid][cVipText],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	    case cNeonx:
	    {
	        mysql_format(SQL,gQuery,sizeof(gQuery),"UPDATE `cars` SET `Neon`='%d' WHERE `ID`='%d'",CarInfo[vehicleid][cNeon],vehicleid);
			mysql_tquery(SQL,gQuery,"","");
	    }
	}
	return 1;
}
function CustomPickups()
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new string[564];
	foreach(Player,i)
	{
		GetPlayerPos(i, oldposx, oldposy, oldposz);
	    if(Radaron[i] == 1)
	    {
	        foreach(Player, o)
 			{
 			    if(IsPlayerInRangeOfPoint(o, 30.0, oldposx, oldposy, oldposz) && GetPlayerState(o) == PLAYER_STATE_DRIVER && OnDuty[o] == 0)
			    {
					new viteza = Carspeed(o);
				    if(viteza > Radarlimit[i])
			        {
				        new nameradar[25],nameradar1[25];
				        GetPlayerName(o,nameradar,sizeof(nameradar));
				        GetPlayerName(i,nameradar1,sizeof(nameradar1));
				        format(string, sizeof(string), "{FFBE00}%s[ID:%d] Drive With %d km/h, Location : %s,Radar Limit: %d km/h! He Must Pay 30.000$", nameradar,o,viteza,GetPlayerZone(o),Radarlimit[i]);
						SCM(i,COLOR_WHITE,string);
						GivePlayerCash(i, 30000);
						Update(i, pCashx);
						format(string, sizeof(string), "{FFBE00}You Post On The Radar Set By %s With %d km/hSpeed | Radar SpeedLimit: %d km/h | You Must Pay 30.000$",nameradar1,viteza,Radarlimit[i]);
    					SCM(o,COLOR_WHITE,string);
    					GivePlayerCash(o, -30000);
						Update(i, pCashx);
    					return 1;
					}
				}
			}
		}
	}
	return 1;
}
stock IsACBUGWeapon(playerid)
{
	if (IsPlayerConnected(playerid) && (gPlayerLogged[playerid] == 1))
	{
	    new wID = GetPlayerWeapon ( playerid ) ;
	    if (wID == 24 || wID == 25 || wID == 27 || wID == 34 ) return 1 ;
	}
	return 0 ;
}

stock GetPlayerID(playername[])
{
  	for(new i = 0; i <= MAX_PLAYERS; i++)
  	{
    	if(IsPlayerConnected(i))
    	{
      		new playername2[MAX_PLAYER_NAME];
      		GetPlayerName(i, playername2, sizeof(playername2));
      		if(strcmp(playername2, playername, true, strlen(playername)) == 0)
      		{
        		return i;
      		}
    	}
  	}
  	return INVALID_PLAYER_ID;
}

forward ClearWanted(playerid);
public ClearWanted(playerid)
{
	new string[80];
	format(string,sizeof(string),"None");
	strmid(WantedName[playerid], string, 0, strlen(string), 255);
	WantedReason[playerid] = 999;
	KillTimer(WantedTimer[playerid]);
	return 1;
}
/*		if( !( -1000.0 <= fX <= 1000.0 ) || !( -1000.0 <= fY <= 1000.0 ) || !( -1000.0 <= fZ <= 1000.0 ) ) // a valid offset, it's impossible that a offset bigger than 1000 is legit (also less than -1000.0 is impossible, not used by this hack, but still, let's check for it, just for the future, who knows what hacks will appear). The object with biggest offset is having ~700-800 radius.
		{
			return 1; // let's desynchronize that bullet, so players won't crash
}
	}
    return 1;
}*/
stock PutPlayerInVehicleEx(playerid,vehicleid,seatid)
{
	PlayerEnterTime[playerid]+=221;
	PutPlayerInVehicle(playerid,vehicleid,seatid);
	return 1;
}

stock RemovePlayerFromVehicleEx(playerid)
{
	PlayerEnterTime[playerid]+=221;
	RemovePlayerFromVehicle(playerid);
	return 1;
}

public OnQueryError( errorid, error[ ], callback[ ], query[ ], connectionHandle )
{
	print( "====================================================================" );
	printf( "Error ID: %d, Error: %s", errorid, error );
	printf( "Callback: %s", callback );
	printf( "gQuery: %s", query );
	print( "====================================================================" );
	return 1;
}

forward Hacks();
public Hacks()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(!IsPlayerInRangeOfPoint(i, 400.0, LastPosition[i][0], LastPosition[i][1], LastPosition[i][2]) && GetPlayerState(i) != PLAYER_STATE_PASSENGER && GetPlayerSurfingVehicleID(i) == INVALID_VEHICLE_ID && TeleportAllowed[i] == 1)
            {
                if(TeleportAllowed[i] == 0)
				{
                    SendClientMessage(i, 0xFF0000FF, "You hack :(");
                    TeleportWarnings[i] ++;
                    if(TeleportWarnings[i] >= 3)
                    {
                        BanEx(i, "Teleporting");
                    }
                }
                else
                {
                    SetTimerEx("TeleportFix", 1500, false, "i", i);
                }
            }
            GetPlayerPos(i, LastPosition[i][0], LastPosition[i][1], LastPosition[i][2]);
        }
    }
    return 1;
}
stock strmatch(const String1[], const String2[])
{
 	if ((strcmp(String1, String2, true, strlen(String2)) == 0) && (strlen(String2) == strlen(String1)))
 	{
  		return true;
 	}
 	else
 	{
  		return false;
 	}
}
stock SetPlayerPosEx(playerid, Float:X, Float:Y, Float:Z)
{
    TeleportAllowed[playerid] = 1;
    SetPlayerPos(playerid, X, Y, Z);
    SetCameraBehindPlayer(playerid);
}

forward TeleportFix(playerid);
public TeleportFix(playerid)
{
    TeleportAllowed[playerid] = 0;
    return 1;
}
IsNum(textchar)
{
	if(textchar == '0') return 1;
	if(textchar == '1') return 1;
	if(textchar == '2') return 1;
	if(textchar == '3') return 1;
	if(textchar == '4') return 1;
	if(textchar == '5') return 1;
	if(textchar == '6') return 1;
	if(textchar == '7') return 1;
	if(textchar == '8') return 1;
	if(textchar == '9') return 1;
	return 0;
}

AntiDeAMX()
{
	new a[][] =
 	{
 		"Unarmed (Fist)",
 		"Brass K"
 	};
	#pragma unused a
}





